{"version":3,"sources":["../../../node_modules/.pnpm/webidl-conversions@7.0.0/node_modules/webidl-conversions/lib/index.js","../../../node_modules/.pnpm/whatwg-url@13.0.0/node_modules/whatwg-url/lib/utils.js","../../../node_modules/.pnpm/punycode@2.3.1/node_modules/punycode/punycode.es6.js","../../../node_modules/.pnpm/tr46@4.1.1/node_modules/tr46/lib/regexes.js","../../../node_modules/.pnpm/tr46@4.1.1/node_modules/tr46/lib/mappingTable.json","../../../node_modules/.pnpm/tr46@4.1.1/node_modules/tr46/lib/statusMapping.js","../../../node_modules/.pnpm/tr46@4.1.1/node_modules/tr46/index.js","../../../node_modules/.pnpm/whatwg-url@13.0.0/node_modules/whatwg-url/lib/infra.js","../../../node_modules/.pnpm/whatwg-url@13.0.0/node_modules/whatwg-url/lib/encoding.js","../../../node_modules/.pnpm/whatwg-url@13.0.0/node_modules/whatwg-url/lib/percent-encoding.js","../../../node_modules/.pnpm/whatwg-url@13.0.0/node_modules/whatwg-url/lib/url-state-machine.js","../../../node_modules/.pnpm/whatwg-url@13.0.0/node_modules/whatwg-url/lib/urlencoded.js","../../../node_modules/.pnpm/whatwg-url@13.0.0/node_modules/whatwg-url/lib/Function.js","../../../node_modules/.pnpm/whatwg-url@13.0.0/node_modules/whatwg-url/lib/URLSearchParams-impl.js","../../../node_modules/.pnpm/whatwg-url@13.0.0/node_modules/whatwg-url/lib/URLSearchParams.js","../../../node_modules/.pnpm/whatwg-url@13.0.0/node_modules/whatwg-url/lib/URL-impl.js","../../../node_modules/.pnpm/whatwg-url@13.0.0/node_modules/whatwg-url/lib/URL.js","../../../node_modules/.pnpm/whatwg-url@13.0.0/node_modules/whatwg-url/webidl2js-wrapper.js","../../../node_modules/.pnpm/whatwg-url@13.0.0/node_modules/whatwg-url/index.js","../../../node_modules/.pnpm/node-fetch@2.7.0/node_modules/node-fetch/lib/index.mjs","../../../node_modules/.pnpm/isomorphic-fetch@3.0.0/node_modules/isomorphic-fetch/fetch-npm-node.js","../../../node_modules/.pnpm/ajv@8.16.0/node_modules/ajv/lib/compile/codegen/code.ts","../../../node_modules/.pnpm/ajv@8.16.0/node_modules/ajv/lib/compile/codegen/scope.ts","../../../node_modules/.pnpm/ajv@8.16.0/node_modules/ajv/lib/compile/codegen/index.ts","../../../node_modules/.pnpm/ajv@8.16.0/node_modules/ajv/lib/compile/util.ts","../../../node_modules/.pnpm/ajv@8.16.0/node_modules/ajv/lib/compile/names.ts","../../../node_modules/.pnpm/ajv@8.16.0/node_modules/ajv/lib/compile/errors.ts","../../../node_modules/.pnpm/ajv@8.16.0/node_modules/ajv/lib/compile/validate/boolSchema.ts","../../../node_modules/.pnpm/ajv@8.16.0/node_modules/ajv/lib/compile/rules.ts","../../../node_modules/.pnpm/ajv@8.16.0/node_modules/ajv/lib/compile/validate/applicability.ts","../../../node_modules/.pnpm/ajv@8.16.0/node_modules/ajv/lib/compile/validate/dataType.ts","../../../node_modules/.pnpm/ajv@8.16.0/node_modules/ajv/lib/compile/validate/defaults.ts","../../../node_modules/.pnpm/ajv@8.16.0/node_modules/ajv/lib/vocabularies/code.ts","../../../node_modules/.pnpm/ajv@8.16.0/node_modules/ajv/lib/compile/validate/keyword.ts","../../../node_modules/.pnpm/ajv@8.16.0/node_modules/ajv/lib/compile/validate/subschema.ts","../../../node_modules/.pnpm/fast-deep-equal@3.1.3/node_modules/fast-deep-equal/index.js","../../../node_modules/.pnpm/json-schema-traverse@1.0.0/node_modules/json-schema-traverse/index.js","../../../node_modules/.pnpm/ajv@8.16.0/node_modules/ajv/lib/compile/resolve.ts","../../../node_modules/.pnpm/ajv@8.16.0/node_modules/ajv/lib/compile/validate/index.ts","../../../node_modules/.pnpm/ajv@8.16.0/node_modules/ajv/lib/runtime/validation_error.ts","../../../node_modules/.pnpm/ajv@8.16.0/node_modules/ajv/lib/compile/ref_error.ts","../../../node_modules/.pnpm/ajv@8.16.0/node_modules/ajv/lib/compile/index.ts","../../../node_modules/.pnpm/ajv@8.16.0/node_modules/ajv/dist/refs/data.json","../../../node_modules/.pnpm/uri-js@4.4.1/node_modules/uri-js/src/index.ts","../../../node_modules/.pnpm/uri-js@4.4.1/node_modules/uri-js/src/schemes/urn-uuid.ts","../../../node_modules/.pnpm/uri-js@4.4.1/node_modules/uri-js/src/schemes/urn.ts","../../../node_modules/.pnpm/uri-js@4.4.1/node_modules/uri-js/src/schemes/mailto.ts","../../../node_modules/.pnpm/uri-js@4.4.1/node_modules/uri-js/src/schemes/wss.ts","../../../node_modules/.pnpm/uri-js@4.4.1/node_modules/uri-js/src/schemes/ws.ts","../../../node_modules/.pnpm/uri-js@4.4.1/node_modules/uri-js/src/schemes/https.ts","../../../node_modules/.pnpm/uri-js@4.4.1/node_modules/uri-js/src/schemes/http.ts","../../../node_modules/.pnpm/uri-js@4.4.1/node_modules/uri-js/src/uri.ts","../../../node_modules/.pnpm/uri-js@4.4.1/node_modules/uri-js/node_modules/punycode/punycode.es6.js","../../../node_modules/.pnpm/uri-js@4.4.1/node_modules/uri-js/src/regexps-iri.ts","../../../node_modules/.pnpm/uri-js@4.4.1/node_modules/uri-js/src/regexps-uri.ts","../../../node_modules/.pnpm/uri-js@4.4.1/node_modules/uri-js/src/util.ts","../../../node_modules/.pnpm/ajv@8.16.0/node_modules/ajv/lib/runtime/uri.ts","../../../node_modules/.pnpm/ajv@8.16.0/node_modules/ajv/lib/core.ts","../../../node_modules/.pnpm/ajv@8.16.0/node_modules/ajv/lib/vocabularies/core/id.ts","../../../node_modules/.pnpm/ajv@8.16.0/node_modules/ajv/lib/vocabularies/core/ref.ts","../../../node_modules/.pnpm/ajv@8.16.0/node_modules/ajv/lib/vocabularies/core/index.ts","../../../node_modules/.pnpm/ajv@8.16.0/node_modules/ajv/lib/vocabularies/validation/limitNumber.ts","../../../node_modules/.pnpm/ajv@8.16.0/node_modules/ajv/lib/vocabularies/validation/multipleOf.ts","../../../node_modules/.pnpm/ajv@8.16.0/node_modules/ajv/lib/runtime/ucs2length.ts","../../../node_modules/.pnpm/ajv@8.16.0/node_modules/ajv/lib/vocabularies/validation/limitLength.ts","../../../node_modules/.pnpm/ajv@8.16.0/node_modules/ajv/lib/vocabularies/validation/pattern.ts","../../../node_modules/.pnpm/ajv@8.16.0/node_modules/ajv/lib/vocabularies/validation/limitProperties.ts","../../../node_modules/.pnpm/ajv@8.16.0/node_modules/ajv/lib/vocabularies/validation/required.ts","../../../node_modules/.pnpm/ajv@8.16.0/node_modules/ajv/lib/vocabularies/validation/limitItems.ts","../../../node_modules/.pnpm/ajv@8.16.0/node_modules/ajv/lib/runtime/equal.ts","../../../node_modules/.pnpm/ajv@8.16.0/node_modules/ajv/lib/vocabularies/validation/uniqueItems.ts","../../../node_modules/.pnpm/ajv@8.16.0/node_modules/ajv/lib/vocabularies/validation/const.ts","../../../node_modules/.pnpm/ajv@8.16.0/node_modules/ajv/lib/vocabularies/validation/enum.ts","../../../node_modules/.pnpm/ajv@8.16.0/node_modules/ajv/lib/vocabularies/validation/index.ts","../../../node_modules/.pnpm/ajv@8.16.0/node_modules/ajv/lib/vocabularies/applicator/additionalItems.ts","../../../node_modules/.pnpm/ajv@8.16.0/node_modules/ajv/lib/vocabularies/applicator/items.ts","../../../node_modules/.pnpm/ajv@8.16.0/node_modules/ajv/lib/vocabularies/applicator/prefixItems.ts","../../../node_modules/.pnpm/ajv@8.16.0/node_modules/ajv/lib/vocabularies/applicator/items2020.ts","../../../node_modules/.pnpm/ajv@8.16.0/node_modules/ajv/lib/vocabularies/applicator/contains.ts","../../../node_modules/.pnpm/ajv@8.16.0/node_modules/ajv/lib/vocabularies/applicator/dependencies.ts","../../../node_modules/.pnpm/ajv@8.16.0/node_modules/ajv/lib/vocabularies/applicator/propertyNames.ts","../../../node_modules/.pnpm/ajv@8.16.0/node_modules/ajv/lib/vocabularies/applicator/additionalProperties.ts","../../../node_modules/.pnpm/ajv@8.16.0/node_modules/ajv/lib/vocabularies/applicator/properties.ts","../../../node_modules/.pnpm/ajv@8.16.0/node_modules/ajv/lib/vocabularies/applicator/patternProperties.ts","../../../node_modules/.pnpm/ajv@8.16.0/node_modules/ajv/lib/vocabularies/applicator/not.ts","../../../node_modules/.pnpm/ajv@8.16.0/node_modules/ajv/lib/vocabularies/applicator/anyOf.ts","../../../node_modules/.pnpm/ajv@8.16.0/node_modules/ajv/lib/vocabularies/applicator/oneOf.ts","../../../node_modules/.pnpm/ajv@8.16.0/node_modules/ajv/lib/vocabularies/applicator/allOf.ts","../../../node_modules/.pnpm/ajv@8.16.0/node_modules/ajv/lib/vocabularies/applicator/if.ts","../../../node_modules/.pnpm/ajv@8.16.0/node_modules/ajv/lib/vocabularies/applicator/thenElse.ts","../../../node_modules/.pnpm/ajv@8.16.0/node_modules/ajv/lib/vocabularies/applicator/index.ts","../../../node_modules/.pnpm/ajv@8.16.0/node_modules/ajv/lib/vocabularies/format/format.ts","../../../node_modules/.pnpm/ajv@8.16.0/node_modules/ajv/lib/vocabularies/format/index.ts","../../../node_modules/.pnpm/ajv@8.16.0/node_modules/ajv/lib/vocabularies/metadata.ts","../../../node_modules/.pnpm/ajv@8.16.0/node_modules/ajv/lib/vocabularies/draft7.ts","../../../node_modules/.pnpm/ajv@8.16.0/node_modules/ajv/lib/vocabularies/discriminator/types.ts","../../../node_modules/.pnpm/ajv@8.16.0/node_modules/ajv/lib/vocabularies/discriminator/index.ts","../../../node_modules/.pnpm/ajv@8.16.0/node_modules/ajv/dist/refs/json-schema-draft-07.json","../../../node_modules/.pnpm/ajv@8.16.0/node_modules/ajv/lib/ajv.ts","../../chromadb-core/package.json","../../chromadb-core/src/generated/runtime.ts","../../chromadb-core/src/generated/api.ts","../../chromadb-core/src/generated/models.ts","../../chromadb-core/src/generated/configuration.ts","../../chromadb-core/src/Errors.ts","../../chromadb-core/src/CollectionConfiguration.ts","../../chromadb-core/src/Collection.ts","../../chromadb-core/src/utils.ts","../../chromadb-core/src/auth.ts","../../chromadb-core/src/ChromaFetch.ts","../../chromadb-core/src/AdminClient.ts","../../../../../schemas/embedding_functions/amazon_bedrock.json","../../../../../schemas/embedding_functions/base_schema.json","../../../../../schemas/embedding_functions/chroma_langchain.json","../../../../../schemas/embedding_functions/cohere.json","../../../../../schemas/embedding_functions/default.json","../../../../../schemas/embedding_functions/google_generative_ai.json","../../../../../schemas/embedding_functions/google_palm.json","../../../../../schemas/embedding_functions/google_vertex.json","../../../../../schemas/embedding_functions/huggingface.json","../../../../../schemas/embedding_functions/huggingface_server.json","../../../../../schemas/embedding_functions/instructor.json","../../../../../schemas/embedding_functions/jina.json","../../../../../schemas/embedding_functions/ollama.json","../../../../../schemas/embedding_functions/onnx_mini_lm_l6_v2.json","../../../../../schemas/embedding_functions/open_clip.json","../../../../../schemas/embedding_functions/openai.json","../../../../../schemas/embedding_functions/roboflow.json","../../../../../schemas/embedding_functions/sentence_transformer.json","../../../../../schemas/embedding_functions/text2vec.json","../../../../../schemas/embedding_functions/transformers.json","../../../../../schemas/embedding_functions/voyageai.json","../../../../../schemas/embedding_functions/cloudflare_workers_ai.json","../../../../../schemas/embedding_functions/together_ai.json","../../chromadb-core/src/schemas/schemaUtils.ts","../../chromadb-core/src/embeddings/DefaultEmbeddingFunction.ts","../../chromadb-core/src/ChromaClient.ts","../../chromadb-core/src/CloudClient.ts","../../chromadb-core/src/embeddings/CohereEmbeddingFunction.ts","../../chromadb-core/src/embeddings/GoogleGeminiEmbeddingFunction.ts","../../chromadb-core/src/embeddings/HuggingFaceEmbeddingServerFunction.ts","../../chromadb-core/src/embeddings/JinaEmbeddingFunction.ts","../../chromadb-core/src/embeddings/OllamaEmbeddingFunction.ts","../../chromadb-core/src/embeddings/OpenAIEmbeddingFunction.ts","../../chromadb-core/src/embeddings/TransformersEmbeddingFunction.ts","../../chromadb-core/src/embeddings/VoyageAIEmbeddingFunction.ts","../../chromadb-core/src/embeddings/CloudflareWorkersAIEmbeddingFunction.ts","../../chromadb-core/src/embeddings/TogetherAIEmbeddingFunction.ts","../../chromadb-core/src/types.ts"],"sourcesContent":["\"use strict\";\n\nfunction makeException(ErrorType, message, options) {\n  if (options.globals) {\n    ErrorType = options.globals[ErrorType.name];\n  }\n  return new ErrorType(`${options.context ? options.context : \"Value\"} ${message}.`);\n}\n\nfunction toNumber(value, options) {\n  if (typeof value === \"bigint\") {\n    throw makeException(TypeError, \"is a BigInt which cannot be converted to a number\", options);\n  }\n  if (!options.globals) {\n    return Number(value);\n  }\n  return options.globals.Number(value);\n}\n\n// Round x to the nearest integer, choosing the even integer if it lies halfway between two.\nfunction evenRound(x) {\n  // There are four cases for numbers with fractional part being .5:\n  //\n  // case |     x     | floor(x) | round(x) | expected | x <> 0 | x % 1 | x & 1 |   example\n  //   1  |  2n + 0.5 |  2n      |  2n + 1  |  2n      |   >    |  0.5  |   0   |  0.5 ->  0\n  //   2  |  2n + 1.5 |  2n + 1  |  2n + 2  |  2n + 2  |   >    |  0.5  |   1   |  1.5 ->  2\n  //   3  | -2n - 0.5 | -2n - 1  | -2n      | -2n      |   <    | -0.5  |   0   | -0.5 ->  0\n  //   4  | -2n - 1.5 | -2n - 2  | -2n - 1  | -2n - 2  |   <    | -0.5  |   1   | -1.5 -> -2\n  // (where n is a non-negative integer)\n  //\n  // Branch here for cases 1 and 4\n  if ((x > 0 && (x % 1) === +0.5 && (x & 1) === 0) ||\n        (x < 0 && (x % 1) === -0.5 && (x & 1) === 1)) {\n    return censorNegativeZero(Math.floor(x));\n  }\n\n  return censorNegativeZero(Math.round(x));\n}\n\nfunction integerPart(n) {\n  return censorNegativeZero(Math.trunc(n));\n}\n\nfunction sign(x) {\n  return x < 0 ? -1 : 1;\n}\n\nfunction modulo(x, y) {\n  // https://tc39.github.io/ecma262/#eqn-modulo\n  // Note that http://stackoverflow.com/a/4467559/3191 does NOT work for large modulos\n  const signMightNotMatch = x % y;\n  if (sign(y) !== sign(signMightNotMatch)) {\n    return signMightNotMatch + y;\n  }\n  return signMightNotMatch;\n}\n\nfunction censorNegativeZero(x) {\n  return x === 0 ? 0 : x;\n}\n\nfunction createIntegerConversion(bitLength, { unsigned }) {\n  let lowerBound, upperBound;\n  if (unsigned) {\n    lowerBound = 0;\n    upperBound = 2 ** bitLength - 1;\n  } else {\n    lowerBound = -(2 ** (bitLength - 1));\n    upperBound = 2 ** (bitLength - 1) - 1;\n  }\n\n  const twoToTheBitLength = 2 ** bitLength;\n  const twoToOneLessThanTheBitLength = 2 ** (bitLength - 1);\n\n  return (value, options = {}) => {\n    let x = toNumber(value, options);\n    x = censorNegativeZero(x);\n\n    if (options.enforceRange) {\n      if (!Number.isFinite(x)) {\n        throw makeException(TypeError, \"is not a finite number\", options);\n      }\n\n      x = integerPart(x);\n\n      if (x < lowerBound || x > upperBound) {\n        throw makeException(\n          TypeError,\n          `is outside the accepted range of ${lowerBound} to ${upperBound}, inclusive`,\n          options\n        );\n      }\n\n      return x;\n    }\n\n    if (!Number.isNaN(x) && options.clamp) {\n      x = Math.min(Math.max(x, lowerBound), upperBound);\n      x = evenRound(x);\n      return x;\n    }\n\n    if (!Number.isFinite(x) || x === 0) {\n      return 0;\n    }\n    x = integerPart(x);\n\n    // Math.pow(2, 64) is not accurately representable in JavaScript, so try to avoid these per-spec operations if\n    // possible. Hopefully it's an optimization for the non-64-bitLength cases too.\n    if (x >= lowerBound && x <= upperBound) {\n      return x;\n    }\n\n    // These will not work great for bitLength of 64, but oh well. See the README for more details.\n    x = modulo(x, twoToTheBitLength);\n    if (!unsigned && x >= twoToOneLessThanTheBitLength) {\n      return x - twoToTheBitLength;\n    }\n    return x;\n  };\n}\n\nfunction createLongLongConversion(bitLength, { unsigned }) {\n  const upperBound = Number.MAX_SAFE_INTEGER;\n  const lowerBound = unsigned ? 0 : Number.MIN_SAFE_INTEGER;\n  const asBigIntN = unsigned ? BigInt.asUintN : BigInt.asIntN;\n\n  return (value, options = {}) => {\n    let x = toNumber(value, options);\n    x = censorNegativeZero(x);\n\n    if (options.enforceRange) {\n      if (!Number.isFinite(x)) {\n        throw makeException(TypeError, \"is not a finite number\", options);\n      }\n\n      x = integerPart(x);\n\n      if (x < lowerBound || x > upperBound) {\n        throw makeException(\n          TypeError,\n          `is outside the accepted range of ${lowerBound} to ${upperBound}, inclusive`,\n          options\n        );\n      }\n\n      return x;\n    }\n\n    if (!Number.isNaN(x) && options.clamp) {\n      x = Math.min(Math.max(x, lowerBound), upperBound);\n      x = evenRound(x);\n      return x;\n    }\n\n    if (!Number.isFinite(x) || x === 0) {\n      return 0;\n    }\n\n    let xBigInt = BigInt(integerPart(x));\n    xBigInt = asBigIntN(bitLength, xBigInt);\n    return Number(xBigInt);\n  };\n}\n\nexports.any = value => {\n  return value;\n};\n\nexports.undefined = () => {\n  return undefined;\n};\n\nexports.boolean = value => {\n  return Boolean(value);\n};\n\nexports.byte = createIntegerConversion(8, { unsigned: false });\nexports.octet = createIntegerConversion(8, { unsigned: true });\n\nexports.short = createIntegerConversion(16, { unsigned: false });\nexports[\"unsigned short\"] = createIntegerConversion(16, { unsigned: true });\n\nexports.long = createIntegerConversion(32, { unsigned: false });\nexports[\"unsigned long\"] = createIntegerConversion(32, { unsigned: true });\n\nexports[\"long long\"] = createLongLongConversion(64, { unsigned: false });\nexports[\"unsigned long long\"] = createLongLongConversion(64, { unsigned: true });\n\nexports.double = (value, options = {}) => {\n  const x = toNumber(value, options);\n\n  if (!Number.isFinite(x)) {\n    throw makeException(TypeError, \"is not a finite floating-point value\", options);\n  }\n\n  return x;\n};\n\nexports[\"unrestricted double\"] = (value, options = {}) => {\n  const x = toNumber(value, options);\n\n  return x;\n};\n\nexports.float = (value, options = {}) => {\n  const x = toNumber(value, options);\n\n  if (!Number.isFinite(x)) {\n    throw makeException(TypeError, \"is not a finite floating-point value\", options);\n  }\n\n  if (Object.is(x, -0)) {\n    return x;\n  }\n\n  const y = Math.fround(x);\n\n  if (!Number.isFinite(y)) {\n    throw makeException(TypeError, \"is outside the range of a single-precision floating-point value\", options);\n  }\n\n  return y;\n};\n\nexports[\"unrestricted float\"] = (value, options = {}) => {\n  const x = toNumber(value, options);\n\n  if (isNaN(x)) {\n    return x;\n  }\n\n  if (Object.is(x, -0)) {\n    return x;\n  }\n\n  return Math.fround(x);\n};\n\nexports.DOMString = (value, options = {}) => {\n  if (options.treatNullAsEmptyString && value === null) {\n    return \"\";\n  }\n\n  if (typeof value === \"symbol\") {\n    throw makeException(TypeError, \"is a symbol, which cannot be converted to a string\", options);\n  }\n\n  const StringCtor = options.globals ? options.globals.String : String;\n  return StringCtor(value);\n};\n\nexports.ByteString = (value, options = {}) => {\n  const x = exports.DOMString(value, options);\n  let c;\n  for (let i = 0; (c = x.codePointAt(i)) !== undefined; ++i) {\n    if (c > 255) {\n      throw makeException(TypeError, \"is not a valid ByteString\", options);\n    }\n  }\n\n  return x;\n};\n\nexports.USVString = (value, options = {}) => {\n  const S = exports.DOMString(value, options);\n  const n = S.length;\n  const U = [];\n  for (let i = 0; i < n; ++i) {\n    const c = S.charCodeAt(i);\n    if (c < 0xD800 || c > 0xDFFF) {\n      U.push(String.fromCodePoint(c));\n    } else if (0xDC00 <= c && c <= 0xDFFF) {\n      U.push(String.fromCodePoint(0xFFFD));\n    } else if (i === n - 1) {\n      U.push(String.fromCodePoint(0xFFFD));\n    } else {\n      const d = S.charCodeAt(i + 1);\n      if (0xDC00 <= d && d <= 0xDFFF) {\n        const a = c & 0x3FF;\n        const b = d & 0x3FF;\n        U.push(String.fromCodePoint((2 << 15) + ((2 << 9) * a) + b));\n        ++i;\n      } else {\n        U.push(String.fromCodePoint(0xFFFD));\n      }\n    }\n  }\n\n  return U.join(\"\");\n};\n\nexports.object = (value, options = {}) => {\n  if (value === null || (typeof value !== \"object\" && typeof value !== \"function\")) {\n    throw makeException(TypeError, \"is not an object\", options);\n  }\n\n  return value;\n};\n\nconst abByteLengthGetter =\n    Object.getOwnPropertyDescriptor(ArrayBuffer.prototype, \"byteLength\").get;\nconst sabByteLengthGetter =\n    typeof SharedArrayBuffer === \"function\" ?\n      Object.getOwnPropertyDescriptor(SharedArrayBuffer.prototype, \"byteLength\").get :\n      null;\n\nfunction isNonSharedArrayBuffer(value) {\n  try {\n    // This will throw on SharedArrayBuffers, but not detached ArrayBuffers.\n    // (The spec says it should throw, but the spec conflicts with implementations: https://github.com/tc39/ecma262/issues/678)\n    abByteLengthGetter.call(value);\n\n    return true;\n  } catch {\n    return false;\n  }\n}\n\nfunction isSharedArrayBuffer(value) {\n  try {\n    sabByteLengthGetter.call(value);\n    return true;\n  } catch {\n    return false;\n  }\n}\n\nfunction isArrayBufferDetached(value) {\n  try {\n    // eslint-disable-next-line no-new\n    new Uint8Array(value);\n    return false;\n  } catch {\n    return true;\n  }\n}\n\nexports.ArrayBuffer = (value, options = {}) => {\n  if (!isNonSharedArrayBuffer(value)) {\n    if (options.allowShared && !isSharedArrayBuffer(value)) {\n      throw makeException(TypeError, \"is not an ArrayBuffer or SharedArrayBuffer\", options);\n    }\n    throw makeException(TypeError, \"is not an ArrayBuffer\", options);\n  }\n  if (isArrayBufferDetached(value)) {\n    throw makeException(TypeError, \"is a detached ArrayBuffer\", options);\n  }\n\n  return value;\n};\n\nconst dvByteLengthGetter =\n    Object.getOwnPropertyDescriptor(DataView.prototype, \"byteLength\").get;\nexports.DataView = (value, options = {}) => {\n  try {\n    dvByteLengthGetter.call(value);\n  } catch (e) {\n    throw makeException(TypeError, \"is not a DataView\", options);\n  }\n\n  if (!options.allowShared && isSharedArrayBuffer(value.buffer)) {\n    throw makeException(TypeError, \"is backed by a SharedArrayBuffer, which is not allowed\", options);\n  }\n  if (isArrayBufferDetached(value.buffer)) {\n    throw makeException(TypeError, \"is backed by a detached ArrayBuffer\", options);\n  }\n\n  return value;\n};\n\n// Returns the unforgeable `TypedArray` constructor name or `undefined`,\n// if the `this` value isn't a valid `TypedArray` object.\n//\n// https://tc39.es/ecma262/#sec-get-%typedarray%.prototype-@@tostringtag\nconst typedArrayNameGetter = Object.getOwnPropertyDescriptor(\n  Object.getPrototypeOf(Uint8Array).prototype,\n  Symbol.toStringTag\n).get;\n[\n  Int8Array,\n  Int16Array,\n  Int32Array,\n  Uint8Array,\n  Uint16Array,\n  Uint32Array,\n  Uint8ClampedArray,\n  Float32Array,\n  Float64Array\n].forEach(func => {\n  const { name } = func;\n  const article = /^[AEIOU]/u.test(name) ? \"an\" : \"a\";\n  exports[name] = (value, options = {}) => {\n    if (!ArrayBuffer.isView(value) || typedArrayNameGetter.call(value) !== name) {\n      throw makeException(TypeError, `is not ${article} ${name} object`, options);\n    }\n    if (!options.allowShared && isSharedArrayBuffer(value.buffer)) {\n      throw makeException(TypeError, \"is a view on a SharedArrayBuffer, which is not allowed\", options);\n    }\n    if (isArrayBufferDetached(value.buffer)) {\n      throw makeException(TypeError, \"is a view on a detached ArrayBuffer\", options);\n    }\n\n    return value;\n  };\n});\n\n// Common definitions\n\nexports.ArrayBufferView = (value, options = {}) => {\n  if (!ArrayBuffer.isView(value)) {\n    throw makeException(TypeError, \"is not a view on an ArrayBuffer or SharedArrayBuffer\", options);\n  }\n\n  if (!options.allowShared && isSharedArrayBuffer(value.buffer)) {\n    throw makeException(TypeError, \"is a view on a SharedArrayBuffer, which is not allowed\", options);\n  }\n\n  if (isArrayBufferDetached(value.buffer)) {\n    throw makeException(TypeError, \"is a view on a detached ArrayBuffer\", options);\n  }\n  return value;\n};\n\nexports.BufferSource = (value, options = {}) => {\n  if (ArrayBuffer.isView(value)) {\n    if (!options.allowShared && isSharedArrayBuffer(value.buffer)) {\n      throw makeException(TypeError, \"is a view on a SharedArrayBuffer, which is not allowed\", options);\n    }\n\n    if (isArrayBufferDetached(value.buffer)) {\n      throw makeException(TypeError, \"is a view on a detached ArrayBuffer\", options);\n    }\n    return value;\n  }\n\n  if (!options.allowShared && !isNonSharedArrayBuffer(value)) {\n    throw makeException(TypeError, \"is not an ArrayBuffer or a view on one\", options);\n  }\n  if (options.allowShared && !isSharedArrayBuffer(value) && !isNonSharedArrayBuffer(value)) {\n    throw makeException(TypeError, \"is not an ArrayBuffer, SharedArrayBuffer, or a view on one\", options);\n  }\n  if (isArrayBufferDetached(value)) {\n    throw makeException(TypeError, \"is a detached ArrayBuffer\", options);\n  }\n\n  return value;\n};\n\nexports.DOMTimeStamp = exports[\"unsigned long long\"];\n","\"use strict\";\n\n// Returns \"Type(value) is Object\" in ES terminology.\nfunction isObject(value) {\n  return (typeof value === \"object\" && value !== null) || typeof value === \"function\";\n}\n\nconst hasOwn = Function.prototype.call.bind(Object.prototype.hasOwnProperty);\n\n// Like `Object.assign`, but using `[[GetOwnProperty]]` and `[[DefineOwnProperty]]`\n// instead of `[[Get]]` and `[[Set]]` and only allowing objects\nfunction define(target, source) {\n  for (const key of Reflect.ownKeys(source)) {\n    const descriptor = Reflect.getOwnPropertyDescriptor(source, key);\n    if (descriptor && !Reflect.defineProperty(target, key, descriptor)) {\n      throw new TypeError(`Cannot redefine property: ${String(key)}`);\n    }\n  }\n}\n\nfunction newObjectInRealm(globalObject, object) {\n  const ctorRegistry = initCtorRegistry(globalObject);\n  return Object.defineProperties(\n    Object.create(ctorRegistry[\"%Object.prototype%\"]),\n    Object.getOwnPropertyDescriptors(object)\n  );\n}\n\nconst wrapperSymbol = Symbol(\"wrapper\");\nconst implSymbol = Symbol(\"impl\");\nconst sameObjectCaches = Symbol(\"SameObject caches\");\nconst ctorRegistrySymbol = Symbol.for(\"[webidl2js] constructor registry\");\n\nconst AsyncIteratorPrototype = Object.getPrototypeOf(Object.getPrototypeOf(async function* () {}).prototype);\n\nfunction initCtorRegistry(globalObject) {\n  if (hasOwn(globalObject, ctorRegistrySymbol)) {\n    return globalObject[ctorRegistrySymbol];\n  }\n\n  const ctorRegistry = Object.create(null);\n\n  // In addition to registering all the WebIDL2JS-generated types in the constructor registry,\n  // we also register a few intrinsics that we make use of in generated code, since they are not\n  // easy to grab from the globalObject variable.\n  ctorRegistry[\"%Object.prototype%\"] = globalObject.Object.prototype;\n  ctorRegistry[\"%IteratorPrototype%\"] = Object.getPrototypeOf(\n    Object.getPrototypeOf(new globalObject.Array()[Symbol.iterator]())\n  );\n\n  try {\n    ctorRegistry[\"%AsyncIteratorPrototype%\"] = Object.getPrototypeOf(\n      Object.getPrototypeOf(\n        globalObject.eval(\"(async function* () {})\").prototype\n      )\n    );\n  } catch {\n    ctorRegistry[\"%AsyncIteratorPrototype%\"] = AsyncIteratorPrototype;\n  }\n\n  globalObject[ctorRegistrySymbol] = ctorRegistry;\n  return ctorRegistry;\n}\n\nfunction getSameObject(wrapper, prop, creator) {\n  if (!wrapper[sameObjectCaches]) {\n    wrapper[sameObjectCaches] = Object.create(null);\n  }\n\n  if (prop in wrapper[sameObjectCaches]) {\n    return wrapper[sameObjectCaches][prop];\n  }\n\n  wrapper[sameObjectCaches][prop] = creator();\n  return wrapper[sameObjectCaches][prop];\n}\n\nfunction wrapperForImpl(impl) {\n  return impl ? impl[wrapperSymbol] : null;\n}\n\nfunction implForWrapper(wrapper) {\n  return wrapper ? wrapper[implSymbol] : null;\n}\n\nfunction tryWrapperForImpl(impl) {\n  const wrapper = wrapperForImpl(impl);\n  return wrapper ? wrapper : impl;\n}\n\nfunction tryImplForWrapper(wrapper) {\n  const impl = implForWrapper(wrapper);\n  return impl ? impl : wrapper;\n}\n\nconst iterInternalSymbol = Symbol(\"internal\");\n\nfunction isArrayIndexPropName(P) {\n  if (typeof P !== \"string\") {\n    return false;\n  }\n  const i = P >>> 0;\n  if (i === 2 ** 32 - 1) {\n    return false;\n  }\n  const s = `${i}`;\n  if (P !== s) {\n    return false;\n  }\n  return true;\n}\n\nconst byteLengthGetter =\n    Object.getOwnPropertyDescriptor(ArrayBuffer.prototype, \"byteLength\").get;\nfunction isArrayBuffer(value) {\n  try {\n    byteLengthGetter.call(value);\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction iteratorResult([key, value], kind) {\n  let result;\n  switch (kind) {\n    case \"key\":\n      result = key;\n      break;\n    case \"value\":\n      result = value;\n      break;\n    case \"key+value\":\n      result = [key, value];\n      break;\n  }\n  return { value: result, done: false };\n}\n\nconst supportsPropertyIndex = Symbol(\"supports property index\");\nconst supportedPropertyIndices = Symbol(\"supported property indices\");\nconst supportsPropertyName = Symbol(\"supports property name\");\nconst supportedPropertyNames = Symbol(\"supported property names\");\nconst indexedGet = Symbol(\"indexed property get\");\nconst indexedSetNew = Symbol(\"indexed property set new\");\nconst indexedSetExisting = Symbol(\"indexed property set existing\");\nconst namedGet = Symbol(\"named property get\");\nconst namedSetNew = Symbol(\"named property set new\");\nconst namedSetExisting = Symbol(\"named property set existing\");\nconst namedDelete = Symbol(\"named property delete\");\n\nconst asyncIteratorNext = Symbol(\"async iterator get the next iteration result\");\nconst asyncIteratorReturn = Symbol(\"async iterator return steps\");\nconst asyncIteratorInit = Symbol(\"async iterator initialization steps\");\nconst asyncIteratorEOI = Symbol(\"async iterator end of iteration\");\n\nmodule.exports = exports = {\n  isObject,\n  hasOwn,\n  define,\n  newObjectInRealm,\n  wrapperSymbol,\n  implSymbol,\n  getSameObject,\n  ctorRegistrySymbol,\n  initCtorRegistry,\n  wrapperForImpl,\n  implForWrapper,\n  tryWrapperForImpl,\n  tryImplForWrapper,\n  iterInternalSymbol,\n  isArrayBuffer,\n  isArrayIndexPropName,\n  supportsPropertyIndex,\n  supportedPropertyIndices,\n  supportsPropertyName,\n  supportedPropertyNames,\n  indexedGet,\n  indexedSetNew,\n  indexedSetExisting,\n  namedGet,\n  namedSetNew,\n  namedSetExisting,\n  namedDelete,\n  asyncIteratorNext,\n  asyncIteratorReturn,\n  asyncIteratorInit,\n  asyncIteratorEOI,\n  iteratorResult\n};\n","'use strict';\n\n/** Highest positive signed 32-bit float value */\nconst maxInt = 2147483647; // aka. 0x7FFFFFFF or 2^31-1\n\n/** Bootstring parameters */\nconst base = 36;\nconst tMin = 1;\nconst tMax = 26;\nconst skew = 38;\nconst damp = 700;\nconst initialBias = 72;\nconst initialN = 128; // 0x80\nconst delimiter = '-'; // '\\x2D'\n\n/** Regular expressions */\nconst regexPunycode = /^xn--/;\nconst regexNonASCII = /[^\\0-\\x7F]/; // Note: U+007F DEL is excluded too.\nconst regexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g; // RFC 3490 separators\n\n/** Error messages */\nconst errors = {\n\t'overflow': 'Overflow: input needs wider integers to process',\n\t'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n\t'invalid-input': 'Invalid input'\n};\n\n/** Convenience shortcuts */\nconst baseMinusTMin = base - tMin;\nconst floor = Math.floor;\nconst stringFromCharCode = String.fromCharCode;\n\n/*--------------------------------------------------------------------------*/\n\n/**\n * A generic error utility function.\n * @private\n * @param {String} type The error type.\n * @returns {Error} Throws a `RangeError` with the applicable error message.\n */\nfunction error(type) {\n\tthrow new RangeError(errors[type]);\n}\n\n/**\n * A generic `Array#map` utility function.\n * @private\n * @param {Array} array The array to iterate over.\n * @param {Function} callback The function that gets called for every array\n * item.\n * @returns {Array} A new array of values returned by the callback function.\n */\nfunction map(array, callback) {\n\tconst result = [];\n\tlet length = array.length;\n\twhile (length--) {\n\t\tresult[length] = callback(array[length]);\n\t}\n\treturn result;\n}\n\n/**\n * A simple `Array#map`-like wrapper to work with domain name strings or email\n * addresses.\n * @private\n * @param {String} domain The domain name or email address.\n * @param {Function} callback The function that gets called for every\n * character.\n * @returns {String} A new string of characters returned by the callback\n * function.\n */\nfunction mapDomain(domain, callback) {\n\tconst parts = domain.split('@');\n\tlet result = '';\n\tif (parts.length > 1) {\n\t\t// In email addresses, only the domain name should be punycoded. Leave\n\t\t// the local part (i.e. everything up to `@`) intact.\n\t\tresult = parts[0] + '@';\n\t\tdomain = parts[1];\n\t}\n\t// Avoid `split(regex)` for IE8 compatibility. See #17.\n\tdomain = domain.replace(regexSeparators, '\\x2E');\n\tconst labels = domain.split('.');\n\tconst encoded = map(labels, callback).join('.');\n\treturn result + encoded;\n}\n\n/**\n * Creates an array containing the numeric code points of each Unicode\n * character in the string. While JavaScript uses UCS-2 internally,\n * this function will convert a pair of surrogate halves (each of which\n * UCS-2 exposes as separate characters) into a single code point,\n * matching UTF-16.\n * @see `punycode.ucs2.encode`\n * @see <https://mathiasbynens.be/notes/javascript-encoding>\n * @memberOf punycode.ucs2\n * @name decode\n * @param {String} string The Unicode input string (UCS-2).\n * @returns {Array} The new array of code points.\n */\nfunction ucs2decode(string) {\n\tconst output = [];\n\tlet counter = 0;\n\tconst length = string.length;\n\twhile (counter < length) {\n\t\tconst value = string.charCodeAt(counter++);\n\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t// It's a high surrogate, and there is a next character.\n\t\t\tconst extra = string.charCodeAt(counter++);\n\t\t\tif ((extra & 0xFC00) == 0xDC00) { // Low surrogate.\n\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t} else {\n\t\t\t\t// It's an unmatched surrogate; only append this code unit, in case the\n\t\t\t\t// next code unit is the high surrogate of a surrogate pair.\n\t\t\t\toutput.push(value);\n\t\t\t\tcounter--;\n\t\t\t}\n\t\t} else {\n\t\t\toutput.push(value);\n\t\t}\n\t}\n\treturn output;\n}\n\n/**\n * Creates a string based on an array of numeric code points.\n * @see `punycode.ucs2.decode`\n * @memberOf punycode.ucs2\n * @name encode\n * @param {Array} codePoints The array of numeric code points.\n * @returns {String} The new Unicode string (UCS-2).\n */\nconst ucs2encode = codePoints => String.fromCodePoint(...codePoints);\n\n/**\n * Converts a basic code point into a digit/integer.\n * @see `digitToBasic()`\n * @private\n * @param {Number} codePoint The basic numeric code point value.\n * @returns {Number} The numeric value of a basic code point (for use in\n * representing integers) in the range `0` to `base - 1`, or `base` if\n * the code point does not represent a value.\n */\nconst basicToDigit = function(codePoint) {\n\tif (codePoint >= 0x30 && codePoint < 0x3A) {\n\t\treturn 26 + (codePoint - 0x30);\n\t}\n\tif (codePoint >= 0x41 && codePoint < 0x5B) {\n\t\treturn codePoint - 0x41;\n\t}\n\tif (codePoint >= 0x61 && codePoint < 0x7B) {\n\t\treturn codePoint - 0x61;\n\t}\n\treturn base;\n};\n\n/**\n * Converts a digit/integer into a basic code point.\n * @see `basicToDigit()`\n * @private\n * @param {Number} digit The numeric value of a basic code point.\n * @returns {Number} The basic code point whose value (when used for\n * representing integers) is `digit`, which needs to be in the range\n * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n * used; else, the lowercase form is used. The behavior is undefined\n * if `flag` is non-zero and `digit` has no uppercase form.\n */\nconst digitToBasic = function(digit, flag) {\n\t//  0..25 map to ASCII a..z or A..Z\n\t// 26..35 map to ASCII 0..9\n\treturn digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n};\n\n/**\n * Bias adaptation function as per section 3.4 of RFC 3492.\n * https://tools.ietf.org/html/rfc3492#section-3.4\n * @private\n */\nconst adapt = function(delta, numPoints, firstTime) {\n\tlet k = 0;\n\tdelta = firstTime ? floor(delta / damp) : delta >> 1;\n\tdelta += floor(delta / numPoints);\n\tfor (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {\n\t\tdelta = floor(delta / baseMinusTMin);\n\t}\n\treturn floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n};\n\n/**\n * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n * symbols.\n * @memberOf punycode\n * @param {String} input The Punycode string of ASCII-only symbols.\n * @returns {String} The resulting string of Unicode symbols.\n */\nconst decode = function(input) {\n\t// Don't use UCS-2.\n\tconst output = [];\n\tconst inputLength = input.length;\n\tlet i = 0;\n\tlet n = initialN;\n\tlet bias = initialBias;\n\n\t// Handle the basic code points: let `basic` be the number of input code\n\t// points before the last delimiter, or `0` if there is none, then copy\n\t// the first basic code points to the output.\n\n\tlet basic = input.lastIndexOf(delimiter);\n\tif (basic < 0) {\n\t\tbasic = 0;\n\t}\n\n\tfor (let j = 0; j < basic; ++j) {\n\t\t// if it's not a basic code point\n\t\tif (input.charCodeAt(j) >= 0x80) {\n\t\t\terror('not-basic');\n\t\t}\n\t\toutput.push(input.charCodeAt(j));\n\t}\n\n\t// Main decoding loop: start just after the last delimiter if any basic code\n\t// points were copied; start at the beginning otherwise.\n\n\tfor (let index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {\n\n\t\t// `index` is the index of the next character to be consumed.\n\t\t// Decode a generalized variable-length integer into `delta`,\n\t\t// which gets added to `i`. The overflow checking is easier\n\t\t// if we increase `i` as we go, then subtract off its starting\n\t\t// value at the end to obtain `delta`.\n\t\tconst oldi = i;\n\t\tfor (let w = 1, k = base; /* no condition */; k += base) {\n\n\t\t\tif (index >= inputLength) {\n\t\t\t\terror('invalid-input');\n\t\t\t}\n\n\t\t\tconst digit = basicToDigit(input.charCodeAt(index++));\n\n\t\t\tif (digit >= base) {\n\t\t\t\terror('invalid-input');\n\t\t\t}\n\t\t\tif (digit > floor((maxInt - i) / w)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\ti += digit * w;\n\t\t\tconst t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\n\t\t\tif (digit < t) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tconst baseMinusT = base - t;\n\t\t\tif (w > floor(maxInt / baseMinusT)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tw *= baseMinusT;\n\n\t\t}\n\n\t\tconst out = output.length + 1;\n\t\tbias = adapt(i - oldi, out, oldi == 0);\n\n\t\t// `i` was supposed to wrap around from `out` to `0`,\n\t\t// incrementing `n` each time, so we'll fix that now:\n\t\tif (floor(i / out) > maxInt - n) {\n\t\t\terror('overflow');\n\t\t}\n\n\t\tn += floor(i / out);\n\t\ti %= out;\n\n\t\t// Insert `n` at position `i` of the output.\n\t\toutput.splice(i++, 0, n);\n\n\t}\n\n\treturn String.fromCodePoint(...output);\n};\n\n/**\n * Converts a string of Unicode symbols (e.g. a domain name label) to a\n * Punycode string of ASCII-only symbols.\n * @memberOf punycode\n * @param {String} input The string of Unicode symbols.\n * @returns {String} The resulting Punycode string of ASCII-only symbols.\n */\nconst encode = function(input) {\n\tconst output = [];\n\n\t// Convert the input in UCS-2 to an array of Unicode code points.\n\tinput = ucs2decode(input);\n\n\t// Cache the length.\n\tconst inputLength = input.length;\n\n\t// Initialize the state.\n\tlet n = initialN;\n\tlet delta = 0;\n\tlet bias = initialBias;\n\n\t// Handle the basic code points.\n\tfor (const currentValue of input) {\n\t\tif (currentValue < 0x80) {\n\t\t\toutput.push(stringFromCharCode(currentValue));\n\t\t}\n\t}\n\n\tconst basicLength = output.length;\n\tlet handledCPCount = basicLength;\n\n\t// `handledCPCount` is the number of code points that have been handled;\n\t// `basicLength` is the number of basic code points.\n\n\t// Finish the basic string with a delimiter unless it's empty.\n\tif (basicLength) {\n\t\toutput.push(delimiter);\n\t}\n\n\t// Main encoding loop:\n\twhile (handledCPCount < inputLength) {\n\n\t\t// All non-basic code points < n have been handled already. Find the next\n\t\t// larger one:\n\t\tlet m = maxInt;\n\t\tfor (const currentValue of input) {\n\t\t\tif (currentValue >= n && currentValue < m) {\n\t\t\t\tm = currentValue;\n\t\t\t}\n\t\t}\n\n\t\t// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n\t\t// but guard against overflow.\n\t\tconst handledCPCountPlusOne = handledCPCount + 1;\n\t\tif (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n\t\t\terror('overflow');\n\t\t}\n\n\t\tdelta += (m - n) * handledCPCountPlusOne;\n\t\tn = m;\n\n\t\tfor (const currentValue of input) {\n\t\t\tif (currentValue < n && ++delta > maxInt) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\t\t\tif (currentValue === n) {\n\t\t\t\t// Represent delta as a generalized variable-length integer.\n\t\t\t\tlet q = delta;\n\t\t\t\tfor (let k = base; /* no condition */; k += base) {\n\t\t\t\t\tconst t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\t\t\t\t\tif (q < t) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tconst qMinusT = q - t;\n\t\t\t\t\tconst baseMinusT = base - t;\n\t\t\t\t\toutput.push(\n\t\t\t\t\t\tstringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))\n\t\t\t\t\t);\n\t\t\t\t\tq = floor(qMinusT / baseMinusT);\n\t\t\t\t}\n\n\t\t\t\toutput.push(stringFromCharCode(digitToBasic(q, 0)));\n\t\t\t\tbias = adapt(delta, handledCPCountPlusOne, handledCPCount === basicLength);\n\t\t\t\tdelta = 0;\n\t\t\t\t++handledCPCount;\n\t\t\t}\n\t\t}\n\n\t\t++delta;\n\t\t++n;\n\n\t}\n\treturn output.join('');\n};\n\n/**\n * Converts a Punycode string representing a domain name or an email address\n * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\n * it doesn't matter if you call it on a string that has already been\n * converted to Unicode.\n * @memberOf punycode\n * @param {String} input The Punycoded domain name or email address to\n * convert to Unicode.\n * @returns {String} The Unicode representation of the given Punycode\n * string.\n */\nconst toUnicode = function(input) {\n\treturn mapDomain(input, function(string) {\n\t\treturn regexPunycode.test(string)\n\t\t\t? decode(string.slice(4).toLowerCase())\n\t\t\t: string;\n\t});\n};\n\n/**\n * Converts a Unicode string representing a domain name or an email address to\n * Punycode. Only the non-ASCII parts of the domain name will be converted,\n * i.e. it doesn't matter if you call it with a domain that's already in\n * ASCII.\n * @memberOf punycode\n * @param {String} input The domain name or email address to convert, as a\n * Unicode string.\n * @returns {String} The Punycode representation of the given domain name or\n * email address.\n */\nconst toASCII = function(input) {\n\treturn mapDomain(input, function(string) {\n\t\treturn regexNonASCII.test(string)\n\t\t\t? 'xn--' + encode(string)\n\t\t\t: string;\n\t});\n};\n\n/*--------------------------------------------------------------------------*/\n\n/** Define the public API */\nconst punycode = {\n\t/**\n\t * A string representing the current Punycode.js version number.\n\t * @memberOf punycode\n\t * @type String\n\t */\n\t'version': '2.3.1',\n\t/**\n\t * An object of methods to convert from JavaScript's internal character\n\t * representation (UCS-2) to Unicode code points, and back.\n\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t * @memberOf punycode\n\t * @type Object\n\t */\n\t'ucs2': {\n\t\t'decode': ucs2decode,\n\t\t'encode': ucs2encode\n\t},\n\t'decode': decode,\n\t'encode': encode,\n\t'toASCII': toASCII,\n\t'toUnicode': toUnicode\n};\n\nexport { ucs2decode, ucs2encode, decode, encode, toASCII, toUnicode };\nexport default punycode;\n","\"use strict\";\n\nconst combiningMarks = /[\\u0300-\\u036F\\u0483-\\u0489\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u0610-\\u061A\\u064B-\\u065F\\u0670\\u06D6-\\u06DC\\u06DF-\\u06E4\\u06E7\\u06E8\\u06EA-\\u06ED\\u0711\\u0730-\\u074A\\u07A6-\\u07B0\\u07EB-\\u07F3\\u07FD\\u0816-\\u0819\\u081B-\\u0823\\u0825-\\u0827\\u0829-\\u082D\\u0859-\\u085B\\u0898-\\u089F\\u08CA-\\u08E1\\u08E3-\\u0903\\u093A-\\u093C\\u093E-\\u094F\\u0951-\\u0957\\u0962\\u0963\\u0981-\\u0983\\u09BC\\u09BE-\\u09C4\\u09C7\\u09C8\\u09CB-\\u09CD\\u09D7\\u09E2\\u09E3\\u09FE\\u0A01-\\u0A03\\u0A3C\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A70\\u0A71\\u0A75\\u0A81-\\u0A83\\u0ABC\\u0ABE-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0AE2\\u0AE3\\u0AFA-\\u0AFF\\u0B01-\\u0B03\\u0B3C\\u0B3E-\\u0B44\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B55-\\u0B57\\u0B62\\u0B63\\u0B82\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD7\\u0C00-\\u0C04\\u0C3C\\u0C3E-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C62\\u0C63\\u0C81-\\u0C83\\u0CBC\\u0CBE-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5\\u0CD6\\u0CE2\\u0CE3\\u0CF3\\u0D00-\\u0D03\\u0D3B\\u0D3C\\u0D3E-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4D\\u0D57\\u0D62\\u0D63\\u0D81-\\u0D83\\u0DCA\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DF2\\u0DF3\\u0E31\\u0E34-\\u0E3A\\u0E47-\\u0E4E\\u0EB1\\u0EB4-\\u0EBC\\u0EC8-\\u0ECE\\u0F18\\u0F19\\u0F35\\u0F37\\u0F39\\u0F3E\\u0F3F\\u0F71-\\u0F84\\u0F86\\u0F87\\u0F8D-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u102B-\\u103E\\u1056-\\u1059\\u105E-\\u1060\\u1062-\\u1064\\u1067-\\u106D\\u1071-\\u1074\\u1082-\\u108D\\u108F\\u109A-\\u109D\\u135D-\\u135F\\u1712-\\u1715\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17B4-\\u17D3\\u17DD\\u180B-\\u180D\\u180F\\u1885\\u1886\\u18A9\\u1920-\\u192B\\u1930-\\u193B\\u1A17-\\u1A1B\\u1A55-\\u1A5E\\u1A60-\\u1A7C\\u1A7F\\u1AB0-\\u1ACE\\u1B00-\\u1B04\\u1B34-\\u1B44\\u1B6B-\\u1B73\\u1B80-\\u1B82\\u1BA1-\\u1BAD\\u1BE6-\\u1BF3\\u1C24-\\u1C37\\u1CD0-\\u1CD2\\u1CD4-\\u1CE8\\u1CED\\u1CF4\\u1CF7-\\u1CF9\\u1DC0-\\u1DFF\\u20D0-\\u20F0\\u2CEF-\\u2CF1\\u2D7F\\u2DE0-\\u2DFF\\u302A-\\u302F\\u3099\\u309A\\uA66F-\\uA672\\uA674-\\uA67D\\uA69E\\uA69F\\uA6F0\\uA6F1\\uA802\\uA806\\uA80B\\uA823-\\uA827\\uA82C\\uA880\\uA881\\uA8B4-\\uA8C5\\uA8E0-\\uA8F1\\uA8FF\\uA926-\\uA92D\\uA947-\\uA953\\uA980-\\uA983\\uA9B3-\\uA9C0\\uA9E5\\uAA29-\\uAA36\\uAA43\\uAA4C\\uAA4D\\uAA7B-\\uAA7D\\uAAB0\\uAAB2-\\uAAB4\\uAAB7\\uAAB8\\uAABE\\uAABF\\uAAC1\\uAAEB-\\uAAEF\\uAAF5\\uAAF6\\uABE3-\\uABEA\\uABEC\\uABED\\uFB1E\\uFE00-\\uFE0F\\uFE20-\\uFE2F\\u{101FD}\\u{102E0}\\u{10376}-\\u{1037A}\\u{10A01}-\\u{10A03}\\u{10A05}\\u{10A06}\\u{10A0C}-\\u{10A0F}\\u{10A38}-\\u{10A3A}\\u{10A3F}\\u{10AE5}\\u{10AE6}\\u{10D24}-\\u{10D27}\\u{10EAB}\\u{10EAC}\\u{10EFD}-\\u{10EFF}\\u{10F46}-\\u{10F50}\\u{10F82}-\\u{10F85}\\u{11000}-\\u{11002}\\u{11038}-\\u{11046}\\u{11070}\\u{11073}\\u{11074}\\u{1107F}-\\u{11082}\\u{110B0}-\\u{110BA}\\u{110C2}\\u{11100}-\\u{11102}\\u{11127}-\\u{11134}\\u{11145}\\u{11146}\\u{11173}\\u{11180}-\\u{11182}\\u{111B3}-\\u{111C0}\\u{111C9}-\\u{111CC}\\u{111CE}\\u{111CF}\\u{1122C}-\\u{11237}\\u{1123E}\\u{11241}\\u{112DF}-\\u{112EA}\\u{11300}-\\u{11303}\\u{1133B}\\u{1133C}\\u{1133E}-\\u{11344}\\u{11347}\\u{11348}\\u{1134B}-\\u{1134D}\\u{11357}\\u{11362}\\u{11363}\\u{11366}-\\u{1136C}\\u{11370}-\\u{11374}\\u{11435}-\\u{11446}\\u{1145E}\\u{114B0}-\\u{114C3}\\u{115AF}-\\u{115B5}\\u{115B8}-\\u{115C0}\\u{115DC}\\u{115DD}\\u{11630}-\\u{11640}\\u{116AB}-\\u{116B7}\\u{1171D}-\\u{1172B}\\u{1182C}-\\u{1183A}\\u{11930}-\\u{11935}\\u{11937}\\u{11938}\\u{1193B}-\\u{1193E}\\u{11940}\\u{11942}\\u{11943}\\u{119D1}-\\u{119D7}\\u{119DA}-\\u{119E0}\\u{119E4}\\u{11A01}-\\u{11A0A}\\u{11A33}-\\u{11A39}\\u{11A3B}-\\u{11A3E}\\u{11A47}\\u{11A51}-\\u{11A5B}\\u{11A8A}-\\u{11A99}\\u{11C2F}-\\u{11C36}\\u{11C38}-\\u{11C3F}\\u{11C92}-\\u{11CA7}\\u{11CA9}-\\u{11CB6}\\u{11D31}-\\u{11D36}\\u{11D3A}\\u{11D3C}\\u{11D3D}\\u{11D3F}-\\u{11D45}\\u{11D47}\\u{11D8A}-\\u{11D8E}\\u{11D90}\\u{11D91}\\u{11D93}-\\u{11D97}\\u{11EF3}-\\u{11EF6}\\u{11F00}\\u{11F01}\\u{11F03}\\u{11F34}-\\u{11F3A}\\u{11F3E}-\\u{11F42}\\u{13440}\\u{13447}-\\u{13455}\\u{16AF0}-\\u{16AF4}\\u{16B30}-\\u{16B36}\\u{16F4F}\\u{16F51}-\\u{16F87}\\u{16F8F}-\\u{16F92}\\u{16FE4}\\u{16FF0}\\u{16FF1}\\u{1BC9D}\\u{1BC9E}\\u{1CF00}-\\u{1CF2D}\\u{1CF30}-\\u{1CF46}\\u{1D165}-\\u{1D169}\\u{1D16D}-\\u{1D172}\\u{1D17B}-\\u{1D182}\\u{1D185}-\\u{1D18B}\\u{1D1AA}-\\u{1D1AD}\\u{1D242}-\\u{1D244}\\u{1DA00}-\\u{1DA36}\\u{1DA3B}-\\u{1DA6C}\\u{1DA75}\\u{1DA84}\\u{1DA9B}-\\u{1DA9F}\\u{1DAA1}-\\u{1DAAF}\\u{1E000}-\\u{1E006}\\u{1E008}-\\u{1E018}\\u{1E01B}-\\u{1E021}\\u{1E023}\\u{1E024}\\u{1E026}-\\u{1E02A}\\u{1E08F}\\u{1E130}-\\u{1E136}\\u{1E2AE}\\u{1E2EC}-\\u{1E2EF}\\u{1E4EC}-\\u{1E4EF}\\u{1E8D0}-\\u{1E8D6}\\u{1E944}-\\u{1E94A}\\u{E0100}-\\u{E01EF}]/u;\nconst combiningClassVirama = /[\\u094D\\u09CD\\u0A4D\\u0ACD\\u0B4D\\u0BCD\\u0C4D\\u0CCD\\u0D3B\\u0D3C\\u0D4D\\u0DCA\\u0E3A\\u0EBA\\u0F84\\u1039\\u103A\\u1714\\u1734\\u17D2\\u1A60\\u1B44\\u1BAA\\u1BAB\\u1BF2\\u1BF3\\u2D7F\\uA806\\uA8C4\\uA953\\uA9C0\\uAAF6\\uABED\\u{10A3F}\\u{11046}\\u{1107F}\\u{110B9}\\u{11133}\\u{11134}\\u{111C0}\\u{11235}\\u{112EA}\\u{1134D}\\u{11442}\\u{114C2}\\u{115BF}\\u{1163F}\\u{116B6}\\u{1172B}\\u{11839}\\u{119E0}\\u{11A34}\\u{11A47}\\u{11A99}\\u{11C3F}\\u{11D44}\\u{11D45}\\u{11D97}]/u;\nconst validZWNJ = /[\\u0620\\u0626\\u0628\\u062A-\\u062E\\u0633-\\u063F\\u0641-\\u0647\\u0649\\u064A\\u066E\\u066F\\u0678-\\u0687\\u069A-\\u06BF\\u06C1\\u06C2\\u06CC\\u06CE\\u06D0\\u06D1\\u06FA-\\u06FC\\u06FF\\u0712-\\u0714\\u071A-\\u071D\\u071F-\\u0727\\u0729\\u072B\\u072D\\u072E\\u074E-\\u0758\\u075C-\\u076A\\u076D-\\u0770\\u0772\\u0775-\\u0777\\u077A-\\u077F\\u07CA-\\u07EA\\u0841-\\u0845\\u0848\\u084A-\\u0853\\u0855\\u0860\\u0862-\\u0865\\u0868\\u08A0-\\u08A9\\u08AF\\u08B0\\u08B3\\u08B4\\u08B6-\\u08B8\\u08BA-\\u08BD\\u1807\\u1820-\\u1878\\u1887-\\u18A8\\u18AA\\uA840-\\uA872\\u{10AC0}-\\u{10AC4}\\u{10ACD}\\u{10AD3}-\\u{10ADC}\\u{10ADE}-\\u{10AE0}\\u{10AEB}-\\u{10AEE}\\u{10B80}\\u{10B82}\\u{10B86}-\\u{10B88}\\u{10B8A}\\u{10B8B}\\u{10B8D}\\u{10B90}\\u{10BAD}\\u{10BAE}\\u{10D00}-\\u{10D21}\\u{10D23}\\u{10F30}-\\u{10F32}\\u{10F34}-\\u{10F44}\\u{10F51}-\\u{10F53}\\u{1E900}-\\u{1E943}][\\xAD\\u0300-\\u036F\\u0483-\\u0489\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u0610-\\u061A\\u061C\\u064B-\\u065F\\u0670\\u06D6-\\u06DC\\u06DF-\\u06E4\\u06E7\\u06E8\\u06EA-\\u06ED\\u070F\\u0711\\u0730-\\u074A\\u07A6-\\u07B0\\u07EB-\\u07F3\\u07FD\\u0816-\\u0819\\u081B-\\u0823\\u0825-\\u0827\\u0829-\\u082D\\u0859-\\u085B\\u08D3-\\u08E1\\u08E3-\\u0902\\u093A\\u093C\\u0941-\\u0948\\u094D\\u0951-\\u0957\\u0962\\u0963\\u0981\\u09BC\\u09C1-\\u09C4\\u09CD\\u09E2\\u09E3\\u09FE\\u0A01\\u0A02\\u0A3C\\u0A41\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A70\\u0A71\\u0A75\\u0A81\\u0A82\\u0ABC\\u0AC1-\\u0AC5\\u0AC7\\u0AC8\\u0ACD\\u0AE2\\u0AE3\\u0AFA-\\u0AFF\\u0B01\\u0B3C\\u0B3F\\u0B41-\\u0B44\\u0B4D\\u0B56\\u0B62\\u0B63\\u0B82\\u0BC0\\u0BCD\\u0C00\\u0C04\\u0C3E-\\u0C40\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C62\\u0C63\\u0C81\\u0CBC\\u0CBF\\u0CC6\\u0CCC\\u0CCD\\u0CE2\\u0CE3\\u0D00\\u0D01\\u0D3B\\u0D3C\\u0D41-\\u0D44\\u0D4D\\u0D62\\u0D63\\u0DCA\\u0DD2-\\u0DD4\\u0DD6\\u0E31\\u0E34-\\u0E3A\\u0E47-\\u0E4E\\u0EB1\\u0EB4-\\u0EBC\\u0EC8-\\u0ECD\\u0F18\\u0F19\\u0F35\\u0F37\\u0F39\\u0F71-\\u0F7E\\u0F80-\\u0F84\\u0F86\\u0F87\\u0F8D-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u102D-\\u1030\\u1032-\\u1037\\u1039\\u103A\\u103D\\u103E\\u1058\\u1059\\u105E-\\u1060\\u1071-\\u1074\\u1082\\u1085\\u1086\\u108D\\u109D\\u135D-\\u135F\\u1712-\\u1714\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17B4\\u17B5\\u17B7-\\u17BD\\u17C6\\u17C9-\\u17D3\\u17DD\\u180B-\\u180D\\u1885\\u1886\\u18A9\\u1920-\\u1922\\u1927\\u1928\\u1932\\u1939-\\u193B\\u1A17\\u1A18\\u1A1B\\u1A56\\u1A58-\\u1A5E\\u1A60\\u1A62\\u1A65-\\u1A6C\\u1A73-\\u1A7C\\u1A7F\\u1AB0-\\u1ABE\\u1B00-\\u1B03\\u1B34\\u1B36-\\u1B3A\\u1B3C\\u1B42\\u1B6B-\\u1B73\\u1B80\\u1B81\\u1BA2-\\u1BA5\\u1BA8\\u1BA9\\u1BAB-\\u1BAD\\u1BE6\\u1BE8\\u1BE9\\u1BED\\u1BEF-\\u1BF1\\u1C2C-\\u1C33\\u1C36\\u1C37\\u1CD0-\\u1CD2\\u1CD4-\\u1CE0\\u1CE2-\\u1CE8\\u1CED\\u1CF4\\u1CF8\\u1CF9\\u1DC0-\\u1DF9\\u1DFB-\\u1DFF\\u200B\\u200E\\u200F\\u202A-\\u202E\\u2060-\\u2064\\u206A-\\u206F\\u20D0-\\u20F0\\u2CEF-\\u2CF1\\u2D7F\\u2DE0-\\u2DFF\\u302A-\\u302D\\u3099\\u309A\\uA66F-\\uA672\\uA674-\\uA67D\\uA69E\\uA69F\\uA6F0\\uA6F1\\uA802\\uA806\\uA80B\\uA825\\uA826\\uA8C4\\uA8C5\\uA8E0-\\uA8F1\\uA8FF\\uA926-\\uA92D\\uA947-\\uA951\\uA980-\\uA982\\uA9B3\\uA9B6-\\uA9B9\\uA9BC\\uA9BD\\uA9E5\\uAA29-\\uAA2E\\uAA31\\uAA32\\uAA35\\uAA36\\uAA43\\uAA4C\\uAA7C\\uAAB0\\uAAB2-\\uAAB4\\uAAB7\\uAAB8\\uAABE\\uAABF\\uAAC1\\uAAEC\\uAAED\\uAAF6\\uABE5\\uABE8\\uABED\\uFB1E\\uFE00-\\uFE0F\\uFE20-\\uFE2F\\uFEFF\\uFFF9-\\uFFFB\\u{101FD}\\u{102E0}\\u{10376}-\\u{1037A}\\u{10A01}-\\u{10A03}\\u{10A05}\\u{10A06}\\u{10A0C}-\\u{10A0F}\\u{10A38}-\\u{10A3A}\\u{10A3F}\\u{10AE5}\\u{10AE6}\\u{10D24}-\\u{10D27}\\u{10F46}-\\u{10F50}\\u{11001}\\u{11038}-\\u{11046}\\u{1107F}-\\u{11081}\\u{110B3}-\\u{110B6}\\u{110B9}\\u{110BA}\\u{11100}-\\u{11102}\\u{11127}-\\u{1112B}\\u{1112D}-\\u{11134}\\u{11173}\\u{11180}\\u{11181}\\u{111B6}-\\u{111BE}\\u{111C9}-\\u{111CC}\\u{1122F}-\\u{11231}\\u{11234}\\u{11236}\\u{11237}\\u{1123E}\\u{112DF}\\u{112E3}-\\u{112EA}\\u{11300}\\u{11301}\\u{1133B}\\u{1133C}\\u{11340}\\u{11366}-\\u{1136C}\\u{11370}-\\u{11374}\\u{11438}-\\u{1143F}\\u{11442}-\\u{11444}\\u{11446}\\u{1145E}\\u{114B3}-\\u{114B8}\\u{114BA}\\u{114BF}\\u{114C0}\\u{114C2}\\u{114C3}\\u{115B2}-\\u{115B5}\\u{115BC}\\u{115BD}\\u{115BF}\\u{115C0}\\u{115DC}\\u{115DD}\\u{11633}-\\u{1163A}\\u{1163D}\\u{1163F}\\u{11640}\\u{116AB}\\u{116AD}\\u{116B0}-\\u{116B5}\\u{116B7}\\u{1171D}-\\u{1171F}\\u{11722}-\\u{11725}\\u{11727}-\\u{1172B}\\u{1182F}-\\u{11837}\\u{11839}\\u{1183A}\\u{119D4}-\\u{119D7}\\u{119DA}\\u{119DB}\\u{119E0}\\u{11A01}-\\u{11A0A}\\u{11A33}-\\u{11A38}\\u{11A3B}-\\u{11A3E}\\u{11A47}\\u{11A51}-\\u{11A56}\\u{11A59}-\\u{11A5B}\\u{11A8A}-\\u{11A96}\\u{11A98}\\u{11A99}\\u{11C30}-\\u{11C36}\\u{11C38}-\\u{11C3D}\\u{11C3F}\\u{11C92}-\\u{11CA7}\\u{11CAA}-\\u{11CB0}\\u{11CB2}\\u{11CB3}\\u{11CB5}\\u{11CB6}\\u{11D31}-\\u{11D36}\\u{11D3A}\\u{11D3C}\\u{11D3D}\\u{11D3F}-\\u{11D45}\\u{11D47}\\u{11D90}\\u{11D91}\\u{11D95}\\u{11D97}\\u{11EF3}\\u{11EF4}\\u{13430}-\\u{13438}\\u{16AF0}-\\u{16AF4}\\u{16B30}-\\u{16B36}\\u{16F4F}\\u{16F8F}-\\u{16F92}\\u{1BC9D}\\u{1BC9E}\\u{1BCA0}-\\u{1BCA3}\\u{1D167}-\\u{1D169}\\u{1D173}-\\u{1D182}\\u{1D185}-\\u{1D18B}\\u{1D1AA}-\\u{1D1AD}\\u{1D242}-\\u{1D244}\\u{1DA00}-\\u{1DA36}\\u{1DA3B}-\\u{1DA6C}\\u{1DA75}\\u{1DA84}\\u{1DA9B}-\\u{1DA9F}\\u{1DAA1}-\\u{1DAAF}\\u{1E000}-\\u{1E006}\\u{1E008}-\\u{1E018}\\u{1E01B}-\\u{1E021}\\u{1E023}\\u{1E024}\\u{1E026}-\\u{1E02A}\\u{1E130}-\\u{1E136}\\u{1E2EC}-\\u{1E2EF}\\u{1E8D0}-\\u{1E8D6}\\u{1E944}-\\u{1E94B}\\u{E0001}\\u{E0020}-\\u{E007F}\\u{E0100}-\\u{E01EF}]*\\u200C[\\xAD\\u0300-\\u036F\\u0483-\\u0489\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u0610-\\u061A\\u061C\\u064B-\\u065F\\u0670\\u06D6-\\u06DC\\u06DF-\\u06E4\\u06E7\\u06E8\\u06EA-\\u06ED\\u070F\\u0711\\u0730-\\u074A\\u07A6-\\u07B0\\u07EB-\\u07F3\\u07FD\\u0816-\\u0819\\u081B-\\u0823\\u0825-\\u0827\\u0829-\\u082D\\u0859-\\u085B\\u08D3-\\u08E1\\u08E3-\\u0902\\u093A\\u093C\\u0941-\\u0948\\u094D\\u0951-\\u0957\\u0962\\u0963\\u0981\\u09BC\\u09C1-\\u09C4\\u09CD\\u09E2\\u09E3\\u09FE\\u0A01\\u0A02\\u0A3C\\u0A41\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A70\\u0A71\\u0A75\\u0A81\\u0A82\\u0ABC\\u0AC1-\\u0AC5\\u0AC7\\u0AC8\\u0ACD\\u0AE2\\u0AE3\\u0AFA-\\u0AFF\\u0B01\\u0B3C\\u0B3F\\u0B41-\\u0B44\\u0B4D\\u0B56\\u0B62\\u0B63\\u0B82\\u0BC0\\u0BCD\\u0C00\\u0C04\\u0C3E-\\u0C40\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C62\\u0C63\\u0C81\\u0CBC\\u0CBF\\u0CC6\\u0CCC\\u0CCD\\u0CE2\\u0CE3\\u0D00\\u0D01\\u0D3B\\u0D3C\\u0D41-\\u0D44\\u0D4D\\u0D62\\u0D63\\u0DCA\\u0DD2-\\u0DD4\\u0DD6\\u0E31\\u0E34-\\u0E3A\\u0E47-\\u0E4E\\u0EB1\\u0EB4-\\u0EBC\\u0EC8-\\u0ECD\\u0F18\\u0F19\\u0F35\\u0F37\\u0F39\\u0F71-\\u0F7E\\u0F80-\\u0F84\\u0F86\\u0F87\\u0F8D-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u102D-\\u1030\\u1032-\\u1037\\u1039\\u103A\\u103D\\u103E\\u1058\\u1059\\u105E-\\u1060\\u1071-\\u1074\\u1082\\u1085\\u1086\\u108D\\u109D\\u135D-\\u135F\\u1712-\\u1714\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17B4\\u17B5\\u17B7-\\u17BD\\u17C6\\u17C9-\\u17D3\\u17DD\\u180B-\\u180D\\u1885\\u1886\\u18A9\\u1920-\\u1922\\u1927\\u1928\\u1932\\u1939-\\u193B\\u1A17\\u1A18\\u1A1B\\u1A56\\u1A58-\\u1A5E\\u1A60\\u1A62\\u1A65-\\u1A6C\\u1A73-\\u1A7C\\u1A7F\\u1AB0-\\u1ABE\\u1B00-\\u1B03\\u1B34\\u1B36-\\u1B3A\\u1B3C\\u1B42\\u1B6B-\\u1B73\\u1B80\\u1B81\\u1BA2-\\u1BA5\\u1BA8\\u1BA9\\u1BAB-\\u1BAD\\u1BE6\\u1BE8\\u1BE9\\u1BED\\u1BEF-\\u1BF1\\u1C2C-\\u1C33\\u1C36\\u1C37\\u1CD0-\\u1CD2\\u1CD4-\\u1CE0\\u1CE2-\\u1CE8\\u1CED\\u1CF4\\u1CF8\\u1CF9\\u1DC0-\\u1DF9\\u1DFB-\\u1DFF\\u200B\\u200E\\u200F\\u202A-\\u202E\\u2060-\\u2064\\u206A-\\u206F\\u20D0-\\u20F0\\u2CEF-\\u2CF1\\u2D7F\\u2DE0-\\u2DFF\\u302A-\\u302D\\u3099\\u309A\\uA66F-\\uA672\\uA674-\\uA67D\\uA69E\\uA69F\\uA6F0\\uA6F1\\uA802\\uA806\\uA80B\\uA825\\uA826\\uA8C4\\uA8C5\\uA8E0-\\uA8F1\\uA8FF\\uA926-\\uA92D\\uA947-\\uA951\\uA980-\\uA982\\uA9B3\\uA9B6-\\uA9B9\\uA9BC\\uA9BD\\uA9E5\\uAA29-\\uAA2E\\uAA31\\uAA32\\uAA35\\uAA36\\uAA43\\uAA4C\\uAA7C\\uAAB0\\uAAB2-\\uAAB4\\uAAB7\\uAAB8\\uAABE\\uAABF\\uAAC1\\uAAEC\\uAAED\\uAAF6\\uABE5\\uABE8\\uABED\\uFB1E\\uFE00-\\uFE0F\\uFE20-\\uFE2F\\uFEFF\\uFFF9-\\uFFFB\\u{101FD}\\u{102E0}\\u{10376}-\\u{1037A}\\u{10A01}-\\u{10A03}\\u{10A05}\\u{10A06}\\u{10A0C}-\\u{10A0F}\\u{10A38}-\\u{10A3A}\\u{10A3F}\\u{10AE5}\\u{10AE6}\\u{10D24}-\\u{10D27}\\u{10F46}-\\u{10F50}\\u{11001}\\u{11038}-\\u{11046}\\u{1107F}-\\u{11081}\\u{110B3}-\\u{110B6}\\u{110B9}\\u{110BA}\\u{11100}-\\u{11102}\\u{11127}-\\u{1112B}\\u{1112D}-\\u{11134}\\u{11173}\\u{11180}\\u{11181}\\u{111B6}-\\u{111BE}\\u{111C9}-\\u{111CC}\\u{1122F}-\\u{11231}\\u{11234}\\u{11236}\\u{11237}\\u{1123E}\\u{112DF}\\u{112E3}-\\u{112EA}\\u{11300}\\u{11301}\\u{1133B}\\u{1133C}\\u{11340}\\u{11366}-\\u{1136C}\\u{11370}-\\u{11374}\\u{11438}-\\u{1143F}\\u{11442}-\\u{11444}\\u{11446}\\u{1145E}\\u{114B3}-\\u{114B8}\\u{114BA}\\u{114BF}\\u{114C0}\\u{114C2}\\u{114C3}\\u{115B2}-\\u{115B5}\\u{115BC}\\u{115BD}\\u{115BF}\\u{115C0}\\u{115DC}\\u{115DD}\\u{11633}-\\u{1163A}\\u{1163D}\\u{1163F}\\u{11640}\\u{116AB}\\u{116AD}\\u{116B0}-\\u{116B5}\\u{116B7}\\u{1171D}-\\u{1171F}\\u{11722}-\\u{11725}\\u{11727}-\\u{1172B}\\u{1182F}-\\u{11837}\\u{11839}\\u{1183A}\\u{119D4}-\\u{119D7}\\u{119DA}\\u{119DB}\\u{119E0}\\u{11A01}-\\u{11A0A}\\u{11A33}-\\u{11A38}\\u{11A3B}-\\u{11A3E}\\u{11A47}\\u{11A51}-\\u{11A56}\\u{11A59}-\\u{11A5B}\\u{11A8A}-\\u{11A96}\\u{11A98}\\u{11A99}\\u{11C30}-\\u{11C36}\\u{11C38}-\\u{11C3D}\\u{11C3F}\\u{11C92}-\\u{11CA7}\\u{11CAA}-\\u{11CB0}\\u{11CB2}\\u{11CB3}\\u{11CB5}\\u{11CB6}\\u{11D31}-\\u{11D36}\\u{11D3A}\\u{11D3C}\\u{11D3D}\\u{11D3F}-\\u{11D45}\\u{11D47}\\u{11D90}\\u{11D91}\\u{11D95}\\u{11D97}\\u{11EF3}\\u{11EF4}\\u{13430}-\\u{13438}\\u{16AF0}-\\u{16AF4}\\u{16B30}-\\u{16B36}\\u{16F4F}\\u{16F8F}-\\u{16F92}\\u{1BC9D}\\u{1BC9E}\\u{1BCA0}-\\u{1BCA3}\\u{1D167}-\\u{1D169}\\u{1D173}-\\u{1D182}\\u{1D185}-\\u{1D18B}\\u{1D1AA}-\\u{1D1AD}\\u{1D242}-\\u{1D244}\\u{1DA00}-\\u{1DA36}\\u{1DA3B}-\\u{1DA6C}\\u{1DA75}\\u{1DA84}\\u{1DA9B}-\\u{1DA9F}\\u{1DAA1}-\\u{1DAAF}\\u{1E000}-\\u{1E006}\\u{1E008}-\\u{1E018}\\u{1E01B}-\\u{1E021}\\u{1E023}\\u{1E024}\\u{1E026}-\\u{1E02A}\\u{1E130}-\\u{1E136}\\u{1E2EC}-\\u{1E2EF}\\u{1E8D0}-\\u{1E8D6}\\u{1E944}-\\u{1E94B}\\u{E0001}\\u{E0020}-\\u{E007F}\\u{E0100}-\\u{E01EF}]*[\\u0620\\u0622-\\u063F\\u0641-\\u064A\\u066E\\u066F\\u0671-\\u0673\\u0675-\\u06D3\\u06D5\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u077F\\u07CA-\\u07EA\\u0840-\\u0855\\u0860\\u0862-\\u0865\\u0867-\\u086A\\u08A0-\\u08AC\\u08AE-\\u08B4\\u08B6-\\u08BD\\u1807\\u1820-\\u1878\\u1887-\\u18A8\\u18AA\\uA840-\\uA871\\u{10AC0}-\\u{10AC5}\\u{10AC7}\\u{10AC9}\\u{10ACA}\\u{10ACE}-\\u{10AD6}\\u{10AD8}-\\u{10AE1}\\u{10AE4}\\u{10AEB}-\\u{10AEF}\\u{10B80}-\\u{10B91}\\u{10BA9}-\\u{10BAE}\\u{10D01}-\\u{10D23}\\u{10F30}-\\u{10F44}\\u{10F51}-\\u{10F54}\\u{1E900}-\\u{1E943}]/u;\nconst bidiDomain = /[\\u05BE\\u05C0\\u05C3\\u05C6\\u05D0-\\u05EA\\u05EF-\\u05F4\\u0600-\\u0605\\u0608\\u060B\\u060D\\u061B-\\u064A\\u0660-\\u0669\\u066B-\\u066F\\u0671-\\u06D5\\u06DD\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u070D\\u070F\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07C0-\\u07EA\\u07F4\\u07F5\\u07FA\\u07FE-\\u0815\\u081A\\u0824\\u0828\\u0830-\\u083E\\u0840-\\u0858\\u085E\\u0860-\\u086A\\u0870-\\u088E\\u0890\\u0891\\u08A0-\\u08C9\\u08E2\\u200F\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBC2\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFC\\uFE70-\\uFE74\\uFE76-\\uFEFC\\u{10800}-\\u{10805}\\u{10808}\\u{1080A}-\\u{10835}\\u{10837}\\u{10838}\\u{1083C}\\u{1083F}-\\u{10855}\\u{10857}-\\u{1089E}\\u{108A7}-\\u{108AF}\\u{108E0}-\\u{108F2}\\u{108F4}\\u{108F5}\\u{108FB}-\\u{1091B}\\u{10920}-\\u{10939}\\u{1093F}\\u{10980}-\\u{109B7}\\u{109BC}-\\u{109CF}\\u{109D2}-\\u{10A00}\\u{10A10}-\\u{10A13}\\u{10A15}-\\u{10A17}\\u{10A19}-\\u{10A35}\\u{10A40}-\\u{10A48}\\u{10A50}-\\u{10A58}\\u{10A60}-\\u{10A9F}\\u{10AC0}-\\u{10AE4}\\u{10AEB}-\\u{10AF6}\\u{10B00}-\\u{10B35}\\u{10B40}-\\u{10B55}\\u{10B58}-\\u{10B72}\\u{10B78}-\\u{10B91}\\u{10B99}-\\u{10B9C}\\u{10BA9}-\\u{10BAF}\\u{10C00}-\\u{10C48}\\u{10C80}-\\u{10CB2}\\u{10CC0}-\\u{10CF2}\\u{10CFA}-\\u{10D23}\\u{10D30}-\\u{10D39}\\u{10E60}-\\u{10E7E}\\u{10E80}-\\u{10EA9}\\u{10EAD}\\u{10EB0}\\u{10EB1}\\u{10F00}-\\u{10F27}\\u{10F30}-\\u{10F45}\\u{10F51}-\\u{10F59}\\u{10F70}-\\u{10F81}\\u{10F86}-\\u{10F89}\\u{10FB0}-\\u{10FCB}\\u{10FE0}-\\u{10FF6}\\u{1E800}-\\u{1E8C4}\\u{1E8C7}-\\u{1E8CF}\\u{1E900}-\\u{1E943}\\u{1E94B}\\u{1E950}-\\u{1E959}\\u{1E95E}\\u{1E95F}\\u{1EC71}-\\u{1ECB4}\\u{1ED01}-\\u{1ED3D}\\u{1EE00}-\\u{1EE03}\\u{1EE05}-\\u{1EE1F}\\u{1EE21}\\u{1EE22}\\u{1EE24}\\u{1EE27}\\u{1EE29}-\\u{1EE32}\\u{1EE34}-\\u{1EE37}\\u{1EE39}\\u{1EE3B}\\u{1EE42}\\u{1EE47}\\u{1EE49}\\u{1EE4B}\\u{1EE4D}-\\u{1EE4F}\\u{1EE51}\\u{1EE52}\\u{1EE54}\\u{1EE57}\\u{1EE59}\\u{1EE5B}\\u{1EE5D}\\u{1EE5F}\\u{1EE61}\\u{1EE62}\\u{1EE64}\\u{1EE67}-\\u{1EE6A}\\u{1EE6C}-\\u{1EE72}\\u{1EE74}-\\u{1EE77}\\u{1EE79}-\\u{1EE7C}\\u{1EE7E}\\u{1EE80}-\\u{1EE89}\\u{1EE8B}-\\u{1EE9B}\\u{1EEA1}-\\u{1EEA3}\\u{1EEA5}-\\u{1EEA9}\\u{1EEAB}-\\u{1EEBB}]/u;\nconst bidiS1LTR = /[A-Za-z\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02B8\\u02BB-\\u02C1\\u02D0\\u02D1\\u02E0-\\u02E4\\u02EE\\u0370-\\u0373\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0482\\u048A-\\u052F\\u0531-\\u0556\\u0559-\\u0589\\u0903-\\u0939\\u093B\\u093D-\\u0940\\u0949-\\u094C\\u094E-\\u0950\\u0958-\\u0961\\u0964-\\u0980\\u0982\\u0983\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD-\\u09C0\\u09C7\\u09C8\\u09CB\\u09CC\\u09CE\\u09D7\\u09DC\\u09DD\\u09DF-\\u09E1\\u09E6-\\u09F1\\u09F4-\\u09FA\\u09FC\\u09FD\\u0A03\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A3E-\\u0A40\\u0A59-\\u0A5C\\u0A5E\\u0A66-\\u0A6F\\u0A72-\\u0A74\\u0A76\\u0A83\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD-\\u0AC0\\u0AC9\\u0ACB\\u0ACC\\u0AD0\\u0AE0\\u0AE1\\u0AE6-\\u0AF0\\u0AF9\\u0B02\\u0B03\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B3E\\u0B40\\u0B47\\u0B48\\u0B4B\\u0B4C\\u0B57\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B66-\\u0B77\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BBE\\u0BBF\\u0BC1\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCC\\u0BD0\\u0BD7\\u0BE6-\\u0BF2\\u0C01-\\u0C03\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C41-\\u0C44\\u0C58-\\u0C5A\\u0C5D\\u0C60\\u0C61\\u0C66-\\u0C6F\\u0C77\\u0C7F\\u0C80\\u0C82-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA\\u0CCB\\u0CD5\\u0CD6\\u0CDD\\u0CDE\\u0CE0\\u0CE1\\u0CE6-\\u0CEF\\u0CF1-\\u0CF3\\u0D02-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D-\\u0D40\\u0D46-\\u0D48\\u0D4A-\\u0D4C\\u0D4E\\u0D4F\\u0D54-\\u0D61\\u0D66-\\u0D7F\\u0D82\\u0D83\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0DCF-\\u0DD1\\u0DD8-\\u0DDF\\u0DE6-\\u0DEF\\u0DF2-\\u0DF4\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E4F-\\u0E5B\\u0E81\\u0E82\\u0E84\\u0E86-\\u0E8A\\u0E8C-\\u0EA3\\u0EA5\\u0EA7-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0ED0-\\u0ED9\\u0EDC-\\u0EDF\\u0F00-\\u0F17\\u0F1A-\\u0F34\\u0F36\\u0F38\\u0F3E-\\u0F47\\u0F49-\\u0F6C\\u0F7F\\u0F85\\u0F88-\\u0F8C\\u0FBE-\\u0FC5\\u0FC7-\\u0FCC\\u0FCE-\\u0FDA\\u1000-\\u102C\\u1031\\u1038\\u103B\\u103C\\u103F-\\u1057\\u105A-\\u105D\\u1061-\\u1070\\u1075-\\u1081\\u1083\\u1084\\u1087-\\u108C\\u108E-\\u109C\\u109E-\\u10C5\\u10C7\\u10CD\\u10D0-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1360-\\u137C\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u167F\\u1681-\\u169A\\u16A0-\\u16F8\\u1700-\\u1711\\u1715\\u171F-\\u1731\\u1734-\\u1736\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17B6\\u17BE-\\u17C5\\u17C7\\u17C8\\u17D4-\\u17DA\\u17DC\\u17E0-\\u17E9\\u1810-\\u1819\\u1820-\\u1878\\u1880-\\u1884\\u1887-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1923-\\u1926\\u1929-\\u192B\\u1930\\u1931\\u1933-\\u1938\\u1946-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u19D0-\\u19DA\\u1A00-\\u1A16\\u1A19\\u1A1A\\u1A1E-\\u1A55\\u1A57\\u1A61\\u1A63\\u1A64\\u1A6D-\\u1A72\\u1A80-\\u1A89\\u1A90-\\u1A99\\u1AA0-\\u1AAD\\u1B04-\\u1B33\\u1B35\\u1B3B\\u1B3D-\\u1B41\\u1B43-\\u1B4C\\u1B50-\\u1B6A\\u1B74-\\u1B7E\\u1B82-\\u1BA1\\u1BA6\\u1BA7\\u1BAA\\u1BAE-\\u1BE5\\u1BE7\\u1BEA-\\u1BEC\\u1BEE\\u1BF2\\u1BF3\\u1BFC-\\u1C2B\\u1C34\\u1C35\\u1C3B-\\u1C49\\u1C4D-\\u1C88\\u1C90-\\u1CBA\\u1CBD-\\u1CC7\\u1CD3\\u1CE1\\u1CE9-\\u1CEC\\u1CEE-\\u1CF3\\u1CF5-\\u1CF7\\u1CFA\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u200E\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u214F\\u2160-\\u2188\\u2336-\\u237A\\u2395\\u249C-\\u24E9\\u26AC\\u2800-\\u28FF\\u2C00-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D70\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u3005-\\u3007\\u3021-\\u3029\\u302E\\u302F\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312F\\u3131-\\u318E\\u3190-\\u31BF\\u31F0-\\u321C\\u3220-\\u324F\\u3260-\\u327B\\u327F-\\u32B0\\u32C0-\\u32CB\\u32D0-\\u3376\\u337B-\\u33DD\\u33E0-\\u33FE\\u3400-\\u4DBF\\u4E00-\\uA48C\\uA4D0-\\uA60C\\uA610-\\uA62B\\uA640-\\uA66E\\uA680-\\uA69D\\uA6A0-\\uA6EF\\uA6F2-\\uA6F7\\uA722-\\uA787\\uA789-\\uA7CA\\uA7D0\\uA7D1\\uA7D3\\uA7D5-\\uA7D9\\uA7F2-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA824\\uA827\\uA830-\\uA837\\uA840-\\uA873\\uA880-\\uA8C3\\uA8CE-\\uA8D9\\uA8F2-\\uA8FE\\uA900-\\uA925\\uA92E-\\uA946\\uA952\\uA953\\uA95F-\\uA97C\\uA983-\\uA9B2\\uA9B4\\uA9B5\\uA9BA\\uA9BB\\uA9BE-\\uA9CD\\uA9CF-\\uA9D9\\uA9DE-\\uA9E4\\uA9E6-\\uA9FE\\uAA00-\\uAA28\\uAA2F\\uAA30\\uAA33\\uAA34\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA4D\\uAA50-\\uAA59\\uAA5C-\\uAA7B\\uAA7D-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAAEB\\uAAEE-\\uAAF5\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB69\\uAB70-\\uABE4\\uABE6\\uABE7\\uABE9-\\uABEC\\uABF0-\\uABF9\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uD800-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC\\u{10000}-\\u{1000B}\\u{1000D}-\\u{10026}\\u{10028}-\\u{1003A}\\u{1003C}\\u{1003D}\\u{1003F}-\\u{1004D}\\u{10050}-\\u{1005D}\\u{10080}-\\u{100FA}\\u{10100}\\u{10102}\\u{10107}-\\u{10133}\\u{10137}-\\u{1013F}\\u{1018D}\\u{1018E}\\u{101D0}-\\u{101FC}\\u{10280}-\\u{1029C}\\u{102A0}-\\u{102D0}\\u{10300}-\\u{10323}\\u{1032D}-\\u{1034A}\\u{10350}-\\u{10375}\\u{10380}-\\u{1039D}\\u{1039F}-\\u{103C3}\\u{103C8}-\\u{103D5}\\u{10400}-\\u{1049D}\\u{104A0}-\\u{104A9}\\u{104B0}-\\u{104D3}\\u{104D8}-\\u{104FB}\\u{10500}-\\u{10527}\\u{10530}-\\u{10563}\\u{1056F}-\\u{1057A}\\u{1057C}-\\u{1058A}\\u{1058C}-\\u{10592}\\u{10594}\\u{10595}\\u{10597}-\\u{105A1}\\u{105A3}-\\u{105B1}\\u{105B3}-\\u{105B9}\\u{105BB}\\u{105BC}\\u{10600}-\\u{10736}\\u{10740}-\\u{10755}\\u{10760}-\\u{10767}\\u{10780}-\\u{10785}\\u{10787}-\\u{107B0}\\u{107B2}-\\u{107BA}\\u{11000}\\u{11002}-\\u{11037}\\u{11047}-\\u{1104D}\\u{11066}-\\u{1106F}\\u{11071}\\u{11072}\\u{11075}\\u{11082}-\\u{110B2}\\u{110B7}\\u{110B8}\\u{110BB}-\\u{110C1}\\u{110CD}\\u{110D0}-\\u{110E8}\\u{110F0}-\\u{110F9}\\u{11103}-\\u{11126}\\u{1112C}\\u{11136}-\\u{11147}\\u{11150}-\\u{11172}\\u{11174}-\\u{11176}\\u{11182}-\\u{111B5}\\u{111BF}-\\u{111C8}\\u{111CD}\\u{111CE}\\u{111D0}-\\u{111DF}\\u{111E1}-\\u{111F4}\\u{11200}-\\u{11211}\\u{11213}-\\u{1122E}\\u{11232}\\u{11233}\\u{11235}\\u{11238}-\\u{1123D}\\u{1123F}\\u{11240}\\u{11280}-\\u{11286}\\u{11288}\\u{1128A}-\\u{1128D}\\u{1128F}-\\u{1129D}\\u{1129F}-\\u{112A9}\\u{112B0}-\\u{112DE}\\u{112E0}-\\u{112E2}\\u{112F0}-\\u{112F9}\\u{11302}\\u{11303}\\u{11305}-\\u{1130C}\\u{1130F}\\u{11310}\\u{11313}-\\u{11328}\\u{1132A}-\\u{11330}\\u{11332}\\u{11333}\\u{11335}-\\u{11339}\\u{1133D}-\\u{1133F}\\u{11341}-\\u{11344}\\u{11347}\\u{11348}\\u{1134B}-\\u{1134D}\\u{11350}\\u{11357}\\u{1135D}-\\u{11363}\\u{11400}-\\u{11437}\\u{11440}\\u{11441}\\u{11445}\\u{11447}-\\u{1145B}\\u{1145D}\\u{1145F}-\\u{11461}\\u{11480}-\\u{114B2}\\u{114B9}\\u{114BB}-\\u{114BE}\\u{114C1}\\u{114C4}-\\u{114C7}\\u{114D0}-\\u{114D9}\\u{11580}-\\u{115B1}\\u{115B8}-\\u{115BB}\\u{115BE}\\u{115C1}-\\u{115DB}\\u{11600}-\\u{11632}\\u{1163B}\\u{1163C}\\u{1163E}\\u{11641}-\\u{11644}\\u{11650}-\\u{11659}\\u{11680}-\\u{116AA}\\u{116AC}\\u{116AE}\\u{116AF}\\u{116B6}\\u{116B8}\\u{116B9}\\u{116C0}-\\u{116C9}\\u{11700}-\\u{1171A}\\u{11720}\\u{11721}\\u{11726}\\u{11730}-\\u{11746}\\u{11800}-\\u{1182E}\\u{11838}\\u{1183B}\\u{118A0}-\\u{118F2}\\u{118FF}-\\u{11906}\\u{11909}\\u{1190C}-\\u{11913}\\u{11915}\\u{11916}\\u{11918}-\\u{11935}\\u{11937}\\u{11938}\\u{1193D}\\u{1193F}-\\u{11942}\\u{11944}-\\u{11946}\\u{11950}-\\u{11959}\\u{119A0}-\\u{119A7}\\u{119AA}-\\u{119D3}\\u{119DC}-\\u{119DF}\\u{119E1}-\\u{119E4}\\u{11A00}\\u{11A07}\\u{11A08}\\u{11A0B}-\\u{11A32}\\u{11A39}\\u{11A3A}\\u{11A3F}-\\u{11A46}\\u{11A50}\\u{11A57}\\u{11A58}\\u{11A5C}-\\u{11A89}\\u{11A97}\\u{11A9A}-\\u{11AA2}\\u{11AB0}-\\u{11AF8}\\u{11B00}-\\u{11B09}\\u{11C00}-\\u{11C08}\\u{11C0A}-\\u{11C2F}\\u{11C3E}-\\u{11C45}\\u{11C50}-\\u{11C6C}\\u{11C70}-\\u{11C8F}\\u{11CA9}\\u{11CB1}\\u{11CB4}\\u{11D00}-\\u{11D06}\\u{11D08}\\u{11D09}\\u{11D0B}-\\u{11D30}\\u{11D46}\\u{11D50}-\\u{11D59}\\u{11D60}-\\u{11D65}\\u{11D67}\\u{11D68}\\u{11D6A}-\\u{11D8E}\\u{11D93}\\u{11D94}\\u{11D96}\\u{11D98}\\u{11DA0}-\\u{11DA9}\\u{11EE0}-\\u{11EF2}\\u{11EF5}-\\u{11EF8}\\u{11F02}-\\u{11F10}\\u{11F12}-\\u{11F35}\\u{11F3E}\\u{11F3F}\\u{11F41}\\u{11F43}-\\u{11F59}\\u{11FB0}\\u{11FC0}-\\u{11FD4}\\u{11FFF}-\\u{12399}\\u{12400}-\\u{1246E}\\u{12470}-\\u{12474}\\u{12480}-\\u{12543}\\u{12F90}-\\u{12FF2}\\u{13000}-\\u{1343F}\\u{13441}-\\u{13446}\\u{14400}-\\u{14646}\\u{16800}-\\u{16A38}\\u{16A40}-\\u{16A5E}\\u{16A60}-\\u{16A69}\\u{16A6E}-\\u{16ABE}\\u{16AC0}-\\u{16AC9}\\u{16AD0}-\\u{16AED}\\u{16AF5}\\u{16B00}-\\u{16B2F}\\u{16B37}-\\u{16B45}\\u{16B50}-\\u{16B59}\\u{16B5B}-\\u{16B61}\\u{16B63}-\\u{16B77}\\u{16B7D}-\\u{16B8F}\\u{16E40}-\\u{16E9A}\\u{16F00}-\\u{16F4A}\\u{16F50}-\\u{16F87}\\u{16F93}-\\u{16F9F}\\u{16FE0}\\u{16FE1}\\u{16FE3}\\u{16FF0}\\u{16FF1}\\u{17000}-\\u{187F7}\\u{18800}-\\u{18CD5}\\u{18D00}-\\u{18D08}\\u{1AFF0}-\\u{1AFF3}\\u{1AFF5}-\\u{1AFFB}\\u{1AFFD}\\u{1AFFE}\\u{1B000}-\\u{1B122}\\u{1B132}\\u{1B150}-\\u{1B152}\\u{1B155}\\u{1B164}-\\u{1B167}\\u{1B170}-\\u{1B2FB}\\u{1BC00}-\\u{1BC6A}\\u{1BC70}-\\u{1BC7C}\\u{1BC80}-\\u{1BC88}\\u{1BC90}-\\u{1BC99}\\u{1BC9C}\\u{1BC9F}\\u{1CF50}-\\u{1CFC3}\\u{1D000}-\\u{1D0F5}\\u{1D100}-\\u{1D126}\\u{1D129}-\\u{1D166}\\u{1D16A}-\\u{1D172}\\u{1D183}\\u{1D184}\\u{1D18C}-\\u{1D1A9}\\u{1D1AE}-\\u{1D1E8}\\u{1D2C0}-\\u{1D2D3}\\u{1D2E0}-\\u{1D2F3}\\u{1D360}-\\u{1D378}\\u{1D400}-\\u{1D454}\\u{1D456}-\\u{1D49C}\\u{1D49E}\\u{1D49F}\\u{1D4A2}\\u{1D4A5}\\u{1D4A6}\\u{1D4A9}-\\u{1D4AC}\\u{1D4AE}-\\u{1D4B9}\\u{1D4BB}\\u{1D4BD}-\\u{1D4C3}\\u{1D4C5}-\\u{1D505}\\u{1D507}-\\u{1D50A}\\u{1D50D}-\\u{1D514}\\u{1D516}-\\u{1D51C}\\u{1D51E}-\\u{1D539}\\u{1D53B}-\\u{1D53E}\\u{1D540}-\\u{1D544}\\u{1D546}\\u{1D54A}-\\u{1D550}\\u{1D552}-\\u{1D6A5}\\u{1D6A8}-\\u{1D6DA}\\u{1D6DC}-\\u{1D714}\\u{1D716}-\\u{1D74E}\\u{1D750}-\\u{1D788}\\u{1D78A}-\\u{1D7C2}\\u{1D7C4}-\\u{1D7CB}\\u{1D800}-\\u{1D9FF}\\u{1DA37}-\\u{1DA3A}\\u{1DA6D}-\\u{1DA74}\\u{1DA76}-\\u{1DA83}\\u{1DA85}-\\u{1DA8B}\\u{1DF00}-\\u{1DF1E}\\u{1DF25}-\\u{1DF2A}\\u{1E030}-\\u{1E06D}\\u{1E100}-\\u{1E12C}\\u{1E137}-\\u{1E13D}\\u{1E140}-\\u{1E149}\\u{1E14E}\\u{1E14F}\\u{1E290}-\\u{1E2AD}\\u{1E2C0}-\\u{1E2EB}\\u{1E2F0}-\\u{1E2F9}\\u{1E4D0}-\\u{1E4EB}\\u{1E4F0}-\\u{1E4F9}\\u{1E7E0}-\\u{1E7E6}\\u{1E7E8}-\\u{1E7EB}\\u{1E7ED}\\u{1E7EE}\\u{1E7F0}-\\u{1E7FE}\\u{1F110}-\\u{1F12E}\\u{1F130}-\\u{1F169}\\u{1F170}-\\u{1F1AC}\\u{1F1E6}-\\u{1F202}\\u{1F210}-\\u{1F23B}\\u{1F240}-\\u{1F248}\\u{1F250}\\u{1F251}\\u{20000}-\\u{2A6DF}\\u{2A700}-\\u{2B739}\\u{2B740}-\\u{2B81D}\\u{2B820}-\\u{2CEA1}\\u{2CEB0}-\\u{2EBE0}\\u{2F800}-\\u{2FA1D}\\u{30000}-\\u{3134A}\\u{31350}-\\u{323AF}\\u{F0000}-\\u{FFFFD}\\u{100000}-\\u{10FFFD}]/u;\nconst bidiS1RTL = /[\\u05BE\\u05C0\\u05C3\\u05C6\\u05D0-\\u05EA\\u05EF-\\u05F4\\u0608\\u060B\\u060D\\u061B-\\u064A\\u066D-\\u066F\\u0671-\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u070D\\u070F\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07C0-\\u07EA\\u07F4\\u07F5\\u07FA\\u07FE-\\u0815\\u081A\\u0824\\u0828\\u0830-\\u083E\\u0840-\\u0858\\u085E\\u0860-\\u086A\\u0870-\\u088E\\u08A0-\\u08C9\\u200F\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBC2\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFC\\uFE70-\\uFE74\\uFE76-\\uFEFC\\u{10800}-\\u{10805}\\u{10808}\\u{1080A}-\\u{10835}\\u{10837}\\u{10838}\\u{1083C}\\u{1083F}-\\u{10855}\\u{10857}-\\u{1089E}\\u{108A7}-\\u{108AF}\\u{108E0}-\\u{108F2}\\u{108F4}\\u{108F5}\\u{108FB}-\\u{1091B}\\u{10920}-\\u{10939}\\u{1093F}\\u{10980}-\\u{109B7}\\u{109BC}-\\u{109CF}\\u{109D2}-\\u{10A00}\\u{10A10}-\\u{10A13}\\u{10A15}-\\u{10A17}\\u{10A19}-\\u{10A35}\\u{10A40}-\\u{10A48}\\u{10A50}-\\u{10A58}\\u{10A60}-\\u{10A9F}\\u{10AC0}-\\u{10AE4}\\u{10AEB}-\\u{10AF6}\\u{10B00}-\\u{10B35}\\u{10B40}-\\u{10B55}\\u{10B58}-\\u{10B72}\\u{10B78}-\\u{10B91}\\u{10B99}-\\u{10B9C}\\u{10BA9}-\\u{10BAF}\\u{10C00}-\\u{10C48}\\u{10C80}-\\u{10CB2}\\u{10CC0}-\\u{10CF2}\\u{10CFA}-\\u{10D23}\\u{10E80}-\\u{10EA9}\\u{10EAD}\\u{10EB0}\\u{10EB1}\\u{10F00}-\\u{10F27}\\u{10F30}-\\u{10F45}\\u{10F51}-\\u{10F59}\\u{10F70}-\\u{10F81}\\u{10F86}-\\u{10F89}\\u{10FB0}-\\u{10FCB}\\u{10FE0}-\\u{10FF6}\\u{1E800}-\\u{1E8C4}\\u{1E8C7}-\\u{1E8CF}\\u{1E900}-\\u{1E943}\\u{1E94B}\\u{1E950}-\\u{1E959}\\u{1E95E}\\u{1E95F}\\u{1EC71}-\\u{1ECB4}\\u{1ED01}-\\u{1ED3D}\\u{1EE00}-\\u{1EE03}\\u{1EE05}-\\u{1EE1F}\\u{1EE21}\\u{1EE22}\\u{1EE24}\\u{1EE27}\\u{1EE29}-\\u{1EE32}\\u{1EE34}-\\u{1EE37}\\u{1EE39}\\u{1EE3B}\\u{1EE42}\\u{1EE47}\\u{1EE49}\\u{1EE4B}\\u{1EE4D}-\\u{1EE4F}\\u{1EE51}\\u{1EE52}\\u{1EE54}\\u{1EE57}\\u{1EE59}\\u{1EE5B}\\u{1EE5D}\\u{1EE5F}\\u{1EE61}\\u{1EE62}\\u{1EE64}\\u{1EE67}-\\u{1EE6A}\\u{1EE6C}-\\u{1EE72}\\u{1EE74}-\\u{1EE77}\\u{1EE79}-\\u{1EE7C}\\u{1EE7E}\\u{1EE80}-\\u{1EE89}\\u{1EE8B}-\\u{1EE9B}\\u{1EEA1}-\\u{1EEA3}\\u{1EEA5}-\\u{1EEA9}\\u{1EEAB}-\\u{1EEBB}]/u;\nconst bidiS2 = /^[\\0-\\x08\\x0E-\\x1B!-@\\[-`\\{-\\x84\\x86-\\xA9\\xAB-\\xB4\\xB6-\\xB9\\xBB-\\xBF\\xD7\\xF7\\u02B9\\u02BA\\u02C2-\\u02CF\\u02D2-\\u02DF\\u02E5-\\u02ED\\u02EF-\\u036F\\u0374\\u0375\\u037E\\u0384\\u0385\\u0387\\u03F6\\u0483-\\u0489\\u058A\\u058D-\\u058F\\u0591-\\u05C7\\u05D0-\\u05EA\\u05EF-\\u05F4\\u0600-\\u070D\\u070F-\\u074A\\u074D-\\u07B1\\u07C0-\\u07FA\\u07FD-\\u082D\\u0830-\\u083E\\u0840-\\u085B\\u085E\\u0860-\\u086A\\u0870-\\u088E\\u0890\\u0891\\u0898-\\u0902\\u093A\\u093C\\u0941-\\u0948\\u094D\\u0951-\\u0957\\u0962\\u0963\\u0981\\u09BC\\u09C1-\\u09C4\\u09CD\\u09E2\\u09E3\\u09F2\\u09F3\\u09FB\\u09FE\\u0A01\\u0A02\\u0A3C\\u0A41\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A70\\u0A71\\u0A75\\u0A81\\u0A82\\u0ABC\\u0AC1-\\u0AC5\\u0AC7\\u0AC8\\u0ACD\\u0AE2\\u0AE3\\u0AF1\\u0AFA-\\u0AFF\\u0B01\\u0B3C\\u0B3F\\u0B41-\\u0B44\\u0B4D\\u0B55\\u0B56\\u0B62\\u0B63\\u0B82\\u0BC0\\u0BCD\\u0BF3-\\u0BFA\\u0C00\\u0C04\\u0C3C\\u0C3E-\\u0C40\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C62\\u0C63\\u0C78-\\u0C7E\\u0C81\\u0CBC\\u0CCC\\u0CCD\\u0CE2\\u0CE3\\u0D00\\u0D01\\u0D3B\\u0D3C\\u0D41-\\u0D44\\u0D4D\\u0D62\\u0D63\\u0D81\\u0DCA\\u0DD2-\\u0DD4\\u0DD6\\u0E31\\u0E34-\\u0E3A\\u0E3F\\u0E47-\\u0E4E\\u0EB1\\u0EB4-\\u0EBC\\u0EC8-\\u0ECE\\u0F18\\u0F19\\u0F35\\u0F37\\u0F39-\\u0F3D\\u0F71-\\u0F7E\\u0F80-\\u0F84\\u0F86\\u0F87\\u0F8D-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u102D-\\u1030\\u1032-\\u1037\\u1039\\u103A\\u103D\\u103E\\u1058\\u1059\\u105E-\\u1060\\u1071-\\u1074\\u1082\\u1085\\u1086\\u108D\\u109D\\u135D-\\u135F\\u1390-\\u1399\\u1400\\u169B\\u169C\\u1712-\\u1714\\u1732\\u1733\\u1752\\u1753\\u1772\\u1773\\u17B4\\u17B5\\u17B7-\\u17BD\\u17C6\\u17C9-\\u17D3\\u17DB\\u17DD\\u17F0-\\u17F9\\u1800-\\u180F\\u1885\\u1886\\u18A9\\u1920-\\u1922\\u1927\\u1928\\u1932\\u1939-\\u193B\\u1940\\u1944\\u1945\\u19DE-\\u19FF\\u1A17\\u1A18\\u1A1B\\u1A56\\u1A58-\\u1A5E\\u1A60\\u1A62\\u1A65-\\u1A6C\\u1A73-\\u1A7C\\u1A7F\\u1AB0-\\u1ACE\\u1B00-\\u1B03\\u1B34\\u1B36-\\u1B3A\\u1B3C\\u1B42\\u1B6B-\\u1B73\\u1B80\\u1B81\\u1BA2-\\u1BA5\\u1BA8\\u1BA9\\u1BAB-\\u1BAD\\u1BE6\\u1BE8\\u1BE9\\u1BED\\u1BEF-\\u1BF1\\u1C2C-\\u1C33\\u1C36\\u1C37\\u1CD0-\\u1CD2\\u1CD4-\\u1CE0\\u1CE2-\\u1CE8\\u1CED\\u1CF4\\u1CF8\\u1CF9\\u1DC0-\\u1DFF\\u1FBD\\u1FBF-\\u1FC1\\u1FCD-\\u1FCF\\u1FDD-\\u1FDF\\u1FED-\\u1FEF\\u1FFD\\u1FFE\\u200B-\\u200D\\u200F-\\u2027\\u202F-\\u205E\\u2060-\\u2064\\u206A-\\u2070\\u2074-\\u207E\\u2080-\\u208E\\u20A0-\\u20C0\\u20D0-\\u20F0\\u2100\\u2101\\u2103-\\u2106\\u2108\\u2109\\u2114\\u2116-\\u2118\\u211E-\\u2123\\u2125\\u2127\\u2129\\u212E\\u213A\\u213B\\u2140-\\u2144\\u214A-\\u214D\\u2150-\\u215F\\u2189-\\u218B\\u2190-\\u2335\\u237B-\\u2394\\u2396-\\u2426\\u2440-\\u244A\\u2460-\\u249B\\u24EA-\\u26AB\\u26AD-\\u27FF\\u2900-\\u2B73\\u2B76-\\u2B95\\u2B97-\\u2BFF\\u2CE5-\\u2CEA\\u2CEF-\\u2CF1\\u2CF9-\\u2CFF\\u2D7F\\u2DE0-\\u2E5D\\u2E80-\\u2E99\\u2E9B-\\u2EF3\\u2F00-\\u2FD5\\u2FF0-\\u2FFB\\u3001-\\u3004\\u3008-\\u3020\\u302A-\\u302D\\u3030\\u3036\\u3037\\u303D-\\u303F\\u3099-\\u309C\\u30A0\\u30FB\\u31C0-\\u31E3\\u321D\\u321E\\u3250-\\u325F\\u327C-\\u327E\\u32B1-\\u32BF\\u32CC-\\u32CF\\u3377-\\u337A\\u33DE\\u33DF\\u33FF\\u4DC0-\\u4DFF\\uA490-\\uA4C6\\uA60D-\\uA60F\\uA66F-\\uA67F\\uA69E\\uA69F\\uA6F0\\uA6F1\\uA700-\\uA721\\uA788\\uA802\\uA806\\uA80B\\uA825\\uA826\\uA828-\\uA82C\\uA838\\uA839\\uA874-\\uA877\\uA8C4\\uA8C5\\uA8E0-\\uA8F1\\uA8FF\\uA926-\\uA92D\\uA947-\\uA951\\uA980-\\uA982\\uA9B3\\uA9B6-\\uA9B9\\uA9BC\\uA9BD\\uA9E5\\uAA29-\\uAA2E\\uAA31\\uAA32\\uAA35\\uAA36\\uAA43\\uAA4C\\uAA7C\\uAAB0\\uAAB2-\\uAAB4\\uAAB7\\uAAB8\\uAABE\\uAABF\\uAAC1\\uAAEC\\uAAED\\uAAF6\\uAB6A\\uAB6B\\uABE5\\uABE8\\uABED\\uFB1D-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBC2\\uFBD3-\\uFD8F\\uFD92-\\uFDC7\\uFDCF\\uFDF0-\\uFE19\\uFE20-\\uFE52\\uFE54-\\uFE66\\uFE68-\\uFE6B\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFEFF\\uFF01-\\uFF20\\uFF3B-\\uFF40\\uFF5B-\\uFF65\\uFFE0-\\uFFE6\\uFFE8-\\uFFEE\\uFFF9-\\uFFFD\\u{10101}\\u{10140}-\\u{1018C}\\u{10190}-\\u{1019C}\\u{101A0}\\u{101FD}\\u{102E0}-\\u{102FB}\\u{10376}-\\u{1037A}\\u{10800}-\\u{10805}\\u{10808}\\u{1080A}-\\u{10835}\\u{10837}\\u{10838}\\u{1083C}\\u{1083F}-\\u{10855}\\u{10857}-\\u{1089E}\\u{108A7}-\\u{108AF}\\u{108E0}-\\u{108F2}\\u{108F4}\\u{108F5}\\u{108FB}-\\u{1091B}\\u{1091F}-\\u{10939}\\u{1093F}\\u{10980}-\\u{109B7}\\u{109BC}-\\u{109CF}\\u{109D2}-\\u{10A03}\\u{10A05}\\u{10A06}\\u{10A0C}-\\u{10A13}\\u{10A15}-\\u{10A17}\\u{10A19}-\\u{10A35}\\u{10A38}-\\u{10A3A}\\u{10A3F}-\\u{10A48}\\u{10A50}-\\u{10A58}\\u{10A60}-\\u{10A9F}\\u{10AC0}-\\u{10AE6}\\u{10AEB}-\\u{10AF6}\\u{10B00}-\\u{10B35}\\u{10B39}-\\u{10B55}\\u{10B58}-\\u{10B72}\\u{10B78}-\\u{10B91}\\u{10B99}-\\u{10B9C}\\u{10BA9}-\\u{10BAF}\\u{10C00}-\\u{10C48}\\u{10C80}-\\u{10CB2}\\u{10CC0}-\\u{10CF2}\\u{10CFA}-\\u{10D27}\\u{10D30}-\\u{10D39}\\u{10E60}-\\u{10E7E}\\u{10E80}-\\u{10EA9}\\u{10EAB}-\\u{10EAD}\\u{10EB0}\\u{10EB1}\\u{10EFD}-\\u{10F27}\\u{10F30}-\\u{10F59}\\u{10F70}-\\u{10F89}\\u{10FB0}-\\u{10FCB}\\u{10FE0}-\\u{10FF6}\\u{11001}\\u{11038}-\\u{11046}\\u{11052}-\\u{11065}\\u{11070}\\u{11073}\\u{11074}\\u{1107F}-\\u{11081}\\u{110B3}-\\u{110B6}\\u{110B9}\\u{110BA}\\u{110C2}\\u{11100}-\\u{11102}\\u{11127}-\\u{1112B}\\u{1112D}-\\u{11134}\\u{11173}\\u{11180}\\u{11181}\\u{111B6}-\\u{111BE}\\u{111C9}-\\u{111CC}\\u{111CF}\\u{1122F}-\\u{11231}\\u{11234}\\u{11236}\\u{11237}\\u{1123E}\\u{11241}\\u{112DF}\\u{112E3}-\\u{112EA}\\u{11300}\\u{11301}\\u{1133B}\\u{1133C}\\u{11340}\\u{11366}-\\u{1136C}\\u{11370}-\\u{11374}\\u{11438}-\\u{1143F}\\u{11442}-\\u{11444}\\u{11446}\\u{1145E}\\u{114B3}-\\u{114B8}\\u{114BA}\\u{114BF}\\u{114C0}\\u{114C2}\\u{114C3}\\u{115B2}-\\u{115B5}\\u{115BC}\\u{115BD}\\u{115BF}\\u{115C0}\\u{115DC}\\u{115DD}\\u{11633}-\\u{1163A}\\u{1163D}\\u{1163F}\\u{11640}\\u{11660}-\\u{1166C}\\u{116AB}\\u{116AD}\\u{116B0}-\\u{116B5}\\u{116B7}\\u{1171D}-\\u{1171F}\\u{11722}-\\u{11725}\\u{11727}-\\u{1172B}\\u{1182F}-\\u{11837}\\u{11839}\\u{1183A}\\u{1193B}\\u{1193C}\\u{1193E}\\u{11943}\\u{119D4}-\\u{119D7}\\u{119DA}\\u{119DB}\\u{119E0}\\u{11A01}-\\u{11A06}\\u{11A09}\\u{11A0A}\\u{11A33}-\\u{11A38}\\u{11A3B}-\\u{11A3E}\\u{11A47}\\u{11A51}-\\u{11A56}\\u{11A59}-\\u{11A5B}\\u{11A8A}-\\u{11A96}\\u{11A98}\\u{11A99}\\u{11C30}-\\u{11C36}\\u{11C38}-\\u{11C3D}\\u{11C92}-\\u{11CA7}\\u{11CAA}-\\u{11CB0}\\u{11CB2}\\u{11CB3}\\u{11CB5}\\u{11CB6}\\u{11D31}-\\u{11D36}\\u{11D3A}\\u{11D3C}\\u{11D3D}\\u{11D3F}-\\u{11D45}\\u{11D47}\\u{11D90}\\u{11D91}\\u{11D95}\\u{11D97}\\u{11EF3}\\u{11EF4}\\u{11F00}\\u{11F01}\\u{11F36}-\\u{11F3A}\\u{11F40}\\u{11F42}\\u{11FD5}-\\u{11FF1}\\u{13440}\\u{13447}-\\u{13455}\\u{16AF0}-\\u{16AF4}\\u{16B30}-\\u{16B36}\\u{16F4F}\\u{16F8F}-\\u{16F92}\\u{16FE2}\\u{16FE4}\\u{1BC9D}\\u{1BC9E}\\u{1BCA0}-\\u{1BCA3}\\u{1CF00}-\\u{1CF2D}\\u{1CF30}-\\u{1CF46}\\u{1D167}-\\u{1D169}\\u{1D173}-\\u{1D182}\\u{1D185}-\\u{1D18B}\\u{1D1AA}-\\u{1D1AD}\\u{1D1E9}\\u{1D1EA}\\u{1D200}-\\u{1D245}\\u{1D300}-\\u{1D356}\\u{1D6DB}\\u{1D715}\\u{1D74F}\\u{1D789}\\u{1D7C3}\\u{1D7CE}-\\u{1D7FF}\\u{1DA00}-\\u{1DA36}\\u{1DA3B}-\\u{1DA6C}\\u{1DA75}\\u{1DA84}\\u{1DA9B}-\\u{1DA9F}\\u{1DAA1}-\\u{1DAAF}\\u{1E000}-\\u{1E006}\\u{1E008}-\\u{1E018}\\u{1E01B}-\\u{1E021}\\u{1E023}\\u{1E024}\\u{1E026}-\\u{1E02A}\\u{1E08F}\\u{1E130}-\\u{1E136}\\u{1E2AE}\\u{1E2EC}-\\u{1E2EF}\\u{1E2FF}\\u{1E4EC}-\\u{1E4EF}\\u{1E800}-\\u{1E8C4}\\u{1E8C7}-\\u{1E8D6}\\u{1E900}-\\u{1E94B}\\u{1E950}-\\u{1E959}\\u{1E95E}\\u{1E95F}\\u{1EC71}-\\u{1ECB4}\\u{1ED01}-\\u{1ED3D}\\u{1EE00}-\\u{1EE03}\\u{1EE05}-\\u{1EE1F}\\u{1EE21}\\u{1EE22}\\u{1EE24}\\u{1EE27}\\u{1EE29}-\\u{1EE32}\\u{1EE34}-\\u{1EE37}\\u{1EE39}\\u{1EE3B}\\u{1EE42}\\u{1EE47}\\u{1EE49}\\u{1EE4B}\\u{1EE4D}-\\u{1EE4F}\\u{1EE51}\\u{1EE52}\\u{1EE54}\\u{1EE57}\\u{1EE59}\\u{1EE5B}\\u{1EE5D}\\u{1EE5F}\\u{1EE61}\\u{1EE62}\\u{1EE64}\\u{1EE67}-\\u{1EE6A}\\u{1EE6C}-\\u{1EE72}\\u{1EE74}-\\u{1EE77}\\u{1EE79}-\\u{1EE7C}\\u{1EE7E}\\u{1EE80}-\\u{1EE89}\\u{1EE8B}-\\u{1EE9B}\\u{1EEA1}-\\u{1EEA3}\\u{1EEA5}-\\u{1EEA9}\\u{1EEAB}-\\u{1EEBB}\\u{1EEF0}\\u{1EEF1}\\u{1F000}-\\u{1F02B}\\u{1F030}-\\u{1F093}\\u{1F0A0}-\\u{1F0AE}\\u{1F0B1}-\\u{1F0BF}\\u{1F0C1}-\\u{1F0CF}\\u{1F0D1}-\\u{1F0F5}\\u{1F100}-\\u{1F10F}\\u{1F12F}\\u{1F16A}-\\u{1F16F}\\u{1F1AD}\\u{1F260}-\\u{1F265}\\u{1F300}-\\u{1F6D7}\\u{1F6DC}-\\u{1F6EC}\\u{1F6F0}-\\u{1F6FC}\\u{1F700}-\\u{1F776}\\u{1F77B}-\\u{1F7D9}\\u{1F7E0}-\\u{1F7EB}\\u{1F7F0}\\u{1F800}-\\u{1F80B}\\u{1F810}-\\u{1F847}\\u{1F850}-\\u{1F859}\\u{1F860}-\\u{1F887}\\u{1F890}-\\u{1F8AD}\\u{1F8B0}\\u{1F8B1}\\u{1F900}-\\u{1FA53}\\u{1FA60}-\\u{1FA6D}\\u{1FA70}-\\u{1FA7C}\\u{1FA80}-\\u{1FA88}\\u{1FA90}-\\u{1FABD}\\u{1FABF}-\\u{1FAC5}\\u{1FACE}-\\u{1FADB}\\u{1FAE0}-\\u{1FAE8}\\u{1FAF0}-\\u{1FAF8}\\u{1FB00}-\\u{1FB92}\\u{1FB94}-\\u{1FBCA}\\u{1FBF0}-\\u{1FBF9}\\u{E0001}\\u{E0020}-\\u{E007F}\\u{E0100}-\\u{E01EF}]*$/u;\nconst bidiS3 = /[0-9\\xB2\\xB3\\xB9\\u05BE\\u05C0\\u05C3\\u05C6\\u05D0-\\u05EA\\u05EF-\\u05F4\\u0600-\\u0605\\u0608\\u060B\\u060D\\u061B-\\u064A\\u0660-\\u0669\\u066B-\\u066F\\u0671-\\u06D5\\u06DD\\u06E5\\u06E6\\u06EE-\\u070D\\u070F\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07C0-\\u07EA\\u07F4\\u07F5\\u07FA\\u07FE-\\u0815\\u081A\\u0824\\u0828\\u0830-\\u083E\\u0840-\\u0858\\u085E\\u0860-\\u086A\\u0870-\\u088E\\u0890\\u0891\\u08A0-\\u08C9\\u08E2\\u200F\\u2070\\u2074-\\u2079\\u2080-\\u2089\\u2488-\\u249B\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBC2\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFC\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF10-\\uFF19\\u{102E1}-\\u{102FB}\\u{10800}-\\u{10805}\\u{10808}\\u{1080A}-\\u{10835}\\u{10837}\\u{10838}\\u{1083C}\\u{1083F}-\\u{10855}\\u{10857}-\\u{1089E}\\u{108A7}-\\u{108AF}\\u{108E0}-\\u{108F2}\\u{108F4}\\u{108F5}\\u{108FB}-\\u{1091B}\\u{10920}-\\u{10939}\\u{1093F}\\u{10980}-\\u{109B7}\\u{109BC}-\\u{109CF}\\u{109D2}-\\u{10A00}\\u{10A10}-\\u{10A13}\\u{10A15}-\\u{10A17}\\u{10A19}-\\u{10A35}\\u{10A40}-\\u{10A48}\\u{10A50}-\\u{10A58}\\u{10A60}-\\u{10A9F}\\u{10AC0}-\\u{10AE4}\\u{10AEB}-\\u{10AF6}\\u{10B00}-\\u{10B35}\\u{10B40}-\\u{10B55}\\u{10B58}-\\u{10B72}\\u{10B78}-\\u{10B91}\\u{10B99}-\\u{10B9C}\\u{10BA9}-\\u{10BAF}\\u{10C00}-\\u{10C48}\\u{10C80}-\\u{10CB2}\\u{10CC0}-\\u{10CF2}\\u{10CFA}-\\u{10D23}\\u{10D30}-\\u{10D39}\\u{10E60}-\\u{10E7E}\\u{10E80}-\\u{10EA9}\\u{10EAD}\\u{10EB0}\\u{10EB1}\\u{10F00}-\\u{10F27}\\u{10F30}-\\u{10F45}\\u{10F51}-\\u{10F59}\\u{10F70}-\\u{10F81}\\u{10F86}-\\u{10F89}\\u{10FB0}-\\u{10FCB}\\u{10FE0}-\\u{10FF6}\\u{1D7CE}-\\u{1D7FF}\\u{1E800}-\\u{1E8C4}\\u{1E8C7}-\\u{1E8CF}\\u{1E900}-\\u{1E943}\\u{1E94B}\\u{1E950}-\\u{1E959}\\u{1E95E}\\u{1E95F}\\u{1EC71}-\\u{1ECB4}\\u{1ED01}-\\u{1ED3D}\\u{1EE00}-\\u{1EE03}\\u{1EE05}-\\u{1EE1F}\\u{1EE21}\\u{1EE22}\\u{1EE24}\\u{1EE27}\\u{1EE29}-\\u{1EE32}\\u{1EE34}-\\u{1EE37}\\u{1EE39}\\u{1EE3B}\\u{1EE42}\\u{1EE47}\\u{1EE49}\\u{1EE4B}\\u{1EE4D}-\\u{1EE4F}\\u{1EE51}\\u{1EE52}\\u{1EE54}\\u{1EE57}\\u{1EE59}\\u{1EE5B}\\u{1EE5D}\\u{1EE5F}\\u{1EE61}\\u{1EE62}\\u{1EE64}\\u{1EE67}-\\u{1EE6A}\\u{1EE6C}-\\u{1EE72}\\u{1EE74}-\\u{1EE77}\\u{1EE79}-\\u{1EE7C}\\u{1EE7E}\\u{1EE80}-\\u{1EE89}\\u{1EE8B}-\\u{1EE9B}\\u{1EEA1}-\\u{1EEA3}\\u{1EEA5}-\\u{1EEA9}\\u{1EEAB}-\\u{1EEBB}\\u{1F100}-\\u{1F10A}\\u{1FBF0}-\\u{1FBF9}][\\u0300-\\u036F\\u0483-\\u0489\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u0610-\\u061A\\u064B-\\u065F\\u0670\\u06D6-\\u06DC\\u06DF-\\u06E4\\u06E7\\u06E8\\u06EA-\\u06ED\\u0711\\u0730-\\u074A\\u07A6-\\u07B0\\u07EB-\\u07F3\\u07FD\\u0816-\\u0819\\u081B-\\u0823\\u0825-\\u0827\\u0829-\\u082D\\u0859-\\u085B\\u0898-\\u089F\\u08CA-\\u08E1\\u08E3-\\u0902\\u093A\\u093C\\u0941-\\u0948\\u094D\\u0951-\\u0957\\u0962\\u0963\\u0981\\u09BC\\u09C1-\\u09C4\\u09CD\\u09E2\\u09E3\\u09FE\\u0A01\\u0A02\\u0A3C\\u0A41\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A70\\u0A71\\u0A75\\u0A81\\u0A82\\u0ABC\\u0AC1-\\u0AC5\\u0AC7\\u0AC8\\u0ACD\\u0AE2\\u0AE3\\u0AFA-\\u0AFF\\u0B01\\u0B3C\\u0B3F\\u0B41-\\u0B44\\u0B4D\\u0B55\\u0B56\\u0B62\\u0B63\\u0B82\\u0BC0\\u0BCD\\u0C00\\u0C04\\u0C3C\\u0C3E-\\u0C40\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C62\\u0C63\\u0C81\\u0CBC\\u0CCC\\u0CCD\\u0CE2\\u0CE3\\u0D00\\u0D01\\u0D3B\\u0D3C\\u0D41-\\u0D44\\u0D4D\\u0D62\\u0D63\\u0D81\\u0DCA\\u0DD2-\\u0DD4\\u0DD6\\u0E31\\u0E34-\\u0E3A\\u0E47-\\u0E4E\\u0EB1\\u0EB4-\\u0EBC\\u0EC8-\\u0ECE\\u0F18\\u0F19\\u0F35\\u0F37\\u0F39\\u0F71-\\u0F7E\\u0F80-\\u0F84\\u0F86\\u0F87\\u0F8D-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u102D-\\u1030\\u1032-\\u1037\\u1039\\u103A\\u103D\\u103E\\u1058\\u1059\\u105E-\\u1060\\u1071-\\u1074\\u1082\\u1085\\u1086\\u108D\\u109D\\u135D-\\u135F\\u1712-\\u1714\\u1732\\u1733\\u1752\\u1753\\u1772\\u1773\\u17B4\\u17B5\\u17B7-\\u17BD\\u17C6\\u17C9-\\u17D3\\u17DD\\u180B-\\u180D\\u180F\\u1885\\u1886\\u18A9\\u1920-\\u1922\\u1927\\u1928\\u1932\\u1939-\\u193B\\u1A17\\u1A18\\u1A1B\\u1A56\\u1A58-\\u1A5E\\u1A60\\u1A62\\u1A65-\\u1A6C\\u1A73-\\u1A7C\\u1A7F\\u1AB0-\\u1ACE\\u1B00-\\u1B03\\u1B34\\u1B36-\\u1B3A\\u1B3C\\u1B42\\u1B6B-\\u1B73\\u1B80\\u1B81\\u1BA2-\\u1BA5\\u1BA8\\u1BA9\\u1BAB-\\u1BAD\\u1BE6\\u1BE8\\u1BE9\\u1BED\\u1BEF-\\u1BF1\\u1C2C-\\u1C33\\u1C36\\u1C37\\u1CD0-\\u1CD2\\u1CD4-\\u1CE0\\u1CE2-\\u1CE8\\u1CED\\u1CF4\\u1CF8\\u1CF9\\u1DC0-\\u1DFF\\u20D0-\\u20F0\\u2CEF-\\u2CF1\\u2D7F\\u2DE0-\\u2DFF\\u302A-\\u302D\\u3099\\u309A\\uA66F-\\uA672\\uA674-\\uA67D\\uA69E\\uA69F\\uA6F0\\uA6F1\\uA802\\uA806\\uA80B\\uA825\\uA826\\uA82C\\uA8C4\\uA8C5\\uA8E0-\\uA8F1\\uA8FF\\uA926-\\uA92D\\uA947-\\uA951\\uA980-\\uA982\\uA9B3\\uA9B6-\\uA9B9\\uA9BC\\uA9BD\\uA9E5\\uAA29-\\uAA2E\\uAA31\\uAA32\\uAA35\\uAA36\\uAA43\\uAA4C\\uAA7C\\uAAB0\\uAAB2-\\uAAB4\\uAAB7\\uAAB8\\uAABE\\uAABF\\uAAC1\\uAAEC\\uAAED\\uAAF6\\uABE5\\uABE8\\uABED\\uFB1E\\uFE00-\\uFE0F\\uFE20-\\uFE2F\\u{101FD}\\u{102E0}\\u{10376}-\\u{1037A}\\u{10A01}-\\u{10A03}\\u{10A05}\\u{10A06}\\u{10A0C}-\\u{10A0F}\\u{10A38}-\\u{10A3A}\\u{10A3F}\\u{10AE5}\\u{10AE6}\\u{10D24}-\\u{10D27}\\u{10EAB}\\u{10EAC}\\u{10EFD}-\\u{10EFF}\\u{10F46}-\\u{10F50}\\u{10F82}-\\u{10F85}\\u{11001}\\u{11038}-\\u{11046}\\u{11070}\\u{11073}\\u{11074}\\u{1107F}-\\u{11081}\\u{110B3}-\\u{110B6}\\u{110B9}\\u{110BA}\\u{110C2}\\u{11100}-\\u{11102}\\u{11127}-\\u{1112B}\\u{1112D}-\\u{11134}\\u{11173}\\u{11180}\\u{11181}\\u{111B6}-\\u{111BE}\\u{111C9}-\\u{111CC}\\u{111CF}\\u{1122F}-\\u{11231}\\u{11234}\\u{11236}\\u{11237}\\u{1123E}\\u{11241}\\u{112DF}\\u{112E3}-\\u{112EA}\\u{11300}\\u{11301}\\u{1133B}\\u{1133C}\\u{11340}\\u{11366}-\\u{1136C}\\u{11370}-\\u{11374}\\u{11438}-\\u{1143F}\\u{11442}-\\u{11444}\\u{11446}\\u{1145E}\\u{114B3}-\\u{114B8}\\u{114BA}\\u{114BF}\\u{114C0}\\u{114C2}\\u{114C3}\\u{115B2}-\\u{115B5}\\u{115BC}\\u{115BD}\\u{115BF}\\u{115C0}\\u{115DC}\\u{115DD}\\u{11633}-\\u{1163A}\\u{1163D}\\u{1163F}\\u{11640}\\u{116AB}\\u{116AD}\\u{116B0}-\\u{116B5}\\u{116B7}\\u{1171D}-\\u{1171F}\\u{11722}-\\u{11725}\\u{11727}-\\u{1172B}\\u{1182F}-\\u{11837}\\u{11839}\\u{1183A}\\u{1193B}\\u{1193C}\\u{1193E}\\u{11943}\\u{119D4}-\\u{119D7}\\u{119DA}\\u{119DB}\\u{119E0}\\u{11A01}-\\u{11A06}\\u{11A09}\\u{11A0A}\\u{11A33}-\\u{11A38}\\u{11A3B}-\\u{11A3E}\\u{11A47}\\u{11A51}-\\u{11A56}\\u{11A59}-\\u{11A5B}\\u{11A8A}-\\u{11A96}\\u{11A98}\\u{11A99}\\u{11C30}-\\u{11C36}\\u{11C38}-\\u{11C3D}\\u{11C92}-\\u{11CA7}\\u{11CAA}-\\u{11CB0}\\u{11CB2}\\u{11CB3}\\u{11CB5}\\u{11CB6}\\u{11D31}-\\u{11D36}\\u{11D3A}\\u{11D3C}\\u{11D3D}\\u{11D3F}-\\u{11D45}\\u{11D47}\\u{11D90}\\u{11D91}\\u{11D95}\\u{11D97}\\u{11EF3}\\u{11EF4}\\u{11F00}\\u{11F01}\\u{11F36}-\\u{11F3A}\\u{11F40}\\u{11F42}\\u{13440}\\u{13447}-\\u{13455}\\u{16AF0}-\\u{16AF4}\\u{16B30}-\\u{16B36}\\u{16F4F}\\u{16F8F}-\\u{16F92}\\u{16FE4}\\u{1BC9D}\\u{1BC9E}\\u{1CF00}-\\u{1CF2D}\\u{1CF30}-\\u{1CF46}\\u{1D167}-\\u{1D169}\\u{1D17B}-\\u{1D182}\\u{1D185}-\\u{1D18B}\\u{1D1AA}-\\u{1D1AD}\\u{1D242}-\\u{1D244}\\u{1DA00}-\\u{1DA36}\\u{1DA3B}-\\u{1DA6C}\\u{1DA75}\\u{1DA84}\\u{1DA9B}-\\u{1DA9F}\\u{1DAA1}-\\u{1DAAF}\\u{1E000}-\\u{1E006}\\u{1E008}-\\u{1E018}\\u{1E01B}-\\u{1E021}\\u{1E023}\\u{1E024}\\u{1E026}-\\u{1E02A}\\u{1E08F}\\u{1E130}-\\u{1E136}\\u{1E2AE}\\u{1E2EC}-\\u{1E2EF}\\u{1E4EC}-\\u{1E4EF}\\u{1E8D0}-\\u{1E8D6}\\u{1E944}-\\u{1E94A}\\u{E0100}-\\u{E01EF}]*$/u;\nconst bidiS4EN = /[0-9\\xB2\\xB3\\xB9\\u06F0-\\u06F9\\u2070\\u2074-\\u2079\\u2080-\\u2089\\u2488-\\u249B\\uFF10-\\uFF19\\u{102E1}-\\u{102FB}\\u{1D7CE}-\\u{1D7FF}\\u{1F100}-\\u{1F10A}\\u{1FBF0}-\\u{1FBF9}]/u;\nconst bidiS4AN = /[\\u0600-\\u0605\\u0660-\\u0669\\u066B\\u066C\\u06DD\\u0890\\u0891\\u08E2\\u{10D30}-\\u{10D39}\\u{10E60}-\\u{10E7E}]/u;\nconst bidiS5 = /^[\\0-\\x08\\x0E-\\x1B!-\\x84\\x86-\\u0377\\u037A-\\u037F\\u0384-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u052F\\u0531-\\u0556\\u0559-\\u058A\\u058D-\\u058F\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u0606\\u0607\\u0609\\u060A\\u060C\\u060E-\\u061A\\u064B-\\u065F\\u066A\\u0670\\u06D6-\\u06DC\\u06DE-\\u06E4\\u06E7-\\u06ED\\u06F0-\\u06F9\\u0711\\u0730-\\u074A\\u07A6-\\u07B0\\u07EB-\\u07F3\\u07F6-\\u07F9\\u07FD\\u0816-\\u0819\\u081B-\\u0823\\u0825-\\u0827\\u0829-\\u082D\\u0859-\\u085B\\u0898-\\u089F\\u08CA-\\u08E1\\u08E3-\\u0983\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BC-\\u09C4\\u09C7\\u09C8\\u09CB-\\u09CE\\u09D7\\u09DC\\u09DD\\u09DF-\\u09E3\\u09E6-\\u09FE\\u0A01-\\u0A03\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A3C\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A59-\\u0A5C\\u0A5E\\u0A66-\\u0A76\\u0A81-\\u0A83\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABC-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0AD0\\u0AE0-\\u0AE3\\u0AE6-\\u0AF1\\u0AF9-\\u0AFF\\u0B01-\\u0B03\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3C-\\u0B44\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B55-\\u0B57\\u0B5C\\u0B5D\\u0B5F-\\u0B63\\u0B66-\\u0B77\\u0B82\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD0\\u0BD7\\u0BE6-\\u0BFA\\u0C00-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3C-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C58-\\u0C5A\\u0C5D\\u0C60-\\u0C63\\u0C66-\\u0C6F\\u0C77-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBC-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5\\u0CD6\\u0CDD\\u0CDE\\u0CE0-\\u0CE3\\u0CE6-\\u0CEF\\u0CF1-\\u0CF3\\u0D00-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4F\\u0D54-\\u0D63\\u0D66-\\u0D7F\\u0D81-\\u0D83\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0DCA\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DE6-\\u0DEF\\u0DF2-\\u0DF4\\u0E01-\\u0E3A\\u0E3F-\\u0E5B\\u0E81\\u0E82\\u0E84\\u0E86-\\u0E8A\\u0E8C-\\u0EA3\\u0EA5\\u0EA7-\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EC8-\\u0ECE\\u0ED0-\\u0ED9\\u0EDC-\\u0EDF\\u0F00-\\u0F47\\u0F49-\\u0F6C\\u0F71-\\u0F97\\u0F99-\\u0FBC\\u0FBE-\\u0FCC\\u0FCE-\\u0FDA\\u1000-\\u10C5\\u10C7\\u10CD\\u10D0-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u135D-\\u137C\\u1380-\\u1399\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1400-\\u167F\\u1681-\\u169C\\u16A0-\\u16F8\\u1700-\\u1715\\u171F-\\u1736\\u1740-\\u1753\\u1760-\\u176C\\u176E-\\u1770\\u1772\\u1773\\u1780-\\u17DD\\u17E0-\\u17E9\\u17F0-\\u17F9\\u1800-\\u1819\\u1820-\\u1878\\u1880-\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1920-\\u192B\\u1930-\\u193B\\u1940\\u1944-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u19D0-\\u19DA\\u19DE-\\u1A1B\\u1A1E-\\u1A5E\\u1A60-\\u1A7C\\u1A7F-\\u1A89\\u1A90-\\u1A99\\u1AA0-\\u1AAD\\u1AB0-\\u1ACE\\u1B00-\\u1B4C\\u1B50-\\u1B7E\\u1B80-\\u1BF3\\u1BFC-\\u1C37\\u1C3B-\\u1C49\\u1C4D-\\u1C88\\u1C90-\\u1CBA\\u1CBD-\\u1CC7\\u1CD0-\\u1CFA\\u1D00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FC4\\u1FC6-\\u1FD3\\u1FD6-\\u1FDB\\u1FDD-\\u1FEF\\u1FF2-\\u1FF4\\u1FF6-\\u1FFE\\u200B-\\u200E\\u2010-\\u2027\\u202F-\\u205E\\u2060-\\u2064\\u206A-\\u2071\\u2074-\\u208E\\u2090-\\u209C\\u20A0-\\u20C0\\u20D0-\\u20F0\\u2100-\\u218B\\u2190-\\u2426\\u2440-\\u244A\\u2460-\\u2B73\\u2B76-\\u2B95\\u2B97-\\u2CF3\\u2CF9-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D70\\u2D7F-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2DE0-\\u2E5D\\u2E80-\\u2E99\\u2E9B-\\u2EF3\\u2F00-\\u2FD5\\u2FF0-\\u2FFB\\u3001-\\u303F\\u3041-\\u3096\\u3099-\\u30FF\\u3105-\\u312F\\u3131-\\u318E\\u3190-\\u31E3\\u31F0-\\u321E\\u3220-\\uA48C\\uA490-\\uA4C6\\uA4D0-\\uA62B\\uA640-\\uA6F7\\uA700-\\uA7CA\\uA7D0\\uA7D1\\uA7D3\\uA7D5-\\uA7D9\\uA7F2-\\uA82C\\uA830-\\uA839\\uA840-\\uA877\\uA880-\\uA8C5\\uA8CE-\\uA8D9\\uA8E0-\\uA953\\uA95F-\\uA97C\\uA980-\\uA9CD\\uA9CF-\\uA9D9\\uA9DE-\\uA9FE\\uAA00-\\uAA36\\uAA40-\\uAA4D\\uAA50-\\uAA59\\uAA5C-\\uAAC2\\uAADB-\\uAAF6\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB6B\\uAB70-\\uABED\\uABF0-\\uABF9\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uD800-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1E\\uFB29\\uFD3E-\\uFD4F\\uFDCF\\uFDFD-\\uFE19\\uFE20-\\uFE52\\uFE54-\\uFE66\\uFE68-\\uFE6B\\uFEFF\\uFF01-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC\\uFFE0-\\uFFE6\\uFFE8-\\uFFEE\\uFFF9-\\uFFFD\\u{10000}-\\u{1000B}\\u{1000D}-\\u{10026}\\u{10028}-\\u{1003A}\\u{1003C}\\u{1003D}\\u{1003F}-\\u{1004D}\\u{10050}-\\u{1005D}\\u{10080}-\\u{100FA}\\u{10100}-\\u{10102}\\u{10107}-\\u{10133}\\u{10137}-\\u{1018E}\\u{10190}-\\u{1019C}\\u{101A0}\\u{101D0}-\\u{101FD}\\u{10280}-\\u{1029C}\\u{102A0}-\\u{102D0}\\u{102E0}-\\u{102FB}\\u{10300}-\\u{10323}\\u{1032D}-\\u{1034A}\\u{10350}-\\u{1037A}\\u{10380}-\\u{1039D}\\u{1039F}-\\u{103C3}\\u{103C8}-\\u{103D5}\\u{10400}-\\u{1049D}\\u{104A0}-\\u{104A9}\\u{104B0}-\\u{104D3}\\u{104D8}-\\u{104FB}\\u{10500}-\\u{10527}\\u{10530}-\\u{10563}\\u{1056F}-\\u{1057A}\\u{1057C}-\\u{1058A}\\u{1058C}-\\u{10592}\\u{10594}\\u{10595}\\u{10597}-\\u{105A1}\\u{105A3}-\\u{105B1}\\u{105B3}-\\u{105B9}\\u{105BB}\\u{105BC}\\u{10600}-\\u{10736}\\u{10740}-\\u{10755}\\u{10760}-\\u{10767}\\u{10780}-\\u{10785}\\u{10787}-\\u{107B0}\\u{107B2}-\\u{107BA}\\u{1091F}\\u{10A01}-\\u{10A03}\\u{10A05}\\u{10A06}\\u{10A0C}-\\u{10A0F}\\u{10A38}-\\u{10A3A}\\u{10A3F}\\u{10AE5}\\u{10AE6}\\u{10B39}-\\u{10B3F}\\u{10D24}-\\u{10D27}\\u{10EAB}\\u{10EAC}\\u{10EFD}-\\u{10EFF}\\u{10F46}-\\u{10F50}\\u{10F82}-\\u{10F85}\\u{11000}-\\u{1104D}\\u{11052}-\\u{11075}\\u{1107F}-\\u{110C2}\\u{110CD}\\u{110D0}-\\u{110E8}\\u{110F0}-\\u{110F9}\\u{11100}-\\u{11134}\\u{11136}-\\u{11147}\\u{11150}-\\u{11176}\\u{11180}-\\u{111DF}\\u{111E1}-\\u{111F4}\\u{11200}-\\u{11211}\\u{11213}-\\u{11241}\\u{11280}-\\u{11286}\\u{11288}\\u{1128A}-\\u{1128D}\\u{1128F}-\\u{1129D}\\u{1129F}-\\u{112A9}\\u{112B0}-\\u{112EA}\\u{112F0}-\\u{112F9}\\u{11300}-\\u{11303}\\u{11305}-\\u{1130C}\\u{1130F}\\u{11310}\\u{11313}-\\u{11328}\\u{1132A}-\\u{11330}\\u{11332}\\u{11333}\\u{11335}-\\u{11339}\\u{1133B}-\\u{11344}\\u{11347}\\u{11348}\\u{1134B}-\\u{1134D}\\u{11350}\\u{11357}\\u{1135D}-\\u{11363}\\u{11366}-\\u{1136C}\\u{11370}-\\u{11374}\\u{11400}-\\u{1145B}\\u{1145D}-\\u{11461}\\u{11480}-\\u{114C7}\\u{114D0}-\\u{114D9}\\u{11580}-\\u{115B5}\\u{115B8}-\\u{115DD}\\u{11600}-\\u{11644}\\u{11650}-\\u{11659}\\u{11660}-\\u{1166C}\\u{11680}-\\u{116B9}\\u{116C0}-\\u{116C9}\\u{11700}-\\u{1171A}\\u{1171D}-\\u{1172B}\\u{11730}-\\u{11746}\\u{11800}-\\u{1183B}\\u{118A0}-\\u{118F2}\\u{118FF}-\\u{11906}\\u{11909}\\u{1190C}-\\u{11913}\\u{11915}\\u{11916}\\u{11918}-\\u{11935}\\u{11937}\\u{11938}\\u{1193B}-\\u{11946}\\u{11950}-\\u{11959}\\u{119A0}-\\u{119A7}\\u{119AA}-\\u{119D7}\\u{119DA}-\\u{119E4}\\u{11A00}-\\u{11A47}\\u{11A50}-\\u{11AA2}\\u{11AB0}-\\u{11AF8}\\u{11B00}-\\u{11B09}\\u{11C00}-\\u{11C08}\\u{11C0A}-\\u{11C36}\\u{11C38}-\\u{11C45}\\u{11C50}-\\u{11C6C}\\u{11C70}-\\u{11C8F}\\u{11C92}-\\u{11CA7}\\u{11CA9}-\\u{11CB6}\\u{11D00}-\\u{11D06}\\u{11D08}\\u{11D09}\\u{11D0B}-\\u{11D36}\\u{11D3A}\\u{11D3C}\\u{11D3D}\\u{11D3F}-\\u{11D47}\\u{11D50}-\\u{11D59}\\u{11D60}-\\u{11D65}\\u{11D67}\\u{11D68}\\u{11D6A}-\\u{11D8E}\\u{11D90}\\u{11D91}\\u{11D93}-\\u{11D98}\\u{11DA0}-\\u{11DA9}\\u{11EE0}-\\u{11EF8}\\u{11F00}-\\u{11F10}\\u{11F12}-\\u{11F3A}\\u{11F3E}-\\u{11F59}\\u{11FB0}\\u{11FC0}-\\u{11FF1}\\u{11FFF}-\\u{12399}\\u{12400}-\\u{1246E}\\u{12470}-\\u{12474}\\u{12480}-\\u{12543}\\u{12F90}-\\u{12FF2}\\u{13000}-\\u{13455}\\u{14400}-\\u{14646}\\u{16800}-\\u{16A38}\\u{16A40}-\\u{16A5E}\\u{16A60}-\\u{16A69}\\u{16A6E}-\\u{16ABE}\\u{16AC0}-\\u{16AC9}\\u{16AD0}-\\u{16AED}\\u{16AF0}-\\u{16AF5}\\u{16B00}-\\u{16B45}\\u{16B50}-\\u{16B59}\\u{16B5B}-\\u{16B61}\\u{16B63}-\\u{16B77}\\u{16B7D}-\\u{16B8F}\\u{16E40}-\\u{16E9A}\\u{16F00}-\\u{16F4A}\\u{16F4F}-\\u{16F87}\\u{16F8F}-\\u{16F9F}\\u{16FE0}-\\u{16FE4}\\u{16FF0}\\u{16FF1}\\u{17000}-\\u{187F7}\\u{18800}-\\u{18CD5}\\u{18D00}-\\u{18D08}\\u{1AFF0}-\\u{1AFF3}\\u{1AFF5}-\\u{1AFFB}\\u{1AFFD}\\u{1AFFE}\\u{1B000}-\\u{1B122}\\u{1B132}\\u{1B150}-\\u{1B152}\\u{1B155}\\u{1B164}-\\u{1B167}\\u{1B170}-\\u{1B2FB}\\u{1BC00}-\\u{1BC6A}\\u{1BC70}-\\u{1BC7C}\\u{1BC80}-\\u{1BC88}\\u{1BC90}-\\u{1BC99}\\u{1BC9C}-\\u{1BCA3}\\u{1CF00}-\\u{1CF2D}\\u{1CF30}-\\u{1CF46}\\u{1CF50}-\\u{1CFC3}\\u{1D000}-\\u{1D0F5}\\u{1D100}-\\u{1D126}\\u{1D129}-\\u{1D1EA}\\u{1D200}-\\u{1D245}\\u{1D2C0}-\\u{1D2D3}\\u{1D2E0}-\\u{1D2F3}\\u{1D300}-\\u{1D356}\\u{1D360}-\\u{1D378}\\u{1D400}-\\u{1D454}\\u{1D456}-\\u{1D49C}\\u{1D49E}\\u{1D49F}\\u{1D4A2}\\u{1D4A5}\\u{1D4A6}\\u{1D4A9}-\\u{1D4AC}\\u{1D4AE}-\\u{1D4B9}\\u{1D4BB}\\u{1D4BD}-\\u{1D4C3}\\u{1D4C5}-\\u{1D505}\\u{1D507}-\\u{1D50A}\\u{1D50D}-\\u{1D514}\\u{1D516}-\\u{1D51C}\\u{1D51E}-\\u{1D539}\\u{1D53B}-\\u{1D53E}\\u{1D540}-\\u{1D544}\\u{1D546}\\u{1D54A}-\\u{1D550}\\u{1D552}-\\u{1D6A5}\\u{1D6A8}-\\u{1D7CB}\\u{1D7CE}-\\u{1DA8B}\\u{1DA9B}-\\u{1DA9F}\\u{1DAA1}-\\u{1DAAF}\\u{1DF00}-\\u{1DF1E}\\u{1DF25}-\\u{1DF2A}\\u{1E000}-\\u{1E006}\\u{1E008}-\\u{1E018}\\u{1E01B}-\\u{1E021}\\u{1E023}\\u{1E024}\\u{1E026}-\\u{1E02A}\\u{1E030}-\\u{1E06D}\\u{1E08F}\\u{1E100}-\\u{1E12C}\\u{1E130}-\\u{1E13D}\\u{1E140}-\\u{1E149}\\u{1E14E}\\u{1E14F}\\u{1E290}-\\u{1E2AE}\\u{1E2C0}-\\u{1E2F9}\\u{1E2FF}\\u{1E4D0}-\\u{1E4F9}\\u{1E7E0}-\\u{1E7E6}\\u{1E7E8}-\\u{1E7EB}\\u{1E7ED}\\u{1E7EE}\\u{1E7F0}-\\u{1E7FE}\\u{1E8D0}-\\u{1E8D6}\\u{1E944}-\\u{1E94A}\\u{1EEF0}\\u{1EEF1}\\u{1F000}-\\u{1F02B}\\u{1F030}-\\u{1F093}\\u{1F0A0}-\\u{1F0AE}\\u{1F0B1}-\\u{1F0BF}\\u{1F0C1}-\\u{1F0CF}\\u{1F0D1}-\\u{1F0F5}\\u{1F100}-\\u{1F1AD}\\u{1F1E6}-\\u{1F202}\\u{1F210}-\\u{1F23B}\\u{1F240}-\\u{1F248}\\u{1F250}\\u{1F251}\\u{1F260}-\\u{1F265}\\u{1F300}-\\u{1F6D7}\\u{1F6DC}-\\u{1F6EC}\\u{1F6F0}-\\u{1F6FC}\\u{1F700}-\\u{1F776}\\u{1F77B}-\\u{1F7D9}\\u{1F7E0}-\\u{1F7EB}\\u{1F7F0}\\u{1F800}-\\u{1F80B}\\u{1F810}-\\u{1F847}\\u{1F850}-\\u{1F859}\\u{1F860}-\\u{1F887}\\u{1F890}-\\u{1F8AD}\\u{1F8B0}\\u{1F8B1}\\u{1F900}-\\u{1FA53}\\u{1FA60}-\\u{1FA6D}\\u{1FA70}-\\u{1FA7C}\\u{1FA80}-\\u{1FA88}\\u{1FA90}-\\u{1FABD}\\u{1FABF}-\\u{1FAC5}\\u{1FACE}-\\u{1FADB}\\u{1FAE0}-\\u{1FAE8}\\u{1FAF0}-\\u{1FAF8}\\u{1FB00}-\\u{1FB92}\\u{1FB94}-\\u{1FBCA}\\u{1FBF0}-\\u{1FBF9}\\u{20000}-\\u{2A6DF}\\u{2A700}-\\u{2B739}\\u{2B740}-\\u{2B81D}\\u{2B820}-\\u{2CEA1}\\u{2CEB0}-\\u{2EBE0}\\u{2F800}-\\u{2FA1D}\\u{30000}-\\u{3134A}\\u{31350}-\\u{323AF}\\u{E0001}\\u{E0020}-\\u{E007F}\\u{E0100}-\\u{E01EF}\\u{F0000}-\\u{FFFFD}\\u{100000}-\\u{10FFFD}]*$/u;\nconst bidiS6 = /[0-9A-Za-z\\xAA\\xB2\\xB3\\xB5\\xB9\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02B8\\u02BB-\\u02C1\\u02D0\\u02D1\\u02E0-\\u02E4\\u02EE\\u0370-\\u0373\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0482\\u048A-\\u052F\\u0531-\\u0556\\u0559-\\u0589\\u06F0-\\u06F9\\u0903-\\u0939\\u093B\\u093D-\\u0940\\u0949-\\u094C\\u094E-\\u0950\\u0958-\\u0961\\u0964-\\u0980\\u0982\\u0983\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD-\\u09C0\\u09C7\\u09C8\\u09CB\\u09CC\\u09CE\\u09D7\\u09DC\\u09DD\\u09DF-\\u09E1\\u09E6-\\u09F1\\u09F4-\\u09FA\\u09FC\\u09FD\\u0A03\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A3E-\\u0A40\\u0A59-\\u0A5C\\u0A5E\\u0A66-\\u0A6F\\u0A72-\\u0A74\\u0A76\\u0A83\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD-\\u0AC0\\u0AC9\\u0ACB\\u0ACC\\u0AD0\\u0AE0\\u0AE1\\u0AE6-\\u0AF0\\u0AF9\\u0B02\\u0B03\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B3E\\u0B40\\u0B47\\u0B48\\u0B4B\\u0B4C\\u0B57\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B66-\\u0B77\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BBE\\u0BBF\\u0BC1\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCC\\u0BD0\\u0BD7\\u0BE6-\\u0BF2\\u0C01-\\u0C03\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C41-\\u0C44\\u0C58-\\u0C5A\\u0C5D\\u0C60\\u0C61\\u0C66-\\u0C6F\\u0C77\\u0C7F\\u0C80\\u0C82-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA\\u0CCB\\u0CD5\\u0CD6\\u0CDD\\u0CDE\\u0CE0\\u0CE1\\u0CE6-\\u0CEF\\u0CF1-\\u0CF3\\u0D02-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D-\\u0D40\\u0D46-\\u0D48\\u0D4A-\\u0D4C\\u0D4E\\u0D4F\\u0D54-\\u0D61\\u0D66-\\u0D7F\\u0D82\\u0D83\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0DCF-\\u0DD1\\u0DD8-\\u0DDF\\u0DE6-\\u0DEF\\u0DF2-\\u0DF4\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E4F-\\u0E5B\\u0E81\\u0E82\\u0E84\\u0E86-\\u0E8A\\u0E8C-\\u0EA3\\u0EA5\\u0EA7-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0ED0-\\u0ED9\\u0EDC-\\u0EDF\\u0F00-\\u0F17\\u0F1A-\\u0F34\\u0F36\\u0F38\\u0F3E-\\u0F47\\u0F49-\\u0F6C\\u0F7F\\u0F85\\u0F88-\\u0F8C\\u0FBE-\\u0FC5\\u0FC7-\\u0FCC\\u0FCE-\\u0FDA\\u1000-\\u102C\\u1031\\u1038\\u103B\\u103C\\u103F-\\u1057\\u105A-\\u105D\\u1061-\\u1070\\u1075-\\u1081\\u1083\\u1084\\u1087-\\u108C\\u108E-\\u109C\\u109E-\\u10C5\\u10C7\\u10CD\\u10D0-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1360-\\u137C\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u167F\\u1681-\\u169A\\u16A0-\\u16F8\\u1700-\\u1711\\u1715\\u171F-\\u1731\\u1734-\\u1736\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17B6\\u17BE-\\u17C5\\u17C7\\u17C8\\u17D4-\\u17DA\\u17DC\\u17E0-\\u17E9\\u1810-\\u1819\\u1820-\\u1878\\u1880-\\u1884\\u1887-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1923-\\u1926\\u1929-\\u192B\\u1930\\u1931\\u1933-\\u1938\\u1946-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u19D0-\\u19DA\\u1A00-\\u1A16\\u1A19\\u1A1A\\u1A1E-\\u1A55\\u1A57\\u1A61\\u1A63\\u1A64\\u1A6D-\\u1A72\\u1A80-\\u1A89\\u1A90-\\u1A99\\u1AA0-\\u1AAD\\u1B04-\\u1B33\\u1B35\\u1B3B\\u1B3D-\\u1B41\\u1B43-\\u1B4C\\u1B50-\\u1B6A\\u1B74-\\u1B7E\\u1B82-\\u1BA1\\u1BA6\\u1BA7\\u1BAA\\u1BAE-\\u1BE5\\u1BE7\\u1BEA-\\u1BEC\\u1BEE\\u1BF2\\u1BF3\\u1BFC-\\u1C2B\\u1C34\\u1C35\\u1C3B-\\u1C49\\u1C4D-\\u1C88\\u1C90-\\u1CBA\\u1CBD-\\u1CC7\\u1CD3\\u1CE1\\u1CE9-\\u1CEC\\u1CEE-\\u1CF3\\u1CF5-\\u1CF7\\u1CFA\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u200E\\u2070\\u2071\\u2074-\\u2079\\u207F-\\u2089\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u214F\\u2160-\\u2188\\u2336-\\u237A\\u2395\\u2488-\\u24E9\\u26AC\\u2800-\\u28FF\\u2C00-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D70\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u3005-\\u3007\\u3021-\\u3029\\u302E\\u302F\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312F\\u3131-\\u318E\\u3190-\\u31BF\\u31F0-\\u321C\\u3220-\\u324F\\u3260-\\u327B\\u327F-\\u32B0\\u32C0-\\u32CB\\u32D0-\\u3376\\u337B-\\u33DD\\u33E0-\\u33FE\\u3400-\\u4DBF\\u4E00-\\uA48C\\uA4D0-\\uA60C\\uA610-\\uA62B\\uA640-\\uA66E\\uA680-\\uA69D\\uA6A0-\\uA6EF\\uA6F2-\\uA6F7\\uA722-\\uA787\\uA789-\\uA7CA\\uA7D0\\uA7D1\\uA7D3\\uA7D5-\\uA7D9\\uA7F2-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA824\\uA827\\uA830-\\uA837\\uA840-\\uA873\\uA880-\\uA8C3\\uA8CE-\\uA8D9\\uA8F2-\\uA8FE\\uA900-\\uA925\\uA92E-\\uA946\\uA952\\uA953\\uA95F-\\uA97C\\uA983-\\uA9B2\\uA9B4\\uA9B5\\uA9BA\\uA9BB\\uA9BE-\\uA9CD\\uA9CF-\\uA9D9\\uA9DE-\\uA9E4\\uA9E6-\\uA9FE\\uAA00-\\uAA28\\uAA2F\\uAA30\\uAA33\\uAA34\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA4D\\uAA50-\\uAA59\\uAA5C-\\uAA7B\\uAA7D-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAAEB\\uAAEE-\\uAAF5\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB69\\uAB70-\\uABE4\\uABE6\\uABE7\\uABE9-\\uABEC\\uABF0-\\uABF9\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uD800-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFF10-\\uFF19\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC\\u{10000}-\\u{1000B}\\u{1000D}-\\u{10026}\\u{10028}-\\u{1003A}\\u{1003C}\\u{1003D}\\u{1003F}-\\u{1004D}\\u{10050}-\\u{1005D}\\u{10080}-\\u{100FA}\\u{10100}\\u{10102}\\u{10107}-\\u{10133}\\u{10137}-\\u{1013F}\\u{1018D}\\u{1018E}\\u{101D0}-\\u{101FC}\\u{10280}-\\u{1029C}\\u{102A0}-\\u{102D0}\\u{102E1}-\\u{102FB}\\u{10300}-\\u{10323}\\u{1032D}-\\u{1034A}\\u{10350}-\\u{10375}\\u{10380}-\\u{1039D}\\u{1039F}-\\u{103C3}\\u{103C8}-\\u{103D5}\\u{10400}-\\u{1049D}\\u{104A0}-\\u{104A9}\\u{104B0}-\\u{104D3}\\u{104D8}-\\u{104FB}\\u{10500}-\\u{10527}\\u{10530}-\\u{10563}\\u{1056F}-\\u{1057A}\\u{1057C}-\\u{1058A}\\u{1058C}-\\u{10592}\\u{10594}\\u{10595}\\u{10597}-\\u{105A1}\\u{105A3}-\\u{105B1}\\u{105B3}-\\u{105B9}\\u{105BB}\\u{105BC}\\u{10600}-\\u{10736}\\u{10740}-\\u{10755}\\u{10760}-\\u{10767}\\u{10780}-\\u{10785}\\u{10787}-\\u{107B0}\\u{107B2}-\\u{107BA}\\u{11000}\\u{11002}-\\u{11037}\\u{11047}-\\u{1104D}\\u{11066}-\\u{1106F}\\u{11071}\\u{11072}\\u{11075}\\u{11082}-\\u{110B2}\\u{110B7}\\u{110B8}\\u{110BB}-\\u{110C1}\\u{110CD}\\u{110D0}-\\u{110E8}\\u{110F0}-\\u{110F9}\\u{11103}-\\u{11126}\\u{1112C}\\u{11136}-\\u{11147}\\u{11150}-\\u{11172}\\u{11174}-\\u{11176}\\u{11182}-\\u{111B5}\\u{111BF}-\\u{111C8}\\u{111CD}\\u{111CE}\\u{111D0}-\\u{111DF}\\u{111E1}-\\u{111F4}\\u{11200}-\\u{11211}\\u{11213}-\\u{1122E}\\u{11232}\\u{11233}\\u{11235}\\u{11238}-\\u{1123D}\\u{1123F}\\u{11240}\\u{11280}-\\u{11286}\\u{11288}\\u{1128A}-\\u{1128D}\\u{1128F}-\\u{1129D}\\u{1129F}-\\u{112A9}\\u{112B0}-\\u{112DE}\\u{112E0}-\\u{112E2}\\u{112F0}-\\u{112F9}\\u{11302}\\u{11303}\\u{11305}-\\u{1130C}\\u{1130F}\\u{11310}\\u{11313}-\\u{11328}\\u{1132A}-\\u{11330}\\u{11332}\\u{11333}\\u{11335}-\\u{11339}\\u{1133D}-\\u{1133F}\\u{11341}-\\u{11344}\\u{11347}\\u{11348}\\u{1134B}-\\u{1134D}\\u{11350}\\u{11357}\\u{1135D}-\\u{11363}\\u{11400}-\\u{11437}\\u{11440}\\u{11441}\\u{11445}\\u{11447}-\\u{1145B}\\u{1145D}\\u{1145F}-\\u{11461}\\u{11480}-\\u{114B2}\\u{114B9}\\u{114BB}-\\u{114BE}\\u{114C1}\\u{114C4}-\\u{114C7}\\u{114D0}-\\u{114D9}\\u{11580}-\\u{115B1}\\u{115B8}-\\u{115BB}\\u{115BE}\\u{115C1}-\\u{115DB}\\u{11600}-\\u{11632}\\u{1163B}\\u{1163C}\\u{1163E}\\u{11641}-\\u{11644}\\u{11650}-\\u{11659}\\u{11680}-\\u{116AA}\\u{116AC}\\u{116AE}\\u{116AF}\\u{116B6}\\u{116B8}\\u{116B9}\\u{116C0}-\\u{116C9}\\u{11700}-\\u{1171A}\\u{11720}\\u{11721}\\u{11726}\\u{11730}-\\u{11746}\\u{11800}-\\u{1182E}\\u{11838}\\u{1183B}\\u{118A0}-\\u{118F2}\\u{118FF}-\\u{11906}\\u{11909}\\u{1190C}-\\u{11913}\\u{11915}\\u{11916}\\u{11918}-\\u{11935}\\u{11937}\\u{11938}\\u{1193D}\\u{1193F}-\\u{11942}\\u{11944}-\\u{11946}\\u{11950}-\\u{11959}\\u{119A0}-\\u{119A7}\\u{119AA}-\\u{119D3}\\u{119DC}-\\u{119DF}\\u{119E1}-\\u{119E4}\\u{11A00}\\u{11A07}\\u{11A08}\\u{11A0B}-\\u{11A32}\\u{11A39}\\u{11A3A}\\u{11A3F}-\\u{11A46}\\u{11A50}\\u{11A57}\\u{11A58}\\u{11A5C}-\\u{11A89}\\u{11A97}\\u{11A9A}-\\u{11AA2}\\u{11AB0}-\\u{11AF8}\\u{11B00}-\\u{11B09}\\u{11C00}-\\u{11C08}\\u{11C0A}-\\u{11C2F}\\u{11C3E}-\\u{11C45}\\u{11C50}-\\u{11C6C}\\u{11C70}-\\u{11C8F}\\u{11CA9}\\u{11CB1}\\u{11CB4}\\u{11D00}-\\u{11D06}\\u{11D08}\\u{11D09}\\u{11D0B}-\\u{11D30}\\u{11D46}\\u{11D50}-\\u{11D59}\\u{11D60}-\\u{11D65}\\u{11D67}\\u{11D68}\\u{11D6A}-\\u{11D8E}\\u{11D93}\\u{11D94}\\u{11D96}\\u{11D98}\\u{11DA0}-\\u{11DA9}\\u{11EE0}-\\u{11EF2}\\u{11EF5}-\\u{11EF8}\\u{11F02}-\\u{11F10}\\u{11F12}-\\u{11F35}\\u{11F3E}\\u{11F3F}\\u{11F41}\\u{11F43}-\\u{11F59}\\u{11FB0}\\u{11FC0}-\\u{11FD4}\\u{11FFF}-\\u{12399}\\u{12400}-\\u{1246E}\\u{12470}-\\u{12474}\\u{12480}-\\u{12543}\\u{12F90}-\\u{12FF2}\\u{13000}-\\u{1343F}\\u{13441}-\\u{13446}\\u{14400}-\\u{14646}\\u{16800}-\\u{16A38}\\u{16A40}-\\u{16A5E}\\u{16A60}-\\u{16A69}\\u{16A6E}-\\u{16ABE}\\u{16AC0}-\\u{16AC9}\\u{16AD0}-\\u{16AED}\\u{16AF5}\\u{16B00}-\\u{16B2F}\\u{16B37}-\\u{16B45}\\u{16B50}-\\u{16B59}\\u{16B5B}-\\u{16B61}\\u{16B63}-\\u{16B77}\\u{16B7D}-\\u{16B8F}\\u{16E40}-\\u{16E9A}\\u{16F00}-\\u{16F4A}\\u{16F50}-\\u{16F87}\\u{16F93}-\\u{16F9F}\\u{16FE0}\\u{16FE1}\\u{16FE3}\\u{16FF0}\\u{16FF1}\\u{17000}-\\u{187F7}\\u{18800}-\\u{18CD5}\\u{18D00}-\\u{18D08}\\u{1AFF0}-\\u{1AFF3}\\u{1AFF5}-\\u{1AFFB}\\u{1AFFD}\\u{1AFFE}\\u{1B000}-\\u{1B122}\\u{1B132}\\u{1B150}-\\u{1B152}\\u{1B155}\\u{1B164}-\\u{1B167}\\u{1B170}-\\u{1B2FB}\\u{1BC00}-\\u{1BC6A}\\u{1BC70}-\\u{1BC7C}\\u{1BC80}-\\u{1BC88}\\u{1BC90}-\\u{1BC99}\\u{1BC9C}\\u{1BC9F}\\u{1CF50}-\\u{1CFC3}\\u{1D000}-\\u{1D0F5}\\u{1D100}-\\u{1D126}\\u{1D129}-\\u{1D166}\\u{1D16A}-\\u{1D172}\\u{1D183}\\u{1D184}\\u{1D18C}-\\u{1D1A9}\\u{1D1AE}-\\u{1D1E8}\\u{1D2C0}-\\u{1D2D3}\\u{1D2E0}-\\u{1D2F3}\\u{1D360}-\\u{1D378}\\u{1D400}-\\u{1D454}\\u{1D456}-\\u{1D49C}\\u{1D49E}\\u{1D49F}\\u{1D4A2}\\u{1D4A5}\\u{1D4A6}\\u{1D4A9}-\\u{1D4AC}\\u{1D4AE}-\\u{1D4B9}\\u{1D4BB}\\u{1D4BD}-\\u{1D4C3}\\u{1D4C5}-\\u{1D505}\\u{1D507}-\\u{1D50A}\\u{1D50D}-\\u{1D514}\\u{1D516}-\\u{1D51C}\\u{1D51E}-\\u{1D539}\\u{1D53B}-\\u{1D53E}\\u{1D540}-\\u{1D544}\\u{1D546}\\u{1D54A}-\\u{1D550}\\u{1D552}-\\u{1D6A5}\\u{1D6A8}-\\u{1D6DA}\\u{1D6DC}-\\u{1D714}\\u{1D716}-\\u{1D74E}\\u{1D750}-\\u{1D788}\\u{1D78A}-\\u{1D7C2}\\u{1D7C4}-\\u{1D7CB}\\u{1D7CE}-\\u{1D9FF}\\u{1DA37}-\\u{1DA3A}\\u{1DA6D}-\\u{1DA74}\\u{1DA76}-\\u{1DA83}\\u{1DA85}-\\u{1DA8B}\\u{1DF00}-\\u{1DF1E}\\u{1DF25}-\\u{1DF2A}\\u{1E030}-\\u{1E06D}\\u{1E100}-\\u{1E12C}\\u{1E137}-\\u{1E13D}\\u{1E140}-\\u{1E149}\\u{1E14E}\\u{1E14F}\\u{1E290}-\\u{1E2AD}\\u{1E2C0}-\\u{1E2EB}\\u{1E2F0}-\\u{1E2F9}\\u{1E4D0}-\\u{1E4EB}\\u{1E4F0}-\\u{1E4F9}\\u{1E7E0}-\\u{1E7E6}\\u{1E7E8}-\\u{1E7EB}\\u{1E7ED}\\u{1E7EE}\\u{1E7F0}-\\u{1E7FE}\\u{1F100}-\\u{1F10A}\\u{1F110}-\\u{1F12E}\\u{1F130}-\\u{1F169}\\u{1F170}-\\u{1F1AC}\\u{1F1E6}-\\u{1F202}\\u{1F210}-\\u{1F23B}\\u{1F240}-\\u{1F248}\\u{1F250}\\u{1F251}\\u{1FBF0}-\\u{1FBF9}\\u{20000}-\\u{2A6DF}\\u{2A700}-\\u{2B739}\\u{2B740}-\\u{2B81D}\\u{2B820}-\\u{2CEA1}\\u{2CEB0}-\\u{2EBE0}\\u{2F800}-\\u{2FA1D}\\u{30000}-\\u{3134A}\\u{31350}-\\u{323AF}\\u{F0000}-\\u{FFFFD}\\u{100000}-\\u{10FFFD}][\\u0300-\\u036F\\u0483-\\u0489\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u0610-\\u061A\\u064B-\\u065F\\u0670\\u06D6-\\u06DC\\u06DF-\\u06E4\\u06E7\\u06E8\\u06EA-\\u06ED\\u0711\\u0730-\\u074A\\u07A6-\\u07B0\\u07EB-\\u07F3\\u07FD\\u0816-\\u0819\\u081B-\\u0823\\u0825-\\u0827\\u0829-\\u082D\\u0859-\\u085B\\u0898-\\u089F\\u08CA-\\u08E1\\u08E3-\\u0902\\u093A\\u093C\\u0941-\\u0948\\u094D\\u0951-\\u0957\\u0962\\u0963\\u0981\\u09BC\\u09C1-\\u09C4\\u09CD\\u09E2\\u09E3\\u09FE\\u0A01\\u0A02\\u0A3C\\u0A41\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A70\\u0A71\\u0A75\\u0A81\\u0A82\\u0ABC\\u0AC1-\\u0AC5\\u0AC7\\u0AC8\\u0ACD\\u0AE2\\u0AE3\\u0AFA-\\u0AFF\\u0B01\\u0B3C\\u0B3F\\u0B41-\\u0B44\\u0B4D\\u0B55\\u0B56\\u0B62\\u0B63\\u0B82\\u0BC0\\u0BCD\\u0C00\\u0C04\\u0C3C\\u0C3E-\\u0C40\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C62\\u0C63\\u0C81\\u0CBC\\u0CCC\\u0CCD\\u0CE2\\u0CE3\\u0D00\\u0D01\\u0D3B\\u0D3C\\u0D41-\\u0D44\\u0D4D\\u0D62\\u0D63\\u0D81\\u0DCA\\u0DD2-\\u0DD4\\u0DD6\\u0E31\\u0E34-\\u0E3A\\u0E47-\\u0E4E\\u0EB1\\u0EB4-\\u0EBC\\u0EC8-\\u0ECE\\u0F18\\u0F19\\u0F35\\u0F37\\u0F39\\u0F71-\\u0F7E\\u0F80-\\u0F84\\u0F86\\u0F87\\u0F8D-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u102D-\\u1030\\u1032-\\u1037\\u1039\\u103A\\u103D\\u103E\\u1058\\u1059\\u105E-\\u1060\\u1071-\\u1074\\u1082\\u1085\\u1086\\u108D\\u109D\\u135D-\\u135F\\u1712-\\u1714\\u1732\\u1733\\u1752\\u1753\\u1772\\u1773\\u17B4\\u17B5\\u17B7-\\u17BD\\u17C6\\u17C9-\\u17D3\\u17DD\\u180B-\\u180D\\u180F\\u1885\\u1886\\u18A9\\u1920-\\u1922\\u1927\\u1928\\u1932\\u1939-\\u193B\\u1A17\\u1A18\\u1A1B\\u1A56\\u1A58-\\u1A5E\\u1A60\\u1A62\\u1A65-\\u1A6C\\u1A73-\\u1A7C\\u1A7F\\u1AB0-\\u1ACE\\u1B00-\\u1B03\\u1B34\\u1B36-\\u1B3A\\u1B3C\\u1B42\\u1B6B-\\u1B73\\u1B80\\u1B81\\u1BA2-\\u1BA5\\u1BA8\\u1BA9\\u1BAB-\\u1BAD\\u1BE6\\u1BE8\\u1BE9\\u1BED\\u1BEF-\\u1BF1\\u1C2C-\\u1C33\\u1C36\\u1C37\\u1CD0-\\u1CD2\\u1CD4-\\u1CE0\\u1CE2-\\u1CE8\\u1CED\\u1CF4\\u1CF8\\u1CF9\\u1DC0-\\u1DFF\\u20D0-\\u20F0\\u2CEF-\\u2CF1\\u2D7F\\u2DE0-\\u2DFF\\u302A-\\u302D\\u3099\\u309A\\uA66F-\\uA672\\uA674-\\uA67D\\uA69E\\uA69F\\uA6F0\\uA6F1\\uA802\\uA806\\uA80B\\uA825\\uA826\\uA82C\\uA8C4\\uA8C5\\uA8E0-\\uA8F1\\uA8FF\\uA926-\\uA92D\\uA947-\\uA951\\uA980-\\uA982\\uA9B3\\uA9B6-\\uA9B9\\uA9BC\\uA9BD\\uA9E5\\uAA29-\\uAA2E\\uAA31\\uAA32\\uAA35\\uAA36\\uAA43\\uAA4C\\uAA7C\\uAAB0\\uAAB2-\\uAAB4\\uAAB7\\uAAB8\\uAABE\\uAABF\\uAAC1\\uAAEC\\uAAED\\uAAF6\\uABE5\\uABE8\\uABED\\uFB1E\\uFE00-\\uFE0F\\uFE20-\\uFE2F\\u{101FD}\\u{102E0}\\u{10376}-\\u{1037A}\\u{10A01}-\\u{10A03}\\u{10A05}\\u{10A06}\\u{10A0C}-\\u{10A0F}\\u{10A38}-\\u{10A3A}\\u{10A3F}\\u{10AE5}\\u{10AE6}\\u{10D24}-\\u{10D27}\\u{10EAB}\\u{10EAC}\\u{10EFD}-\\u{10EFF}\\u{10F46}-\\u{10F50}\\u{10F82}-\\u{10F85}\\u{11001}\\u{11038}-\\u{11046}\\u{11070}\\u{11073}\\u{11074}\\u{1107F}-\\u{11081}\\u{110B3}-\\u{110B6}\\u{110B9}\\u{110BA}\\u{110C2}\\u{11100}-\\u{11102}\\u{11127}-\\u{1112B}\\u{1112D}-\\u{11134}\\u{11173}\\u{11180}\\u{11181}\\u{111B6}-\\u{111BE}\\u{111C9}-\\u{111CC}\\u{111CF}\\u{1122F}-\\u{11231}\\u{11234}\\u{11236}\\u{11237}\\u{1123E}\\u{11241}\\u{112DF}\\u{112E3}-\\u{112EA}\\u{11300}\\u{11301}\\u{1133B}\\u{1133C}\\u{11340}\\u{11366}-\\u{1136C}\\u{11370}-\\u{11374}\\u{11438}-\\u{1143F}\\u{11442}-\\u{11444}\\u{11446}\\u{1145E}\\u{114B3}-\\u{114B8}\\u{114BA}\\u{114BF}\\u{114C0}\\u{114C2}\\u{114C3}\\u{115B2}-\\u{115B5}\\u{115BC}\\u{115BD}\\u{115BF}\\u{115C0}\\u{115DC}\\u{115DD}\\u{11633}-\\u{1163A}\\u{1163D}\\u{1163F}\\u{11640}\\u{116AB}\\u{116AD}\\u{116B0}-\\u{116B5}\\u{116B7}\\u{1171D}-\\u{1171F}\\u{11722}-\\u{11725}\\u{11727}-\\u{1172B}\\u{1182F}-\\u{11837}\\u{11839}\\u{1183A}\\u{1193B}\\u{1193C}\\u{1193E}\\u{11943}\\u{119D4}-\\u{119D7}\\u{119DA}\\u{119DB}\\u{119E0}\\u{11A01}-\\u{11A06}\\u{11A09}\\u{11A0A}\\u{11A33}-\\u{11A38}\\u{11A3B}-\\u{11A3E}\\u{11A47}\\u{11A51}-\\u{11A56}\\u{11A59}-\\u{11A5B}\\u{11A8A}-\\u{11A96}\\u{11A98}\\u{11A99}\\u{11C30}-\\u{11C36}\\u{11C38}-\\u{11C3D}\\u{11C92}-\\u{11CA7}\\u{11CAA}-\\u{11CB0}\\u{11CB2}\\u{11CB3}\\u{11CB5}\\u{11CB6}\\u{11D31}-\\u{11D36}\\u{11D3A}\\u{11D3C}\\u{11D3D}\\u{11D3F}-\\u{11D45}\\u{11D47}\\u{11D90}\\u{11D91}\\u{11D95}\\u{11D97}\\u{11EF3}\\u{11EF4}\\u{11F00}\\u{11F01}\\u{11F36}-\\u{11F3A}\\u{11F40}\\u{11F42}\\u{13440}\\u{13447}-\\u{13455}\\u{16AF0}-\\u{16AF4}\\u{16B30}-\\u{16B36}\\u{16F4F}\\u{16F8F}-\\u{16F92}\\u{16FE4}\\u{1BC9D}\\u{1BC9E}\\u{1CF00}-\\u{1CF2D}\\u{1CF30}-\\u{1CF46}\\u{1D167}-\\u{1D169}\\u{1D17B}-\\u{1D182}\\u{1D185}-\\u{1D18B}\\u{1D1AA}-\\u{1D1AD}\\u{1D242}-\\u{1D244}\\u{1DA00}-\\u{1DA36}\\u{1DA3B}-\\u{1DA6C}\\u{1DA75}\\u{1DA84}\\u{1DA9B}-\\u{1DA9F}\\u{1DAA1}-\\u{1DAAF}\\u{1E000}-\\u{1E006}\\u{1E008}-\\u{1E018}\\u{1E01B}-\\u{1E021}\\u{1E023}\\u{1E024}\\u{1E026}-\\u{1E02A}\\u{1E08F}\\u{1E130}-\\u{1E136}\\u{1E2AE}\\u{1E2EC}-\\u{1E2EF}\\u{1E4EC}-\\u{1E4EF}\\u{1E8D0}-\\u{1E8D6}\\u{1E944}-\\u{1E94A}\\u{E0100}-\\u{E01EF}]*$/u;\n\nmodule.exports = {\n  combiningMarks,\n  combiningClassVirama,\n  validZWNJ,\n  bidiDomain,\n  bidiS1LTR,\n  bidiS1RTL,\n  bidiS2,\n  bidiS3,\n  bidiS4EN,\n  bidiS4AN,\n  bidiS5,\n  bidiS6\n};\n","[[[0,44],4],[[45,46],2],[47,4],[[48,57],2],[[58,64],4],[65,1,\"a\"],[66,1,\"b\"],[67,1,\"c\"],[68,1,\"d\"],[69,1,\"e\"],[70,1,\"f\"],[71,1,\"g\"],[72,1,\"h\"],[73,1,\"i\"],[74,1,\"j\"],[75,1,\"k\"],[76,1,\"l\"],[77,1,\"m\"],[78,1,\"n\"],[79,1,\"o\"],[80,1,\"p\"],[81,1,\"q\"],[82,1,\"r\"],[83,1,\"s\"],[84,1,\"t\"],[85,1,\"u\"],[86,1,\"v\"],[87,1,\"w\"],[88,1,\"x\"],[89,1,\"y\"],[90,1,\"z\"],[[91,96],4],[[97,122],2],[[123,127],4],[[128,159],3],[160,5,\" \"],[[161,167],2],[168,5,\" ̈\"],[169,2],[170,1,\"a\"],[[171,172],2],[173,7],[174,2],[175,5,\" ̄\"],[[176,177],2],[178,1,\"2\"],[179,1,\"3\"],[180,5,\" ́\"],[181,1,\"μ\"],[182,2],[183,2],[184,5,\" ̧\"],[185,1,\"1\"],[186,1,\"o\"],[187,2],[188,1,\"1⁄4\"],[189,1,\"1⁄2\"],[190,1,\"3⁄4\"],[191,2],[192,1,\"à\"],[193,1,\"á\"],[194,1,\"â\"],[195,1,\"ã\"],[196,1,\"ä\"],[197,1,\"å\"],[198,1,\"æ\"],[199,1,\"ç\"],[200,1,\"è\"],[201,1,\"é\"],[202,1,\"ê\"],[203,1,\"ë\"],[204,1,\"ì\"],[205,1,\"í\"],[206,1,\"î\"],[207,1,\"ï\"],[208,1,\"ð\"],[209,1,\"ñ\"],[210,1,\"ò\"],[211,1,\"ó\"],[212,1,\"ô\"],[213,1,\"õ\"],[214,1,\"ö\"],[215,2],[216,1,\"ø\"],[217,1,\"ù\"],[218,1,\"ú\"],[219,1,\"û\"],[220,1,\"ü\"],[221,1,\"ý\"],[222,1,\"þ\"],[223,6,\"ss\"],[[224,246],2],[247,2],[[248,255],2],[256,1,\"ā\"],[257,2],[258,1,\"ă\"],[259,2],[260,1,\"ą\"],[261,2],[262,1,\"ć\"],[263,2],[264,1,\"ĉ\"],[265,2],[266,1,\"ċ\"],[267,2],[268,1,\"č\"],[269,2],[270,1,\"ď\"],[271,2],[272,1,\"đ\"],[273,2],[274,1,\"ē\"],[275,2],[276,1,\"ĕ\"],[277,2],[278,1,\"ė\"],[279,2],[280,1,\"ę\"],[281,2],[282,1,\"ě\"],[283,2],[284,1,\"ĝ\"],[285,2],[286,1,\"ğ\"],[287,2],[288,1,\"ġ\"],[289,2],[290,1,\"ģ\"],[291,2],[292,1,\"ĥ\"],[293,2],[294,1,\"ħ\"],[295,2],[296,1,\"ĩ\"],[297,2],[298,1,\"ī\"],[299,2],[300,1,\"ĭ\"],[301,2],[302,1,\"į\"],[303,2],[304,1,\"i̇\"],[305,2],[[306,307],1,\"ij\"],[308,1,\"ĵ\"],[309,2],[310,1,\"ķ\"],[[311,312],2],[313,1,\"ĺ\"],[314,2],[315,1,\"ļ\"],[316,2],[317,1,\"ľ\"],[318,2],[[319,320],1,\"l·\"],[321,1,\"ł\"],[322,2],[323,1,\"ń\"],[324,2],[325,1,\"ņ\"],[326,2],[327,1,\"ň\"],[328,2],[329,1,\"ʼn\"],[330,1,\"ŋ\"],[331,2],[332,1,\"ō\"],[333,2],[334,1,\"ŏ\"],[335,2],[336,1,\"ő\"],[337,2],[338,1,\"œ\"],[339,2],[340,1,\"ŕ\"],[341,2],[342,1,\"ŗ\"],[343,2],[344,1,\"ř\"],[345,2],[346,1,\"ś\"],[347,2],[348,1,\"ŝ\"],[349,2],[350,1,\"ş\"],[351,2],[352,1,\"š\"],[353,2],[354,1,\"ţ\"],[355,2],[356,1,\"ť\"],[357,2],[358,1,\"ŧ\"],[359,2],[360,1,\"ũ\"],[361,2],[362,1,\"ū\"],[363,2],[364,1,\"ŭ\"],[365,2],[366,1,\"ů\"],[367,2],[368,1,\"ű\"],[369,2],[370,1,\"ų\"],[371,2],[372,1,\"ŵ\"],[373,2],[374,1,\"ŷ\"],[375,2],[376,1,\"ÿ\"],[377,1,\"ź\"],[378,2],[379,1,\"ż\"],[380,2],[381,1,\"ž\"],[382,2],[383,1,\"s\"],[384,2],[385,1,\"ɓ\"],[386,1,\"ƃ\"],[387,2],[388,1,\"ƅ\"],[389,2],[390,1,\"ɔ\"],[391,1,\"ƈ\"],[392,2],[393,1,\"ɖ\"],[394,1,\"ɗ\"],[395,1,\"ƌ\"],[[396,397],2],[398,1,\"ǝ\"],[399,1,\"ə\"],[400,1,\"ɛ\"],[401,1,\"ƒ\"],[402,2],[403,1,\"ɠ\"],[404,1,\"ɣ\"],[405,2],[406,1,\"ɩ\"],[407,1,\"ɨ\"],[408,1,\"ƙ\"],[[409,411],2],[412,1,\"ɯ\"],[413,1,\"ɲ\"],[414,2],[415,1,\"ɵ\"],[416,1,\"ơ\"],[417,2],[418,1,\"ƣ\"],[419,2],[420,1,\"ƥ\"],[421,2],[422,1,\"ʀ\"],[423,1,\"ƨ\"],[424,2],[425,1,\"ʃ\"],[[426,427],2],[428,1,\"ƭ\"],[429,2],[430,1,\"ʈ\"],[431,1,\"ư\"],[432,2],[433,1,\"ʊ\"],[434,1,\"ʋ\"],[435,1,\"ƴ\"],[436,2],[437,1,\"ƶ\"],[438,2],[439,1,\"ʒ\"],[440,1,\"ƹ\"],[[441,443],2],[444,1,\"ƽ\"],[[445,451],2],[[452,454],1,\"dž\"],[[455,457],1,\"lj\"],[[458,460],1,\"nj\"],[461,1,\"ǎ\"],[462,2],[463,1,\"ǐ\"],[464,2],[465,1,\"ǒ\"],[466,2],[467,1,\"ǔ\"],[468,2],[469,1,\"ǖ\"],[470,2],[471,1,\"ǘ\"],[472,2],[473,1,\"ǚ\"],[474,2],[475,1,\"ǜ\"],[[476,477],2],[478,1,\"ǟ\"],[479,2],[480,1,\"ǡ\"],[481,2],[482,1,\"ǣ\"],[483,2],[484,1,\"ǥ\"],[485,2],[486,1,\"ǧ\"],[487,2],[488,1,\"ǩ\"],[489,2],[490,1,\"ǫ\"],[491,2],[492,1,\"ǭ\"],[493,2],[494,1,\"ǯ\"],[[495,496],2],[[497,499],1,\"dz\"],[500,1,\"ǵ\"],[501,2],[502,1,\"ƕ\"],[503,1,\"ƿ\"],[504,1,\"ǹ\"],[505,2],[506,1,\"ǻ\"],[507,2],[508,1,\"ǽ\"],[509,2],[510,1,\"ǿ\"],[511,2],[512,1,\"ȁ\"],[513,2],[514,1,\"ȃ\"],[515,2],[516,1,\"ȅ\"],[517,2],[518,1,\"ȇ\"],[519,2],[520,1,\"ȉ\"],[521,2],[522,1,\"ȋ\"],[523,2],[524,1,\"ȍ\"],[525,2],[526,1,\"ȏ\"],[527,2],[528,1,\"ȑ\"],[529,2],[530,1,\"ȓ\"],[531,2],[532,1,\"ȕ\"],[533,2],[534,1,\"ȗ\"],[535,2],[536,1,\"ș\"],[537,2],[538,1,\"ț\"],[539,2],[540,1,\"ȝ\"],[541,2],[542,1,\"ȟ\"],[543,2],[544,1,\"ƞ\"],[545,2],[546,1,\"ȣ\"],[547,2],[548,1,\"ȥ\"],[549,2],[550,1,\"ȧ\"],[551,2],[552,1,\"ȩ\"],[553,2],[554,1,\"ȫ\"],[555,2],[556,1,\"ȭ\"],[557,2],[558,1,\"ȯ\"],[559,2],[560,1,\"ȱ\"],[561,2],[562,1,\"ȳ\"],[563,2],[[564,566],2],[[567,569],2],[570,1,\"ⱥ\"],[571,1,\"ȼ\"],[572,2],[573,1,\"ƚ\"],[574,1,\"ⱦ\"],[[575,576],2],[577,1,\"ɂ\"],[578,2],[579,1,\"ƀ\"],[580,1,\"ʉ\"],[581,1,\"ʌ\"],[582,1,\"ɇ\"],[583,2],[584,1,\"ɉ\"],[585,2],[586,1,\"ɋ\"],[587,2],[588,1,\"ɍ\"],[589,2],[590,1,\"ɏ\"],[591,2],[[592,680],2],[[681,685],2],[[686,687],2],[688,1,\"h\"],[689,1,\"ɦ\"],[690,1,\"j\"],[691,1,\"r\"],[692,1,\"ɹ\"],[693,1,\"ɻ\"],[694,1,\"ʁ\"],[695,1,\"w\"],[696,1,\"y\"],[[697,705],2],[[706,709],2],[[710,721],2],[[722,727],2],[728,5,\" ̆\"],[729,5,\" ̇\"],[730,5,\" ̊\"],[731,5,\" ̨\"],[732,5,\" ̃\"],[733,5,\" ̋\"],[734,2],[735,2],[736,1,\"ɣ\"],[737,1,\"l\"],[738,1,\"s\"],[739,1,\"x\"],[740,1,\"ʕ\"],[[741,745],2],[[746,747],2],[748,2],[749,2],[750,2],[[751,767],2],[[768,831],2],[832,1,\"̀\"],[833,1,\"́\"],[834,2],[835,1,\"̓\"],[836,1,\"̈́\"],[837,1,\"ι\"],[[838,846],2],[847,7],[[848,855],2],[[856,860],2],[[861,863],2],[[864,865],2],[866,2],[[867,879],2],[880,1,\"ͱ\"],[881,2],[882,1,\"ͳ\"],[883,2],[884,1,\"ʹ\"],[885,2],[886,1,\"ͷ\"],[887,2],[[888,889],3],[890,5,\" ι\"],[[891,893],2],[894,5,\";\"],[895,1,\"ϳ\"],[[896,899],3],[900,5,\" ́\"],[901,5,\" ̈́\"],[902,1,\"ά\"],[903,1,\"·\"],[904,1,\"έ\"],[905,1,\"ή\"],[906,1,\"ί\"],[907,3],[908,1,\"ό\"],[909,3],[910,1,\"ύ\"],[911,1,\"ώ\"],[912,2],[913,1,\"α\"],[914,1,\"β\"],[915,1,\"γ\"],[916,1,\"δ\"],[917,1,\"ε\"],[918,1,\"ζ\"],[919,1,\"η\"],[920,1,\"θ\"],[921,1,\"ι\"],[922,1,\"κ\"],[923,1,\"λ\"],[924,1,\"μ\"],[925,1,\"ν\"],[926,1,\"ξ\"],[927,1,\"ο\"],[928,1,\"π\"],[929,1,\"ρ\"],[930,3],[931,1,\"σ\"],[932,1,\"τ\"],[933,1,\"υ\"],[934,1,\"φ\"],[935,1,\"χ\"],[936,1,\"ψ\"],[937,1,\"ω\"],[938,1,\"ϊ\"],[939,1,\"ϋ\"],[[940,961],2],[962,6,\"σ\"],[[963,974],2],[975,1,\"ϗ\"],[976,1,\"β\"],[977,1,\"θ\"],[978,1,\"υ\"],[979,1,\"ύ\"],[980,1,\"ϋ\"],[981,1,\"φ\"],[982,1,\"π\"],[983,2],[984,1,\"ϙ\"],[985,2],[986,1,\"ϛ\"],[987,2],[988,1,\"ϝ\"],[989,2],[990,1,\"ϟ\"],[991,2],[992,1,\"ϡ\"],[993,2],[994,1,\"ϣ\"],[995,2],[996,1,\"ϥ\"],[997,2],[998,1,\"ϧ\"],[999,2],[1000,1,\"ϩ\"],[1001,2],[1002,1,\"ϫ\"],[1003,2],[1004,1,\"ϭ\"],[1005,2],[1006,1,\"ϯ\"],[1007,2],[1008,1,\"κ\"],[1009,1,\"ρ\"],[1010,1,\"σ\"],[1011,2],[1012,1,\"θ\"],[1013,1,\"ε\"],[1014,2],[1015,1,\"ϸ\"],[1016,2],[1017,1,\"σ\"],[1018,1,\"ϻ\"],[1019,2],[1020,2],[1021,1,\"ͻ\"],[1022,1,\"ͼ\"],[1023,1,\"ͽ\"],[1024,1,\"ѐ\"],[1025,1,\"ё\"],[1026,1,\"ђ\"],[1027,1,\"ѓ\"],[1028,1,\"є\"],[1029,1,\"ѕ\"],[1030,1,\"і\"],[1031,1,\"ї\"],[1032,1,\"ј\"],[1033,1,\"љ\"],[1034,1,\"њ\"],[1035,1,\"ћ\"],[1036,1,\"ќ\"],[1037,1,\"ѝ\"],[1038,1,\"ў\"],[1039,1,\"џ\"],[1040,1,\"а\"],[1041,1,\"б\"],[1042,1,\"в\"],[1043,1,\"г\"],[1044,1,\"д\"],[1045,1,\"е\"],[1046,1,\"ж\"],[1047,1,\"з\"],[1048,1,\"и\"],[1049,1,\"й\"],[1050,1,\"к\"],[1051,1,\"л\"],[1052,1,\"м\"],[1053,1,\"н\"],[1054,1,\"о\"],[1055,1,\"п\"],[1056,1,\"р\"],[1057,1,\"с\"],[1058,1,\"т\"],[1059,1,\"у\"],[1060,1,\"ф\"],[1061,1,\"х\"],[1062,1,\"ц\"],[1063,1,\"ч\"],[1064,1,\"ш\"],[1065,1,\"щ\"],[1066,1,\"ъ\"],[1067,1,\"ы\"],[1068,1,\"ь\"],[1069,1,\"э\"],[1070,1,\"ю\"],[1071,1,\"я\"],[[1072,1103],2],[1104,2],[[1105,1116],2],[1117,2],[[1118,1119],2],[1120,1,\"ѡ\"],[1121,2],[1122,1,\"ѣ\"],[1123,2],[1124,1,\"ѥ\"],[1125,2],[1126,1,\"ѧ\"],[1127,2],[1128,1,\"ѩ\"],[1129,2],[1130,1,\"ѫ\"],[1131,2],[1132,1,\"ѭ\"],[1133,2],[1134,1,\"ѯ\"],[1135,2],[1136,1,\"ѱ\"],[1137,2],[1138,1,\"ѳ\"],[1139,2],[1140,1,\"ѵ\"],[1141,2],[1142,1,\"ѷ\"],[1143,2],[1144,1,\"ѹ\"],[1145,2],[1146,1,\"ѻ\"],[1147,2],[1148,1,\"ѽ\"],[1149,2],[1150,1,\"ѿ\"],[1151,2],[1152,1,\"ҁ\"],[1153,2],[1154,2],[[1155,1158],2],[1159,2],[[1160,1161],2],[1162,1,\"ҋ\"],[1163,2],[1164,1,\"ҍ\"],[1165,2],[1166,1,\"ҏ\"],[1167,2],[1168,1,\"ґ\"],[1169,2],[1170,1,\"ғ\"],[1171,2],[1172,1,\"ҕ\"],[1173,2],[1174,1,\"җ\"],[1175,2],[1176,1,\"ҙ\"],[1177,2],[1178,1,\"қ\"],[1179,2],[1180,1,\"ҝ\"],[1181,2],[1182,1,\"ҟ\"],[1183,2],[1184,1,\"ҡ\"],[1185,2],[1186,1,\"ң\"],[1187,2],[1188,1,\"ҥ\"],[1189,2],[1190,1,\"ҧ\"],[1191,2],[1192,1,\"ҩ\"],[1193,2],[1194,1,\"ҫ\"],[1195,2],[1196,1,\"ҭ\"],[1197,2],[1198,1,\"ү\"],[1199,2],[1200,1,\"ұ\"],[1201,2],[1202,1,\"ҳ\"],[1203,2],[1204,1,\"ҵ\"],[1205,2],[1206,1,\"ҷ\"],[1207,2],[1208,1,\"ҹ\"],[1209,2],[1210,1,\"һ\"],[1211,2],[1212,1,\"ҽ\"],[1213,2],[1214,1,\"ҿ\"],[1215,2],[1216,3],[1217,1,\"ӂ\"],[1218,2],[1219,1,\"ӄ\"],[1220,2],[1221,1,\"ӆ\"],[1222,2],[1223,1,\"ӈ\"],[1224,2],[1225,1,\"ӊ\"],[1226,2],[1227,1,\"ӌ\"],[1228,2],[1229,1,\"ӎ\"],[1230,2],[1231,2],[1232,1,\"ӑ\"],[1233,2],[1234,1,\"ӓ\"],[1235,2],[1236,1,\"ӕ\"],[1237,2],[1238,1,\"ӗ\"],[1239,2],[1240,1,\"ә\"],[1241,2],[1242,1,\"ӛ\"],[1243,2],[1244,1,\"ӝ\"],[1245,2],[1246,1,\"ӟ\"],[1247,2],[1248,1,\"ӡ\"],[1249,2],[1250,1,\"ӣ\"],[1251,2],[1252,1,\"ӥ\"],[1253,2],[1254,1,\"ӧ\"],[1255,2],[1256,1,\"ө\"],[1257,2],[1258,1,\"ӫ\"],[1259,2],[1260,1,\"ӭ\"],[1261,2],[1262,1,\"ӯ\"],[1263,2],[1264,1,\"ӱ\"],[1265,2],[1266,1,\"ӳ\"],[1267,2],[1268,1,\"ӵ\"],[1269,2],[1270,1,\"ӷ\"],[1271,2],[1272,1,\"ӹ\"],[1273,2],[1274,1,\"ӻ\"],[1275,2],[1276,1,\"ӽ\"],[1277,2],[1278,1,\"ӿ\"],[1279,2],[1280,1,\"ԁ\"],[1281,2],[1282,1,\"ԃ\"],[1283,2],[1284,1,\"ԅ\"],[1285,2],[1286,1,\"ԇ\"],[1287,2],[1288,1,\"ԉ\"],[1289,2],[1290,1,\"ԋ\"],[1291,2],[1292,1,\"ԍ\"],[1293,2],[1294,1,\"ԏ\"],[1295,2],[1296,1,\"ԑ\"],[1297,2],[1298,1,\"ԓ\"],[1299,2],[1300,1,\"ԕ\"],[1301,2],[1302,1,\"ԗ\"],[1303,2],[1304,1,\"ԙ\"],[1305,2],[1306,1,\"ԛ\"],[1307,2],[1308,1,\"ԝ\"],[1309,2],[1310,1,\"ԟ\"],[1311,2],[1312,1,\"ԡ\"],[1313,2],[1314,1,\"ԣ\"],[1315,2],[1316,1,\"ԥ\"],[1317,2],[1318,1,\"ԧ\"],[1319,2],[1320,1,\"ԩ\"],[1321,2],[1322,1,\"ԫ\"],[1323,2],[1324,1,\"ԭ\"],[1325,2],[1326,1,\"ԯ\"],[1327,2],[1328,3],[1329,1,\"ա\"],[1330,1,\"բ\"],[1331,1,\"գ\"],[1332,1,\"դ\"],[1333,1,\"ե\"],[1334,1,\"զ\"],[1335,1,\"է\"],[1336,1,\"ը\"],[1337,1,\"թ\"],[1338,1,\"ժ\"],[1339,1,\"ի\"],[1340,1,\"լ\"],[1341,1,\"խ\"],[1342,1,\"ծ\"],[1343,1,\"կ\"],[1344,1,\"հ\"],[1345,1,\"ձ\"],[1346,1,\"ղ\"],[1347,1,\"ճ\"],[1348,1,\"մ\"],[1349,1,\"յ\"],[1350,1,\"ն\"],[1351,1,\"շ\"],[1352,1,\"ո\"],[1353,1,\"չ\"],[1354,1,\"պ\"],[1355,1,\"ջ\"],[1356,1,\"ռ\"],[1357,1,\"ս\"],[1358,1,\"վ\"],[1359,1,\"տ\"],[1360,1,\"ր\"],[1361,1,\"ց\"],[1362,1,\"ւ\"],[1363,1,\"փ\"],[1364,1,\"ք\"],[1365,1,\"օ\"],[1366,1,\"ֆ\"],[[1367,1368],3],[1369,2],[[1370,1375],2],[1376,2],[[1377,1414],2],[1415,1,\"եւ\"],[1416,2],[1417,2],[1418,2],[[1419,1420],3],[[1421,1422],2],[1423,2],[1424,3],[[1425,1441],2],[1442,2],[[1443,1455],2],[[1456,1465],2],[1466,2],[[1467,1469],2],[1470,2],[1471,2],[1472,2],[[1473,1474],2],[1475,2],[1476,2],[1477,2],[1478,2],[1479,2],[[1480,1487],3],[[1488,1514],2],[[1515,1518],3],[1519,2],[[1520,1524],2],[[1525,1535],3],[[1536,1539],3],[1540,3],[1541,3],[[1542,1546],2],[1547,2],[1548,2],[[1549,1551],2],[[1552,1557],2],[[1558,1562],2],[1563,2],[1564,3],[1565,2],[1566,2],[1567,2],[1568,2],[[1569,1594],2],[[1595,1599],2],[1600,2],[[1601,1618],2],[[1619,1621],2],[[1622,1624],2],[[1625,1630],2],[1631,2],[[1632,1641],2],[[1642,1645],2],[[1646,1647],2],[[1648,1652],2],[1653,1,\"اٴ\"],[1654,1,\"وٴ\"],[1655,1,\"ۇٴ\"],[1656,1,\"يٴ\"],[[1657,1719],2],[[1720,1721],2],[[1722,1726],2],[1727,2],[[1728,1742],2],[1743,2],[[1744,1747],2],[1748,2],[[1749,1756],2],[1757,3],[1758,2],[[1759,1768],2],[1769,2],[[1770,1773],2],[[1774,1775],2],[[1776,1785],2],[[1786,1790],2],[1791,2],[[1792,1805],2],[1806,3],[1807,3],[[1808,1836],2],[[1837,1839],2],[[1840,1866],2],[[1867,1868],3],[[1869,1871],2],[[1872,1901],2],[[1902,1919],2],[[1920,1968],2],[1969,2],[[1970,1983],3],[[1984,2037],2],[[2038,2042],2],[[2043,2044],3],[2045,2],[[2046,2047],2],[[2048,2093],2],[[2094,2095],3],[[2096,2110],2],[2111,3],[[2112,2139],2],[[2140,2141],3],[2142,2],[2143,3],[[2144,2154],2],[[2155,2159],3],[[2160,2183],2],[2184,2],[[2185,2190],2],[2191,3],[[2192,2193],3],[[2194,2199],3],[[2200,2207],2],[2208,2],[2209,2],[[2210,2220],2],[[2221,2226],2],[[2227,2228],2],[2229,2],[[2230,2237],2],[[2238,2247],2],[[2248,2258],2],[2259,2],[[2260,2273],2],[2274,3],[2275,2],[[2276,2302],2],[2303,2],[2304,2],[[2305,2307],2],[2308,2],[[2309,2361],2],[[2362,2363],2],[[2364,2381],2],[2382,2],[2383,2],[[2384,2388],2],[2389,2],[[2390,2391],2],[2392,1,\"क़\"],[2393,1,\"ख़\"],[2394,1,\"ग़\"],[2395,1,\"ज़\"],[2396,1,\"ड़\"],[2397,1,\"ढ़\"],[2398,1,\"फ़\"],[2399,1,\"य़\"],[[2400,2403],2],[[2404,2405],2],[[2406,2415],2],[2416,2],[[2417,2418],2],[[2419,2423],2],[2424,2],[[2425,2426],2],[[2427,2428],2],[2429,2],[[2430,2431],2],[2432,2],[[2433,2435],2],[2436,3],[[2437,2444],2],[[2445,2446],3],[[2447,2448],2],[[2449,2450],3],[[2451,2472],2],[2473,3],[[2474,2480],2],[2481,3],[2482,2],[[2483,2485],3],[[2486,2489],2],[[2490,2491],3],[2492,2],[2493,2],[[2494,2500],2],[[2501,2502],3],[[2503,2504],2],[[2505,2506],3],[[2507,2509],2],[2510,2],[[2511,2518],3],[2519,2],[[2520,2523],3],[2524,1,\"ড়\"],[2525,1,\"ঢ়\"],[2526,3],[2527,1,\"য়\"],[[2528,2531],2],[[2532,2533],3],[[2534,2545],2],[[2546,2554],2],[2555,2],[2556,2],[2557,2],[2558,2],[[2559,2560],3],[2561,2],[2562,2],[2563,2],[2564,3],[[2565,2570],2],[[2571,2574],3],[[2575,2576],2],[[2577,2578],3],[[2579,2600],2],[2601,3],[[2602,2608],2],[2609,3],[2610,2],[2611,1,\"ਲ਼\"],[2612,3],[2613,2],[2614,1,\"ਸ਼\"],[2615,3],[[2616,2617],2],[[2618,2619],3],[2620,2],[2621,3],[[2622,2626],2],[[2627,2630],3],[[2631,2632],2],[[2633,2634],3],[[2635,2637],2],[[2638,2640],3],[2641,2],[[2642,2648],3],[2649,1,\"ਖ਼\"],[2650,1,\"ਗ਼\"],[2651,1,\"ਜ਼\"],[2652,2],[2653,3],[2654,1,\"ਫ਼\"],[[2655,2661],3],[[2662,2676],2],[2677,2],[2678,2],[[2679,2688],3],[[2689,2691],2],[2692,3],[[2693,2699],2],[2700,2],[2701,2],[2702,3],[[2703,2705],2],[2706,3],[[2707,2728],2],[2729,3],[[2730,2736],2],[2737,3],[[2738,2739],2],[2740,3],[[2741,2745],2],[[2746,2747],3],[[2748,2757],2],[2758,3],[[2759,2761],2],[2762,3],[[2763,2765],2],[[2766,2767],3],[2768,2],[[2769,2783],3],[2784,2],[[2785,2787],2],[[2788,2789],3],[[2790,2799],2],[2800,2],[2801,2],[[2802,2808],3],[2809,2],[[2810,2815],2],[2816,3],[[2817,2819],2],[2820,3],[[2821,2828],2],[[2829,2830],3],[[2831,2832],2],[[2833,2834],3],[[2835,2856],2],[2857,3],[[2858,2864],2],[2865,3],[[2866,2867],2],[2868,3],[2869,2],[[2870,2873],2],[[2874,2875],3],[[2876,2883],2],[2884,2],[[2885,2886],3],[[2887,2888],2],[[2889,2890],3],[[2891,2893],2],[[2894,2900],3],[2901,2],[[2902,2903],2],[[2904,2907],3],[2908,1,\"ଡ଼\"],[2909,1,\"ଢ଼\"],[2910,3],[[2911,2913],2],[[2914,2915],2],[[2916,2917],3],[[2918,2927],2],[2928,2],[2929,2],[[2930,2935],2],[[2936,2945],3],[[2946,2947],2],[2948,3],[[2949,2954],2],[[2955,2957],3],[[2958,2960],2],[2961,3],[[2962,2965],2],[[2966,2968],3],[[2969,2970],2],[2971,3],[2972,2],[2973,3],[[2974,2975],2],[[2976,2978],3],[[2979,2980],2],[[2981,2983],3],[[2984,2986],2],[[2987,2989],3],[[2990,2997],2],[2998,2],[[2999,3001],2],[[3002,3005],3],[[3006,3010],2],[[3011,3013],3],[[3014,3016],2],[3017,3],[[3018,3021],2],[[3022,3023],3],[3024,2],[[3025,3030],3],[3031,2],[[3032,3045],3],[3046,2],[[3047,3055],2],[[3056,3058],2],[[3059,3066],2],[[3067,3071],3],[3072,2],[[3073,3075],2],[3076,2],[[3077,3084],2],[3085,3],[[3086,3088],2],[3089,3],[[3090,3112],2],[3113,3],[[3114,3123],2],[3124,2],[[3125,3129],2],[[3130,3131],3],[3132,2],[3133,2],[[3134,3140],2],[3141,3],[[3142,3144],2],[3145,3],[[3146,3149],2],[[3150,3156],3],[[3157,3158],2],[3159,3],[[3160,3161],2],[3162,2],[[3163,3164],3],[3165,2],[[3166,3167],3],[[3168,3169],2],[[3170,3171],2],[[3172,3173],3],[[3174,3183],2],[[3184,3190],3],[3191,2],[[3192,3199],2],[3200,2],[3201,2],[[3202,3203],2],[3204,2],[[3205,3212],2],[3213,3],[[3214,3216],2],[3217,3],[[3218,3240],2],[3241,3],[[3242,3251],2],[3252,3],[[3253,3257],2],[[3258,3259],3],[[3260,3261],2],[[3262,3268],2],[3269,3],[[3270,3272],2],[3273,3],[[3274,3277],2],[[3278,3284],3],[[3285,3286],2],[[3287,3292],3],[3293,2],[3294,2],[3295,3],[[3296,3297],2],[[3298,3299],2],[[3300,3301],3],[[3302,3311],2],[3312,3],[[3313,3314],2],[3315,2],[[3316,3327],3],[3328,2],[3329,2],[[3330,3331],2],[3332,2],[[3333,3340],2],[3341,3],[[3342,3344],2],[3345,3],[[3346,3368],2],[3369,2],[[3370,3385],2],[3386,2],[[3387,3388],2],[3389,2],[[3390,3395],2],[3396,2],[3397,3],[[3398,3400],2],[3401,3],[[3402,3405],2],[3406,2],[3407,2],[[3408,3411],3],[[3412,3414],2],[3415,2],[[3416,3422],2],[3423,2],[[3424,3425],2],[[3426,3427],2],[[3428,3429],3],[[3430,3439],2],[[3440,3445],2],[[3446,3448],2],[3449,2],[[3450,3455],2],[3456,3],[3457,2],[[3458,3459],2],[3460,3],[[3461,3478],2],[[3479,3481],3],[[3482,3505],2],[3506,3],[[3507,3515],2],[3516,3],[3517,2],[[3518,3519],3],[[3520,3526],2],[[3527,3529],3],[3530,2],[[3531,3534],3],[[3535,3540],2],[3541,3],[3542,2],[3543,3],[[3544,3551],2],[[3552,3557],3],[[3558,3567],2],[[3568,3569],3],[[3570,3571],2],[3572,2],[[3573,3584],3],[[3585,3634],2],[3635,1,\"ํา\"],[[3636,3642],2],[[3643,3646],3],[3647,2],[[3648,3662],2],[3663,2],[[3664,3673],2],[[3674,3675],2],[[3676,3712],3],[[3713,3714],2],[3715,3],[3716,2],[3717,3],[3718,2],[[3719,3720],2],[3721,2],[3722,2],[3723,3],[3724,2],[3725,2],[[3726,3731],2],[[3732,3735],2],[3736,2],[[3737,3743],2],[3744,2],[[3745,3747],2],[3748,3],[3749,2],[3750,3],[3751,2],[[3752,3753],2],[[3754,3755],2],[3756,2],[[3757,3762],2],[3763,1,\"ໍາ\"],[[3764,3769],2],[3770,2],[[3771,3773],2],[[3774,3775],3],[[3776,3780],2],[3781,3],[3782,2],[3783,3],[[3784,3789],2],[3790,2],[3791,3],[[3792,3801],2],[[3802,3803],3],[3804,1,\"ຫນ\"],[3805,1,\"ຫມ\"],[[3806,3807],2],[[3808,3839],3],[3840,2],[[3841,3850],2],[3851,2],[3852,1,\"་\"],[[3853,3863],2],[[3864,3865],2],[[3866,3871],2],[[3872,3881],2],[[3882,3892],2],[3893,2],[3894,2],[3895,2],[3896,2],[3897,2],[[3898,3901],2],[[3902,3906],2],[3907,1,\"གྷ\"],[[3908,3911],2],[3912,3],[[3913,3916],2],[3917,1,\"ཌྷ\"],[[3918,3921],2],[3922,1,\"དྷ\"],[[3923,3926],2],[3927,1,\"བྷ\"],[[3928,3931],2],[3932,1,\"ཛྷ\"],[[3933,3944],2],[3945,1,\"ཀྵ\"],[3946,2],[[3947,3948],2],[[3949,3952],3],[[3953,3954],2],[3955,1,\"ཱི\"],[3956,2],[3957,1,\"ཱུ\"],[3958,1,\"ྲྀ\"],[3959,1,\"ྲཱྀ\"],[3960,1,\"ླྀ\"],[3961,1,\"ླཱྀ\"],[[3962,3968],2],[3969,1,\"ཱྀ\"],[[3970,3972],2],[3973,2],[[3974,3979],2],[[3980,3983],2],[[3984,3986],2],[3987,1,\"ྒྷ\"],[[3988,3989],2],[3990,2],[3991,2],[3992,3],[[3993,3996],2],[3997,1,\"ྜྷ\"],[[3998,4001],2],[4002,1,\"ྡྷ\"],[[4003,4006],2],[4007,1,\"ྦྷ\"],[[4008,4011],2],[4012,1,\"ྫྷ\"],[4013,2],[[4014,4016],2],[[4017,4023],2],[4024,2],[4025,1,\"ྐྵ\"],[[4026,4028],2],[4029,3],[[4030,4037],2],[4038,2],[[4039,4044],2],[4045,3],[4046,2],[4047,2],[[4048,4049],2],[[4050,4052],2],[[4053,4056],2],[[4057,4058],2],[[4059,4095],3],[[4096,4129],2],[4130,2],[[4131,4135],2],[4136,2],[[4137,4138],2],[4139,2],[[4140,4146],2],[[4147,4149],2],[[4150,4153],2],[[4154,4159],2],[[4160,4169],2],[[4170,4175],2],[[4176,4185],2],[[4186,4249],2],[[4250,4253],2],[[4254,4255],2],[[4256,4293],3],[4294,3],[4295,1,\"ⴧ\"],[[4296,4300],3],[4301,1,\"ⴭ\"],[[4302,4303],3],[[4304,4342],2],[[4343,4344],2],[[4345,4346],2],[4347,2],[4348,1,\"ნ\"],[[4349,4351],2],[[4352,4441],2],[[4442,4446],2],[[4447,4448],3],[[4449,4514],2],[[4515,4519],2],[[4520,4601],2],[[4602,4607],2],[[4608,4614],2],[4615,2],[[4616,4678],2],[4679,2],[4680,2],[4681,3],[[4682,4685],2],[[4686,4687],3],[[4688,4694],2],[4695,3],[4696,2],[4697,3],[[4698,4701],2],[[4702,4703],3],[[4704,4742],2],[4743,2],[4744,2],[4745,3],[[4746,4749],2],[[4750,4751],3],[[4752,4782],2],[4783,2],[4784,2],[4785,3],[[4786,4789],2],[[4790,4791],3],[[4792,4798],2],[4799,3],[4800,2],[4801,3],[[4802,4805],2],[[4806,4807],3],[[4808,4814],2],[4815,2],[[4816,4822],2],[4823,3],[[4824,4846],2],[4847,2],[[4848,4878],2],[4879,2],[4880,2],[4881,3],[[4882,4885],2],[[4886,4887],3],[[4888,4894],2],[4895,2],[[4896,4934],2],[4935,2],[[4936,4954],2],[[4955,4956],3],[[4957,4958],2],[4959,2],[4960,2],[[4961,4988],2],[[4989,4991],3],[[4992,5007],2],[[5008,5017],2],[[5018,5023],3],[[5024,5108],2],[5109,2],[[5110,5111],3],[5112,1,\"Ᏸ\"],[5113,1,\"Ᏹ\"],[5114,1,\"Ᏺ\"],[5115,1,\"Ᏻ\"],[5116,1,\"Ᏼ\"],[5117,1,\"Ᏽ\"],[[5118,5119],3],[5120,2],[[5121,5740],2],[[5741,5742],2],[[5743,5750],2],[[5751,5759],2],[5760,3],[[5761,5786],2],[[5787,5788],2],[[5789,5791],3],[[5792,5866],2],[[5867,5872],2],[[5873,5880],2],[[5881,5887],3],[[5888,5900],2],[5901,2],[[5902,5908],2],[5909,2],[[5910,5918],3],[5919,2],[[5920,5940],2],[[5941,5942],2],[[5943,5951],3],[[5952,5971],2],[[5972,5983],3],[[5984,5996],2],[5997,3],[[5998,6000],2],[6001,3],[[6002,6003],2],[[6004,6015],3],[[6016,6067],2],[[6068,6069],3],[[6070,6099],2],[[6100,6102],2],[6103,2],[[6104,6107],2],[6108,2],[6109,2],[[6110,6111],3],[[6112,6121],2],[[6122,6127],3],[[6128,6137],2],[[6138,6143],3],[[6144,6149],2],[6150,3],[[6151,6154],2],[[6155,6157],7],[6158,3],[6159,7],[[6160,6169],2],[[6170,6175],3],[[6176,6263],2],[6264,2],[[6265,6271],3],[[6272,6313],2],[6314,2],[[6315,6319],3],[[6320,6389],2],[[6390,6399],3],[[6400,6428],2],[[6429,6430],2],[6431,3],[[6432,6443],2],[[6444,6447],3],[[6448,6459],2],[[6460,6463],3],[6464,2],[[6465,6467],3],[[6468,6469],2],[[6470,6509],2],[[6510,6511],3],[[6512,6516],2],[[6517,6527],3],[[6528,6569],2],[[6570,6571],2],[[6572,6575],3],[[6576,6601],2],[[6602,6607],3],[[6608,6617],2],[6618,2],[[6619,6621],3],[[6622,6623],2],[[6624,6655],2],[[6656,6683],2],[[6684,6685],3],[[6686,6687],2],[[6688,6750],2],[6751,3],[[6752,6780],2],[[6781,6782],3],[[6783,6793],2],[[6794,6799],3],[[6800,6809],2],[[6810,6815],3],[[6816,6822],2],[6823,2],[[6824,6829],2],[[6830,6831],3],[[6832,6845],2],[6846,2],[[6847,6848],2],[[6849,6862],2],[[6863,6911],3],[[6912,6987],2],[6988,2],[[6989,6991],3],[[6992,7001],2],[[7002,7018],2],[[7019,7027],2],[[7028,7036],2],[[7037,7038],2],[7039,3],[[7040,7082],2],[[7083,7085],2],[[7086,7097],2],[[7098,7103],2],[[7104,7155],2],[[7156,7163],3],[[7164,7167],2],[[7168,7223],2],[[7224,7226],3],[[7227,7231],2],[[7232,7241],2],[[7242,7244],3],[[7245,7293],2],[[7294,7295],2],[7296,1,\"в\"],[7297,1,\"д\"],[7298,1,\"о\"],[7299,1,\"с\"],[[7300,7301],1,\"т\"],[7302,1,\"ъ\"],[7303,1,\"ѣ\"],[7304,1,\"ꙋ\"],[[7305,7311],3],[7312,1,\"ა\"],[7313,1,\"ბ\"],[7314,1,\"გ\"],[7315,1,\"დ\"],[7316,1,\"ე\"],[7317,1,\"ვ\"],[7318,1,\"ზ\"],[7319,1,\"თ\"],[7320,1,\"ი\"],[7321,1,\"კ\"],[7322,1,\"ლ\"],[7323,1,\"მ\"],[7324,1,\"ნ\"],[7325,1,\"ო\"],[7326,1,\"პ\"],[7327,1,\"ჟ\"],[7328,1,\"რ\"],[7329,1,\"ს\"],[7330,1,\"ტ\"],[7331,1,\"უ\"],[7332,1,\"ფ\"],[7333,1,\"ქ\"],[7334,1,\"ღ\"],[7335,1,\"ყ\"],[7336,1,\"შ\"],[7337,1,\"ჩ\"],[7338,1,\"ც\"],[7339,1,\"ძ\"],[7340,1,\"წ\"],[7341,1,\"ჭ\"],[7342,1,\"ხ\"],[7343,1,\"ჯ\"],[7344,1,\"ჰ\"],[7345,1,\"ჱ\"],[7346,1,\"ჲ\"],[7347,1,\"ჳ\"],[7348,1,\"ჴ\"],[7349,1,\"ჵ\"],[7350,1,\"ჶ\"],[7351,1,\"ჷ\"],[7352,1,\"ჸ\"],[7353,1,\"ჹ\"],[7354,1,\"ჺ\"],[[7355,7356],3],[7357,1,\"ჽ\"],[7358,1,\"ჾ\"],[7359,1,\"ჿ\"],[[7360,7367],2],[[7368,7375],3],[[7376,7378],2],[7379,2],[[7380,7410],2],[[7411,7414],2],[7415,2],[[7416,7417],2],[7418,2],[[7419,7423],3],[[7424,7467],2],[7468,1,\"a\"],[7469,1,\"æ\"],[7470,1,\"b\"],[7471,2],[7472,1,\"d\"],[7473,1,\"e\"],[7474,1,\"ǝ\"],[7475,1,\"g\"],[7476,1,\"h\"],[7477,1,\"i\"],[7478,1,\"j\"],[7479,1,\"k\"],[7480,1,\"l\"],[7481,1,\"m\"],[7482,1,\"n\"],[7483,2],[7484,1,\"o\"],[7485,1,\"ȣ\"],[7486,1,\"p\"],[7487,1,\"r\"],[7488,1,\"t\"],[7489,1,\"u\"],[7490,1,\"w\"],[7491,1,\"a\"],[7492,1,\"ɐ\"],[7493,1,\"ɑ\"],[7494,1,\"ᴂ\"],[7495,1,\"b\"],[7496,1,\"d\"],[7497,1,\"e\"],[7498,1,\"ə\"],[7499,1,\"ɛ\"],[7500,1,\"ɜ\"],[7501,1,\"g\"],[7502,2],[7503,1,\"k\"],[7504,1,\"m\"],[7505,1,\"ŋ\"],[7506,1,\"o\"],[7507,1,\"ɔ\"],[7508,1,\"ᴖ\"],[7509,1,\"ᴗ\"],[7510,1,\"p\"],[7511,1,\"t\"],[7512,1,\"u\"],[7513,1,\"ᴝ\"],[7514,1,\"ɯ\"],[7515,1,\"v\"],[7516,1,\"ᴥ\"],[7517,1,\"β\"],[7518,1,\"γ\"],[7519,1,\"δ\"],[7520,1,\"φ\"],[7521,1,\"χ\"],[7522,1,\"i\"],[7523,1,\"r\"],[7524,1,\"u\"],[7525,1,\"v\"],[7526,1,\"β\"],[7527,1,\"γ\"],[7528,1,\"ρ\"],[7529,1,\"φ\"],[7530,1,\"χ\"],[7531,2],[[7532,7543],2],[7544,1,\"н\"],[[7545,7578],2],[7579,1,\"ɒ\"],[7580,1,\"c\"],[7581,1,\"ɕ\"],[7582,1,\"ð\"],[7583,1,\"ɜ\"],[7584,1,\"f\"],[7585,1,\"ɟ\"],[7586,1,\"ɡ\"],[7587,1,\"ɥ\"],[7588,1,\"ɨ\"],[7589,1,\"ɩ\"],[7590,1,\"ɪ\"],[7591,1,\"ᵻ\"],[7592,1,\"ʝ\"],[7593,1,\"ɭ\"],[7594,1,\"ᶅ\"],[7595,1,\"ʟ\"],[7596,1,\"ɱ\"],[7597,1,\"ɰ\"],[7598,1,\"ɲ\"],[7599,1,\"ɳ\"],[7600,1,\"ɴ\"],[7601,1,\"ɵ\"],[7602,1,\"ɸ\"],[7603,1,\"ʂ\"],[7604,1,\"ʃ\"],[7605,1,\"ƫ\"],[7606,1,\"ʉ\"],[7607,1,\"ʊ\"],[7608,1,\"ᴜ\"],[7609,1,\"ʋ\"],[7610,1,\"ʌ\"],[7611,1,\"z\"],[7612,1,\"ʐ\"],[7613,1,\"ʑ\"],[7614,1,\"ʒ\"],[7615,1,\"θ\"],[[7616,7619],2],[[7620,7626],2],[[7627,7654],2],[[7655,7669],2],[[7670,7673],2],[7674,2],[7675,2],[7676,2],[7677,2],[[7678,7679],2],[7680,1,\"ḁ\"],[7681,2],[7682,1,\"ḃ\"],[7683,2],[7684,1,\"ḅ\"],[7685,2],[7686,1,\"ḇ\"],[7687,2],[7688,1,\"ḉ\"],[7689,2],[7690,1,\"ḋ\"],[7691,2],[7692,1,\"ḍ\"],[7693,2],[7694,1,\"ḏ\"],[7695,2],[7696,1,\"ḑ\"],[7697,2],[7698,1,\"ḓ\"],[7699,2],[7700,1,\"ḕ\"],[7701,2],[7702,1,\"ḗ\"],[7703,2],[7704,1,\"ḙ\"],[7705,2],[7706,1,\"ḛ\"],[7707,2],[7708,1,\"ḝ\"],[7709,2],[7710,1,\"ḟ\"],[7711,2],[7712,1,\"ḡ\"],[7713,2],[7714,1,\"ḣ\"],[7715,2],[7716,1,\"ḥ\"],[7717,2],[7718,1,\"ḧ\"],[7719,2],[7720,1,\"ḩ\"],[7721,2],[7722,1,\"ḫ\"],[7723,2],[7724,1,\"ḭ\"],[7725,2],[7726,1,\"ḯ\"],[7727,2],[7728,1,\"ḱ\"],[7729,2],[7730,1,\"ḳ\"],[7731,2],[7732,1,\"ḵ\"],[7733,2],[7734,1,\"ḷ\"],[7735,2],[7736,1,\"ḹ\"],[7737,2],[7738,1,\"ḻ\"],[7739,2],[7740,1,\"ḽ\"],[7741,2],[7742,1,\"ḿ\"],[7743,2],[7744,1,\"ṁ\"],[7745,2],[7746,1,\"ṃ\"],[7747,2],[7748,1,\"ṅ\"],[7749,2],[7750,1,\"ṇ\"],[7751,2],[7752,1,\"ṉ\"],[7753,2],[7754,1,\"ṋ\"],[7755,2],[7756,1,\"ṍ\"],[7757,2],[7758,1,\"ṏ\"],[7759,2],[7760,1,\"ṑ\"],[7761,2],[7762,1,\"ṓ\"],[7763,2],[7764,1,\"ṕ\"],[7765,2],[7766,1,\"ṗ\"],[7767,2],[7768,1,\"ṙ\"],[7769,2],[7770,1,\"ṛ\"],[7771,2],[7772,1,\"ṝ\"],[7773,2],[7774,1,\"ṟ\"],[7775,2],[7776,1,\"ṡ\"],[7777,2],[7778,1,\"ṣ\"],[7779,2],[7780,1,\"ṥ\"],[7781,2],[7782,1,\"ṧ\"],[7783,2],[7784,1,\"ṩ\"],[7785,2],[7786,1,\"ṫ\"],[7787,2],[7788,1,\"ṭ\"],[7789,2],[7790,1,\"ṯ\"],[7791,2],[7792,1,\"ṱ\"],[7793,2],[7794,1,\"ṳ\"],[7795,2],[7796,1,\"ṵ\"],[7797,2],[7798,1,\"ṷ\"],[7799,2],[7800,1,\"ṹ\"],[7801,2],[7802,1,\"ṻ\"],[7803,2],[7804,1,\"ṽ\"],[7805,2],[7806,1,\"ṿ\"],[7807,2],[7808,1,\"ẁ\"],[7809,2],[7810,1,\"ẃ\"],[7811,2],[7812,1,\"ẅ\"],[7813,2],[7814,1,\"ẇ\"],[7815,2],[7816,1,\"ẉ\"],[7817,2],[7818,1,\"ẋ\"],[7819,2],[7820,1,\"ẍ\"],[7821,2],[7822,1,\"ẏ\"],[7823,2],[7824,1,\"ẑ\"],[7825,2],[7826,1,\"ẓ\"],[7827,2],[7828,1,\"ẕ\"],[[7829,7833],2],[7834,1,\"aʾ\"],[7835,1,\"ṡ\"],[[7836,7837],2],[7838,1,\"ss\"],[7839,2],[7840,1,\"ạ\"],[7841,2],[7842,1,\"ả\"],[7843,2],[7844,1,\"ấ\"],[7845,2],[7846,1,\"ầ\"],[7847,2],[7848,1,\"ẩ\"],[7849,2],[7850,1,\"ẫ\"],[7851,2],[7852,1,\"ậ\"],[7853,2],[7854,1,\"ắ\"],[7855,2],[7856,1,\"ằ\"],[7857,2],[7858,1,\"ẳ\"],[7859,2],[7860,1,\"ẵ\"],[7861,2],[7862,1,\"ặ\"],[7863,2],[7864,1,\"ẹ\"],[7865,2],[7866,1,\"ẻ\"],[7867,2],[7868,1,\"ẽ\"],[7869,2],[7870,1,\"ế\"],[7871,2],[7872,1,\"ề\"],[7873,2],[7874,1,\"ể\"],[7875,2],[7876,1,\"ễ\"],[7877,2],[7878,1,\"ệ\"],[7879,2],[7880,1,\"ỉ\"],[7881,2],[7882,1,\"ị\"],[7883,2],[7884,1,\"ọ\"],[7885,2],[7886,1,\"ỏ\"],[7887,2],[7888,1,\"ố\"],[7889,2],[7890,1,\"ồ\"],[7891,2],[7892,1,\"ổ\"],[7893,2],[7894,1,\"ỗ\"],[7895,2],[7896,1,\"ộ\"],[7897,2],[7898,1,\"ớ\"],[7899,2],[7900,1,\"ờ\"],[7901,2],[7902,1,\"ở\"],[7903,2],[7904,1,\"ỡ\"],[7905,2],[7906,1,\"ợ\"],[7907,2],[7908,1,\"ụ\"],[7909,2],[7910,1,\"ủ\"],[7911,2],[7912,1,\"ứ\"],[7913,2],[7914,1,\"ừ\"],[7915,2],[7916,1,\"ử\"],[7917,2],[7918,1,\"ữ\"],[7919,2],[7920,1,\"ự\"],[7921,2],[7922,1,\"ỳ\"],[7923,2],[7924,1,\"ỵ\"],[7925,2],[7926,1,\"ỷ\"],[7927,2],[7928,1,\"ỹ\"],[7929,2],[7930,1,\"ỻ\"],[7931,2],[7932,1,\"ỽ\"],[7933,2],[7934,1,\"ỿ\"],[7935,2],[[7936,7943],2],[7944,1,\"ἀ\"],[7945,1,\"ἁ\"],[7946,1,\"ἂ\"],[7947,1,\"ἃ\"],[7948,1,\"ἄ\"],[7949,1,\"ἅ\"],[7950,1,\"ἆ\"],[7951,1,\"ἇ\"],[[7952,7957],2],[[7958,7959],3],[7960,1,\"ἐ\"],[7961,1,\"ἑ\"],[7962,1,\"ἒ\"],[7963,1,\"ἓ\"],[7964,1,\"ἔ\"],[7965,1,\"ἕ\"],[[7966,7967],3],[[7968,7975],2],[7976,1,\"ἠ\"],[7977,1,\"ἡ\"],[7978,1,\"ἢ\"],[7979,1,\"ἣ\"],[7980,1,\"ἤ\"],[7981,1,\"ἥ\"],[7982,1,\"ἦ\"],[7983,1,\"ἧ\"],[[7984,7991],2],[7992,1,\"ἰ\"],[7993,1,\"ἱ\"],[7994,1,\"ἲ\"],[7995,1,\"ἳ\"],[7996,1,\"ἴ\"],[7997,1,\"ἵ\"],[7998,1,\"ἶ\"],[7999,1,\"ἷ\"],[[8000,8005],2],[[8006,8007],3],[8008,1,\"ὀ\"],[8009,1,\"ὁ\"],[8010,1,\"ὂ\"],[8011,1,\"ὃ\"],[8012,1,\"ὄ\"],[8013,1,\"ὅ\"],[[8014,8015],3],[[8016,8023],2],[8024,3],[8025,1,\"ὑ\"],[8026,3],[8027,1,\"ὓ\"],[8028,3],[8029,1,\"ὕ\"],[8030,3],[8031,1,\"ὗ\"],[[8032,8039],2],[8040,1,\"ὠ\"],[8041,1,\"ὡ\"],[8042,1,\"ὢ\"],[8043,1,\"ὣ\"],[8044,1,\"ὤ\"],[8045,1,\"ὥ\"],[8046,1,\"ὦ\"],[8047,1,\"ὧ\"],[8048,2],[8049,1,\"ά\"],[8050,2],[8051,1,\"έ\"],[8052,2],[8053,1,\"ή\"],[8054,2],[8055,1,\"ί\"],[8056,2],[8057,1,\"ό\"],[8058,2],[8059,1,\"ύ\"],[8060,2],[8061,1,\"ώ\"],[[8062,8063],3],[8064,1,\"ἀι\"],[8065,1,\"ἁι\"],[8066,1,\"ἂι\"],[8067,1,\"ἃι\"],[8068,1,\"ἄι\"],[8069,1,\"ἅι\"],[8070,1,\"ἆι\"],[8071,1,\"ἇι\"],[8072,1,\"ἀι\"],[8073,1,\"ἁι\"],[8074,1,\"ἂι\"],[8075,1,\"ἃι\"],[8076,1,\"ἄι\"],[8077,1,\"ἅι\"],[8078,1,\"ἆι\"],[8079,1,\"ἇι\"],[8080,1,\"ἠι\"],[8081,1,\"ἡι\"],[8082,1,\"ἢι\"],[8083,1,\"ἣι\"],[8084,1,\"ἤι\"],[8085,1,\"ἥι\"],[8086,1,\"ἦι\"],[8087,1,\"ἧι\"],[8088,1,\"ἠι\"],[8089,1,\"ἡι\"],[8090,1,\"ἢι\"],[8091,1,\"ἣι\"],[8092,1,\"ἤι\"],[8093,1,\"ἥι\"],[8094,1,\"ἦι\"],[8095,1,\"ἧι\"],[8096,1,\"ὠι\"],[8097,1,\"ὡι\"],[8098,1,\"ὢι\"],[8099,1,\"ὣι\"],[8100,1,\"ὤι\"],[8101,1,\"ὥι\"],[8102,1,\"ὦι\"],[8103,1,\"ὧι\"],[8104,1,\"ὠι\"],[8105,1,\"ὡι\"],[8106,1,\"ὢι\"],[8107,1,\"ὣι\"],[8108,1,\"ὤι\"],[8109,1,\"ὥι\"],[8110,1,\"ὦι\"],[8111,1,\"ὧι\"],[[8112,8113],2],[8114,1,\"ὰι\"],[8115,1,\"αι\"],[8116,1,\"άι\"],[8117,3],[8118,2],[8119,1,\"ᾶι\"],[8120,1,\"ᾰ\"],[8121,1,\"ᾱ\"],[8122,1,\"ὰ\"],[8123,1,\"ά\"],[8124,1,\"αι\"],[8125,5,\" ̓\"],[8126,1,\"ι\"],[8127,5,\" ̓\"],[8128,5,\" ͂\"],[8129,5,\" ̈͂\"],[8130,1,\"ὴι\"],[8131,1,\"ηι\"],[8132,1,\"ήι\"],[8133,3],[8134,2],[8135,1,\"ῆι\"],[8136,1,\"ὲ\"],[8137,1,\"έ\"],[8138,1,\"ὴ\"],[8139,1,\"ή\"],[8140,1,\"ηι\"],[8141,5,\" ̓̀\"],[8142,5,\" ̓́\"],[8143,5,\" ̓͂\"],[[8144,8146],2],[8147,1,\"ΐ\"],[[8148,8149],3],[[8150,8151],2],[8152,1,\"ῐ\"],[8153,1,\"ῑ\"],[8154,1,\"ὶ\"],[8155,1,\"ί\"],[8156,3],[8157,5,\" ̔̀\"],[8158,5,\" ̔́\"],[8159,5,\" ̔͂\"],[[8160,8162],2],[8163,1,\"ΰ\"],[[8164,8167],2],[8168,1,\"ῠ\"],[8169,1,\"ῡ\"],[8170,1,\"ὺ\"],[8171,1,\"ύ\"],[8172,1,\"ῥ\"],[8173,5,\" ̈̀\"],[8174,5,\" ̈́\"],[8175,5,\"`\"],[[8176,8177],3],[8178,1,\"ὼι\"],[8179,1,\"ωι\"],[8180,1,\"ώι\"],[8181,3],[8182,2],[8183,1,\"ῶι\"],[8184,1,\"ὸ\"],[8185,1,\"ό\"],[8186,1,\"ὼ\"],[8187,1,\"ώ\"],[8188,1,\"ωι\"],[8189,5,\" ́\"],[8190,5,\" ̔\"],[8191,3],[[8192,8202],5,\" \"],[8203,7],[[8204,8205],6,\"\"],[[8206,8207],3],[8208,2],[8209,1,\"‐\"],[[8210,8214],2],[8215,5,\" ̳\"],[[8216,8227],2],[[8228,8230],3],[8231,2],[[8232,8238],3],[8239,5,\" \"],[[8240,8242],2],[8243,1,\"′′\"],[8244,1,\"′′′\"],[8245,2],[8246,1,\"‵‵\"],[8247,1,\"‵‵‵\"],[[8248,8251],2],[8252,5,\"!!\"],[8253,2],[8254,5,\" ̅\"],[[8255,8262],2],[8263,5,\"??\"],[8264,5,\"?!\"],[8265,5,\"!?\"],[[8266,8269],2],[[8270,8274],2],[[8275,8276],2],[[8277,8278],2],[8279,1,\"′′′′\"],[[8280,8286],2],[8287,5,\" \"],[8288,7],[[8289,8291],3],[8292,7],[8293,3],[[8294,8297],3],[[8298,8303],3],[8304,1,\"0\"],[8305,1,\"i\"],[[8306,8307],3],[8308,1,\"4\"],[8309,1,\"5\"],[8310,1,\"6\"],[8311,1,\"7\"],[8312,1,\"8\"],[8313,1,\"9\"],[8314,5,\"+\"],[8315,1,\"−\"],[8316,5,\"=\"],[8317,5,\"(\"],[8318,5,\")\"],[8319,1,\"n\"],[8320,1,\"0\"],[8321,1,\"1\"],[8322,1,\"2\"],[8323,1,\"3\"],[8324,1,\"4\"],[8325,1,\"5\"],[8326,1,\"6\"],[8327,1,\"7\"],[8328,1,\"8\"],[8329,1,\"9\"],[8330,5,\"+\"],[8331,1,\"−\"],[8332,5,\"=\"],[8333,5,\"(\"],[8334,5,\")\"],[8335,3],[8336,1,\"a\"],[8337,1,\"e\"],[8338,1,\"o\"],[8339,1,\"x\"],[8340,1,\"ə\"],[8341,1,\"h\"],[8342,1,\"k\"],[8343,1,\"l\"],[8344,1,\"m\"],[8345,1,\"n\"],[8346,1,\"p\"],[8347,1,\"s\"],[8348,1,\"t\"],[[8349,8351],3],[[8352,8359],2],[8360,1,\"rs\"],[[8361,8362],2],[8363,2],[8364,2],[[8365,8367],2],[[8368,8369],2],[[8370,8373],2],[[8374,8376],2],[8377,2],[8378,2],[[8379,8381],2],[8382,2],[8383,2],[8384,2],[[8385,8399],3],[[8400,8417],2],[[8418,8419],2],[[8420,8426],2],[8427,2],[[8428,8431],2],[8432,2],[[8433,8447],3],[8448,5,\"a/c\"],[8449,5,\"a/s\"],[8450,1,\"c\"],[8451,1,\"°c\"],[8452,2],[8453,5,\"c/o\"],[8454,5,\"c/u\"],[8455,1,\"ɛ\"],[8456,2],[8457,1,\"°f\"],[8458,1,\"g\"],[[8459,8462],1,\"h\"],[8463,1,\"ħ\"],[[8464,8465],1,\"i\"],[[8466,8467],1,\"l\"],[8468,2],[8469,1,\"n\"],[8470,1,\"no\"],[[8471,8472],2],[8473,1,\"p\"],[8474,1,\"q\"],[[8475,8477],1,\"r\"],[[8478,8479],2],[8480,1,\"sm\"],[8481,1,\"tel\"],[8482,1,\"tm\"],[8483,2],[8484,1,\"z\"],[8485,2],[8486,1,\"ω\"],[8487,2],[8488,1,\"z\"],[8489,2],[8490,1,\"k\"],[8491,1,\"å\"],[8492,1,\"b\"],[8493,1,\"c\"],[8494,2],[[8495,8496],1,\"e\"],[8497,1,\"f\"],[8498,3],[8499,1,\"m\"],[8500,1,\"o\"],[8501,1,\"א\"],[8502,1,\"ב\"],[8503,1,\"ג\"],[8504,1,\"ד\"],[8505,1,\"i\"],[8506,2],[8507,1,\"fax\"],[8508,1,\"π\"],[[8509,8510],1,\"γ\"],[8511,1,\"π\"],[8512,1,\"∑\"],[[8513,8516],2],[[8517,8518],1,\"d\"],[8519,1,\"e\"],[8520,1,\"i\"],[8521,1,\"j\"],[[8522,8523],2],[8524,2],[8525,2],[8526,2],[8527,2],[8528,1,\"1⁄7\"],[8529,1,\"1⁄9\"],[8530,1,\"1⁄10\"],[8531,1,\"1⁄3\"],[8532,1,\"2⁄3\"],[8533,1,\"1⁄5\"],[8534,1,\"2⁄5\"],[8535,1,\"3⁄5\"],[8536,1,\"4⁄5\"],[8537,1,\"1⁄6\"],[8538,1,\"5⁄6\"],[8539,1,\"1⁄8\"],[8540,1,\"3⁄8\"],[8541,1,\"5⁄8\"],[8542,1,\"7⁄8\"],[8543,1,\"1⁄\"],[8544,1,\"i\"],[8545,1,\"ii\"],[8546,1,\"iii\"],[8547,1,\"iv\"],[8548,1,\"v\"],[8549,1,\"vi\"],[8550,1,\"vii\"],[8551,1,\"viii\"],[8552,1,\"ix\"],[8553,1,\"x\"],[8554,1,\"xi\"],[8555,1,\"xii\"],[8556,1,\"l\"],[8557,1,\"c\"],[8558,1,\"d\"],[8559,1,\"m\"],[8560,1,\"i\"],[8561,1,\"ii\"],[8562,1,\"iii\"],[8563,1,\"iv\"],[8564,1,\"v\"],[8565,1,\"vi\"],[8566,1,\"vii\"],[8567,1,\"viii\"],[8568,1,\"ix\"],[8569,1,\"x\"],[8570,1,\"xi\"],[8571,1,\"xii\"],[8572,1,\"l\"],[8573,1,\"c\"],[8574,1,\"d\"],[8575,1,\"m\"],[[8576,8578],2],[8579,3],[8580,2],[[8581,8584],2],[8585,1,\"0⁄3\"],[[8586,8587],2],[[8588,8591],3],[[8592,8682],2],[[8683,8691],2],[[8692,8703],2],[[8704,8747],2],[8748,1,\"∫∫\"],[8749,1,\"∫∫∫\"],[8750,2],[8751,1,\"∮∮\"],[8752,1,\"∮∮∮\"],[[8753,8799],2],[8800,4],[[8801,8813],2],[[8814,8815],4],[[8816,8945],2],[[8946,8959],2],[8960,2],[8961,2],[[8962,9000],2],[9001,1,\"〈\"],[9002,1,\"〉\"],[[9003,9082],2],[9083,2],[9084,2],[[9085,9114],2],[[9115,9166],2],[[9167,9168],2],[[9169,9179],2],[[9180,9191],2],[9192,2],[[9193,9203],2],[[9204,9210],2],[[9211,9214],2],[9215,2],[[9216,9252],2],[[9253,9254],2],[[9255,9279],3],[[9280,9290],2],[[9291,9311],3],[9312,1,\"1\"],[9313,1,\"2\"],[9314,1,\"3\"],[9315,1,\"4\"],[9316,1,\"5\"],[9317,1,\"6\"],[9318,1,\"7\"],[9319,1,\"8\"],[9320,1,\"9\"],[9321,1,\"10\"],[9322,1,\"11\"],[9323,1,\"12\"],[9324,1,\"13\"],[9325,1,\"14\"],[9326,1,\"15\"],[9327,1,\"16\"],[9328,1,\"17\"],[9329,1,\"18\"],[9330,1,\"19\"],[9331,1,\"20\"],[9332,5,\"(1)\"],[9333,5,\"(2)\"],[9334,5,\"(3)\"],[9335,5,\"(4)\"],[9336,5,\"(5)\"],[9337,5,\"(6)\"],[9338,5,\"(7)\"],[9339,5,\"(8)\"],[9340,5,\"(9)\"],[9341,5,\"(10)\"],[9342,5,\"(11)\"],[9343,5,\"(12)\"],[9344,5,\"(13)\"],[9345,5,\"(14)\"],[9346,5,\"(15)\"],[9347,5,\"(16)\"],[9348,5,\"(17)\"],[9349,5,\"(18)\"],[9350,5,\"(19)\"],[9351,5,\"(20)\"],[[9352,9371],3],[9372,5,\"(a)\"],[9373,5,\"(b)\"],[9374,5,\"(c)\"],[9375,5,\"(d)\"],[9376,5,\"(e)\"],[9377,5,\"(f)\"],[9378,5,\"(g)\"],[9379,5,\"(h)\"],[9380,5,\"(i)\"],[9381,5,\"(j)\"],[9382,5,\"(k)\"],[9383,5,\"(l)\"],[9384,5,\"(m)\"],[9385,5,\"(n)\"],[9386,5,\"(o)\"],[9387,5,\"(p)\"],[9388,5,\"(q)\"],[9389,5,\"(r)\"],[9390,5,\"(s)\"],[9391,5,\"(t)\"],[9392,5,\"(u)\"],[9393,5,\"(v)\"],[9394,5,\"(w)\"],[9395,5,\"(x)\"],[9396,5,\"(y)\"],[9397,5,\"(z)\"],[9398,1,\"a\"],[9399,1,\"b\"],[9400,1,\"c\"],[9401,1,\"d\"],[9402,1,\"e\"],[9403,1,\"f\"],[9404,1,\"g\"],[9405,1,\"h\"],[9406,1,\"i\"],[9407,1,\"j\"],[9408,1,\"k\"],[9409,1,\"l\"],[9410,1,\"m\"],[9411,1,\"n\"],[9412,1,\"o\"],[9413,1,\"p\"],[9414,1,\"q\"],[9415,1,\"r\"],[9416,1,\"s\"],[9417,1,\"t\"],[9418,1,\"u\"],[9419,1,\"v\"],[9420,1,\"w\"],[9421,1,\"x\"],[9422,1,\"y\"],[9423,1,\"z\"],[9424,1,\"a\"],[9425,1,\"b\"],[9426,1,\"c\"],[9427,1,\"d\"],[9428,1,\"e\"],[9429,1,\"f\"],[9430,1,\"g\"],[9431,1,\"h\"],[9432,1,\"i\"],[9433,1,\"j\"],[9434,1,\"k\"],[9435,1,\"l\"],[9436,1,\"m\"],[9437,1,\"n\"],[9438,1,\"o\"],[9439,1,\"p\"],[9440,1,\"q\"],[9441,1,\"r\"],[9442,1,\"s\"],[9443,1,\"t\"],[9444,1,\"u\"],[9445,1,\"v\"],[9446,1,\"w\"],[9447,1,\"x\"],[9448,1,\"y\"],[9449,1,\"z\"],[9450,1,\"0\"],[[9451,9470],2],[9471,2],[[9472,9621],2],[[9622,9631],2],[[9632,9711],2],[[9712,9719],2],[[9720,9727],2],[[9728,9747],2],[[9748,9749],2],[[9750,9751],2],[9752,2],[9753,2],[[9754,9839],2],[[9840,9841],2],[[9842,9853],2],[[9854,9855],2],[[9856,9865],2],[[9866,9873],2],[[9874,9884],2],[9885,2],[[9886,9887],2],[[9888,9889],2],[[9890,9905],2],[9906,2],[[9907,9916],2],[[9917,9919],2],[[9920,9923],2],[[9924,9933],2],[9934,2],[[9935,9953],2],[9954,2],[9955,2],[[9956,9959],2],[[9960,9983],2],[9984,2],[[9985,9988],2],[9989,2],[[9990,9993],2],[[9994,9995],2],[[9996,10023],2],[10024,2],[[10025,10059],2],[10060,2],[10061,2],[10062,2],[[10063,10066],2],[[10067,10069],2],[10070,2],[10071,2],[[10072,10078],2],[[10079,10080],2],[[10081,10087],2],[[10088,10101],2],[[10102,10132],2],[[10133,10135],2],[[10136,10159],2],[10160,2],[[10161,10174],2],[10175,2],[[10176,10182],2],[[10183,10186],2],[10187,2],[10188,2],[10189,2],[[10190,10191],2],[[10192,10219],2],[[10220,10223],2],[[10224,10239],2],[[10240,10495],2],[[10496,10763],2],[10764,1,\"∫∫∫∫\"],[[10765,10867],2],[10868,5,\"::=\"],[10869,5,\"==\"],[10870,5,\"===\"],[[10871,10971],2],[10972,1,\"⫝̸\"],[[10973,11007],2],[[11008,11021],2],[[11022,11027],2],[[11028,11034],2],[[11035,11039],2],[[11040,11043],2],[[11044,11084],2],[[11085,11087],2],[[11088,11092],2],[[11093,11097],2],[[11098,11123],2],[[11124,11125],3],[[11126,11157],2],[11158,3],[11159,2],[[11160,11193],2],[[11194,11196],2],[[11197,11208],2],[11209,2],[[11210,11217],2],[11218,2],[[11219,11243],2],[[11244,11247],2],[[11248,11262],2],[11263,2],[11264,1,\"ⰰ\"],[11265,1,\"ⰱ\"],[11266,1,\"ⰲ\"],[11267,1,\"ⰳ\"],[11268,1,\"ⰴ\"],[11269,1,\"ⰵ\"],[11270,1,\"ⰶ\"],[11271,1,\"ⰷ\"],[11272,1,\"ⰸ\"],[11273,1,\"ⰹ\"],[11274,1,\"ⰺ\"],[11275,1,\"ⰻ\"],[11276,1,\"ⰼ\"],[11277,1,\"ⰽ\"],[11278,1,\"ⰾ\"],[11279,1,\"ⰿ\"],[11280,1,\"ⱀ\"],[11281,1,\"ⱁ\"],[11282,1,\"ⱂ\"],[11283,1,\"ⱃ\"],[11284,1,\"ⱄ\"],[11285,1,\"ⱅ\"],[11286,1,\"ⱆ\"],[11287,1,\"ⱇ\"],[11288,1,\"ⱈ\"],[11289,1,\"ⱉ\"],[11290,1,\"ⱊ\"],[11291,1,\"ⱋ\"],[11292,1,\"ⱌ\"],[11293,1,\"ⱍ\"],[11294,1,\"ⱎ\"],[11295,1,\"ⱏ\"],[11296,1,\"ⱐ\"],[11297,1,\"ⱑ\"],[11298,1,\"ⱒ\"],[11299,1,\"ⱓ\"],[11300,1,\"ⱔ\"],[11301,1,\"ⱕ\"],[11302,1,\"ⱖ\"],[11303,1,\"ⱗ\"],[11304,1,\"ⱘ\"],[11305,1,\"ⱙ\"],[11306,1,\"ⱚ\"],[11307,1,\"ⱛ\"],[11308,1,\"ⱜ\"],[11309,1,\"ⱝ\"],[11310,1,\"ⱞ\"],[11311,1,\"ⱟ\"],[[11312,11358],2],[11359,2],[11360,1,\"ⱡ\"],[11361,2],[11362,1,\"ɫ\"],[11363,1,\"ᵽ\"],[11364,1,\"ɽ\"],[[11365,11366],2],[11367,1,\"ⱨ\"],[11368,2],[11369,1,\"ⱪ\"],[11370,2],[11371,1,\"ⱬ\"],[11372,2],[11373,1,\"ɑ\"],[11374,1,\"ɱ\"],[11375,1,\"ɐ\"],[11376,1,\"ɒ\"],[11377,2],[11378,1,\"ⱳ\"],[11379,2],[11380,2],[11381,1,\"ⱶ\"],[[11382,11383],2],[[11384,11387],2],[11388,1,\"j\"],[11389,1,\"v\"],[11390,1,\"ȿ\"],[11391,1,\"ɀ\"],[11392,1,\"ⲁ\"],[11393,2],[11394,1,\"ⲃ\"],[11395,2],[11396,1,\"ⲅ\"],[11397,2],[11398,1,\"ⲇ\"],[11399,2],[11400,1,\"ⲉ\"],[11401,2],[11402,1,\"ⲋ\"],[11403,2],[11404,1,\"ⲍ\"],[11405,2],[11406,1,\"ⲏ\"],[11407,2],[11408,1,\"ⲑ\"],[11409,2],[11410,1,\"ⲓ\"],[11411,2],[11412,1,\"ⲕ\"],[11413,2],[11414,1,\"ⲗ\"],[11415,2],[11416,1,\"ⲙ\"],[11417,2],[11418,1,\"ⲛ\"],[11419,2],[11420,1,\"ⲝ\"],[11421,2],[11422,1,\"ⲟ\"],[11423,2],[11424,1,\"ⲡ\"],[11425,2],[11426,1,\"ⲣ\"],[11427,2],[11428,1,\"ⲥ\"],[11429,2],[11430,1,\"ⲧ\"],[11431,2],[11432,1,\"ⲩ\"],[11433,2],[11434,1,\"ⲫ\"],[11435,2],[11436,1,\"ⲭ\"],[11437,2],[11438,1,\"ⲯ\"],[11439,2],[11440,1,\"ⲱ\"],[11441,2],[11442,1,\"ⲳ\"],[11443,2],[11444,1,\"ⲵ\"],[11445,2],[11446,1,\"ⲷ\"],[11447,2],[11448,1,\"ⲹ\"],[11449,2],[11450,1,\"ⲻ\"],[11451,2],[11452,1,\"ⲽ\"],[11453,2],[11454,1,\"ⲿ\"],[11455,2],[11456,1,\"ⳁ\"],[11457,2],[11458,1,\"ⳃ\"],[11459,2],[11460,1,\"ⳅ\"],[11461,2],[11462,1,\"ⳇ\"],[11463,2],[11464,1,\"ⳉ\"],[11465,2],[11466,1,\"ⳋ\"],[11467,2],[11468,1,\"ⳍ\"],[11469,2],[11470,1,\"ⳏ\"],[11471,2],[11472,1,\"ⳑ\"],[11473,2],[11474,1,\"ⳓ\"],[11475,2],[11476,1,\"ⳕ\"],[11477,2],[11478,1,\"ⳗ\"],[11479,2],[11480,1,\"ⳙ\"],[11481,2],[11482,1,\"ⳛ\"],[11483,2],[11484,1,\"ⳝ\"],[11485,2],[11486,1,\"ⳟ\"],[11487,2],[11488,1,\"ⳡ\"],[11489,2],[11490,1,\"ⳣ\"],[[11491,11492],2],[[11493,11498],2],[11499,1,\"ⳬ\"],[11500,2],[11501,1,\"ⳮ\"],[[11502,11505],2],[11506,1,\"ⳳ\"],[11507,2],[[11508,11512],3],[[11513,11519],2],[[11520,11557],2],[11558,3],[11559,2],[[11560,11564],3],[11565,2],[[11566,11567],3],[[11568,11621],2],[[11622,11623],2],[[11624,11630],3],[11631,1,\"ⵡ\"],[11632,2],[[11633,11646],3],[11647,2],[[11648,11670],2],[[11671,11679],3],[[11680,11686],2],[11687,3],[[11688,11694],2],[11695,3],[[11696,11702],2],[11703,3],[[11704,11710],2],[11711,3],[[11712,11718],2],[11719,3],[[11720,11726],2],[11727,3],[[11728,11734],2],[11735,3],[[11736,11742],2],[11743,3],[[11744,11775],2],[[11776,11799],2],[[11800,11803],2],[[11804,11805],2],[[11806,11822],2],[11823,2],[11824,2],[11825,2],[[11826,11835],2],[[11836,11842],2],[[11843,11844],2],[[11845,11849],2],[[11850,11854],2],[11855,2],[[11856,11858],2],[[11859,11869],2],[[11870,11903],3],[[11904,11929],2],[11930,3],[[11931,11934],2],[11935,1,\"母\"],[[11936,12018],2],[12019,1,\"龟\"],[[12020,12031],3],[12032,1,\"一\"],[12033,1,\"丨\"],[12034,1,\"丶\"],[12035,1,\"丿\"],[12036,1,\"乙\"],[12037,1,\"亅\"],[12038,1,\"二\"],[12039,1,\"亠\"],[12040,1,\"人\"],[12041,1,\"儿\"],[12042,1,\"入\"],[12043,1,\"八\"],[12044,1,\"冂\"],[12045,1,\"冖\"],[12046,1,\"冫\"],[12047,1,\"几\"],[12048,1,\"凵\"],[12049,1,\"刀\"],[12050,1,\"力\"],[12051,1,\"勹\"],[12052,1,\"匕\"],[12053,1,\"匚\"],[12054,1,\"匸\"],[12055,1,\"十\"],[12056,1,\"卜\"],[12057,1,\"卩\"],[12058,1,\"厂\"],[12059,1,\"厶\"],[12060,1,\"又\"],[12061,1,\"口\"],[12062,1,\"囗\"],[12063,1,\"土\"],[12064,1,\"士\"],[12065,1,\"夂\"],[12066,1,\"夊\"],[12067,1,\"夕\"],[12068,1,\"大\"],[12069,1,\"女\"],[12070,1,\"子\"],[12071,1,\"宀\"],[12072,1,\"寸\"],[12073,1,\"小\"],[12074,1,\"尢\"],[12075,1,\"尸\"],[12076,1,\"屮\"],[12077,1,\"山\"],[12078,1,\"巛\"],[12079,1,\"工\"],[12080,1,\"己\"],[12081,1,\"巾\"],[12082,1,\"干\"],[12083,1,\"幺\"],[12084,1,\"广\"],[12085,1,\"廴\"],[12086,1,\"廾\"],[12087,1,\"弋\"],[12088,1,\"弓\"],[12089,1,\"彐\"],[12090,1,\"彡\"],[12091,1,\"彳\"],[12092,1,\"心\"],[12093,1,\"戈\"],[12094,1,\"戶\"],[12095,1,\"手\"],[12096,1,\"支\"],[12097,1,\"攴\"],[12098,1,\"文\"],[12099,1,\"斗\"],[12100,1,\"斤\"],[12101,1,\"方\"],[12102,1,\"无\"],[12103,1,\"日\"],[12104,1,\"曰\"],[12105,1,\"月\"],[12106,1,\"木\"],[12107,1,\"欠\"],[12108,1,\"止\"],[12109,1,\"歹\"],[12110,1,\"殳\"],[12111,1,\"毋\"],[12112,1,\"比\"],[12113,1,\"毛\"],[12114,1,\"氏\"],[12115,1,\"气\"],[12116,1,\"水\"],[12117,1,\"火\"],[12118,1,\"爪\"],[12119,1,\"父\"],[12120,1,\"爻\"],[12121,1,\"爿\"],[12122,1,\"片\"],[12123,1,\"牙\"],[12124,1,\"牛\"],[12125,1,\"犬\"],[12126,1,\"玄\"],[12127,1,\"玉\"],[12128,1,\"瓜\"],[12129,1,\"瓦\"],[12130,1,\"甘\"],[12131,1,\"生\"],[12132,1,\"用\"],[12133,1,\"田\"],[12134,1,\"疋\"],[12135,1,\"疒\"],[12136,1,\"癶\"],[12137,1,\"白\"],[12138,1,\"皮\"],[12139,1,\"皿\"],[12140,1,\"目\"],[12141,1,\"矛\"],[12142,1,\"矢\"],[12143,1,\"石\"],[12144,1,\"示\"],[12145,1,\"禸\"],[12146,1,\"禾\"],[12147,1,\"穴\"],[12148,1,\"立\"],[12149,1,\"竹\"],[12150,1,\"米\"],[12151,1,\"糸\"],[12152,1,\"缶\"],[12153,1,\"网\"],[12154,1,\"羊\"],[12155,1,\"羽\"],[12156,1,\"老\"],[12157,1,\"而\"],[12158,1,\"耒\"],[12159,1,\"耳\"],[12160,1,\"聿\"],[12161,1,\"肉\"],[12162,1,\"臣\"],[12163,1,\"自\"],[12164,1,\"至\"],[12165,1,\"臼\"],[12166,1,\"舌\"],[12167,1,\"舛\"],[12168,1,\"舟\"],[12169,1,\"艮\"],[12170,1,\"色\"],[12171,1,\"艸\"],[12172,1,\"虍\"],[12173,1,\"虫\"],[12174,1,\"血\"],[12175,1,\"行\"],[12176,1,\"衣\"],[12177,1,\"襾\"],[12178,1,\"見\"],[12179,1,\"角\"],[12180,1,\"言\"],[12181,1,\"谷\"],[12182,1,\"豆\"],[12183,1,\"豕\"],[12184,1,\"豸\"],[12185,1,\"貝\"],[12186,1,\"赤\"],[12187,1,\"走\"],[12188,1,\"足\"],[12189,1,\"身\"],[12190,1,\"車\"],[12191,1,\"辛\"],[12192,1,\"辰\"],[12193,1,\"辵\"],[12194,1,\"邑\"],[12195,1,\"酉\"],[12196,1,\"釆\"],[12197,1,\"里\"],[12198,1,\"金\"],[12199,1,\"長\"],[12200,1,\"門\"],[12201,1,\"阜\"],[12202,1,\"隶\"],[12203,1,\"隹\"],[12204,1,\"雨\"],[12205,1,\"靑\"],[12206,1,\"非\"],[12207,1,\"面\"],[12208,1,\"革\"],[12209,1,\"韋\"],[12210,1,\"韭\"],[12211,1,\"音\"],[12212,1,\"頁\"],[12213,1,\"風\"],[12214,1,\"飛\"],[12215,1,\"食\"],[12216,1,\"首\"],[12217,1,\"香\"],[12218,1,\"馬\"],[12219,1,\"骨\"],[12220,1,\"高\"],[12221,1,\"髟\"],[12222,1,\"鬥\"],[12223,1,\"鬯\"],[12224,1,\"鬲\"],[12225,1,\"鬼\"],[12226,1,\"魚\"],[12227,1,\"鳥\"],[12228,1,\"鹵\"],[12229,1,\"鹿\"],[12230,1,\"麥\"],[12231,1,\"麻\"],[12232,1,\"黃\"],[12233,1,\"黍\"],[12234,1,\"黑\"],[12235,1,\"黹\"],[12236,1,\"黽\"],[12237,1,\"鼎\"],[12238,1,\"鼓\"],[12239,1,\"鼠\"],[12240,1,\"鼻\"],[12241,1,\"齊\"],[12242,1,\"齒\"],[12243,1,\"龍\"],[12244,1,\"龜\"],[12245,1,\"龠\"],[[12246,12271],3],[[12272,12283],3],[[12284,12287],3],[12288,5,\" \"],[12289,2],[12290,1,\".\"],[[12291,12292],2],[[12293,12295],2],[[12296,12329],2],[[12330,12333],2],[[12334,12341],2],[12342,1,\"〒\"],[12343,2],[12344,1,\"十\"],[12345,1,\"卄\"],[12346,1,\"卅\"],[12347,2],[12348,2],[12349,2],[12350,2],[12351,2],[12352,3],[[12353,12436],2],[[12437,12438],2],[[12439,12440],3],[[12441,12442],2],[12443,5,\" ゙\"],[12444,5,\" ゚\"],[[12445,12446],2],[12447,1,\"より\"],[12448,2],[[12449,12542],2],[12543,1,\"コト\"],[[12544,12548],3],[[12549,12588],2],[12589,2],[12590,2],[12591,2],[12592,3],[12593,1,\"ᄀ\"],[12594,1,\"ᄁ\"],[12595,1,\"ᆪ\"],[12596,1,\"ᄂ\"],[12597,1,\"ᆬ\"],[12598,1,\"ᆭ\"],[12599,1,\"ᄃ\"],[12600,1,\"ᄄ\"],[12601,1,\"ᄅ\"],[12602,1,\"ᆰ\"],[12603,1,\"ᆱ\"],[12604,1,\"ᆲ\"],[12605,1,\"ᆳ\"],[12606,1,\"ᆴ\"],[12607,1,\"ᆵ\"],[12608,1,\"ᄚ\"],[12609,1,\"ᄆ\"],[12610,1,\"ᄇ\"],[12611,1,\"ᄈ\"],[12612,1,\"ᄡ\"],[12613,1,\"ᄉ\"],[12614,1,\"ᄊ\"],[12615,1,\"ᄋ\"],[12616,1,\"ᄌ\"],[12617,1,\"ᄍ\"],[12618,1,\"ᄎ\"],[12619,1,\"ᄏ\"],[12620,1,\"ᄐ\"],[12621,1,\"ᄑ\"],[12622,1,\"ᄒ\"],[12623,1,\"ᅡ\"],[12624,1,\"ᅢ\"],[12625,1,\"ᅣ\"],[12626,1,\"ᅤ\"],[12627,1,\"ᅥ\"],[12628,1,\"ᅦ\"],[12629,1,\"ᅧ\"],[12630,1,\"ᅨ\"],[12631,1,\"ᅩ\"],[12632,1,\"ᅪ\"],[12633,1,\"ᅫ\"],[12634,1,\"ᅬ\"],[12635,1,\"ᅭ\"],[12636,1,\"ᅮ\"],[12637,1,\"ᅯ\"],[12638,1,\"ᅰ\"],[12639,1,\"ᅱ\"],[12640,1,\"ᅲ\"],[12641,1,\"ᅳ\"],[12642,1,\"ᅴ\"],[12643,1,\"ᅵ\"],[12644,3],[12645,1,\"ᄔ\"],[12646,1,\"ᄕ\"],[12647,1,\"ᇇ\"],[12648,1,\"ᇈ\"],[12649,1,\"ᇌ\"],[12650,1,\"ᇎ\"],[12651,1,\"ᇓ\"],[12652,1,\"ᇗ\"],[12653,1,\"ᇙ\"],[12654,1,\"ᄜ\"],[12655,1,\"ᇝ\"],[12656,1,\"ᇟ\"],[12657,1,\"ᄝ\"],[12658,1,\"ᄞ\"],[12659,1,\"ᄠ\"],[12660,1,\"ᄢ\"],[12661,1,\"ᄣ\"],[12662,1,\"ᄧ\"],[12663,1,\"ᄩ\"],[12664,1,\"ᄫ\"],[12665,1,\"ᄬ\"],[12666,1,\"ᄭ\"],[12667,1,\"ᄮ\"],[12668,1,\"ᄯ\"],[12669,1,\"ᄲ\"],[12670,1,\"ᄶ\"],[12671,1,\"ᅀ\"],[12672,1,\"ᅇ\"],[12673,1,\"ᅌ\"],[12674,1,\"ᇱ\"],[12675,1,\"ᇲ\"],[12676,1,\"ᅗ\"],[12677,1,\"ᅘ\"],[12678,1,\"ᅙ\"],[12679,1,\"ᆄ\"],[12680,1,\"ᆅ\"],[12681,1,\"ᆈ\"],[12682,1,\"ᆑ\"],[12683,1,\"ᆒ\"],[12684,1,\"ᆔ\"],[12685,1,\"ᆞ\"],[12686,1,\"ᆡ\"],[12687,3],[[12688,12689],2],[12690,1,\"一\"],[12691,1,\"二\"],[12692,1,\"三\"],[12693,1,\"四\"],[12694,1,\"上\"],[12695,1,\"中\"],[12696,1,\"下\"],[12697,1,\"甲\"],[12698,1,\"乙\"],[12699,1,\"丙\"],[12700,1,\"丁\"],[12701,1,\"天\"],[12702,1,\"地\"],[12703,1,\"人\"],[[12704,12727],2],[[12728,12730],2],[[12731,12735],2],[[12736,12751],2],[[12752,12771],2],[[12772,12783],3],[[12784,12799],2],[12800,5,\"(ᄀ)\"],[12801,5,\"(ᄂ)\"],[12802,5,\"(ᄃ)\"],[12803,5,\"(ᄅ)\"],[12804,5,\"(ᄆ)\"],[12805,5,\"(ᄇ)\"],[12806,5,\"(ᄉ)\"],[12807,5,\"(ᄋ)\"],[12808,5,\"(ᄌ)\"],[12809,5,\"(ᄎ)\"],[12810,5,\"(ᄏ)\"],[12811,5,\"(ᄐ)\"],[12812,5,\"(ᄑ)\"],[12813,5,\"(ᄒ)\"],[12814,5,\"(가)\"],[12815,5,\"(나)\"],[12816,5,\"(다)\"],[12817,5,\"(라)\"],[12818,5,\"(마)\"],[12819,5,\"(바)\"],[12820,5,\"(사)\"],[12821,5,\"(아)\"],[12822,5,\"(자)\"],[12823,5,\"(차)\"],[12824,5,\"(카)\"],[12825,5,\"(타)\"],[12826,5,\"(파)\"],[12827,5,\"(하)\"],[12828,5,\"(주)\"],[12829,5,\"(오전)\"],[12830,5,\"(오후)\"],[12831,3],[12832,5,\"(一)\"],[12833,5,\"(二)\"],[12834,5,\"(三)\"],[12835,5,\"(四)\"],[12836,5,\"(五)\"],[12837,5,\"(六)\"],[12838,5,\"(七)\"],[12839,5,\"(八)\"],[12840,5,\"(九)\"],[12841,5,\"(十)\"],[12842,5,\"(月)\"],[12843,5,\"(火)\"],[12844,5,\"(水)\"],[12845,5,\"(木)\"],[12846,5,\"(金)\"],[12847,5,\"(土)\"],[12848,5,\"(日)\"],[12849,5,\"(株)\"],[12850,5,\"(有)\"],[12851,5,\"(社)\"],[12852,5,\"(名)\"],[12853,5,\"(特)\"],[12854,5,\"(財)\"],[12855,5,\"(祝)\"],[12856,5,\"(労)\"],[12857,5,\"(代)\"],[12858,5,\"(呼)\"],[12859,5,\"(学)\"],[12860,5,\"(監)\"],[12861,5,\"(企)\"],[12862,5,\"(資)\"],[12863,5,\"(協)\"],[12864,5,\"(祭)\"],[12865,5,\"(休)\"],[12866,5,\"(自)\"],[12867,5,\"(至)\"],[12868,1,\"問\"],[12869,1,\"幼\"],[12870,1,\"文\"],[12871,1,\"箏\"],[[12872,12879],2],[12880,1,\"pte\"],[12881,1,\"21\"],[12882,1,\"22\"],[12883,1,\"23\"],[12884,1,\"24\"],[12885,1,\"25\"],[12886,1,\"26\"],[12887,1,\"27\"],[12888,1,\"28\"],[12889,1,\"29\"],[12890,1,\"30\"],[12891,1,\"31\"],[12892,1,\"32\"],[12893,1,\"33\"],[12894,1,\"34\"],[12895,1,\"35\"],[12896,1,\"ᄀ\"],[12897,1,\"ᄂ\"],[12898,1,\"ᄃ\"],[12899,1,\"ᄅ\"],[12900,1,\"ᄆ\"],[12901,1,\"ᄇ\"],[12902,1,\"ᄉ\"],[12903,1,\"ᄋ\"],[12904,1,\"ᄌ\"],[12905,1,\"ᄎ\"],[12906,1,\"ᄏ\"],[12907,1,\"ᄐ\"],[12908,1,\"ᄑ\"],[12909,1,\"ᄒ\"],[12910,1,\"가\"],[12911,1,\"나\"],[12912,1,\"다\"],[12913,1,\"라\"],[12914,1,\"마\"],[12915,1,\"바\"],[12916,1,\"사\"],[12917,1,\"아\"],[12918,1,\"자\"],[12919,1,\"차\"],[12920,1,\"카\"],[12921,1,\"타\"],[12922,1,\"파\"],[12923,1,\"하\"],[12924,1,\"참고\"],[12925,1,\"주의\"],[12926,1,\"우\"],[12927,2],[12928,1,\"一\"],[12929,1,\"二\"],[12930,1,\"三\"],[12931,1,\"四\"],[12932,1,\"五\"],[12933,1,\"六\"],[12934,1,\"七\"],[12935,1,\"八\"],[12936,1,\"九\"],[12937,1,\"十\"],[12938,1,\"月\"],[12939,1,\"火\"],[12940,1,\"水\"],[12941,1,\"木\"],[12942,1,\"金\"],[12943,1,\"土\"],[12944,1,\"日\"],[12945,1,\"株\"],[12946,1,\"有\"],[12947,1,\"社\"],[12948,1,\"名\"],[12949,1,\"特\"],[12950,1,\"財\"],[12951,1,\"祝\"],[12952,1,\"労\"],[12953,1,\"秘\"],[12954,1,\"男\"],[12955,1,\"女\"],[12956,1,\"適\"],[12957,1,\"優\"],[12958,1,\"印\"],[12959,1,\"注\"],[12960,1,\"項\"],[12961,1,\"休\"],[12962,1,\"写\"],[12963,1,\"正\"],[12964,1,\"上\"],[12965,1,\"中\"],[12966,1,\"下\"],[12967,1,\"左\"],[12968,1,\"右\"],[12969,1,\"医\"],[12970,1,\"宗\"],[12971,1,\"学\"],[12972,1,\"監\"],[12973,1,\"企\"],[12974,1,\"資\"],[12975,1,\"協\"],[12976,1,\"夜\"],[12977,1,\"36\"],[12978,1,\"37\"],[12979,1,\"38\"],[12980,1,\"39\"],[12981,1,\"40\"],[12982,1,\"41\"],[12983,1,\"42\"],[12984,1,\"43\"],[12985,1,\"44\"],[12986,1,\"45\"],[12987,1,\"46\"],[12988,1,\"47\"],[12989,1,\"48\"],[12990,1,\"49\"],[12991,1,\"50\"],[12992,1,\"1月\"],[12993,1,\"2月\"],[12994,1,\"3月\"],[12995,1,\"4月\"],[12996,1,\"5月\"],[12997,1,\"6月\"],[12998,1,\"7月\"],[12999,1,\"8月\"],[13000,1,\"9月\"],[13001,1,\"10月\"],[13002,1,\"11月\"],[13003,1,\"12月\"],[13004,1,\"hg\"],[13005,1,\"erg\"],[13006,1,\"ev\"],[13007,1,\"ltd\"],[13008,1,\"ア\"],[13009,1,\"イ\"],[13010,1,\"ウ\"],[13011,1,\"エ\"],[13012,1,\"オ\"],[13013,1,\"カ\"],[13014,1,\"キ\"],[13015,1,\"ク\"],[13016,1,\"ケ\"],[13017,1,\"コ\"],[13018,1,\"サ\"],[13019,1,\"シ\"],[13020,1,\"ス\"],[13021,1,\"セ\"],[13022,1,\"ソ\"],[13023,1,\"タ\"],[13024,1,\"チ\"],[13025,1,\"ツ\"],[13026,1,\"テ\"],[13027,1,\"ト\"],[13028,1,\"ナ\"],[13029,1,\"ニ\"],[13030,1,\"ヌ\"],[13031,1,\"ネ\"],[13032,1,\"ノ\"],[13033,1,\"ハ\"],[13034,1,\"ヒ\"],[13035,1,\"フ\"],[13036,1,\"ヘ\"],[13037,1,\"ホ\"],[13038,1,\"マ\"],[13039,1,\"ミ\"],[13040,1,\"ム\"],[13041,1,\"メ\"],[13042,1,\"モ\"],[13043,1,\"ヤ\"],[13044,1,\"ユ\"],[13045,1,\"ヨ\"],[13046,1,\"ラ\"],[13047,1,\"リ\"],[13048,1,\"ル\"],[13049,1,\"レ\"],[13050,1,\"ロ\"],[13051,1,\"ワ\"],[13052,1,\"ヰ\"],[13053,1,\"ヱ\"],[13054,1,\"ヲ\"],[13055,1,\"令和\"],[13056,1,\"アパート\"],[13057,1,\"アルファ\"],[13058,1,\"アンペア\"],[13059,1,\"アール\"],[13060,1,\"イニング\"],[13061,1,\"インチ\"],[13062,1,\"ウォン\"],[13063,1,\"エスクード\"],[13064,1,\"エーカー\"],[13065,1,\"オンス\"],[13066,1,\"オーム\"],[13067,1,\"カイリ\"],[13068,1,\"カラット\"],[13069,1,\"カロリー\"],[13070,1,\"ガロン\"],[13071,1,\"ガンマ\"],[13072,1,\"ギガ\"],[13073,1,\"ギニー\"],[13074,1,\"キュリー\"],[13075,1,\"ギルダー\"],[13076,1,\"キロ\"],[13077,1,\"キログラム\"],[13078,1,\"キロメートル\"],[13079,1,\"キロワット\"],[13080,1,\"グラム\"],[13081,1,\"グラムトン\"],[13082,1,\"クルゼイロ\"],[13083,1,\"クローネ\"],[13084,1,\"ケース\"],[13085,1,\"コルナ\"],[13086,1,\"コーポ\"],[13087,1,\"サイクル\"],[13088,1,\"サンチーム\"],[13089,1,\"シリング\"],[13090,1,\"センチ\"],[13091,1,\"セント\"],[13092,1,\"ダース\"],[13093,1,\"デシ\"],[13094,1,\"ドル\"],[13095,1,\"トン\"],[13096,1,\"ナノ\"],[13097,1,\"ノット\"],[13098,1,\"ハイツ\"],[13099,1,\"パーセント\"],[13100,1,\"パーツ\"],[13101,1,\"バーレル\"],[13102,1,\"ピアストル\"],[13103,1,\"ピクル\"],[13104,1,\"ピコ\"],[13105,1,\"ビル\"],[13106,1,\"ファラッド\"],[13107,1,\"フィート\"],[13108,1,\"ブッシェル\"],[13109,1,\"フラン\"],[13110,1,\"ヘクタール\"],[13111,1,\"ペソ\"],[13112,1,\"ペニヒ\"],[13113,1,\"ヘルツ\"],[13114,1,\"ペンス\"],[13115,1,\"ページ\"],[13116,1,\"ベータ\"],[13117,1,\"ポイント\"],[13118,1,\"ボルト\"],[13119,1,\"ホン\"],[13120,1,\"ポンド\"],[13121,1,\"ホール\"],[13122,1,\"ホーン\"],[13123,1,\"マイクロ\"],[13124,1,\"マイル\"],[13125,1,\"マッハ\"],[13126,1,\"マルク\"],[13127,1,\"マンション\"],[13128,1,\"ミクロン\"],[13129,1,\"ミリ\"],[13130,1,\"ミリバール\"],[13131,1,\"メガ\"],[13132,1,\"メガトン\"],[13133,1,\"メートル\"],[13134,1,\"ヤード\"],[13135,1,\"ヤール\"],[13136,1,\"ユアン\"],[13137,1,\"リットル\"],[13138,1,\"リラ\"],[13139,1,\"ルピー\"],[13140,1,\"ルーブル\"],[13141,1,\"レム\"],[13142,1,\"レントゲン\"],[13143,1,\"ワット\"],[13144,1,\"0点\"],[13145,1,\"1点\"],[13146,1,\"2点\"],[13147,1,\"3点\"],[13148,1,\"4点\"],[13149,1,\"5点\"],[13150,1,\"6点\"],[13151,1,\"7点\"],[13152,1,\"8点\"],[13153,1,\"9点\"],[13154,1,\"10点\"],[13155,1,\"11点\"],[13156,1,\"12点\"],[13157,1,\"13点\"],[13158,1,\"14点\"],[13159,1,\"15点\"],[13160,1,\"16点\"],[13161,1,\"17点\"],[13162,1,\"18点\"],[13163,1,\"19点\"],[13164,1,\"20点\"],[13165,1,\"21点\"],[13166,1,\"22点\"],[13167,1,\"23点\"],[13168,1,\"24点\"],[13169,1,\"hpa\"],[13170,1,\"da\"],[13171,1,\"au\"],[13172,1,\"bar\"],[13173,1,\"ov\"],[13174,1,\"pc\"],[13175,1,\"dm\"],[13176,1,\"dm2\"],[13177,1,\"dm3\"],[13178,1,\"iu\"],[13179,1,\"平成\"],[13180,1,\"昭和\"],[13181,1,\"大正\"],[13182,1,\"明治\"],[13183,1,\"株式会社\"],[13184,1,\"pa\"],[13185,1,\"na\"],[13186,1,\"μa\"],[13187,1,\"ma\"],[13188,1,\"ka\"],[13189,1,\"kb\"],[13190,1,\"mb\"],[13191,1,\"gb\"],[13192,1,\"cal\"],[13193,1,\"kcal\"],[13194,1,\"pf\"],[13195,1,\"nf\"],[13196,1,\"μf\"],[13197,1,\"μg\"],[13198,1,\"mg\"],[13199,1,\"kg\"],[13200,1,\"hz\"],[13201,1,\"khz\"],[13202,1,\"mhz\"],[13203,1,\"ghz\"],[13204,1,\"thz\"],[13205,1,\"μl\"],[13206,1,\"ml\"],[13207,1,\"dl\"],[13208,1,\"kl\"],[13209,1,\"fm\"],[13210,1,\"nm\"],[13211,1,\"μm\"],[13212,1,\"mm\"],[13213,1,\"cm\"],[13214,1,\"km\"],[13215,1,\"mm2\"],[13216,1,\"cm2\"],[13217,1,\"m2\"],[13218,1,\"km2\"],[13219,1,\"mm3\"],[13220,1,\"cm3\"],[13221,1,\"m3\"],[13222,1,\"km3\"],[13223,1,\"m∕s\"],[13224,1,\"m∕s2\"],[13225,1,\"pa\"],[13226,1,\"kpa\"],[13227,1,\"mpa\"],[13228,1,\"gpa\"],[13229,1,\"rad\"],[13230,1,\"rad∕s\"],[13231,1,\"rad∕s2\"],[13232,1,\"ps\"],[13233,1,\"ns\"],[13234,1,\"μs\"],[13235,1,\"ms\"],[13236,1,\"pv\"],[13237,1,\"nv\"],[13238,1,\"μv\"],[13239,1,\"mv\"],[13240,1,\"kv\"],[13241,1,\"mv\"],[13242,1,\"pw\"],[13243,1,\"nw\"],[13244,1,\"μw\"],[13245,1,\"mw\"],[13246,1,\"kw\"],[13247,1,\"mw\"],[13248,1,\"kω\"],[13249,1,\"mω\"],[13250,3],[13251,1,\"bq\"],[13252,1,\"cc\"],[13253,1,\"cd\"],[13254,1,\"c∕kg\"],[13255,3],[13256,1,\"db\"],[13257,1,\"gy\"],[13258,1,\"ha\"],[13259,1,\"hp\"],[13260,1,\"in\"],[13261,1,\"kk\"],[13262,1,\"km\"],[13263,1,\"kt\"],[13264,1,\"lm\"],[13265,1,\"ln\"],[13266,1,\"log\"],[13267,1,\"lx\"],[13268,1,\"mb\"],[13269,1,\"mil\"],[13270,1,\"mol\"],[13271,1,\"ph\"],[13272,3],[13273,1,\"ppm\"],[13274,1,\"pr\"],[13275,1,\"sr\"],[13276,1,\"sv\"],[13277,1,\"wb\"],[13278,1,\"v∕m\"],[13279,1,\"a∕m\"],[13280,1,\"1日\"],[13281,1,\"2日\"],[13282,1,\"3日\"],[13283,1,\"4日\"],[13284,1,\"5日\"],[13285,1,\"6日\"],[13286,1,\"7日\"],[13287,1,\"8日\"],[13288,1,\"9日\"],[13289,1,\"10日\"],[13290,1,\"11日\"],[13291,1,\"12日\"],[13292,1,\"13日\"],[13293,1,\"14日\"],[13294,1,\"15日\"],[13295,1,\"16日\"],[13296,1,\"17日\"],[13297,1,\"18日\"],[13298,1,\"19日\"],[13299,1,\"20日\"],[13300,1,\"21日\"],[13301,1,\"22日\"],[13302,1,\"23日\"],[13303,1,\"24日\"],[13304,1,\"25日\"],[13305,1,\"26日\"],[13306,1,\"27日\"],[13307,1,\"28日\"],[13308,1,\"29日\"],[13309,1,\"30日\"],[13310,1,\"31日\"],[13311,1,\"gal\"],[[13312,19893],2],[[19894,19903],2],[[19904,19967],2],[[19968,40869],2],[[40870,40891],2],[[40892,40899],2],[[40900,40907],2],[40908,2],[[40909,40917],2],[[40918,40938],2],[[40939,40943],2],[[40944,40956],2],[[40957,40959],2],[[40960,42124],2],[[42125,42127],3],[[42128,42145],2],[[42146,42147],2],[[42148,42163],2],[42164,2],[[42165,42176],2],[42177,2],[[42178,42180],2],[42181,2],[42182,2],[[42183,42191],3],[[42192,42237],2],[[42238,42239],2],[[42240,42508],2],[[42509,42511],2],[[42512,42539],2],[[42540,42559],3],[42560,1,\"ꙁ\"],[42561,2],[42562,1,\"ꙃ\"],[42563,2],[42564,1,\"ꙅ\"],[42565,2],[42566,1,\"ꙇ\"],[42567,2],[42568,1,\"ꙉ\"],[42569,2],[42570,1,\"ꙋ\"],[42571,2],[42572,1,\"ꙍ\"],[42573,2],[42574,1,\"ꙏ\"],[42575,2],[42576,1,\"ꙑ\"],[42577,2],[42578,1,\"ꙓ\"],[42579,2],[42580,1,\"ꙕ\"],[42581,2],[42582,1,\"ꙗ\"],[42583,2],[42584,1,\"ꙙ\"],[42585,2],[42586,1,\"ꙛ\"],[42587,2],[42588,1,\"ꙝ\"],[42589,2],[42590,1,\"ꙟ\"],[42591,2],[42592,1,\"ꙡ\"],[42593,2],[42594,1,\"ꙣ\"],[42595,2],[42596,1,\"ꙥ\"],[42597,2],[42598,1,\"ꙧ\"],[42599,2],[42600,1,\"ꙩ\"],[42601,2],[42602,1,\"ꙫ\"],[42603,2],[42604,1,\"ꙭ\"],[[42605,42607],2],[[42608,42611],2],[[42612,42619],2],[[42620,42621],2],[42622,2],[42623,2],[42624,1,\"ꚁ\"],[42625,2],[42626,1,\"ꚃ\"],[42627,2],[42628,1,\"ꚅ\"],[42629,2],[42630,1,\"ꚇ\"],[42631,2],[42632,1,\"ꚉ\"],[42633,2],[42634,1,\"ꚋ\"],[42635,2],[42636,1,\"ꚍ\"],[42637,2],[42638,1,\"ꚏ\"],[42639,2],[42640,1,\"ꚑ\"],[42641,2],[42642,1,\"ꚓ\"],[42643,2],[42644,1,\"ꚕ\"],[42645,2],[42646,1,\"ꚗ\"],[42647,2],[42648,1,\"ꚙ\"],[42649,2],[42650,1,\"ꚛ\"],[42651,2],[42652,1,\"ъ\"],[42653,1,\"ь\"],[42654,2],[42655,2],[[42656,42725],2],[[42726,42735],2],[[42736,42737],2],[[42738,42743],2],[[42744,42751],3],[[42752,42774],2],[[42775,42778],2],[[42779,42783],2],[[42784,42785],2],[42786,1,\"ꜣ\"],[42787,2],[42788,1,\"ꜥ\"],[42789,2],[42790,1,\"ꜧ\"],[42791,2],[42792,1,\"ꜩ\"],[42793,2],[42794,1,\"ꜫ\"],[42795,2],[42796,1,\"ꜭ\"],[42797,2],[42798,1,\"ꜯ\"],[[42799,42801],2],[42802,1,\"ꜳ\"],[42803,2],[42804,1,\"ꜵ\"],[42805,2],[42806,1,\"ꜷ\"],[42807,2],[42808,1,\"ꜹ\"],[42809,2],[42810,1,\"ꜻ\"],[42811,2],[42812,1,\"ꜽ\"],[42813,2],[42814,1,\"ꜿ\"],[42815,2],[42816,1,\"ꝁ\"],[42817,2],[42818,1,\"ꝃ\"],[42819,2],[42820,1,\"ꝅ\"],[42821,2],[42822,1,\"ꝇ\"],[42823,2],[42824,1,\"ꝉ\"],[42825,2],[42826,1,\"ꝋ\"],[42827,2],[42828,1,\"ꝍ\"],[42829,2],[42830,1,\"ꝏ\"],[42831,2],[42832,1,\"ꝑ\"],[42833,2],[42834,1,\"ꝓ\"],[42835,2],[42836,1,\"ꝕ\"],[42837,2],[42838,1,\"ꝗ\"],[42839,2],[42840,1,\"ꝙ\"],[42841,2],[42842,1,\"ꝛ\"],[42843,2],[42844,1,\"ꝝ\"],[42845,2],[42846,1,\"ꝟ\"],[42847,2],[42848,1,\"ꝡ\"],[42849,2],[42850,1,\"ꝣ\"],[42851,2],[42852,1,\"ꝥ\"],[42853,2],[42854,1,\"ꝧ\"],[42855,2],[42856,1,\"ꝩ\"],[42857,2],[42858,1,\"ꝫ\"],[42859,2],[42860,1,\"ꝭ\"],[42861,2],[42862,1,\"ꝯ\"],[42863,2],[42864,1,\"ꝯ\"],[[42865,42872],2],[42873,1,\"ꝺ\"],[42874,2],[42875,1,\"ꝼ\"],[42876,2],[42877,1,\"ᵹ\"],[42878,1,\"ꝿ\"],[42879,2],[42880,1,\"ꞁ\"],[42881,2],[42882,1,\"ꞃ\"],[42883,2],[42884,1,\"ꞅ\"],[42885,2],[42886,1,\"ꞇ\"],[[42887,42888],2],[[42889,42890],2],[42891,1,\"ꞌ\"],[42892,2],[42893,1,\"ɥ\"],[42894,2],[42895,2],[42896,1,\"ꞑ\"],[42897,2],[42898,1,\"ꞓ\"],[42899,2],[[42900,42901],2],[42902,1,\"ꞗ\"],[42903,2],[42904,1,\"ꞙ\"],[42905,2],[42906,1,\"ꞛ\"],[42907,2],[42908,1,\"ꞝ\"],[42909,2],[42910,1,\"ꞟ\"],[42911,2],[42912,1,\"ꞡ\"],[42913,2],[42914,1,\"ꞣ\"],[42915,2],[42916,1,\"ꞥ\"],[42917,2],[42918,1,\"ꞧ\"],[42919,2],[42920,1,\"ꞩ\"],[42921,2],[42922,1,\"ɦ\"],[42923,1,\"ɜ\"],[42924,1,\"ɡ\"],[42925,1,\"ɬ\"],[42926,1,\"ɪ\"],[42927,2],[42928,1,\"ʞ\"],[42929,1,\"ʇ\"],[42930,1,\"ʝ\"],[42931,1,\"ꭓ\"],[42932,1,\"ꞵ\"],[42933,2],[42934,1,\"ꞷ\"],[42935,2],[42936,1,\"ꞹ\"],[42937,2],[42938,1,\"ꞻ\"],[42939,2],[42940,1,\"ꞽ\"],[42941,2],[42942,1,\"ꞿ\"],[42943,2],[42944,1,\"ꟁ\"],[42945,2],[42946,1,\"ꟃ\"],[42947,2],[42948,1,\"ꞔ\"],[42949,1,\"ʂ\"],[42950,1,\"ᶎ\"],[42951,1,\"ꟈ\"],[42952,2],[42953,1,\"ꟊ\"],[42954,2],[[42955,42959],3],[42960,1,\"ꟑ\"],[42961,2],[42962,3],[42963,2],[42964,3],[42965,2],[42966,1,\"ꟗ\"],[42967,2],[42968,1,\"ꟙ\"],[42969,2],[[42970,42993],3],[42994,1,\"c\"],[42995,1,\"f\"],[42996,1,\"q\"],[42997,1,\"ꟶ\"],[42998,2],[42999,2],[43000,1,\"ħ\"],[43001,1,\"œ\"],[43002,2],[[43003,43007],2],[[43008,43047],2],[[43048,43051],2],[43052,2],[[43053,43055],3],[[43056,43065],2],[[43066,43071],3],[[43072,43123],2],[[43124,43127],2],[[43128,43135],3],[[43136,43204],2],[43205,2],[[43206,43213],3],[[43214,43215],2],[[43216,43225],2],[[43226,43231],3],[[43232,43255],2],[[43256,43258],2],[43259,2],[43260,2],[43261,2],[[43262,43263],2],[[43264,43309],2],[[43310,43311],2],[[43312,43347],2],[[43348,43358],3],[43359,2],[[43360,43388],2],[[43389,43391],3],[[43392,43456],2],[[43457,43469],2],[43470,3],[[43471,43481],2],[[43482,43485],3],[[43486,43487],2],[[43488,43518],2],[43519,3],[[43520,43574],2],[[43575,43583],3],[[43584,43597],2],[[43598,43599],3],[[43600,43609],2],[[43610,43611],3],[[43612,43615],2],[[43616,43638],2],[[43639,43641],2],[[43642,43643],2],[[43644,43647],2],[[43648,43714],2],[[43715,43738],3],[[43739,43741],2],[[43742,43743],2],[[43744,43759],2],[[43760,43761],2],[[43762,43766],2],[[43767,43776],3],[[43777,43782],2],[[43783,43784],3],[[43785,43790],2],[[43791,43792],3],[[43793,43798],2],[[43799,43807],3],[[43808,43814],2],[43815,3],[[43816,43822],2],[43823,3],[[43824,43866],2],[43867,2],[43868,1,\"ꜧ\"],[43869,1,\"ꬷ\"],[43870,1,\"ɫ\"],[43871,1,\"ꭒ\"],[[43872,43875],2],[[43876,43877],2],[[43878,43879],2],[43880,2],[43881,1,\"ʍ\"],[[43882,43883],2],[[43884,43887],3],[43888,1,\"Ꭰ\"],[43889,1,\"Ꭱ\"],[43890,1,\"Ꭲ\"],[43891,1,\"Ꭳ\"],[43892,1,\"Ꭴ\"],[43893,1,\"Ꭵ\"],[43894,1,\"Ꭶ\"],[43895,1,\"Ꭷ\"],[43896,1,\"Ꭸ\"],[43897,1,\"Ꭹ\"],[43898,1,\"Ꭺ\"],[43899,1,\"Ꭻ\"],[43900,1,\"Ꭼ\"],[43901,1,\"Ꭽ\"],[43902,1,\"Ꭾ\"],[43903,1,\"Ꭿ\"],[43904,1,\"Ꮀ\"],[43905,1,\"Ꮁ\"],[43906,1,\"Ꮂ\"],[43907,1,\"Ꮃ\"],[43908,1,\"Ꮄ\"],[43909,1,\"Ꮅ\"],[43910,1,\"Ꮆ\"],[43911,1,\"Ꮇ\"],[43912,1,\"Ꮈ\"],[43913,1,\"Ꮉ\"],[43914,1,\"Ꮊ\"],[43915,1,\"Ꮋ\"],[43916,1,\"Ꮌ\"],[43917,1,\"Ꮍ\"],[43918,1,\"Ꮎ\"],[43919,1,\"Ꮏ\"],[43920,1,\"Ꮐ\"],[43921,1,\"Ꮑ\"],[43922,1,\"Ꮒ\"],[43923,1,\"Ꮓ\"],[43924,1,\"Ꮔ\"],[43925,1,\"Ꮕ\"],[43926,1,\"Ꮖ\"],[43927,1,\"Ꮗ\"],[43928,1,\"Ꮘ\"],[43929,1,\"Ꮙ\"],[43930,1,\"Ꮚ\"],[43931,1,\"Ꮛ\"],[43932,1,\"Ꮜ\"],[43933,1,\"Ꮝ\"],[43934,1,\"Ꮞ\"],[43935,1,\"Ꮟ\"],[43936,1,\"Ꮠ\"],[43937,1,\"Ꮡ\"],[43938,1,\"Ꮢ\"],[43939,1,\"Ꮣ\"],[43940,1,\"Ꮤ\"],[43941,1,\"Ꮥ\"],[43942,1,\"Ꮦ\"],[43943,1,\"Ꮧ\"],[43944,1,\"Ꮨ\"],[43945,1,\"Ꮩ\"],[43946,1,\"Ꮪ\"],[43947,1,\"Ꮫ\"],[43948,1,\"Ꮬ\"],[43949,1,\"Ꮭ\"],[43950,1,\"Ꮮ\"],[43951,1,\"Ꮯ\"],[43952,1,\"Ꮰ\"],[43953,1,\"Ꮱ\"],[43954,1,\"Ꮲ\"],[43955,1,\"Ꮳ\"],[43956,1,\"Ꮴ\"],[43957,1,\"Ꮵ\"],[43958,1,\"Ꮶ\"],[43959,1,\"Ꮷ\"],[43960,1,\"Ꮸ\"],[43961,1,\"Ꮹ\"],[43962,1,\"Ꮺ\"],[43963,1,\"Ꮻ\"],[43964,1,\"Ꮼ\"],[43965,1,\"Ꮽ\"],[43966,1,\"Ꮾ\"],[43967,1,\"Ꮿ\"],[[43968,44010],2],[44011,2],[[44012,44013],2],[[44014,44015],3],[[44016,44025],2],[[44026,44031],3],[[44032,55203],2],[[55204,55215],3],[[55216,55238],2],[[55239,55242],3],[[55243,55291],2],[[55292,55295],3],[[55296,57343],3],[[57344,63743],3],[63744,1,\"豈\"],[63745,1,\"更\"],[63746,1,\"車\"],[63747,1,\"賈\"],[63748,1,\"滑\"],[63749,1,\"串\"],[63750,1,\"句\"],[[63751,63752],1,\"龜\"],[63753,1,\"契\"],[63754,1,\"金\"],[63755,1,\"喇\"],[63756,1,\"奈\"],[63757,1,\"懶\"],[63758,1,\"癩\"],[63759,1,\"羅\"],[63760,1,\"蘿\"],[63761,1,\"螺\"],[63762,1,\"裸\"],[63763,1,\"邏\"],[63764,1,\"樂\"],[63765,1,\"洛\"],[63766,1,\"烙\"],[63767,1,\"珞\"],[63768,1,\"落\"],[63769,1,\"酪\"],[63770,1,\"駱\"],[63771,1,\"亂\"],[63772,1,\"卵\"],[63773,1,\"欄\"],[63774,1,\"爛\"],[63775,1,\"蘭\"],[63776,1,\"鸞\"],[63777,1,\"嵐\"],[63778,1,\"濫\"],[63779,1,\"藍\"],[63780,1,\"襤\"],[63781,1,\"拉\"],[63782,1,\"臘\"],[63783,1,\"蠟\"],[63784,1,\"廊\"],[63785,1,\"朗\"],[63786,1,\"浪\"],[63787,1,\"狼\"],[63788,1,\"郎\"],[63789,1,\"來\"],[63790,1,\"冷\"],[63791,1,\"勞\"],[63792,1,\"擄\"],[63793,1,\"櫓\"],[63794,1,\"爐\"],[63795,1,\"盧\"],[63796,1,\"老\"],[63797,1,\"蘆\"],[63798,1,\"虜\"],[63799,1,\"路\"],[63800,1,\"露\"],[63801,1,\"魯\"],[63802,1,\"鷺\"],[63803,1,\"碌\"],[63804,1,\"祿\"],[63805,1,\"綠\"],[63806,1,\"菉\"],[63807,1,\"錄\"],[63808,1,\"鹿\"],[63809,1,\"論\"],[63810,1,\"壟\"],[63811,1,\"弄\"],[63812,1,\"籠\"],[63813,1,\"聾\"],[63814,1,\"牢\"],[63815,1,\"磊\"],[63816,1,\"賂\"],[63817,1,\"雷\"],[63818,1,\"壘\"],[63819,1,\"屢\"],[63820,1,\"樓\"],[63821,1,\"淚\"],[63822,1,\"漏\"],[63823,1,\"累\"],[63824,1,\"縷\"],[63825,1,\"陋\"],[63826,1,\"勒\"],[63827,1,\"肋\"],[63828,1,\"凜\"],[63829,1,\"凌\"],[63830,1,\"稜\"],[63831,1,\"綾\"],[63832,1,\"菱\"],[63833,1,\"陵\"],[63834,1,\"讀\"],[63835,1,\"拏\"],[63836,1,\"樂\"],[63837,1,\"諾\"],[63838,1,\"丹\"],[63839,1,\"寧\"],[63840,1,\"怒\"],[63841,1,\"率\"],[63842,1,\"異\"],[63843,1,\"北\"],[63844,1,\"磻\"],[63845,1,\"便\"],[63846,1,\"復\"],[63847,1,\"不\"],[63848,1,\"泌\"],[63849,1,\"數\"],[63850,1,\"索\"],[63851,1,\"參\"],[63852,1,\"塞\"],[63853,1,\"省\"],[63854,1,\"葉\"],[63855,1,\"說\"],[63856,1,\"殺\"],[63857,1,\"辰\"],[63858,1,\"沈\"],[63859,1,\"拾\"],[63860,1,\"若\"],[63861,1,\"掠\"],[63862,1,\"略\"],[63863,1,\"亮\"],[63864,1,\"兩\"],[63865,1,\"凉\"],[63866,1,\"梁\"],[63867,1,\"糧\"],[63868,1,\"良\"],[63869,1,\"諒\"],[63870,1,\"量\"],[63871,1,\"勵\"],[63872,1,\"呂\"],[63873,1,\"女\"],[63874,1,\"廬\"],[63875,1,\"旅\"],[63876,1,\"濾\"],[63877,1,\"礪\"],[63878,1,\"閭\"],[63879,1,\"驪\"],[63880,1,\"麗\"],[63881,1,\"黎\"],[63882,1,\"力\"],[63883,1,\"曆\"],[63884,1,\"歷\"],[63885,1,\"轢\"],[63886,1,\"年\"],[63887,1,\"憐\"],[63888,1,\"戀\"],[63889,1,\"撚\"],[63890,1,\"漣\"],[63891,1,\"煉\"],[63892,1,\"璉\"],[63893,1,\"秊\"],[63894,1,\"練\"],[63895,1,\"聯\"],[63896,1,\"輦\"],[63897,1,\"蓮\"],[63898,1,\"連\"],[63899,1,\"鍊\"],[63900,1,\"列\"],[63901,1,\"劣\"],[63902,1,\"咽\"],[63903,1,\"烈\"],[63904,1,\"裂\"],[63905,1,\"說\"],[63906,1,\"廉\"],[63907,1,\"念\"],[63908,1,\"捻\"],[63909,1,\"殮\"],[63910,1,\"簾\"],[63911,1,\"獵\"],[63912,1,\"令\"],[63913,1,\"囹\"],[63914,1,\"寧\"],[63915,1,\"嶺\"],[63916,1,\"怜\"],[63917,1,\"玲\"],[63918,1,\"瑩\"],[63919,1,\"羚\"],[63920,1,\"聆\"],[63921,1,\"鈴\"],[63922,1,\"零\"],[63923,1,\"靈\"],[63924,1,\"領\"],[63925,1,\"例\"],[63926,1,\"禮\"],[63927,1,\"醴\"],[63928,1,\"隸\"],[63929,1,\"惡\"],[63930,1,\"了\"],[63931,1,\"僚\"],[63932,1,\"寮\"],[63933,1,\"尿\"],[63934,1,\"料\"],[63935,1,\"樂\"],[63936,1,\"燎\"],[63937,1,\"療\"],[63938,1,\"蓼\"],[63939,1,\"遼\"],[63940,1,\"龍\"],[63941,1,\"暈\"],[63942,1,\"阮\"],[63943,1,\"劉\"],[63944,1,\"杻\"],[63945,1,\"柳\"],[63946,1,\"流\"],[63947,1,\"溜\"],[63948,1,\"琉\"],[63949,1,\"留\"],[63950,1,\"硫\"],[63951,1,\"紐\"],[63952,1,\"類\"],[63953,1,\"六\"],[63954,1,\"戮\"],[63955,1,\"陸\"],[63956,1,\"倫\"],[63957,1,\"崙\"],[63958,1,\"淪\"],[63959,1,\"輪\"],[63960,1,\"律\"],[63961,1,\"慄\"],[63962,1,\"栗\"],[63963,1,\"率\"],[63964,1,\"隆\"],[63965,1,\"利\"],[63966,1,\"吏\"],[63967,1,\"履\"],[63968,1,\"易\"],[63969,1,\"李\"],[63970,1,\"梨\"],[63971,1,\"泥\"],[63972,1,\"理\"],[63973,1,\"痢\"],[63974,1,\"罹\"],[63975,1,\"裏\"],[63976,1,\"裡\"],[63977,1,\"里\"],[63978,1,\"離\"],[63979,1,\"匿\"],[63980,1,\"溺\"],[63981,1,\"吝\"],[63982,1,\"燐\"],[63983,1,\"璘\"],[63984,1,\"藺\"],[63985,1,\"隣\"],[63986,1,\"鱗\"],[63987,1,\"麟\"],[63988,1,\"林\"],[63989,1,\"淋\"],[63990,1,\"臨\"],[63991,1,\"立\"],[63992,1,\"笠\"],[63993,1,\"粒\"],[63994,1,\"狀\"],[63995,1,\"炙\"],[63996,1,\"識\"],[63997,1,\"什\"],[63998,1,\"茶\"],[63999,1,\"刺\"],[64000,1,\"切\"],[64001,1,\"度\"],[64002,1,\"拓\"],[64003,1,\"糖\"],[64004,1,\"宅\"],[64005,1,\"洞\"],[64006,1,\"暴\"],[64007,1,\"輻\"],[64008,1,\"行\"],[64009,1,\"降\"],[64010,1,\"見\"],[64011,1,\"廓\"],[64012,1,\"兀\"],[64013,1,\"嗀\"],[[64014,64015],2],[64016,1,\"塚\"],[64017,2],[64018,1,\"晴\"],[[64019,64020],2],[64021,1,\"凞\"],[64022,1,\"猪\"],[64023,1,\"益\"],[64024,1,\"礼\"],[64025,1,\"神\"],[64026,1,\"祥\"],[64027,1,\"福\"],[64028,1,\"靖\"],[64029,1,\"精\"],[64030,1,\"羽\"],[64031,2],[64032,1,\"蘒\"],[64033,2],[64034,1,\"諸\"],[[64035,64036],2],[64037,1,\"逸\"],[64038,1,\"都\"],[[64039,64041],2],[64042,1,\"飯\"],[64043,1,\"飼\"],[64044,1,\"館\"],[64045,1,\"鶴\"],[64046,1,\"郞\"],[64047,1,\"隷\"],[64048,1,\"侮\"],[64049,1,\"僧\"],[64050,1,\"免\"],[64051,1,\"勉\"],[64052,1,\"勤\"],[64053,1,\"卑\"],[64054,1,\"喝\"],[64055,1,\"嘆\"],[64056,1,\"器\"],[64057,1,\"塀\"],[64058,1,\"墨\"],[64059,1,\"層\"],[64060,1,\"屮\"],[64061,1,\"悔\"],[64062,1,\"慨\"],[64063,1,\"憎\"],[64064,1,\"懲\"],[64065,1,\"敏\"],[64066,1,\"既\"],[64067,1,\"暑\"],[64068,1,\"梅\"],[64069,1,\"海\"],[64070,1,\"渚\"],[64071,1,\"漢\"],[64072,1,\"煮\"],[64073,1,\"爫\"],[64074,1,\"琢\"],[64075,1,\"碑\"],[64076,1,\"社\"],[64077,1,\"祉\"],[64078,1,\"祈\"],[64079,1,\"祐\"],[64080,1,\"祖\"],[64081,1,\"祝\"],[64082,1,\"禍\"],[64083,1,\"禎\"],[64084,1,\"穀\"],[64085,1,\"突\"],[64086,1,\"節\"],[64087,1,\"練\"],[64088,1,\"縉\"],[64089,1,\"繁\"],[64090,1,\"署\"],[64091,1,\"者\"],[64092,1,\"臭\"],[[64093,64094],1,\"艹\"],[64095,1,\"著\"],[64096,1,\"褐\"],[64097,1,\"視\"],[64098,1,\"謁\"],[64099,1,\"謹\"],[64100,1,\"賓\"],[64101,1,\"贈\"],[64102,1,\"辶\"],[64103,1,\"逸\"],[64104,1,\"難\"],[64105,1,\"響\"],[64106,1,\"頻\"],[64107,1,\"恵\"],[64108,1,\"𤋮\"],[64109,1,\"舘\"],[[64110,64111],3],[64112,1,\"並\"],[64113,1,\"况\"],[64114,1,\"全\"],[64115,1,\"侀\"],[64116,1,\"充\"],[64117,1,\"冀\"],[64118,1,\"勇\"],[64119,1,\"勺\"],[64120,1,\"喝\"],[64121,1,\"啕\"],[64122,1,\"喙\"],[64123,1,\"嗢\"],[64124,1,\"塚\"],[64125,1,\"墳\"],[64126,1,\"奄\"],[64127,1,\"奔\"],[64128,1,\"婢\"],[64129,1,\"嬨\"],[64130,1,\"廒\"],[64131,1,\"廙\"],[64132,1,\"彩\"],[64133,1,\"徭\"],[64134,1,\"惘\"],[64135,1,\"慎\"],[64136,1,\"愈\"],[64137,1,\"憎\"],[64138,1,\"慠\"],[64139,1,\"懲\"],[64140,1,\"戴\"],[64141,1,\"揄\"],[64142,1,\"搜\"],[64143,1,\"摒\"],[64144,1,\"敖\"],[64145,1,\"晴\"],[64146,1,\"朗\"],[64147,1,\"望\"],[64148,1,\"杖\"],[64149,1,\"歹\"],[64150,1,\"殺\"],[64151,1,\"流\"],[64152,1,\"滛\"],[64153,1,\"滋\"],[64154,1,\"漢\"],[64155,1,\"瀞\"],[64156,1,\"煮\"],[64157,1,\"瞧\"],[64158,1,\"爵\"],[64159,1,\"犯\"],[64160,1,\"猪\"],[64161,1,\"瑱\"],[64162,1,\"甆\"],[64163,1,\"画\"],[64164,1,\"瘝\"],[64165,1,\"瘟\"],[64166,1,\"益\"],[64167,1,\"盛\"],[64168,1,\"直\"],[64169,1,\"睊\"],[64170,1,\"着\"],[64171,1,\"磌\"],[64172,1,\"窱\"],[64173,1,\"節\"],[64174,1,\"类\"],[64175,1,\"絛\"],[64176,1,\"練\"],[64177,1,\"缾\"],[64178,1,\"者\"],[64179,1,\"荒\"],[64180,1,\"華\"],[64181,1,\"蝹\"],[64182,1,\"襁\"],[64183,1,\"覆\"],[64184,1,\"視\"],[64185,1,\"調\"],[64186,1,\"諸\"],[64187,1,\"請\"],[64188,1,\"謁\"],[64189,1,\"諾\"],[64190,1,\"諭\"],[64191,1,\"謹\"],[64192,1,\"變\"],[64193,1,\"贈\"],[64194,1,\"輸\"],[64195,1,\"遲\"],[64196,1,\"醙\"],[64197,1,\"鉶\"],[64198,1,\"陼\"],[64199,1,\"難\"],[64200,1,\"靖\"],[64201,1,\"韛\"],[64202,1,\"響\"],[64203,1,\"頋\"],[64204,1,\"頻\"],[64205,1,\"鬒\"],[64206,1,\"龜\"],[64207,1,\"𢡊\"],[64208,1,\"𢡄\"],[64209,1,\"𣏕\"],[64210,1,\"㮝\"],[64211,1,\"䀘\"],[64212,1,\"䀹\"],[64213,1,\"𥉉\"],[64214,1,\"𥳐\"],[64215,1,\"𧻓\"],[64216,1,\"齃\"],[64217,1,\"龎\"],[[64218,64255],3],[64256,1,\"ff\"],[64257,1,\"fi\"],[64258,1,\"fl\"],[64259,1,\"ffi\"],[64260,1,\"ffl\"],[[64261,64262],1,\"st\"],[[64263,64274],3],[64275,1,\"մն\"],[64276,1,\"մե\"],[64277,1,\"մի\"],[64278,1,\"վն\"],[64279,1,\"մխ\"],[[64280,64284],3],[64285,1,\"יִ\"],[64286,2],[64287,1,\"ײַ\"],[64288,1,\"ע\"],[64289,1,\"א\"],[64290,1,\"ד\"],[64291,1,\"ה\"],[64292,1,\"כ\"],[64293,1,\"ל\"],[64294,1,\"ם\"],[64295,1,\"ר\"],[64296,1,\"ת\"],[64297,5,\"+\"],[64298,1,\"שׁ\"],[64299,1,\"שׂ\"],[64300,1,\"שּׁ\"],[64301,1,\"שּׂ\"],[64302,1,\"אַ\"],[64303,1,\"אָ\"],[64304,1,\"אּ\"],[64305,1,\"בּ\"],[64306,1,\"גּ\"],[64307,1,\"דּ\"],[64308,1,\"הּ\"],[64309,1,\"וּ\"],[64310,1,\"זּ\"],[64311,3],[64312,1,\"טּ\"],[64313,1,\"יּ\"],[64314,1,\"ךּ\"],[64315,1,\"כּ\"],[64316,1,\"לּ\"],[64317,3],[64318,1,\"מּ\"],[64319,3],[64320,1,\"נּ\"],[64321,1,\"סּ\"],[64322,3],[64323,1,\"ףּ\"],[64324,1,\"פּ\"],[64325,3],[64326,1,\"צּ\"],[64327,1,\"קּ\"],[64328,1,\"רּ\"],[64329,1,\"שּ\"],[64330,1,\"תּ\"],[64331,1,\"וֹ\"],[64332,1,\"בֿ\"],[64333,1,\"כֿ\"],[64334,1,\"פֿ\"],[64335,1,\"אל\"],[[64336,64337],1,\"ٱ\"],[[64338,64341],1,\"ٻ\"],[[64342,64345],1,\"پ\"],[[64346,64349],1,\"ڀ\"],[[64350,64353],1,\"ٺ\"],[[64354,64357],1,\"ٿ\"],[[64358,64361],1,\"ٹ\"],[[64362,64365],1,\"ڤ\"],[[64366,64369],1,\"ڦ\"],[[64370,64373],1,\"ڄ\"],[[64374,64377],1,\"ڃ\"],[[64378,64381],1,\"چ\"],[[64382,64385],1,\"ڇ\"],[[64386,64387],1,\"ڍ\"],[[64388,64389],1,\"ڌ\"],[[64390,64391],1,\"ڎ\"],[[64392,64393],1,\"ڈ\"],[[64394,64395],1,\"ژ\"],[[64396,64397],1,\"ڑ\"],[[64398,64401],1,\"ک\"],[[64402,64405],1,\"گ\"],[[64406,64409],1,\"ڳ\"],[[64410,64413],1,\"ڱ\"],[[64414,64415],1,\"ں\"],[[64416,64419],1,\"ڻ\"],[[64420,64421],1,\"ۀ\"],[[64422,64425],1,\"ہ\"],[[64426,64429],1,\"ھ\"],[[64430,64431],1,\"ے\"],[[64432,64433],1,\"ۓ\"],[[64434,64449],2],[64450,2],[[64451,64466],3],[[64467,64470],1,\"ڭ\"],[[64471,64472],1,\"ۇ\"],[[64473,64474],1,\"ۆ\"],[[64475,64476],1,\"ۈ\"],[64477,1,\"ۇٴ\"],[[64478,64479],1,\"ۋ\"],[[64480,64481],1,\"ۅ\"],[[64482,64483],1,\"ۉ\"],[[64484,64487],1,\"ې\"],[[64488,64489],1,\"ى\"],[[64490,64491],1,\"ئا\"],[[64492,64493],1,\"ئە\"],[[64494,64495],1,\"ئو\"],[[64496,64497],1,\"ئۇ\"],[[64498,64499],1,\"ئۆ\"],[[64500,64501],1,\"ئۈ\"],[[64502,64504],1,\"ئې\"],[[64505,64507],1,\"ئى\"],[[64508,64511],1,\"ی\"],[64512,1,\"ئج\"],[64513,1,\"ئح\"],[64514,1,\"ئم\"],[64515,1,\"ئى\"],[64516,1,\"ئي\"],[64517,1,\"بج\"],[64518,1,\"بح\"],[64519,1,\"بخ\"],[64520,1,\"بم\"],[64521,1,\"بى\"],[64522,1,\"بي\"],[64523,1,\"تج\"],[64524,1,\"تح\"],[64525,1,\"تخ\"],[64526,1,\"تم\"],[64527,1,\"تى\"],[64528,1,\"تي\"],[64529,1,\"ثج\"],[64530,1,\"ثم\"],[64531,1,\"ثى\"],[64532,1,\"ثي\"],[64533,1,\"جح\"],[64534,1,\"جم\"],[64535,1,\"حج\"],[64536,1,\"حم\"],[64537,1,\"خج\"],[64538,1,\"خح\"],[64539,1,\"خم\"],[64540,1,\"سج\"],[64541,1,\"سح\"],[64542,1,\"سخ\"],[64543,1,\"سم\"],[64544,1,\"صح\"],[64545,1,\"صم\"],[64546,1,\"ضج\"],[64547,1,\"ضح\"],[64548,1,\"ضخ\"],[64549,1,\"ضم\"],[64550,1,\"طح\"],[64551,1,\"طم\"],[64552,1,\"ظم\"],[64553,1,\"عج\"],[64554,1,\"عم\"],[64555,1,\"غج\"],[64556,1,\"غم\"],[64557,1,\"فج\"],[64558,1,\"فح\"],[64559,1,\"فخ\"],[64560,1,\"فم\"],[64561,1,\"فى\"],[64562,1,\"في\"],[64563,1,\"قح\"],[64564,1,\"قم\"],[64565,1,\"قى\"],[64566,1,\"قي\"],[64567,1,\"كا\"],[64568,1,\"كج\"],[64569,1,\"كح\"],[64570,1,\"كخ\"],[64571,1,\"كل\"],[64572,1,\"كم\"],[64573,1,\"كى\"],[64574,1,\"كي\"],[64575,1,\"لج\"],[64576,1,\"لح\"],[64577,1,\"لخ\"],[64578,1,\"لم\"],[64579,1,\"لى\"],[64580,1,\"لي\"],[64581,1,\"مج\"],[64582,1,\"مح\"],[64583,1,\"مخ\"],[64584,1,\"مم\"],[64585,1,\"مى\"],[64586,1,\"مي\"],[64587,1,\"نج\"],[64588,1,\"نح\"],[64589,1,\"نخ\"],[64590,1,\"نم\"],[64591,1,\"نى\"],[64592,1,\"ني\"],[64593,1,\"هج\"],[64594,1,\"هم\"],[64595,1,\"هى\"],[64596,1,\"هي\"],[64597,1,\"يج\"],[64598,1,\"يح\"],[64599,1,\"يخ\"],[64600,1,\"يم\"],[64601,1,\"يى\"],[64602,1,\"يي\"],[64603,1,\"ذٰ\"],[64604,1,\"رٰ\"],[64605,1,\"ىٰ\"],[64606,5,\" ٌّ\"],[64607,5,\" ٍّ\"],[64608,5,\" َّ\"],[64609,5,\" ُّ\"],[64610,5,\" ِّ\"],[64611,5,\" ّٰ\"],[64612,1,\"ئر\"],[64613,1,\"ئز\"],[64614,1,\"ئم\"],[64615,1,\"ئن\"],[64616,1,\"ئى\"],[64617,1,\"ئي\"],[64618,1,\"بر\"],[64619,1,\"بز\"],[64620,1,\"بم\"],[64621,1,\"بن\"],[64622,1,\"بى\"],[64623,1,\"بي\"],[64624,1,\"تر\"],[64625,1,\"تز\"],[64626,1,\"تم\"],[64627,1,\"تن\"],[64628,1,\"تى\"],[64629,1,\"تي\"],[64630,1,\"ثر\"],[64631,1,\"ثز\"],[64632,1,\"ثم\"],[64633,1,\"ثن\"],[64634,1,\"ثى\"],[64635,1,\"ثي\"],[64636,1,\"فى\"],[64637,1,\"في\"],[64638,1,\"قى\"],[64639,1,\"قي\"],[64640,1,\"كا\"],[64641,1,\"كل\"],[64642,1,\"كم\"],[64643,1,\"كى\"],[64644,1,\"كي\"],[64645,1,\"لم\"],[64646,1,\"لى\"],[64647,1,\"لي\"],[64648,1,\"ما\"],[64649,1,\"مم\"],[64650,1,\"نر\"],[64651,1,\"نز\"],[64652,1,\"نم\"],[64653,1,\"نن\"],[64654,1,\"نى\"],[64655,1,\"ني\"],[64656,1,\"ىٰ\"],[64657,1,\"ير\"],[64658,1,\"يز\"],[64659,1,\"يم\"],[64660,1,\"ين\"],[64661,1,\"يى\"],[64662,1,\"يي\"],[64663,1,\"ئج\"],[64664,1,\"ئح\"],[64665,1,\"ئخ\"],[64666,1,\"ئم\"],[64667,1,\"ئه\"],[64668,1,\"بج\"],[64669,1,\"بح\"],[64670,1,\"بخ\"],[64671,1,\"بم\"],[64672,1,\"به\"],[64673,1,\"تج\"],[64674,1,\"تح\"],[64675,1,\"تخ\"],[64676,1,\"تم\"],[64677,1,\"ته\"],[64678,1,\"ثم\"],[64679,1,\"جح\"],[64680,1,\"جم\"],[64681,1,\"حج\"],[64682,1,\"حم\"],[64683,1,\"خج\"],[64684,1,\"خم\"],[64685,1,\"سج\"],[64686,1,\"سح\"],[64687,1,\"سخ\"],[64688,1,\"سم\"],[64689,1,\"صح\"],[64690,1,\"صخ\"],[64691,1,\"صم\"],[64692,1,\"ضج\"],[64693,1,\"ضح\"],[64694,1,\"ضخ\"],[64695,1,\"ضم\"],[64696,1,\"طح\"],[64697,1,\"ظم\"],[64698,1,\"عج\"],[64699,1,\"عم\"],[64700,1,\"غج\"],[64701,1,\"غم\"],[64702,1,\"فج\"],[64703,1,\"فح\"],[64704,1,\"فخ\"],[64705,1,\"فم\"],[64706,1,\"قح\"],[64707,1,\"قم\"],[64708,1,\"كج\"],[64709,1,\"كح\"],[64710,1,\"كخ\"],[64711,1,\"كل\"],[64712,1,\"كم\"],[64713,1,\"لج\"],[64714,1,\"لح\"],[64715,1,\"لخ\"],[64716,1,\"لم\"],[64717,1,\"له\"],[64718,1,\"مج\"],[64719,1,\"مح\"],[64720,1,\"مخ\"],[64721,1,\"مم\"],[64722,1,\"نج\"],[64723,1,\"نح\"],[64724,1,\"نخ\"],[64725,1,\"نم\"],[64726,1,\"نه\"],[64727,1,\"هج\"],[64728,1,\"هم\"],[64729,1,\"هٰ\"],[64730,1,\"يج\"],[64731,1,\"يح\"],[64732,1,\"يخ\"],[64733,1,\"يم\"],[64734,1,\"يه\"],[64735,1,\"ئم\"],[64736,1,\"ئه\"],[64737,1,\"بم\"],[64738,1,\"به\"],[64739,1,\"تم\"],[64740,1,\"ته\"],[64741,1,\"ثم\"],[64742,1,\"ثه\"],[64743,1,\"سم\"],[64744,1,\"سه\"],[64745,1,\"شم\"],[64746,1,\"شه\"],[64747,1,\"كل\"],[64748,1,\"كم\"],[64749,1,\"لم\"],[64750,1,\"نم\"],[64751,1,\"نه\"],[64752,1,\"يم\"],[64753,1,\"يه\"],[64754,1,\"ـَّ\"],[64755,1,\"ـُّ\"],[64756,1,\"ـِّ\"],[64757,1,\"طى\"],[64758,1,\"طي\"],[64759,1,\"عى\"],[64760,1,\"عي\"],[64761,1,\"غى\"],[64762,1,\"غي\"],[64763,1,\"سى\"],[64764,1,\"سي\"],[64765,1,\"شى\"],[64766,1,\"شي\"],[64767,1,\"حى\"],[64768,1,\"حي\"],[64769,1,\"جى\"],[64770,1,\"جي\"],[64771,1,\"خى\"],[64772,1,\"خي\"],[64773,1,\"صى\"],[64774,1,\"صي\"],[64775,1,\"ضى\"],[64776,1,\"ضي\"],[64777,1,\"شج\"],[64778,1,\"شح\"],[64779,1,\"شخ\"],[64780,1,\"شم\"],[64781,1,\"شر\"],[64782,1,\"سر\"],[64783,1,\"صر\"],[64784,1,\"ضر\"],[64785,1,\"طى\"],[64786,1,\"طي\"],[64787,1,\"عى\"],[64788,1,\"عي\"],[64789,1,\"غى\"],[64790,1,\"غي\"],[64791,1,\"سى\"],[64792,1,\"سي\"],[64793,1,\"شى\"],[64794,1,\"شي\"],[64795,1,\"حى\"],[64796,1,\"حي\"],[64797,1,\"جى\"],[64798,1,\"جي\"],[64799,1,\"خى\"],[64800,1,\"خي\"],[64801,1,\"صى\"],[64802,1,\"صي\"],[64803,1,\"ضى\"],[64804,1,\"ضي\"],[64805,1,\"شج\"],[64806,1,\"شح\"],[64807,1,\"شخ\"],[64808,1,\"شم\"],[64809,1,\"شر\"],[64810,1,\"سر\"],[64811,1,\"صر\"],[64812,1,\"ضر\"],[64813,1,\"شج\"],[64814,1,\"شح\"],[64815,1,\"شخ\"],[64816,1,\"شم\"],[64817,1,\"سه\"],[64818,1,\"شه\"],[64819,1,\"طم\"],[64820,1,\"سج\"],[64821,1,\"سح\"],[64822,1,\"سخ\"],[64823,1,\"شج\"],[64824,1,\"شح\"],[64825,1,\"شخ\"],[64826,1,\"طم\"],[64827,1,\"ظم\"],[[64828,64829],1,\"اً\"],[[64830,64831],2],[[64832,64847],2],[64848,1,\"تجم\"],[[64849,64850],1,\"تحج\"],[64851,1,\"تحم\"],[64852,1,\"تخم\"],[64853,1,\"تمج\"],[64854,1,\"تمح\"],[64855,1,\"تمخ\"],[[64856,64857],1,\"جمح\"],[64858,1,\"حمي\"],[64859,1,\"حمى\"],[64860,1,\"سحج\"],[64861,1,\"سجح\"],[64862,1,\"سجى\"],[[64863,64864],1,\"سمح\"],[64865,1,\"سمج\"],[[64866,64867],1,\"سمم\"],[[64868,64869],1,\"صحح\"],[64870,1,\"صمم\"],[[64871,64872],1,\"شحم\"],[64873,1,\"شجي\"],[[64874,64875],1,\"شمخ\"],[[64876,64877],1,\"شمم\"],[64878,1,\"ضحى\"],[[64879,64880],1,\"ضخم\"],[[64881,64882],1,\"طمح\"],[64883,1,\"طمم\"],[64884,1,\"طمي\"],[64885,1,\"عجم\"],[[64886,64887],1,\"عمم\"],[64888,1,\"عمى\"],[64889,1,\"غمم\"],[64890,1,\"غمي\"],[64891,1,\"غمى\"],[[64892,64893],1,\"فخم\"],[64894,1,\"قمح\"],[64895,1,\"قمم\"],[64896,1,\"لحم\"],[64897,1,\"لحي\"],[64898,1,\"لحى\"],[[64899,64900],1,\"لجج\"],[[64901,64902],1,\"لخم\"],[[64903,64904],1,\"لمح\"],[64905,1,\"محج\"],[64906,1,\"محم\"],[64907,1,\"محي\"],[64908,1,\"مجح\"],[64909,1,\"مجم\"],[64910,1,\"مخج\"],[64911,1,\"مخم\"],[[64912,64913],3],[64914,1,\"مجخ\"],[64915,1,\"همج\"],[64916,1,\"همم\"],[64917,1,\"نحم\"],[64918,1,\"نحى\"],[[64919,64920],1,\"نجم\"],[64921,1,\"نجى\"],[64922,1,\"نمي\"],[64923,1,\"نمى\"],[[64924,64925],1,\"يمم\"],[64926,1,\"بخي\"],[64927,1,\"تجي\"],[64928,1,\"تجى\"],[64929,1,\"تخي\"],[64930,1,\"تخى\"],[64931,1,\"تمي\"],[64932,1,\"تمى\"],[64933,1,\"جمي\"],[64934,1,\"جحى\"],[64935,1,\"جمى\"],[64936,1,\"سخى\"],[64937,1,\"صحي\"],[64938,1,\"شحي\"],[64939,1,\"ضحي\"],[64940,1,\"لجي\"],[64941,1,\"لمي\"],[64942,1,\"يحي\"],[64943,1,\"يجي\"],[64944,1,\"يمي\"],[64945,1,\"ممي\"],[64946,1,\"قمي\"],[64947,1,\"نحي\"],[64948,1,\"قمح\"],[64949,1,\"لحم\"],[64950,1,\"عمي\"],[64951,1,\"كمي\"],[64952,1,\"نجح\"],[64953,1,\"مخي\"],[64954,1,\"لجم\"],[64955,1,\"كمم\"],[64956,1,\"لجم\"],[64957,1,\"نجح\"],[64958,1,\"جحي\"],[64959,1,\"حجي\"],[64960,1,\"مجي\"],[64961,1,\"فمي\"],[64962,1,\"بحي\"],[64963,1,\"كمم\"],[64964,1,\"عجم\"],[64965,1,\"صمم\"],[64966,1,\"سخي\"],[64967,1,\"نجي\"],[[64968,64974],3],[64975,2],[[64976,65007],3],[65008,1,\"صلے\"],[65009,1,\"قلے\"],[65010,1,\"الله\"],[65011,1,\"اكبر\"],[65012,1,\"محمد\"],[65013,1,\"صلعم\"],[65014,1,\"رسول\"],[65015,1,\"عليه\"],[65016,1,\"وسلم\"],[65017,1,\"صلى\"],[65018,5,\"صلى الله عليه وسلم\"],[65019,5,\"جل جلاله\"],[65020,1,\"ریال\"],[65021,2],[[65022,65023],2],[[65024,65039],7],[65040,5,\",\"],[65041,1,\"、\"],[65042,3],[65043,5,\":\"],[65044,5,\";\"],[65045,5,\"!\"],[65046,5,\"?\"],[65047,1,\"〖\"],[65048,1,\"〗\"],[65049,3],[[65050,65055],3],[[65056,65059],2],[[65060,65062],2],[[65063,65069],2],[[65070,65071],2],[65072,3],[65073,1,\"—\"],[65074,1,\"–\"],[[65075,65076],5,\"_\"],[65077,5,\"(\"],[65078,5,\")\"],[65079,5,\"{\"],[65080,5,\"}\"],[65081,1,\"〔\"],[65082,1,\"〕\"],[65083,1,\"【\"],[65084,1,\"】\"],[65085,1,\"《\"],[65086,1,\"》\"],[65087,1,\"〈\"],[65088,1,\"〉\"],[65089,1,\"「\"],[65090,1,\"」\"],[65091,1,\"『\"],[65092,1,\"』\"],[[65093,65094],2],[65095,5,\"[\"],[65096,5,\"]\"],[[65097,65100],5,\" ̅\"],[[65101,65103],5,\"_\"],[65104,5,\",\"],[65105,1,\"、\"],[65106,3],[65107,3],[65108,5,\";\"],[65109,5,\":\"],[65110,5,\"?\"],[65111,5,\"!\"],[65112,1,\"—\"],[65113,5,\"(\"],[65114,5,\")\"],[65115,5,\"{\"],[65116,5,\"}\"],[65117,1,\"〔\"],[65118,1,\"〕\"],[65119,5,\"#\"],[65120,5,\"&\"],[65121,5,\"*\"],[65122,5,\"+\"],[65123,1,\"-\"],[65124,5,\"<\"],[65125,5,\">\"],[65126,5,\"=\"],[65127,3],[65128,5,\"\\\\\"],[65129,5,\"$\"],[65130,5,\"%\"],[65131,5,\"@\"],[[65132,65135],3],[65136,5,\" ً\"],[65137,1,\"ـً\"],[65138,5,\" ٌ\"],[65139,2],[65140,5,\" ٍ\"],[65141,3],[65142,5,\" َ\"],[65143,1,\"ـَ\"],[65144,5,\" ُ\"],[65145,1,\"ـُ\"],[65146,5,\" ِ\"],[65147,1,\"ـِ\"],[65148,5,\" ّ\"],[65149,1,\"ـّ\"],[65150,5,\" ْ\"],[65151,1,\"ـْ\"],[65152,1,\"ء\"],[[65153,65154],1,\"آ\"],[[65155,65156],1,\"أ\"],[[65157,65158],1,\"ؤ\"],[[65159,65160],1,\"إ\"],[[65161,65164],1,\"ئ\"],[[65165,65166],1,\"ا\"],[[65167,65170],1,\"ب\"],[[65171,65172],1,\"ة\"],[[65173,65176],1,\"ت\"],[[65177,65180],1,\"ث\"],[[65181,65184],1,\"ج\"],[[65185,65188],1,\"ح\"],[[65189,65192],1,\"خ\"],[[65193,65194],1,\"د\"],[[65195,65196],1,\"ذ\"],[[65197,65198],1,\"ر\"],[[65199,65200],1,\"ز\"],[[65201,65204],1,\"س\"],[[65205,65208],1,\"ش\"],[[65209,65212],1,\"ص\"],[[65213,65216],1,\"ض\"],[[65217,65220],1,\"ط\"],[[65221,65224],1,\"ظ\"],[[65225,65228],1,\"ع\"],[[65229,65232],1,\"غ\"],[[65233,65236],1,\"ف\"],[[65237,65240],1,\"ق\"],[[65241,65244],1,\"ك\"],[[65245,65248],1,\"ل\"],[[65249,65252],1,\"م\"],[[65253,65256],1,\"ن\"],[[65257,65260],1,\"ه\"],[[65261,65262],1,\"و\"],[[65263,65264],1,\"ى\"],[[65265,65268],1,\"ي\"],[[65269,65270],1,\"لآ\"],[[65271,65272],1,\"لأ\"],[[65273,65274],1,\"لإ\"],[[65275,65276],1,\"لاa\"],[65314,1,\"b\"],[65315,1,\"c\"],[65316,1,\"d\"],[65317,1,\"e\"],[65318,1,\"f\"],[65319,1,\"g\"],[65320,1,\"h\"],[65321,1,\"i\"],[65322,1,\"j\"],[65323,1,\"k\"],[65324,1,\"l\"],[65325,1,\"m\"],[65326,1,\"n\"],[65327,1,\"o\"],[65328,1,\"p\"],[65329,1,\"q\"],[65330,1,\"r\"],[65331,1,\"s\"],[65332,1,\"t\"],[65333,1,\"u\"],[65334,1,\"v\"],[65335,1,\"w\"],[65336,1,\"x\"],[65337,1,\"y\"],[65338,1,\"z\"],[65339,5,\"[\"],[65340,5,\"\\\\\"],[65341,5,\"]\"],[65342,5,\"^\"],[65343,5,\"_\"],[65344,5,\"`\"],[65345,1,\"a\"],[65346,1,\"b\"],[65347,1,\"c\"],[65348,1,\"d\"],[65349,1,\"e\"],[65350,1,\"f\"],[65351,1,\"g\"],[65352,1,\"h\"],[65353,1,\"i\"],[65354,1,\"j\"],[65355,1,\"k\"],[65356,1,\"l\"],[65357,1,\"m\"],[65358,1,\"n\"],[65359,1,\"o\"],[65360,1,\"p\"],[65361,1,\"q\"],[65362,1,\"r\"],[65363,1,\"s\"],[65364,1,\"t\"],[65365,1,\"u\"],[65366,1,\"v\"],[65367,1,\"w\"],[65368,1,\"x\"],[65369,1,\"y\"],[65370,1,\"z\"],[65371,5,\"{\"],[65372,5,\"|\"],[65373,5,\"}\"],[65374,5,\"~\"],[65375,1,\"⦅\"],[65376,1,\"⦆\"],[65377,1,\".\"],[65378,1,\"「\"],[65379,1,\"」\"],[65380,1,\"、\"],[65381,1,\"・\"],[65382,1,\"ヲ\"],[65383,1,\"ァ\"],[65384,1,\"ィ\"],[65385,1,\"ゥ\"],[65386,1,\"ェ\"],[65387,1,\"ォ\"],[65388,1,\"ャ\"],[65389,1,\"ュ\"],[65390,1,\"ョ\"],[65391,1,\"ッ\"],[65392,1,\"ー\"],[65393,1,\"ア\"],[65394,1,\"イ\"],[65395,1,\"ウ\"],[65396,1,\"エ\"],[65397,1,\"オ\"],[65398,1,\"カ\"],[65399,1,\"キ\"],[65400,1,\"ク\"],[65401,1,\"ケ\"],[65402,1,\"コ\"],[65403,1,\"サ\"],[65404,1,\"シ\"],[65405,1,\"ス\"],[65406,1,\"セ\"],[65407,1,\"ソ\"],[65408,1,\"タ\"],[65409,1,\"チ\"],[65410,1,\"ツ\"],[65411,1,\"テ\"],[65412,1,\"ト\"],[65413,1,\"ナ\"],[65414,1,\"ニ\"],[65415,1,\"ヌ\"],[65416,1,\"ネ\"],[65417,1,\"ノ\"],[65418,1,\"ハ\"],[65419,1,\"ヒ\"],[65420,1,\"フ\"],[65421,1,\"ヘ\"],[65422,1,\"ホ\"],[65423,1,\"マ\"],[65424,1,\"ミ\"],[65425,1,\"ム\"],[65426,1,\"メ\"],[65427,1,\"モ\"],[65428,1,\"ヤ\"],[65429,1,\"ユ\"],[65430,1,\"ヨ\"],[65431,1,\"ラ\"],[65432,1,\"リ\"],[65433,1,\"ル\"],[65434,1,\"レ\"],[65435,1,\"ロ\"],[65436,1,\"ワ\"],[65437,1,\"ン\"],[65438,1,\"゙\"],[65439,1,\"゚\"],[65440,3],[65441,1,\"ᄀ\"],[65442,1,\"ᄁ\"],[65443,1,\"ᆪ\"],[65444,1,\"ᄂ\"],[65445,1,\"ᆬ\"],[65446,1,\"ᆭ\"],[65447,1,\"ᄃ\"],[65448,1,\"ᄄ\"],[65449,1,\"ᄅ\"],[65450,1,\"ᆰ\"],[65451,1,\"ᆱ\"],[65452,1,\"ᆲ\"],[65453,1,\"ᆳ\"],[65454,1,\"ᆴ\"],[65455,1,\"ᆵ\"],[65456,1,\"ᄚ\"],[65457,1,\"ᄆ\"],[65458,1,\"ᄇ\"],[65459,1,\"ᄈ\"],[65460,1,\"ᄡ\"],[65461,1,\"ᄉ\"],[65462,1,\"ᄊ\"],[65463,1,\"ᄋ\"],[65464,1,\"ᄌ\"],[65465,1,\"ᄍ\"],[65466,1,\"ᄎ\"],[65467,1,\"ᄏ\"],[65468,1,\"ᄐ\"],[65469,1,\"ᄑ\"],[65470,1,\"ᄒ\"],[[65471,65473],3],[65474,1,\"ᅡ\"],[65475,1,\"ᅢ\"],[65476,1,\"ᅣ\"],[65477,1,\"ᅤ\"],[65478,1,\"ᅥ\"],[65479,1,\"ᅦ\"],[[65480,65481],3],[65482,1,\"ᅧ\"],[65483,1,\"ᅨ\"],[65484,1,\"ᅩ\"],[65485,1,\"ᅪ\"],[65486,1,\"ᅫ\"],[65487,1,\"ᅬ\"],[[65488,65489],3],[65490,1,\"ᅭ\"],[65491,1,\"ᅮ\"],[65492,1,\"ᅯ\"],[65493,1,\"ᅰ\"],[65494,1,\"ᅱ\"],[65495,1,\"ᅲ\"],[[65496,65497],3],[65498,1,\"ᅳ\"],[65499,1,\"ᅴ\"],[65500,1,\"ᅵ\"],[[65501,65503],3],[65504,1,\"¢\"],[65505,1,\"£\"],[65506,1,\"¬\"],[65507,5,\" ̄\"],[65508,1,\"¦\"],[65509,1,\"¥\"],[65510,1,\"₩\"],[65511,3],[65512,1,\"│\"],[65513,1,\"←\"],[65514,1,\"↑\"],[65515,1,\"→\"],[65516,1,\"↓\"],[65517,1,\"■\"],[65518,1,\"○\"],[[65519,65528],3],[[65529,65531],3],[65532,3],[65533,3],[[65534,65535],3],[[65536,65547],2],[65548,3],[[65549,65574],2],[65575,3],[[65576,65594],2],[65595,3],[[65596,65597],2],[65598,3],[[65599,65613],2],[[65614,65615],3],[[65616,65629],2],[[65630,65663],3],[[65664,65786],2],[[65787,65791],3],[[65792,65794],2],[[65795,65798],3],[[65799,65843],2],[[65844,65846],3],[[65847,65855],2],[[65856,65930],2],[[65931,65932],2],[[65933,65934],2],[65935,3],[[65936,65947],2],[65948,2],[[65949,65951],3],[65952,2],[[65953,65999],3],[[66000,66044],2],[66045,2],[[66046,66175],3],[[66176,66204],2],[[66205,66207],3],[[66208,66256],2],[[66257,66271],3],[66272,2],[[66273,66299],2],[[66300,66303],3],[[66304,66334],2],[66335,2],[[66336,66339],2],[[66340,66348],3],[[66349,66351],2],[[66352,66368],2],[66369,2],[[66370,66377],2],[66378,2],[[66379,66383],3],[[66384,66426],2],[[66427,66431],3],[[66432,66461],2],[66462,3],[66463,2],[[66464,66499],2],[[66500,66503],3],[[66504,66511],2],[[66512,66517],2],[[66518,66559],3],[66560,1,\"𐐨\"],[66561,1,\"𐐩\"],[66562,1,\"𐐪\"],[66563,1,\"𐐫\"],[66564,1,\"𐐬\"],[66565,1,\"𐐭\"],[66566,1,\"𐐮\"],[66567,1,\"𐐯\"],[66568,1,\"𐐰\"],[66569,1,\"𐐱\"],[66570,1,\"𐐲\"],[66571,1,\"𐐳\"],[66572,1,\"𐐴\"],[66573,1,\"𐐵\"],[66574,1,\"𐐶\"],[66575,1,\"𐐷\"],[66576,1,\"𐐸\"],[66577,1,\"𐐹\"],[66578,1,\"𐐺\"],[66579,1,\"𐐻\"],[66580,1,\"𐐼\"],[66581,1,\"𐐽\"],[66582,1,\"𐐾\"],[66583,1,\"𐐿\"],[66584,1,\"𐑀\"],[66585,1,\"𐑁\"],[66586,1,\"𐑂\"],[66587,1,\"𐑃\"],[66588,1,\"𐑄\"],[66589,1,\"𐑅\"],[66590,1,\"𐑆\"],[66591,1,\"𐑇\"],[66592,1,\"𐑈\"],[66593,1,\"𐑉\"],[66594,1,\"𐑊\"],[66595,1,\"𐑋\"],[66596,1,\"𐑌\"],[66597,1,\"𐑍\"],[66598,1,\"𐑎\"],[66599,1,\"𐑏\"],[[66600,66637],2],[[66638,66717],2],[[66718,66719],3],[[66720,66729],2],[[66730,66735],3],[66736,1,\"𐓘\"],[66737,1,\"𐓙\"],[66738,1,\"𐓚\"],[66739,1,\"𐓛\"],[66740,1,\"𐓜\"],[66741,1,\"𐓝\"],[66742,1,\"𐓞\"],[66743,1,\"𐓟\"],[66744,1,\"𐓠\"],[66745,1,\"𐓡\"],[66746,1,\"𐓢\"],[66747,1,\"𐓣\"],[66748,1,\"𐓤\"],[66749,1,\"𐓥\"],[66750,1,\"𐓦\"],[66751,1,\"𐓧\"],[66752,1,\"𐓨\"],[66753,1,\"𐓩\"],[66754,1,\"𐓪\"],[66755,1,\"𐓫\"],[66756,1,\"𐓬\"],[66757,1,\"𐓭\"],[66758,1,\"𐓮\"],[66759,1,\"𐓯\"],[66760,1,\"𐓰\"],[66761,1,\"𐓱\"],[66762,1,\"𐓲\"],[66763,1,\"𐓳\"],[66764,1,\"𐓴\"],[66765,1,\"𐓵\"],[66766,1,\"𐓶\"],[66767,1,\"𐓷\"],[66768,1,\"𐓸\"],[66769,1,\"𐓹\"],[66770,1,\"𐓺\"],[66771,1,\"𐓻\"],[[66772,66775],3],[[66776,66811],2],[[66812,66815],3],[[66816,66855],2],[[66856,66863],3],[[66864,66915],2],[[66916,66926],3],[66927,2],[66928,1,\"𐖗\"],[66929,1,\"𐖘\"],[66930,1,\"𐖙\"],[66931,1,\"𐖚\"],[66932,1,\"𐖛\"],[66933,1,\"𐖜\"],[66934,1,\"𐖝\"],[66935,1,\"𐖞\"],[66936,1,\"𐖟\"],[66937,1,\"𐖠\"],[66938,1,\"𐖡\"],[66939,3],[66940,1,\"𐖣\"],[66941,1,\"𐖤\"],[66942,1,\"𐖥\"],[66943,1,\"𐖦\"],[66944,1,\"𐖧\"],[66945,1,\"𐖨\"],[66946,1,\"𐖩\"],[66947,1,\"𐖪\"],[66948,1,\"𐖫\"],[66949,1,\"𐖬\"],[66950,1,\"𐖭\"],[66951,1,\"𐖮\"],[66952,1,\"𐖯\"],[66953,1,\"𐖰\"],[66954,1,\"𐖱\"],[66955,3],[66956,1,\"𐖳\"],[66957,1,\"𐖴\"],[66958,1,\"𐖵\"],[66959,1,\"𐖶\"],[66960,1,\"𐖷\"],[66961,1,\"𐖸\"],[66962,1,\"𐖹\"],[66963,3],[66964,1,\"𐖻\"],[66965,1,\"𐖼\"],[66966,3],[[66967,66977],2],[66978,3],[[66979,66993],2],[66994,3],[[66995,67001],2],[67002,3],[[67003,67004],2],[[67005,67071],3],[[67072,67382],2],[[67383,67391],3],[[67392,67413],2],[[67414,67423],3],[[67424,67431],2],[[67432,67455],3],[67456,2],[67457,1,\"ː\"],[67458,1,\"ˑ\"],[67459,1,\"æ\"],[67460,1,\"ʙ\"],[67461,1,\"ɓ\"],[67462,3],[67463,1,\"ʣ\"],[67464,1,\"ꭦ\"],[67465,1,\"ʥ\"],[67466,1,\"ʤ\"],[67467,1,\"ɖ\"],[67468,1,\"ɗ\"],[67469,1,\"ᶑ\"],[67470,1,\"ɘ\"],[67471,1,\"ɞ\"],[67472,1,\"ʩ\"],[67473,1,\"ɤ\"],[67474,1,\"ɢ\"],[67475,1,\"ɠ\"],[67476,1,\"ʛ\"],[67477,1,\"ħ\"],[67478,1,\"ʜ\"],[67479,1,\"ɧ\"],[67480,1,\"ʄ\"],[67481,1,\"ʪ\"],[67482,1,\"ʫ\"],[67483,1,\"ɬ\"],[67484,1,\"𝼄\"],[67485,1,\"ꞎ\"],[67486,1,\"ɮ\"],[67487,1,\"𝼅\"],[67488,1,\"ʎ\"],[67489,1,\"𝼆\"],[67490,1,\"ø\"],[67491,1,\"ɶ\"],[67492,1,\"ɷ\"],[67493,1,\"q\"],[67494,1,\"ɺ\"],[67495,1,\"𝼈\"],[67496,1,\"ɽ\"],[67497,1,\"ɾ\"],[67498,1,\"ʀ\"],[67499,1,\"ʨ\"],[67500,1,\"ʦ\"],[67501,1,\"ꭧ\"],[67502,1,\"ʧ\"],[67503,1,\"ʈ\"],[67504,1,\"ⱱ\"],[67505,3],[67506,1,\"ʏ\"],[67507,1,\"ʡ\"],[67508,1,\"ʢ\"],[67509,1,\"ʘ\"],[67510,1,\"ǀ\"],[67511,1,\"ǁ\"],[67512,1,\"ǂ\"],[67513,1,\"𝼊\"],[67514,1,\"𝼞\"],[[67515,67583],3],[[67584,67589],2],[[67590,67591],3],[67592,2],[67593,3],[[67594,67637],2],[67638,3],[[67639,67640],2],[[67641,67643],3],[67644,2],[[67645,67646],3],[67647,2],[[67648,67669],2],[67670,3],[[67671,67679],2],[[67680,67702],2],[[67703,67711],2],[[67712,67742],2],[[67743,67750],3],[[67751,67759],2],[[67760,67807],3],[[67808,67826],2],[67827,3],[[67828,67829],2],[[67830,67834],3],[[67835,67839],2],[[67840,67861],2],[[67862,67865],2],[[67866,67867],2],[[67868,67870],3],[67871,2],[[67872,67897],2],[[67898,67902],3],[67903,2],[[67904,67967],3],[[67968,68023],2],[[68024,68027],3],[[68028,68029],2],[[68030,68031],2],[[68032,68047],2],[[68048,68049],3],[[68050,68095],2],[[68096,68099],2],[68100,3],[[68101,68102],2],[[68103,68107],3],[[68108,68115],2],[68116,3],[[68117,68119],2],[68120,3],[[68121,68147],2],[[68148,68149],2],[[68150,68151],3],[[68152,68154],2],[[68155,68158],3],[68159,2],[[68160,68167],2],[68168,2],[[68169,68175],3],[[68176,68184],2],[[68185,68191],3],[[68192,68220],2],[[68221,68223],2],[[68224,68252],2],[[68253,68255],2],[[68256,68287],3],[[68288,68295],2],[68296,2],[[68297,68326],2],[[68327,68330],3],[[68331,68342],2],[[68343,68351],3],[[68352,68405],2],[[68406,68408],3],[[68409,68415],2],[[68416,68437],2],[[68438,68439],3],[[68440,68447],2],[[68448,68466],2],[[68467,68471],3],[[68472,68479],2],[[68480,68497],2],[[68498,68504],3],[[68505,68508],2],[[68509,68520],3],[[68521,68527],2],[[68528,68607],3],[[68608,68680],2],[[68681,68735],3],[68736,1,\"𐳀\"],[68737,1,\"𐳁\"],[68738,1,\"𐳂\"],[68739,1,\"𐳃\"],[68740,1,\"𐳄\"],[68741,1,\"𐳅\"],[68742,1,\"𐳆\"],[68743,1,\"𐳇\"],[68744,1,\"𐳈\"],[68745,1,\"𐳉\"],[68746,1,\"𐳊\"],[68747,1,\"𐳋\"],[68748,1,\"𐳌\"],[68749,1,\"𐳍\"],[68750,1,\"𐳎\"],[68751,1,\"𐳏\"],[68752,1,\"𐳐\"],[68753,1,\"𐳑\"],[68754,1,\"𐳒\"],[68755,1,\"𐳓\"],[68756,1,\"𐳔\"],[68757,1,\"𐳕\"],[68758,1,\"𐳖\"],[68759,1,\"𐳗\"],[68760,1,\"𐳘\"],[68761,1,\"𐳙\"],[68762,1,\"𐳚\"],[68763,1,\"𐳛\"],[68764,1,\"𐳜\"],[68765,1,\"𐳝\"],[68766,1,\"𐳞\"],[68767,1,\"𐳟\"],[68768,1,\"𐳠\"],[68769,1,\"𐳡\"],[68770,1,\"𐳢\"],[68771,1,\"𐳣\"],[68772,1,\"𐳤\"],[68773,1,\"𐳥\"],[68774,1,\"𐳦\"],[68775,1,\"𐳧\"],[68776,1,\"𐳨\"],[68777,1,\"𐳩\"],[68778,1,\"𐳪\"],[68779,1,\"𐳫\"],[68780,1,\"𐳬\"],[68781,1,\"𐳭\"],[68782,1,\"𐳮\"],[68783,1,\"𐳯\"],[68784,1,\"𐳰\"],[68785,1,\"𐳱\"],[68786,1,\"𐳲\"],[[68787,68799],3],[[68800,68850],2],[[68851,68857],3],[[68858,68863],2],[[68864,68903],2],[[68904,68911],3],[[68912,68921],2],[[68922,69215],3],[[69216,69246],2],[69247,3],[[69248,69289],2],[69290,3],[[69291,69292],2],[69293,2],[[69294,69295],3],[[69296,69297],2],[[69298,69372],3],[[69373,69375],2],[[69376,69404],2],[[69405,69414],2],[69415,2],[[69416,69423],3],[[69424,69456],2],[[69457,69465],2],[[69466,69487],3],[[69488,69509],2],[[69510,69513],2],[[69514,69551],3],[[69552,69572],2],[[69573,69579],2],[[69580,69599],3],[[69600,69622],2],[[69623,69631],3],[[69632,69702],2],[[69703,69709],2],[[69710,69713],3],[[69714,69733],2],[[69734,69743],2],[[69744,69749],2],[[69750,69758],3],[69759,2],[[69760,69818],2],[[69819,69820],2],[69821,3],[[69822,69825],2],[69826,2],[[69827,69836],3],[69837,3],[[69838,69839],3],[[69840,69864],2],[[69865,69871],3],[[69872,69881],2],[[69882,69887],3],[[69888,69940],2],[69941,3],[[69942,69951],2],[[69952,69955],2],[[69956,69958],2],[69959,2],[[69960,69967],3],[[69968,70003],2],[[70004,70005],2],[70006,2],[[70007,70015],3],[[70016,70084],2],[[70085,70088],2],[[70089,70092],2],[70093,2],[[70094,70095],2],[[70096,70105],2],[70106,2],[70107,2],[70108,2],[[70109,70111],2],[70112,3],[[70113,70132],2],[[70133,70143],3],[[70144,70161],2],[70162,3],[[70163,70199],2],[[70200,70205],2],[70206,2],[[70207,70209],2],[[70210,70271],3],[[70272,70278],2],[70279,3],[70280,2],[70281,3],[[70282,70285],2],[70286,3],[[70287,70301],2],[70302,3],[[70303,70312],2],[70313,2],[[70314,70319],3],[[70320,70378],2],[[70379,70383],3],[[70384,70393],2],[[70394,70399],3],[70400,2],[[70401,70403],2],[70404,3],[[70405,70412],2],[[70413,70414],3],[[70415,70416],2],[[70417,70418],3],[[70419,70440],2],[70441,3],[[70442,70448],2],[70449,3],[[70450,70451],2],[70452,3],[[70453,70457],2],[70458,3],[70459,2],[[70460,70468],2],[[70469,70470],3],[[70471,70472],2],[[70473,70474],3],[[70475,70477],2],[[70478,70479],3],[70480,2],[[70481,70486],3],[70487,2],[[70488,70492],3],[[70493,70499],2],[[70500,70501],3],[[70502,70508],2],[[70509,70511],3],[[70512,70516],2],[[70517,70655],3],[[70656,70730],2],[[70731,70735],2],[[70736,70745],2],[70746,2],[70747,2],[70748,3],[70749,2],[70750,2],[70751,2],[[70752,70753],2],[[70754,70783],3],[[70784,70853],2],[70854,2],[70855,2],[[70856,70863],3],[[70864,70873],2],[[70874,71039],3],[[71040,71093],2],[[71094,71095],3],[[71096,71104],2],[[71105,71113],2],[[71114,71127],2],[[71128,71133],2],[[71134,71167],3],[[71168,71232],2],[[71233,71235],2],[71236,2],[[71237,71247],3],[[71248,71257],2],[[71258,71263],3],[[71264,71276],2],[[71277,71295],3],[[71296,71351],2],[71352,2],[71353,2],[[71354,71359],3],[[71360,71369],2],[[71370,71423],3],[[71424,71449],2],[71450,2],[[71451,71452],3],[[71453,71467],2],[[71468,71471],3],[[71472,71481],2],[[71482,71487],2],[[71488,71494],2],[[71495,71679],3],[[71680,71738],2],[71739,2],[[71740,71839],3],[71840,1,\"𑣀\"],[71841,1,\"𑣁\"],[71842,1,\"𑣂\"],[71843,1,\"𑣃\"],[71844,1,\"𑣄\"],[71845,1,\"𑣅\"],[71846,1,\"𑣆\"],[71847,1,\"𑣇\"],[71848,1,\"𑣈\"],[71849,1,\"𑣉\"],[71850,1,\"𑣊\"],[71851,1,\"𑣋\"],[71852,1,\"𑣌\"],[71853,1,\"𑣍\"],[71854,1,\"𑣎\"],[71855,1,\"𑣏\"],[71856,1,\"𑣐\"],[71857,1,\"𑣑\"],[71858,1,\"𑣒\"],[71859,1,\"𑣓\"],[71860,1,\"𑣔\"],[71861,1,\"𑣕\"],[71862,1,\"𑣖\"],[71863,1,\"𑣗\"],[71864,1,\"𑣘\"],[71865,1,\"𑣙\"],[71866,1,\"𑣚\"],[71867,1,\"𑣛\"],[71868,1,\"𑣜\"],[71869,1,\"𑣝\"],[71870,1,\"𑣞\"],[71871,1,\"𑣟\"],[[71872,71913],2],[[71914,71922],2],[[71923,71934],3],[71935,2],[[71936,71942],2],[[71943,71944],3],[71945,2],[[71946,71947],3],[[71948,71955],2],[71956,3],[[71957,71958],2],[71959,3],[[71960,71989],2],[71990,3],[[71991,71992],2],[[71993,71994],3],[[71995,72003],2],[[72004,72006],2],[[72007,72015],3],[[72016,72025],2],[[72026,72095],3],[[72096,72103],2],[[72104,72105],3],[[72106,72151],2],[[72152,72153],3],[[72154,72161],2],[72162,2],[[72163,72164],2],[[72165,72191],3],[[72192,72254],2],[[72255,72262],2],[72263,2],[[72264,72271],3],[[72272,72323],2],[[72324,72325],2],[[72326,72345],2],[[72346,72348],2],[72349,2],[[72350,72354],2],[[72355,72367],3],[[72368,72383],2],[[72384,72440],2],[[72441,72447],3],[[72448,72457],2],[[72458,72703],3],[[72704,72712],2],[72713,3],[[72714,72758],2],[72759,3],[[72760,72768],2],[[72769,72773],2],[[72774,72783],3],[[72784,72793],2],[[72794,72812],2],[[72813,72815],3],[[72816,72817],2],[[72818,72847],2],[[72848,72849],3],[[72850,72871],2],[72872,3],[[72873,72886],2],[[72887,72959],3],[[72960,72966],2],[72967,3],[[72968,72969],2],[72970,3],[[72971,73014],2],[[73015,73017],3],[73018,2],[73019,3],[[73020,73021],2],[73022,3],[[73023,73031],2],[[73032,73039],3],[[73040,73049],2],[[73050,73055],3],[[73056,73061],2],[73062,3],[[73063,73064],2],[73065,3],[[73066,73102],2],[73103,3],[[73104,73105],2],[73106,3],[[73107,73112],2],[[73113,73119],3],[[73120,73129],2],[[73130,73439],3],[[73440,73462],2],[[73463,73464],2],[[73465,73471],3],[[73472,73488],2],[73489,3],[[73490,73530],2],[[73531,73533],3],[[73534,73538],2],[[73539,73551],2],[[73552,73561],2],[[73562,73647],3],[73648,2],[[73649,73663],3],[[73664,73713],2],[[73714,73726],3],[73727,2],[[73728,74606],2],[[74607,74648],2],[74649,2],[[74650,74751],3],[[74752,74850],2],[[74851,74862],2],[74863,3],[[74864,74867],2],[74868,2],[[74869,74879],3],[[74880,75075],2],[[75076,77711],3],[[77712,77808],2],[[77809,77810],2],[[77811,77823],3],[[77824,78894],2],[78895,2],[[78896,78904],3],[[78905,78911],3],[[78912,78933],2],[[78934,82943],3],[[82944,83526],2],[[83527,92159],3],[[92160,92728],2],[[92729,92735],3],[[92736,92766],2],[92767,3],[[92768,92777],2],[[92778,92781],3],[[92782,92783],2],[[92784,92862],2],[92863,3],[[92864,92873],2],[[92874,92879],3],[[92880,92909],2],[[92910,92911],3],[[92912,92916],2],[92917,2],[[92918,92927],3],[[92928,92982],2],[[92983,92991],2],[[92992,92995],2],[[92996,92997],2],[[92998,93007],3],[[93008,93017],2],[93018,3],[[93019,93025],2],[93026,3],[[93027,93047],2],[[93048,93052],3],[[93053,93071],2],[[93072,93759],3],[93760,1,\"𖹠\"],[93761,1,\"𖹡\"],[93762,1,\"𖹢\"],[93763,1,\"𖹣\"],[93764,1,\"𖹤\"],[93765,1,\"𖹥\"],[93766,1,\"𖹦\"],[93767,1,\"𖹧\"],[93768,1,\"𖹨\"],[93769,1,\"𖹩\"],[93770,1,\"𖹪\"],[93771,1,\"𖹫\"],[93772,1,\"𖹬\"],[93773,1,\"𖹭\"],[93774,1,\"𖹮\"],[93775,1,\"𖹯\"],[93776,1,\"𖹰\"],[93777,1,\"𖹱\"],[93778,1,\"𖹲\"],[93779,1,\"𖹳\"],[93780,1,\"𖹴\"],[93781,1,\"𖹵\"],[93782,1,\"𖹶\"],[93783,1,\"𖹷\"],[93784,1,\"𖹸\"],[93785,1,\"𖹹\"],[93786,1,\"𖹺\"],[93787,1,\"𖹻\"],[93788,1,\"𖹼\"],[93789,1,\"𖹽\"],[93790,1,\"𖹾\"],[93791,1,\"𖹿\"],[[93792,93823],2],[[93824,93850],2],[[93851,93951],3],[[93952,94020],2],[[94021,94026],2],[[94027,94030],3],[94031,2],[[94032,94078],2],[[94079,94087],2],[[94088,94094],3],[[94095,94111],2],[[94112,94175],3],[94176,2],[94177,2],[94178,2],[94179,2],[94180,2],[[94181,94191],3],[[94192,94193],2],[[94194,94207],3],[[94208,100332],2],[[100333,100337],2],[[100338,100343],2],[[100344,100351],3],[[100352,101106],2],[[101107,101589],2],[[101590,101631],3],[[101632,101640],2],[[101641,110575],3],[[110576,110579],2],[110580,3],[[110581,110587],2],[110588,3],[[110589,110590],2],[110591,3],[[110592,110593],2],[[110594,110878],2],[[110879,110882],2],[[110883,110897],3],[110898,2],[[110899,110927],3],[[110928,110930],2],[[110931,110932],3],[110933,2],[[110934,110947],3],[[110948,110951],2],[[110952,110959],3],[[110960,111355],2],[[111356,113663],3],[[113664,113770],2],[[113771,113775],3],[[113776,113788],2],[[113789,113791],3],[[113792,113800],2],[[113801,113807],3],[[113808,113817],2],[[113818,113819],3],[113820,2],[[113821,113822],2],[113823,2],[[113824,113827],7],[[113828,118527],3],[[118528,118573],2],[[118574,118575],3],[[118576,118598],2],[[118599,118607],3],[[118608,118723],2],[[118724,118783],3],[[118784,119029],2],[[119030,119039],3],[[119040,119078],2],[[119079,119080],3],[119081,2],[[119082,119133],2],[119134,1,\"𝅗𝅥\"],[119135,1,\"𝅘𝅥\"],[119136,1,\"𝅘𝅥𝅮\"],[119137,1,\"𝅘𝅥𝅯\"],[119138,1,\"𝅘𝅥𝅰\"],[119139,1,\"𝅘𝅥𝅱\"],[119140,1,\"𝅘𝅥𝅲\"],[[119141,119154],2],[[119155,119162],3],[[119163,119226],2],[119227,1,\"𝆹𝅥\"],[119228,1,\"𝆺𝅥\"],[119229,1,\"𝆹𝅥𝅮\"],[119230,1,\"𝆺𝅥𝅮\"],[119231,1,\"𝆹𝅥𝅯\"],[119232,1,\"𝆺𝅥𝅯\"],[[119233,119261],2],[[119262,119272],2],[[119273,119274],2],[[119275,119295],3],[[119296,119365],2],[[119366,119487],3],[[119488,119507],2],[[119508,119519],3],[[119520,119539],2],[[119540,119551],3],[[119552,119638],2],[[119639,119647],3],[[119648,119665],2],[[119666,119672],2],[[119673,119807],3],[119808,1,\"a\"],[119809,1,\"b\"],[119810,1,\"c\"],[119811,1,\"d\"],[119812,1,\"e\"],[119813,1,\"f\"],[119814,1,\"g\"],[119815,1,\"h\"],[119816,1,\"i\"],[119817,1,\"j\"],[119818,1,\"k\"],[119819,1,\"l\"],[119820,1,\"m\"],[119821,1,\"n\"],[119822,1,\"o\"],[119823,1,\"p\"],[119824,1,\"q\"],[119825,1,\"r\"],[119826,1,\"s\"],[119827,1,\"t\"],[119828,1,\"u\"],[119829,1,\"v\"],[119830,1,\"w\"],[119831,1,\"x\"],[119832,1,\"y\"],[119833,1,\"z\"],[119834,1,\"a\"],[119835,1,\"b\"],[119836,1,\"c\"],[119837,1,\"d\"],[119838,1,\"e\"],[119839,1,\"f\"],[119840,1,\"g\"],[119841,1,\"h\"],[119842,1,\"i\"],[119843,1,\"j\"],[119844,1,\"k\"],[119845,1,\"l\"],[119846,1,\"m\"],[119847,1,\"n\"],[119848,1,\"o\"],[119849,1,\"p\"],[119850,1,\"q\"],[119851,1,\"r\"],[119852,1,\"s\"],[119853,1,\"t\"],[119854,1,\"u\"],[119855,1,\"v\"],[119856,1,\"w\"],[119857,1,\"x\"],[119858,1,\"y\"],[119859,1,\"z\"],[119860,1,\"a\"],[119861,1,\"b\"],[119862,1,\"c\"],[119863,1,\"d\"],[119864,1,\"e\"],[119865,1,\"f\"],[119866,1,\"g\"],[119867,1,\"h\"],[119868,1,\"i\"],[119869,1,\"j\"],[119870,1,\"k\"],[119871,1,\"l\"],[119872,1,\"m\"],[119873,1,\"n\"],[119874,1,\"o\"],[119875,1,\"p\"],[119876,1,\"q\"],[119877,1,\"r\"],[119878,1,\"s\"],[119879,1,\"t\"],[119880,1,\"u\"],[119881,1,\"v\"],[119882,1,\"w\"],[119883,1,\"x\"],[119884,1,\"y\"],[119885,1,\"z\"],[119886,1,\"a\"],[119887,1,\"b\"],[119888,1,\"c\"],[119889,1,\"d\"],[119890,1,\"e\"],[119891,1,\"f\"],[119892,1,\"g\"],[119893,3],[119894,1,\"i\"],[119895,1,\"j\"],[119896,1,\"k\"],[119897,1,\"l\"],[119898,1,\"m\"],[119899,1,\"n\"],[119900,1,\"o\"],[119901,1,\"p\"],[119902,1,\"q\"],[119903,1,\"r\"],[119904,1,\"s\"],[119905,1,\"t\"],[119906,1,\"u\"],[119907,1,\"v\"],[119908,1,\"w\"],[119909,1,\"x\"],[119910,1,\"y\"],[119911,1,\"z\"],[119912,1,\"a\"],[119913,1,\"b\"],[119914,1,\"c\"],[119915,1,\"d\"],[119916,1,\"e\"],[119917,1,\"f\"],[119918,1,\"g\"],[119919,1,\"h\"],[119920,1,\"i\"],[119921,1,\"j\"],[119922,1,\"k\"],[119923,1,\"l\"],[119924,1,\"m\"],[119925,1,\"n\"],[119926,1,\"o\"],[119927,1,\"p\"],[119928,1,\"q\"],[119929,1,\"r\"],[119930,1,\"s\"],[119931,1,\"t\"],[119932,1,\"u\"],[119933,1,\"v\"],[119934,1,\"w\"],[119935,1,\"x\"],[119936,1,\"y\"],[119937,1,\"z\"],[119938,1,\"a\"],[119939,1,\"b\"],[119940,1,\"c\"],[119941,1,\"d\"],[119942,1,\"e\"],[119943,1,\"f\"],[119944,1,\"g\"],[119945,1,\"h\"],[119946,1,\"i\"],[119947,1,\"j\"],[119948,1,\"k\"],[119949,1,\"l\"],[119950,1,\"m\"],[119951,1,\"n\"],[119952,1,\"o\"],[119953,1,\"p\"],[119954,1,\"q\"],[119955,1,\"r\"],[119956,1,\"s\"],[119957,1,\"t\"],[119958,1,\"u\"],[119959,1,\"v\"],[119960,1,\"w\"],[119961,1,\"x\"],[119962,1,\"y\"],[119963,1,\"z\"],[119964,1,\"a\"],[119965,3],[119966,1,\"c\"],[119967,1,\"d\"],[[119968,119969],3],[119970,1,\"g\"],[[119971,119972],3],[119973,1,\"j\"],[119974,1,\"k\"],[[119975,119976],3],[119977,1,\"n\"],[119978,1,\"o\"],[119979,1,\"p\"],[119980,1,\"q\"],[119981,3],[119982,1,\"s\"],[119983,1,\"t\"],[119984,1,\"u\"],[119985,1,\"v\"],[119986,1,\"w\"],[119987,1,\"x\"],[119988,1,\"y\"],[119989,1,\"z\"],[119990,1,\"a\"],[119991,1,\"b\"],[119992,1,\"c\"],[119993,1,\"d\"],[119994,3],[119995,1,\"f\"],[119996,3],[119997,1,\"h\"],[119998,1,\"i\"],[119999,1,\"j\"],[120000,1,\"k\"],[120001,1,\"l\"],[120002,1,\"m\"],[120003,1,\"n\"],[120004,3],[120005,1,\"p\"],[120006,1,\"q\"],[120007,1,\"r\"],[120008,1,\"s\"],[120009,1,\"t\"],[120010,1,\"u\"],[120011,1,\"v\"],[120012,1,\"w\"],[120013,1,\"x\"],[120014,1,\"y\"],[120015,1,\"z\"],[120016,1,\"a\"],[120017,1,\"b\"],[120018,1,\"c\"],[120019,1,\"d\"],[120020,1,\"e\"],[120021,1,\"f\"],[120022,1,\"g\"],[120023,1,\"h\"],[120024,1,\"i\"],[120025,1,\"j\"],[120026,1,\"k\"],[120027,1,\"l\"],[120028,1,\"m\"],[120029,1,\"n\"],[120030,1,\"o\"],[120031,1,\"p\"],[120032,1,\"q\"],[120033,1,\"r\"],[120034,1,\"s\"],[120035,1,\"t\"],[120036,1,\"u\"],[120037,1,\"v\"],[120038,1,\"w\"],[120039,1,\"x\"],[120040,1,\"y\"],[120041,1,\"z\"],[120042,1,\"a\"],[120043,1,\"b\"],[120044,1,\"c\"],[120045,1,\"d\"],[120046,1,\"e\"],[120047,1,\"f\"],[120048,1,\"g\"],[120049,1,\"h\"],[120050,1,\"i\"],[120051,1,\"j\"],[120052,1,\"k\"],[120053,1,\"l\"],[120054,1,\"m\"],[120055,1,\"n\"],[120056,1,\"o\"],[120057,1,\"p\"],[120058,1,\"q\"],[120059,1,\"r\"],[120060,1,\"s\"],[120061,1,\"t\"],[120062,1,\"u\"],[120063,1,\"v\"],[120064,1,\"w\"],[120065,1,\"x\"],[120066,1,\"y\"],[120067,1,\"z\"],[120068,1,\"a\"],[120069,1,\"b\"],[120070,3],[120071,1,\"d\"],[120072,1,\"e\"],[120073,1,\"f\"],[120074,1,\"g\"],[[120075,120076],3],[120077,1,\"j\"],[120078,1,\"k\"],[120079,1,\"l\"],[120080,1,\"m\"],[120081,1,\"n\"],[120082,1,\"o\"],[120083,1,\"p\"],[120084,1,\"q\"],[120085,3],[120086,1,\"s\"],[120087,1,\"t\"],[120088,1,\"u\"],[120089,1,\"v\"],[120090,1,\"w\"],[120091,1,\"x\"],[120092,1,\"y\"],[120093,3],[120094,1,\"a\"],[120095,1,\"b\"],[120096,1,\"c\"],[120097,1,\"d\"],[120098,1,\"e\"],[120099,1,\"f\"],[120100,1,\"g\"],[120101,1,\"h\"],[120102,1,\"i\"],[120103,1,\"j\"],[120104,1,\"k\"],[120105,1,\"l\"],[120106,1,\"m\"],[120107,1,\"n\"],[120108,1,\"o\"],[120109,1,\"p\"],[120110,1,\"q\"],[120111,1,\"r\"],[120112,1,\"s\"],[120113,1,\"t\"],[120114,1,\"u\"],[120115,1,\"v\"],[120116,1,\"w\"],[120117,1,\"x\"],[120118,1,\"y\"],[120119,1,\"z\"],[120120,1,\"a\"],[120121,1,\"b\"],[120122,3],[120123,1,\"d\"],[120124,1,\"e\"],[120125,1,\"f\"],[120126,1,\"g\"],[120127,3],[120128,1,\"i\"],[120129,1,\"j\"],[120130,1,\"k\"],[120131,1,\"l\"],[120132,1,\"m\"],[120133,3],[120134,1,\"o\"],[[120135,120137],3],[120138,1,\"s\"],[120139,1,\"t\"],[120140,1,\"u\"],[120141,1,\"v\"],[120142,1,\"w\"],[120143,1,\"x\"],[120144,1,\"y\"],[120145,3],[120146,1,\"a\"],[120147,1,\"b\"],[120148,1,\"c\"],[120149,1,\"d\"],[120150,1,\"e\"],[120151,1,\"f\"],[120152,1,\"g\"],[120153,1,\"h\"],[120154,1,\"i\"],[120155,1,\"j\"],[120156,1,\"k\"],[120157,1,\"l\"],[120158,1,\"m\"],[120159,1,\"n\"],[120160,1,\"o\"],[120161,1,\"p\"],[120162,1,\"q\"],[120163,1,\"r\"],[120164,1,\"s\"],[120165,1,\"t\"],[120166,1,\"u\"],[120167,1,\"v\"],[120168,1,\"w\"],[120169,1,\"x\"],[120170,1,\"y\"],[120171,1,\"z\"],[120172,1,\"a\"],[120173,1,\"b\"],[120174,1,\"c\"],[120175,1,\"d\"],[120176,1,\"e\"],[120177,1,\"f\"],[120178,1,\"g\"],[120179,1,\"h\"],[120180,1,\"i\"],[120181,1,\"j\"],[120182,1,\"k\"],[120183,1,\"l\"],[120184,1,\"m\"],[120185,1,\"n\"],[120186,1,\"o\"],[120187,1,\"p\"],[120188,1,\"q\"],[120189,1,\"r\"],[120190,1,\"s\"],[120191,1,\"t\"],[120192,1,\"u\"],[120193,1,\"v\"],[120194,1,\"w\"],[120195,1,\"x\"],[120196,1,\"y\"],[120197,1,\"z\"],[120198,1,\"a\"],[120199,1,\"b\"],[120200,1,\"c\"],[120201,1,\"d\"],[120202,1,\"e\"],[120203,1,\"f\"],[120204,1,\"g\"],[120205,1,\"h\"],[120206,1,\"i\"],[120207,1,\"j\"],[120208,1,\"k\"],[120209,1,\"l\"],[120210,1,\"m\"],[120211,1,\"n\"],[120212,1,\"o\"],[120213,1,\"p\"],[120214,1,\"q\"],[120215,1,\"r\"],[120216,1,\"s\"],[120217,1,\"t\"],[120218,1,\"u\"],[120219,1,\"v\"],[120220,1,\"w\"],[120221,1,\"x\"],[120222,1,\"y\"],[120223,1,\"z\"],[120224,1,\"a\"],[120225,1,\"b\"],[120226,1,\"c\"],[120227,1,\"d\"],[120228,1,\"e\"],[120229,1,\"f\"],[120230,1,\"g\"],[120231,1,\"h\"],[120232,1,\"i\"],[120233,1,\"j\"],[120234,1,\"k\"],[120235,1,\"l\"],[120236,1,\"m\"],[120237,1,\"n\"],[120238,1,\"o\"],[120239,1,\"p\"],[120240,1,\"q\"],[120241,1,\"r\"],[120242,1,\"s\"],[120243,1,\"t\"],[120244,1,\"u\"],[120245,1,\"v\"],[120246,1,\"w\"],[120247,1,\"x\"],[120248,1,\"y\"],[120249,1,\"z\"],[120250,1,\"a\"],[120251,1,\"b\"],[120252,1,\"c\"],[120253,1,\"d\"],[120254,1,\"e\"],[120255,1,\"f\"],[120256,1,\"g\"],[120257,1,\"h\"],[120258,1,\"i\"],[120259,1,\"j\"],[120260,1,\"k\"],[120261,1,\"l\"],[120262,1,\"m\"],[120263,1,\"n\"],[120264,1,\"o\"],[120265,1,\"p\"],[120266,1,\"q\"],[120267,1,\"r\"],[120268,1,\"s\"],[120269,1,\"t\"],[120270,1,\"u\"],[120271,1,\"v\"],[120272,1,\"w\"],[120273,1,\"x\"],[120274,1,\"y\"],[120275,1,\"z\"],[120276,1,\"a\"],[120277,1,\"b\"],[120278,1,\"c\"],[120279,1,\"d\"],[120280,1,\"e\"],[120281,1,\"f\"],[120282,1,\"g\"],[120283,1,\"h\"],[120284,1,\"i\"],[120285,1,\"j\"],[120286,1,\"k\"],[120287,1,\"l\"],[120288,1,\"m\"],[120289,1,\"n\"],[120290,1,\"o\"],[120291,1,\"p\"],[120292,1,\"q\"],[120293,1,\"r\"],[120294,1,\"s\"],[120295,1,\"t\"],[120296,1,\"u\"],[120297,1,\"v\"],[120298,1,\"w\"],[120299,1,\"x\"],[120300,1,\"y\"],[120301,1,\"z\"],[120302,1,\"a\"],[120303,1,\"b\"],[120304,1,\"c\"],[120305,1,\"d\"],[120306,1,\"e\"],[120307,1,\"f\"],[120308,1,\"g\"],[120309,1,\"h\"],[120310,1,\"i\"],[120311,1,\"j\"],[120312,1,\"k\"],[120313,1,\"l\"],[120314,1,\"m\"],[120315,1,\"n\"],[120316,1,\"o\"],[120317,1,\"p\"],[120318,1,\"q\"],[120319,1,\"r\"],[120320,1,\"s\"],[120321,1,\"t\"],[120322,1,\"u\"],[120323,1,\"v\"],[120324,1,\"w\"],[120325,1,\"x\"],[120326,1,\"y\"],[120327,1,\"z\"],[120328,1,\"a\"],[120329,1,\"b\"],[120330,1,\"c\"],[120331,1,\"d\"],[120332,1,\"e\"],[120333,1,\"f\"],[120334,1,\"g\"],[120335,1,\"h\"],[120336,1,\"i\"],[120337,1,\"j\"],[120338,1,\"k\"],[120339,1,\"l\"],[120340,1,\"m\"],[120341,1,\"n\"],[120342,1,\"o\"],[120343,1,\"p\"],[120344,1,\"q\"],[120345,1,\"r\"],[120346,1,\"s\"],[120347,1,\"t\"],[120348,1,\"u\"],[120349,1,\"v\"],[120350,1,\"w\"],[120351,1,\"x\"],[120352,1,\"y\"],[120353,1,\"z\"],[120354,1,\"a\"],[120355,1,\"b\"],[120356,1,\"c\"],[120357,1,\"d\"],[120358,1,\"e\"],[120359,1,\"f\"],[120360,1,\"g\"],[120361,1,\"h\"],[120362,1,\"i\"],[120363,1,\"j\"],[120364,1,\"k\"],[120365,1,\"l\"],[120366,1,\"m\"],[120367,1,\"n\"],[120368,1,\"o\"],[120369,1,\"p\"],[120370,1,\"q\"],[120371,1,\"r\"],[120372,1,\"s\"],[120373,1,\"t\"],[120374,1,\"u\"],[120375,1,\"v\"],[120376,1,\"w\"],[120377,1,\"x\"],[120378,1,\"y\"],[120379,1,\"z\"],[120380,1,\"a\"],[120381,1,\"b\"],[120382,1,\"c\"],[120383,1,\"d\"],[120384,1,\"e\"],[120385,1,\"f\"],[120386,1,\"g\"],[120387,1,\"h\"],[120388,1,\"i\"],[120389,1,\"j\"],[120390,1,\"k\"],[120391,1,\"l\"],[120392,1,\"m\"],[120393,1,\"n\"],[120394,1,\"o\"],[120395,1,\"p\"],[120396,1,\"q\"],[120397,1,\"r\"],[120398,1,\"s\"],[120399,1,\"t\"],[120400,1,\"u\"],[120401,1,\"v\"],[120402,1,\"w\"],[120403,1,\"x\"],[120404,1,\"y\"],[120405,1,\"z\"],[120406,1,\"a\"],[120407,1,\"b\"],[120408,1,\"c\"],[120409,1,\"d\"],[120410,1,\"e\"],[120411,1,\"f\"],[120412,1,\"g\"],[120413,1,\"h\"],[120414,1,\"i\"],[120415,1,\"j\"],[120416,1,\"k\"],[120417,1,\"l\"],[120418,1,\"m\"],[120419,1,\"n\"],[120420,1,\"o\"],[120421,1,\"p\"],[120422,1,\"q\"],[120423,1,\"r\"],[120424,1,\"s\"],[120425,1,\"t\"],[120426,1,\"u\"],[120427,1,\"v\"],[120428,1,\"w\"],[120429,1,\"x\"],[120430,1,\"y\"],[120431,1,\"z\"],[120432,1,\"a\"],[120433,1,\"b\"],[120434,1,\"c\"],[120435,1,\"d\"],[120436,1,\"e\"],[120437,1,\"f\"],[120438,1,\"g\"],[120439,1,\"h\"],[120440,1,\"i\"],[120441,1,\"j\"],[120442,1,\"k\"],[120443,1,\"l\"],[120444,1,\"m\"],[120445,1,\"n\"],[120446,1,\"o\"],[120447,1,\"p\"],[120448,1,\"q\"],[120449,1,\"r\"],[120450,1,\"s\"],[120451,1,\"t\"],[120452,1,\"u\"],[120453,1,\"v\"],[120454,1,\"w\"],[120455,1,\"x\"],[120456,1,\"y\"],[120457,1,\"z\"],[120458,1,\"a\"],[120459,1,\"b\"],[120460,1,\"c\"],[120461,1,\"d\"],[120462,1,\"e\"],[120463,1,\"f\"],[120464,1,\"g\"],[120465,1,\"h\"],[120466,1,\"i\"],[120467,1,\"j\"],[120468,1,\"k\"],[120469,1,\"l\"],[120470,1,\"m\"],[120471,1,\"n\"],[120472,1,\"o\"],[120473,1,\"p\"],[120474,1,\"q\"],[120475,1,\"r\"],[120476,1,\"s\"],[120477,1,\"t\"],[120478,1,\"u\"],[120479,1,\"v\"],[120480,1,\"w\"],[120481,1,\"x\"],[120482,1,\"y\"],[120483,1,\"z\"],[120484,1,\"ı\"],[120485,1,\"ȷ\"],[[120486,120487],3],[120488,1,\"α\"],[120489,1,\"β\"],[120490,1,\"γ\"],[120491,1,\"δ\"],[120492,1,\"ε\"],[120493,1,\"ζ\"],[120494,1,\"η\"],[120495,1,\"θ\"],[120496,1,\"ι\"],[120497,1,\"κ\"],[120498,1,\"λ\"],[120499,1,\"μ\"],[120500,1,\"ν\"],[120501,1,\"ξ\"],[120502,1,\"ο\"],[120503,1,\"π\"],[120504,1,\"ρ\"],[120505,1,\"θ\"],[120506,1,\"σ\"],[120507,1,\"τ\"],[120508,1,\"υ\"],[120509,1,\"φ\"],[120510,1,\"χ\"],[120511,1,\"ψ\"],[120512,1,\"ω\"],[120513,1,\"∇\"],[120514,1,\"α\"],[120515,1,\"β\"],[120516,1,\"γ\"],[120517,1,\"δ\"],[120518,1,\"ε\"],[120519,1,\"ζ\"],[120520,1,\"η\"],[120521,1,\"θ\"],[120522,1,\"ι\"],[120523,1,\"κ\"],[120524,1,\"λ\"],[120525,1,\"μ\"],[120526,1,\"ν\"],[120527,1,\"ξ\"],[120528,1,\"ο\"],[120529,1,\"π\"],[120530,1,\"ρ\"],[[120531,120532],1,\"σ\"],[120533,1,\"τ\"],[120534,1,\"υ\"],[120535,1,\"φ\"],[120536,1,\"χ\"],[120537,1,\"ψ\"],[120538,1,\"ω\"],[120539,1,\"∂\"],[120540,1,\"ε\"],[120541,1,\"θ\"],[120542,1,\"κ\"],[120543,1,\"φ\"],[120544,1,\"ρ\"],[120545,1,\"π\"],[120546,1,\"α\"],[120547,1,\"β\"],[120548,1,\"γ\"],[120549,1,\"δ\"],[120550,1,\"ε\"],[120551,1,\"ζ\"],[120552,1,\"η\"],[120553,1,\"θ\"],[120554,1,\"ι\"],[120555,1,\"κ\"],[120556,1,\"λ\"],[120557,1,\"μ\"],[120558,1,\"ν\"],[120559,1,\"ξ\"],[120560,1,\"ο\"],[120561,1,\"π\"],[120562,1,\"ρ\"],[120563,1,\"θ\"],[120564,1,\"σ\"],[120565,1,\"τ\"],[120566,1,\"υ\"],[120567,1,\"φ\"],[120568,1,\"χ\"],[120569,1,\"ψ\"],[120570,1,\"ω\"],[120571,1,\"∇\"],[120572,1,\"α\"],[120573,1,\"β\"],[120574,1,\"γ\"],[120575,1,\"δ\"],[120576,1,\"ε\"],[120577,1,\"ζ\"],[120578,1,\"η\"],[120579,1,\"θ\"],[120580,1,\"ι\"],[120581,1,\"κ\"],[120582,1,\"λ\"],[120583,1,\"μ\"],[120584,1,\"ν\"],[120585,1,\"ξ\"],[120586,1,\"ο\"],[120587,1,\"π\"],[120588,1,\"ρ\"],[[120589,120590],1,\"σ\"],[120591,1,\"τ\"],[120592,1,\"υ\"],[120593,1,\"φ\"],[120594,1,\"χ\"],[120595,1,\"ψ\"],[120596,1,\"ω\"],[120597,1,\"∂\"],[120598,1,\"ε\"],[120599,1,\"θ\"],[120600,1,\"κ\"],[120601,1,\"φ\"],[120602,1,\"ρ\"],[120603,1,\"π\"],[120604,1,\"α\"],[120605,1,\"β\"],[120606,1,\"γ\"],[120607,1,\"δ\"],[120608,1,\"ε\"],[120609,1,\"ζ\"],[120610,1,\"η\"],[120611,1,\"θ\"],[120612,1,\"ι\"],[120613,1,\"κ\"],[120614,1,\"λ\"],[120615,1,\"μ\"],[120616,1,\"ν\"],[120617,1,\"ξ\"],[120618,1,\"ο\"],[120619,1,\"π\"],[120620,1,\"ρ\"],[120621,1,\"θ\"],[120622,1,\"σ\"],[120623,1,\"τ\"],[120624,1,\"υ\"],[120625,1,\"φ\"],[120626,1,\"χ\"],[120627,1,\"ψ\"],[120628,1,\"ω\"],[120629,1,\"∇\"],[120630,1,\"α\"],[120631,1,\"β\"],[120632,1,\"γ\"],[120633,1,\"δ\"],[120634,1,\"ε\"],[120635,1,\"ζ\"],[120636,1,\"η\"],[120637,1,\"θ\"],[120638,1,\"ι\"],[120639,1,\"κ\"],[120640,1,\"λ\"],[120641,1,\"μ\"],[120642,1,\"ν\"],[120643,1,\"ξ\"],[120644,1,\"ο\"],[120645,1,\"π\"],[120646,1,\"ρ\"],[[120647,120648],1,\"σ\"],[120649,1,\"τ\"],[120650,1,\"υ\"],[120651,1,\"φ\"],[120652,1,\"χ\"],[120653,1,\"ψ\"],[120654,1,\"ω\"],[120655,1,\"∂\"],[120656,1,\"ε\"],[120657,1,\"θ\"],[120658,1,\"κ\"],[120659,1,\"φ\"],[120660,1,\"ρ\"],[120661,1,\"π\"],[120662,1,\"α\"],[120663,1,\"β\"],[120664,1,\"γ\"],[120665,1,\"δ\"],[120666,1,\"ε\"],[120667,1,\"ζ\"],[120668,1,\"η\"],[120669,1,\"θ\"],[120670,1,\"ι\"],[120671,1,\"κ\"],[120672,1,\"λ\"],[120673,1,\"μ\"],[120674,1,\"ν\"],[120675,1,\"ξ\"],[120676,1,\"ο\"],[120677,1,\"π\"],[120678,1,\"ρ\"],[120679,1,\"θ\"],[120680,1,\"σ\"],[120681,1,\"τ\"],[120682,1,\"υ\"],[120683,1,\"φ\"],[120684,1,\"χ\"],[120685,1,\"ψ\"],[120686,1,\"ω\"],[120687,1,\"∇\"],[120688,1,\"α\"],[120689,1,\"β\"],[120690,1,\"γ\"],[120691,1,\"δ\"],[120692,1,\"ε\"],[120693,1,\"ζ\"],[120694,1,\"η\"],[120695,1,\"θ\"],[120696,1,\"ι\"],[120697,1,\"κ\"],[120698,1,\"λ\"],[120699,1,\"μ\"],[120700,1,\"ν\"],[120701,1,\"ξ\"],[120702,1,\"ο\"],[120703,1,\"π\"],[120704,1,\"ρ\"],[[120705,120706],1,\"σ\"],[120707,1,\"τ\"],[120708,1,\"υ\"],[120709,1,\"φ\"],[120710,1,\"χ\"],[120711,1,\"ψ\"],[120712,1,\"ω\"],[120713,1,\"∂\"],[120714,1,\"ε\"],[120715,1,\"θ\"],[120716,1,\"κ\"],[120717,1,\"φ\"],[120718,1,\"ρ\"],[120719,1,\"π\"],[120720,1,\"α\"],[120721,1,\"β\"],[120722,1,\"γ\"],[120723,1,\"δ\"],[120724,1,\"ε\"],[120725,1,\"ζ\"],[120726,1,\"η\"],[120727,1,\"θ\"],[120728,1,\"ι\"],[120729,1,\"κ\"],[120730,1,\"λ\"],[120731,1,\"μ\"],[120732,1,\"ν\"],[120733,1,\"ξ\"],[120734,1,\"ο\"],[120735,1,\"π\"],[120736,1,\"ρ\"],[120737,1,\"θ\"],[120738,1,\"σ\"],[120739,1,\"τ\"],[120740,1,\"υ\"],[120741,1,\"φ\"],[120742,1,\"χ\"],[120743,1,\"ψ\"],[120744,1,\"ω\"],[120745,1,\"∇\"],[120746,1,\"α\"],[120747,1,\"β\"],[120748,1,\"γ\"],[120749,1,\"δ\"],[120750,1,\"ε\"],[120751,1,\"ζ\"],[120752,1,\"η\"],[120753,1,\"θ\"],[120754,1,\"ι\"],[120755,1,\"κ\"],[120756,1,\"λ\"],[120757,1,\"μ\"],[120758,1,\"ν\"],[120759,1,\"ξ\"],[120760,1,\"ο\"],[120761,1,\"π\"],[120762,1,\"ρ\"],[[120763,120764],1,\"σ\"],[120765,1,\"τ\"],[120766,1,\"υ\"],[120767,1,\"φ\"],[120768,1,\"χ\"],[120769,1,\"ψ\"],[120770,1,\"ω\"],[120771,1,\"∂\"],[120772,1,\"ε\"],[120773,1,\"θ\"],[120774,1,\"κ\"],[120775,1,\"φ\"],[120776,1,\"ρ\"],[120777,1,\"π\"],[[120778,120779],1,\"ϝ\"],[[120780,120781],3],[120782,1,\"0\"],[120783,1,\"1\"],[120784,1,\"2\"],[120785,1,\"3\"],[120786,1,\"4\"],[120787,1,\"5\"],[120788,1,\"6\"],[120789,1,\"7\"],[120790,1,\"8\"],[120791,1,\"9\"],[120792,1,\"0\"],[120793,1,\"1\"],[120794,1,\"2\"],[120795,1,\"3\"],[120796,1,\"4\"],[120797,1,\"5\"],[120798,1,\"6\"],[120799,1,\"7\"],[120800,1,\"8\"],[120801,1,\"9\"],[120802,1,\"0\"],[120803,1,\"1\"],[120804,1,\"2\"],[120805,1,\"3\"],[120806,1,\"4\"],[120807,1,\"5\"],[120808,1,\"6\"],[120809,1,\"7\"],[120810,1,\"8\"],[120811,1,\"9\"],[120812,1,\"0\"],[120813,1,\"1\"],[120814,1,\"2\"],[120815,1,\"3\"],[120816,1,\"4\"],[120817,1,\"5\"],[120818,1,\"6\"],[120819,1,\"7\"],[120820,1,\"8\"],[120821,1,\"9\"],[120822,1,\"0\"],[120823,1,\"1\"],[120824,1,\"2\"],[120825,1,\"3\"],[120826,1,\"4\"],[120827,1,\"5\"],[120828,1,\"6\"],[120829,1,\"7\"],[120830,1,\"8\"],[120831,1,\"9\"],[[120832,121343],2],[[121344,121398],2],[[121399,121402],2],[[121403,121452],2],[[121453,121460],2],[121461,2],[[121462,121475],2],[121476,2],[[121477,121483],2],[[121484,121498],3],[[121499,121503],2],[121504,3],[[121505,121519],2],[[121520,122623],3],[[122624,122654],2],[[122655,122660],3],[[122661,122666],2],[[122667,122879],3],[[122880,122886],2],[122887,3],[[122888,122904],2],[[122905,122906],3],[[122907,122913],2],[122914,3],[[122915,122916],2],[122917,3],[[122918,122922],2],[[122923,122927],3],[122928,1,\"а\"],[122929,1,\"б\"],[122930,1,\"в\"],[122931,1,\"г\"],[122932,1,\"д\"],[122933,1,\"е\"],[122934,1,\"ж\"],[122935,1,\"з\"],[122936,1,\"и\"],[122937,1,\"к\"],[122938,1,\"л\"],[122939,1,\"м\"],[122940,1,\"о\"],[122941,1,\"п\"],[122942,1,\"р\"],[122943,1,\"с\"],[122944,1,\"т\"],[122945,1,\"у\"],[122946,1,\"ф\"],[122947,1,\"х\"],[122948,1,\"ц\"],[122949,1,\"ч\"],[122950,1,\"ш\"],[122951,1,\"ы\"],[122952,1,\"э\"],[122953,1,\"ю\"],[122954,1,\"ꚉ\"],[122955,1,\"ә\"],[122956,1,\"і\"],[122957,1,\"ј\"],[122958,1,\"ө\"],[122959,1,\"ү\"],[122960,1,\"ӏ\"],[122961,1,\"а\"],[122962,1,\"б\"],[122963,1,\"в\"],[122964,1,\"г\"],[122965,1,\"д\"],[122966,1,\"е\"],[122967,1,\"ж\"],[122968,1,\"з\"],[122969,1,\"и\"],[122970,1,\"к\"],[122971,1,\"л\"],[122972,1,\"о\"],[122973,1,\"п\"],[122974,1,\"с\"],[122975,1,\"у\"],[122976,1,\"ф\"],[122977,1,\"х\"],[122978,1,\"ц\"],[122979,1,\"ч\"],[122980,1,\"ш\"],[122981,1,\"ъ\"],[122982,1,\"ы\"],[122983,1,\"ґ\"],[122984,1,\"і\"],[122985,1,\"ѕ\"],[122986,1,\"џ\"],[122987,1,\"ҫ\"],[122988,1,\"ꙑ\"],[122989,1,\"ұ\"],[[122990,123022],3],[123023,2],[[123024,123135],3],[[123136,123180],2],[[123181,123183],3],[[123184,123197],2],[[123198,123199],3],[[123200,123209],2],[[123210,123213],3],[123214,2],[123215,2],[[123216,123535],3],[[123536,123566],2],[[123567,123583],3],[[123584,123641],2],[[123642,123646],3],[123647,2],[[123648,124111],3],[[124112,124153],2],[[124154,124895],3],[[124896,124902],2],[124903,3],[[124904,124907],2],[124908,3],[[124909,124910],2],[124911,3],[[124912,124926],2],[124927,3],[[124928,125124],2],[[125125,125126],3],[[125127,125135],2],[[125136,125142],2],[[125143,125183],3],[125184,1,\"𞤢\"],[125185,1,\"𞤣\"],[125186,1,\"𞤤\"],[125187,1,\"𞤥\"],[125188,1,\"𞤦\"],[125189,1,\"𞤧\"],[125190,1,\"𞤨\"],[125191,1,\"𞤩\"],[125192,1,\"𞤪\"],[125193,1,\"𞤫\"],[125194,1,\"𞤬\"],[125195,1,\"𞤭\"],[125196,1,\"𞤮\"],[125197,1,\"𞤯\"],[125198,1,\"𞤰\"],[125199,1,\"𞤱\"],[125200,1,\"𞤲\"],[125201,1,\"𞤳\"],[125202,1,\"𞤴\"],[125203,1,\"𞤵\"],[125204,1,\"𞤶\"],[125205,1,\"𞤷\"],[125206,1,\"𞤸\"],[125207,1,\"𞤹\"],[125208,1,\"𞤺\"],[125209,1,\"𞤻\"],[125210,1,\"𞤼\"],[125211,1,\"𞤽\"],[125212,1,\"𞤾\"],[125213,1,\"𞤿\"],[125214,1,\"𞥀\"],[125215,1,\"𞥁\"],[125216,1,\"𞥂\"],[125217,1,\"𞥃\"],[[125218,125258],2],[125259,2],[[125260,125263],3],[[125264,125273],2],[[125274,125277],3],[[125278,125279],2],[[125280,126064],3],[[126065,126132],2],[[126133,126208],3],[[126209,126269],2],[[126270,126463],3],[126464,1,\"ا\"],[126465,1,\"ب\"],[126466,1,\"ج\"],[126467,1,\"د\"],[126468,3],[126469,1,\"و\"],[126470,1,\"ز\"],[126471,1,\"ح\"],[126472,1,\"ط\"],[126473,1,\"ي\"],[126474,1,\"ك\"],[126475,1,\"ل\"],[126476,1,\"م\"],[126477,1,\"ن\"],[126478,1,\"س\"],[126479,1,\"ع\"],[126480,1,\"ف\"],[126481,1,\"ص\"],[126482,1,\"ق\"],[126483,1,\"ر\"],[126484,1,\"ش\"],[126485,1,\"ت\"],[126486,1,\"ث\"],[126487,1,\"خ\"],[126488,1,\"ذ\"],[126489,1,\"ض\"],[126490,1,\"ظ\"],[126491,1,\"غ\"],[126492,1,\"ٮ\"],[126493,1,\"ں\"],[126494,1,\"ڡ\"],[126495,1,\"ٯ\"],[126496,3],[126497,1,\"ب\"],[126498,1,\"ج\"],[126499,3],[126500,1,\"ه\"],[[126501,126502],3],[126503,1,\"ح\"],[126504,3],[126505,1,\"ي\"],[126506,1,\"ك\"],[126507,1,\"ل\"],[126508,1,\"م\"],[126509,1,\"ن\"],[126510,1,\"س\"],[126511,1,\"ع\"],[126512,1,\"ف\"],[126513,1,\"ص\"],[126514,1,\"ق\"],[126515,3],[126516,1,\"ش\"],[126517,1,\"ت\"],[126518,1,\"ث\"],[126519,1,\"خ\"],[126520,3],[126521,1,\"ض\"],[126522,3],[126523,1,\"غ\"],[[126524,126529],3],[126530,1,\"ج\"],[[126531,126534],3],[126535,1,\"ح\"],[126536,3],[126537,1,\"ي\"],[126538,3],[126539,1,\"ل\"],[126540,3],[126541,1,\"ن\"],[126542,1,\"س\"],[126543,1,\"ع\"],[126544,3],[126545,1,\"ص\"],[126546,1,\"ق\"],[126547,3],[126548,1,\"ش\"],[[126549,126550],3],[126551,1,\"خ\"],[126552,3],[126553,1,\"ض\"],[126554,3],[126555,1,\"غ\"],[126556,3],[126557,1,\"ں\"],[126558,3],[126559,1,\"ٯ\"],[126560,3],[126561,1,\"ب\"],[126562,1,\"ج\"],[126563,3],[126564,1,\"ه\"],[[126565,126566],3],[126567,1,\"ح\"],[126568,1,\"ط\"],[126569,1,\"ي\"],[126570,1,\"ك\"],[126571,3],[126572,1,\"م\"],[126573,1,\"ن\"],[126574,1,\"س\"],[126575,1,\"ع\"],[126576,1,\"ف\"],[126577,1,\"ص\"],[126578,1,\"ق\"],[126579,3],[126580,1,\"ش\"],[126581,1,\"ت\"],[126582,1,\"ث\"],[126583,1,\"خ\"],[126584,3],[126585,1,\"ض\"],[126586,1,\"ظ\"],[126587,1,\"غ\"],[126588,1,\"ٮ\"],[126589,3],[126590,1,\"ڡ\"],[126591,3],[126592,1,\"ا\"],[126593,1,\"ب\"],[126594,1,\"ج\"],[126595,1,\"د\"],[126596,1,\"ه\"],[126597,1,\"و\"],[126598,1,\"ز\"],[126599,1,\"ح\"],[126600,1,\"ط\"],[126601,1,\"ي\"],[126602,3],[126603,1,\"ل\"],[126604,1,\"م\"],[126605,1,\"ن\"],[126606,1,\"س\"],[126607,1,\"ع\"],[126608,1,\"ف\"],[126609,1,\"ص\"],[126610,1,\"ق\"],[126611,1,\"ر\"],[126612,1,\"ش\"],[126613,1,\"ت\"],[126614,1,\"ث\"],[126615,1,\"خ\"],[126616,1,\"ذ\"],[126617,1,\"ض\"],[126618,1,\"ظ\"],[126619,1,\"غ\"],[[126620,126624],3],[126625,1,\"ب\"],[126626,1,\"ج\"],[126627,1,\"د\"],[126628,3],[126629,1,\"و\"],[126630,1,\"ز\"],[126631,1,\"ح\"],[126632,1,\"ط\"],[126633,1,\"ي\"],[126634,3],[126635,1,\"ل\"],[126636,1,\"م\"],[126637,1,\"ن\"],[126638,1,\"س\"],[126639,1,\"ع\"],[126640,1,\"ف\"],[126641,1,\"ص\"],[126642,1,\"ق\"],[126643,1,\"ر\"],[126644,1,\"ش\"],[126645,1,\"ت\"],[126646,1,\"ث\"],[126647,1,\"خ\"],[126648,1,\"ذ\"],[126649,1,\"ض\"],[126650,1,\"ظ\"],[126651,1,\"غ\"],[[126652,126703],3],[[126704,126705],2],[[126706,126975],3],[[126976,127019],2],[[127020,127023],3],[[127024,127123],2],[[127124,127135],3],[[127136,127150],2],[[127151,127152],3],[[127153,127166],2],[127167,2],[127168,3],[[127169,127183],2],[127184,3],[[127185,127199],2],[[127200,127221],2],[[127222,127231],3],[127232,3],[127233,5,\"0,\"],[127234,5,\"1,\"],[127235,5,\"2,\"],[127236,5,\"3,\"],[127237,5,\"4,\"],[127238,5,\"5,\"],[127239,5,\"6,\"],[127240,5,\"7,\"],[127241,5,\"8,\"],[127242,5,\"9,\"],[[127243,127244],2],[[127245,127247],2],[127248,5,\"(a)\"],[127249,5,\"(b)\"],[127250,5,\"(c)\"],[127251,5,\"(d)\"],[127252,5,\"(e)\"],[127253,5,\"(f)\"],[127254,5,\"(g)\"],[127255,5,\"(h)\"],[127256,5,\"(i)\"],[127257,5,\"(j)\"],[127258,5,\"(k)\"],[127259,5,\"(l)\"],[127260,5,\"(m)\"],[127261,5,\"(n)\"],[127262,5,\"(o)\"],[127263,5,\"(p)\"],[127264,5,\"(q)\"],[127265,5,\"(r)\"],[127266,5,\"(s)\"],[127267,5,\"(t)\"],[127268,5,\"(u)\"],[127269,5,\"(v)\"],[127270,5,\"(w)\"],[127271,5,\"(x)\"],[127272,5,\"(y)\"],[127273,5,\"(z)\"],[127274,1,\"〔s〕\"],[127275,1,\"c\"],[127276,1,\"r\"],[127277,1,\"cd\"],[127278,1,\"wz\"],[127279,2],[127280,1,\"a\"],[127281,1,\"b\"],[127282,1,\"c\"],[127283,1,\"d\"],[127284,1,\"e\"],[127285,1,\"f\"],[127286,1,\"g\"],[127287,1,\"h\"],[127288,1,\"i\"],[127289,1,\"j\"],[127290,1,\"k\"],[127291,1,\"l\"],[127292,1,\"m\"],[127293,1,\"n\"],[127294,1,\"o\"],[127295,1,\"p\"],[127296,1,\"q\"],[127297,1,\"r\"],[127298,1,\"s\"],[127299,1,\"t\"],[127300,1,\"u\"],[127301,1,\"v\"],[127302,1,\"w\"],[127303,1,\"x\"],[127304,1,\"y\"],[127305,1,\"z\"],[127306,1,\"hv\"],[127307,1,\"mv\"],[127308,1,\"sd\"],[127309,1,\"ss\"],[127310,1,\"ppv\"],[127311,1,\"wc\"],[[127312,127318],2],[127319,2],[[127320,127326],2],[127327,2],[[127328,127337],2],[127338,1,\"mc\"],[127339,1,\"md\"],[127340,1,\"mr\"],[[127341,127343],2],[[127344,127352],2],[127353,2],[127354,2],[[127355,127356],2],[[127357,127358],2],[127359,2],[[127360,127369],2],[[127370,127373],2],[[127374,127375],2],[127376,1,\"dj\"],[[127377,127386],2],[[127387,127404],2],[127405,2],[[127406,127461],3],[[127462,127487],2],[127488,1,\"ほか\"],[127489,1,\"ココ\"],[127490,1,\"サ\"],[[127491,127503],3],[127504,1,\"手\"],[127505,1,\"字\"],[127506,1,\"双\"],[127507,1,\"デ\"],[127508,1,\"二\"],[127509,1,\"多\"],[127510,1,\"解\"],[127511,1,\"天\"],[127512,1,\"交\"],[127513,1,\"映\"],[127514,1,\"無\"],[127515,1,\"料\"],[127516,1,\"前\"],[127517,1,\"後\"],[127518,1,\"再\"],[127519,1,\"新\"],[127520,1,\"初\"],[127521,1,\"終\"],[127522,1,\"生\"],[127523,1,\"販\"],[127524,1,\"声\"],[127525,1,\"吹\"],[127526,1,\"演\"],[127527,1,\"投\"],[127528,1,\"捕\"],[127529,1,\"一\"],[127530,1,\"三\"],[127531,1,\"遊\"],[127532,1,\"左\"],[127533,1,\"中\"],[127534,1,\"右\"],[127535,1,\"指\"],[127536,1,\"走\"],[127537,1,\"打\"],[127538,1,\"禁\"],[127539,1,\"空\"],[127540,1,\"合\"],[127541,1,\"満\"],[127542,1,\"有\"],[127543,1,\"月\"],[127544,1,\"申\"],[127545,1,\"割\"],[127546,1,\"営\"],[127547,1,\"配\"],[[127548,127551],3],[127552,1,\"〔本〕\"],[127553,1,\"〔三〕\"],[127554,1,\"〔二〕\"],[127555,1,\"〔安〕\"],[127556,1,\"〔点〕\"],[127557,1,\"〔打〕\"],[127558,1,\"〔盗〕\"],[127559,1,\"〔勝〕\"],[127560,1,\"〔敗〕\"],[[127561,127567],3],[127568,1,\"得\"],[127569,1,\"可\"],[[127570,127583],3],[[127584,127589],2],[[127590,127743],3],[[127744,127776],2],[[127777,127788],2],[[127789,127791],2],[[127792,127797],2],[127798,2],[[127799,127868],2],[127869,2],[[127870,127871],2],[[127872,127891],2],[[127892,127903],2],[[127904,127940],2],[127941,2],[[127942,127946],2],[[127947,127950],2],[[127951,127955],2],[[127956,127967],2],[[127968,127984],2],[[127985,127991],2],[[127992,127999],2],[[128000,128062],2],[128063,2],[128064,2],[128065,2],[[128066,128247],2],[128248,2],[[128249,128252],2],[[128253,128254],2],[128255,2],[[128256,128317],2],[[128318,128319],2],[[128320,128323],2],[[128324,128330],2],[[128331,128335],2],[[128336,128359],2],[[128360,128377],2],[128378,2],[[128379,128419],2],[128420,2],[[128421,128506],2],[[128507,128511],2],[128512,2],[[128513,128528],2],[128529,2],[[128530,128532],2],[128533,2],[128534,2],[128535,2],[128536,2],[128537,2],[128538,2],[128539,2],[[128540,128542],2],[128543,2],[[128544,128549],2],[[128550,128551],2],[[128552,128555],2],[128556,2],[128557,2],[[128558,128559],2],[[128560,128563],2],[128564,2],[[128565,128576],2],[[128577,128578],2],[[128579,128580],2],[[128581,128591],2],[[128592,128639],2],[[128640,128709],2],[[128710,128719],2],[128720,2],[[128721,128722],2],[[128723,128724],2],[128725,2],[[128726,128727],2],[[128728,128731],3],[128732,2],[[128733,128735],2],[[128736,128748],2],[[128749,128751],3],[[128752,128755],2],[[128756,128758],2],[[128759,128760],2],[128761,2],[128762,2],[[128763,128764],2],[[128765,128767],3],[[128768,128883],2],[[128884,128886],2],[[128887,128890],3],[[128891,128895],2],[[128896,128980],2],[[128981,128984],2],[128985,2],[[128986,128991],3],[[128992,129003],2],[[129004,129007],3],[129008,2],[[129009,129023],3],[[129024,129035],2],[[129036,129039],3],[[129040,129095],2],[[129096,129103],3],[[129104,129113],2],[[129114,129119],3],[[129120,129159],2],[[129160,129167],3],[[129168,129197],2],[[129198,129199],3],[[129200,129201],2],[[129202,129279],3],[[129280,129291],2],[129292,2],[[129293,129295],2],[[129296,129304],2],[[129305,129310],2],[129311,2],[[129312,129319],2],[[129320,129327],2],[129328,2],[[129329,129330],2],[[129331,129342],2],[129343,2],[[129344,129355],2],[129356,2],[[129357,129359],2],[[129360,129374],2],[[129375,129387],2],[[129388,129392],2],[129393,2],[129394,2],[[129395,129398],2],[[129399,129400],2],[129401,2],[129402,2],[129403,2],[[129404,129407],2],[[129408,129412],2],[[129413,129425],2],[[129426,129431],2],[[129432,129442],2],[[129443,129444],2],[[129445,129450],2],[[129451,129453],2],[[129454,129455],2],[[129456,129465],2],[[129466,129471],2],[129472,2],[[129473,129474],2],[[129475,129482],2],[129483,2],[129484,2],[[129485,129487],2],[[129488,129510],2],[[129511,129535],2],[[129536,129619],2],[[129620,129631],3],[[129632,129645],2],[[129646,129647],3],[[129648,129651],2],[129652,2],[[129653,129655],2],[[129656,129658],2],[[129659,129660],2],[[129661,129663],3],[[129664,129666],2],[[129667,129670],2],[[129671,129672],2],[[129673,129679],3],[[129680,129685],2],[[129686,129704],2],[[129705,129708],2],[[129709,129711],2],[[129712,129718],2],[[129719,129722],2],[[129723,129725],2],[129726,3],[129727,2],[[129728,129730],2],[[129731,129733],2],[[129734,129741],3],[[129742,129743],2],[[129744,129750],2],[[129751,129753],2],[[129754,129755],2],[[129756,129759],3],[[129760,129767],2],[129768,2],[[129769,129775],3],[[129776,129782],2],[[129783,129784],2],[[129785,129791],3],[[129792,129938],2],[129939,3],[[129940,129994],2],[[129995,130031],3],[130032,1,\"0\"],[130033,1,\"1\"],[130034,1,\"2\"],[130035,1,\"3\"],[130036,1,\"4\"],[130037,1,\"5\"],[130038,1,\"6\"],[130039,1,\"7\"],[130040,1,\"8\"],[130041,1,\"9\"],[[130042,131069],3],[[131070,131071],3],[[131072,173782],2],[[173783,173789],2],[[173790,173791],2],[[173792,173823],3],[[173824,177972],2],[[177973,177976],2],[177977,2],[[177978,177983],3],[[177984,178205],2],[[178206,178207],3],[[178208,183969],2],[[183970,183983],3],[[183984,191456],2],[[191457,194559],3],[194560,1,\"丽\"],[194561,1,\"丸\"],[194562,1,\"乁\"],[194563,1,\"𠄢\"],[194564,1,\"你\"],[194565,1,\"侮\"],[194566,1,\"侻\"],[194567,1,\"倂\"],[194568,1,\"偺\"],[194569,1,\"備\"],[194570,1,\"僧\"],[194571,1,\"像\"],[194572,1,\"㒞\"],[194573,1,\"𠘺\"],[194574,1,\"免\"],[194575,1,\"兔\"],[194576,1,\"兤\"],[194577,1,\"具\"],[194578,1,\"𠔜\"],[194579,1,\"㒹\"],[194580,1,\"內\"],[194581,1,\"再\"],[194582,1,\"𠕋\"],[194583,1,\"冗\"],[194584,1,\"冤\"],[194585,1,\"仌\"],[194586,1,\"冬\"],[194587,1,\"况\"],[194588,1,\"𩇟\"],[194589,1,\"凵\"],[194590,1,\"刃\"],[194591,1,\"㓟\"],[194592,1,\"刻\"],[194593,1,\"剆\"],[194594,1,\"割\"],[194595,1,\"剷\"],[194596,1,\"㔕\"],[194597,1,\"勇\"],[194598,1,\"勉\"],[194599,1,\"勤\"],[194600,1,\"勺\"],[194601,1,\"包\"],[194602,1,\"匆\"],[194603,1,\"北\"],[194604,1,\"卉\"],[194605,1,\"卑\"],[194606,1,\"博\"],[194607,1,\"即\"],[194608,1,\"卽\"],[[194609,194611],1,\"卿\"],[194612,1,\"𠨬\"],[194613,1,\"灰\"],[194614,1,\"及\"],[194615,1,\"叟\"],[194616,1,\"𠭣\"],[194617,1,\"叫\"],[194618,1,\"叱\"],[194619,1,\"吆\"],[194620,1,\"咞\"],[194621,1,\"吸\"],[194622,1,\"呈\"],[194623,1,\"周\"],[194624,1,\"咢\"],[194625,1,\"哶\"],[194626,1,\"唐\"],[194627,1,\"啓\"],[194628,1,\"啣\"],[[194629,194630],1,\"善\"],[194631,1,\"喙\"],[194632,1,\"喫\"],[194633,1,\"喳\"],[194634,1,\"嗂\"],[194635,1,\"圖\"],[194636,1,\"嘆\"],[194637,1,\"圗\"],[194638,1,\"噑\"],[194639,1,\"噴\"],[194640,1,\"切\"],[194641,1,\"壮\"],[194642,1,\"城\"],[194643,1,\"埴\"],[194644,1,\"堍\"],[194645,1,\"型\"],[194646,1,\"堲\"],[194647,1,\"報\"],[194648,1,\"墬\"],[194649,1,\"𡓤\"],[194650,1,\"売\"],[194651,1,\"壷\"],[194652,1,\"夆\"],[194653,1,\"多\"],[194654,1,\"夢\"],[194655,1,\"奢\"],[194656,1,\"𡚨\"],[194657,1,\"𡛪\"],[194658,1,\"姬\"],[194659,1,\"娛\"],[194660,1,\"娧\"],[194661,1,\"姘\"],[194662,1,\"婦\"],[194663,1,\"㛮\"],[194664,3],[194665,1,\"嬈\"],[[194666,194667],1,\"嬾\"],[194668,1,\"𡧈\"],[194669,1,\"寃\"],[194670,1,\"寘\"],[194671,1,\"寧\"],[194672,1,\"寳\"],[194673,1,\"𡬘\"],[194674,1,\"寿\"],[194675,1,\"将\"],[194676,3],[194677,1,\"尢\"],[194678,1,\"㞁\"],[194679,1,\"屠\"],[194680,1,\"屮\"],[194681,1,\"峀\"],[194682,1,\"岍\"],[194683,1,\"𡷤\"],[194684,1,\"嵃\"],[194685,1,\"𡷦\"],[194686,1,\"嵮\"],[194687,1,\"嵫\"],[194688,1,\"嵼\"],[194689,1,\"巡\"],[194690,1,\"巢\"],[194691,1,\"㠯\"],[194692,1,\"巽\"],[194693,1,\"帨\"],[194694,1,\"帽\"],[194695,1,\"幩\"],[194696,1,\"㡢\"],[194697,1,\"𢆃\"],[194698,1,\"㡼\"],[194699,1,\"庰\"],[194700,1,\"庳\"],[194701,1,\"庶\"],[194702,1,\"廊\"],[194703,1,\"𪎒\"],[194704,1,\"廾\"],[[194705,194706],1,\"𢌱\"],[194707,1,\"舁\"],[[194708,194709],1,\"弢\"],[194710,1,\"㣇\"],[194711,1,\"𣊸\"],[194712,1,\"𦇚\"],[194713,1,\"形\"],[194714,1,\"彫\"],[194715,1,\"㣣\"],[194716,1,\"徚\"],[194717,1,\"忍\"],[194718,1,\"志\"],[194719,1,\"忹\"],[194720,1,\"悁\"],[194721,1,\"㤺\"],[194722,1,\"㤜\"],[194723,1,\"悔\"],[194724,1,\"𢛔\"],[194725,1,\"惇\"],[194726,1,\"慈\"],[194727,1,\"慌\"],[194728,1,\"慎\"],[194729,1,\"慌\"],[194730,1,\"慺\"],[194731,1,\"憎\"],[194732,1,\"憲\"],[194733,1,\"憤\"],[194734,1,\"憯\"],[194735,1,\"懞\"],[194736,1,\"懲\"],[194737,1,\"懶\"],[194738,1,\"成\"],[194739,1,\"戛\"],[194740,1,\"扝\"],[194741,1,\"抱\"],[194742,1,\"拔\"],[194743,1,\"捐\"],[194744,1,\"𢬌\"],[194745,1,\"挽\"],[194746,1,\"拼\"],[194747,1,\"捨\"],[194748,1,\"掃\"],[194749,1,\"揤\"],[194750,1,\"𢯱\"],[194751,1,\"搢\"],[194752,1,\"揅\"],[194753,1,\"掩\"],[194754,1,\"㨮\"],[194755,1,\"摩\"],[194756,1,\"摾\"],[194757,1,\"撝\"],[194758,1,\"摷\"],[194759,1,\"㩬\"],[194760,1,\"敏\"],[194761,1,\"敬\"],[194762,1,\"𣀊\"],[194763,1,\"旣\"],[194764,1,\"書\"],[194765,1,\"晉\"],[194766,1,\"㬙\"],[194767,1,\"暑\"],[194768,1,\"㬈\"],[194769,1,\"㫤\"],[194770,1,\"冒\"],[194771,1,\"冕\"],[194772,1,\"最\"],[194773,1,\"暜\"],[194774,1,\"肭\"],[194775,1,\"䏙\"],[194776,1,\"朗\"],[194777,1,\"望\"],[194778,1,\"朡\"],[194779,1,\"杞\"],[194780,1,\"杓\"],[194781,1,\"𣏃\"],[194782,1,\"㭉\"],[194783,1,\"柺\"],[194784,1,\"枅\"],[194785,1,\"桒\"],[194786,1,\"梅\"],[194787,1,\"𣑭\"],[194788,1,\"梎\"],[194789,1,\"栟\"],[194790,1,\"椔\"],[194791,1,\"㮝\"],[194792,1,\"楂\"],[194793,1,\"榣\"],[194794,1,\"槪\"],[194795,1,\"檨\"],[194796,1,\"𣚣\"],[194797,1,\"櫛\"],[194798,1,\"㰘\"],[194799,1,\"次\"],[194800,1,\"𣢧\"],[194801,1,\"歔\"],[194802,1,\"㱎\"],[194803,1,\"歲\"],[194804,1,\"殟\"],[194805,1,\"殺\"],[194806,1,\"殻\"],[194807,1,\"𣪍\"],[194808,1,\"𡴋\"],[194809,1,\"𣫺\"],[194810,1,\"汎\"],[194811,1,\"𣲼\"],[194812,1,\"沿\"],[194813,1,\"泍\"],[194814,1,\"汧\"],[194815,1,\"洖\"],[194816,1,\"派\"],[194817,1,\"海\"],[194818,1,\"流\"],[194819,1,\"浩\"],[194820,1,\"浸\"],[194821,1,\"涅\"],[194822,1,\"𣴞\"],[194823,1,\"洴\"],[194824,1,\"港\"],[194825,1,\"湮\"],[194826,1,\"㴳\"],[194827,1,\"滋\"],[194828,1,\"滇\"],[194829,1,\"𣻑\"],[194830,1,\"淹\"],[194831,1,\"潮\"],[194832,1,\"𣽞\"],[194833,1,\"𣾎\"],[194834,1,\"濆\"],[194835,1,\"瀹\"],[194836,1,\"瀞\"],[194837,1,\"瀛\"],[194838,1,\"㶖\"],[194839,1,\"灊\"],[194840,1,\"災\"],[194841,1,\"灷\"],[194842,1,\"炭\"],[194843,1,\"𠔥\"],[194844,1,\"煅\"],[194845,1,\"𤉣\"],[194846,1,\"熜\"],[194847,3],[194848,1,\"爨\"],[194849,1,\"爵\"],[194850,1,\"牐\"],[194851,1,\"𤘈\"],[194852,1,\"犀\"],[194853,1,\"犕\"],[194854,1,\"𤜵\"],[194855,1,\"𤠔\"],[194856,1,\"獺\"],[194857,1,\"王\"],[194858,1,\"㺬\"],[194859,1,\"玥\"],[[194860,194861],1,\"㺸\"],[194862,1,\"瑇\"],[194863,1,\"瑜\"],[194864,1,\"瑱\"],[194865,1,\"璅\"],[194866,1,\"瓊\"],[194867,1,\"㼛\"],[194868,1,\"甤\"],[194869,1,\"𤰶\"],[194870,1,\"甾\"],[194871,1,\"𤲒\"],[194872,1,\"異\"],[194873,1,\"𢆟\"],[194874,1,\"瘐\"],[194875,1,\"𤾡\"],[194876,1,\"𤾸\"],[194877,1,\"𥁄\"],[194878,1,\"㿼\"],[194879,1,\"䀈\"],[194880,1,\"直\"],[194881,1,\"𥃳\"],[194882,1,\"𥃲\"],[194883,1,\"𥄙\"],[194884,1,\"𥄳\"],[194885,1,\"眞\"],[[194886,194887],1,\"真\"],[194888,1,\"睊\"],[194889,1,\"䀹\"],[194890,1,\"瞋\"],[194891,1,\"䁆\"],[194892,1,\"䂖\"],[194893,1,\"𥐝\"],[194894,1,\"硎\"],[194895,1,\"碌\"],[194896,1,\"磌\"],[194897,1,\"䃣\"],[194898,1,\"𥘦\"],[194899,1,\"祖\"],[194900,1,\"𥚚\"],[194901,1,\"𥛅\"],[194902,1,\"福\"],[194903,1,\"秫\"],[194904,1,\"䄯\"],[194905,1,\"穀\"],[194906,1,\"穊\"],[194907,1,\"穏\"],[194908,1,\"𥥼\"],[[194909,194910],1,\"𥪧\"],[194911,3],[194912,1,\"䈂\"],[194913,1,\"𥮫\"],[194914,1,\"篆\"],[194915,1,\"築\"],[194916,1,\"䈧\"],[194917,1,\"𥲀\"],[194918,1,\"糒\"],[194919,1,\"䊠\"],[194920,1,\"糨\"],[194921,1,\"糣\"],[194922,1,\"紀\"],[194923,1,\"𥾆\"],[194924,1,\"絣\"],[194925,1,\"䌁\"],[194926,1,\"緇\"],[194927,1,\"縂\"],[194928,1,\"繅\"],[194929,1,\"䌴\"],[194930,1,\"𦈨\"],[194931,1,\"𦉇\"],[194932,1,\"䍙\"],[194933,1,\"𦋙\"],[194934,1,\"罺\"],[194935,1,\"𦌾\"],[194936,1,\"羕\"],[194937,1,\"翺\"],[194938,1,\"者\"],[194939,1,\"𦓚\"],[194940,1,\"𦔣\"],[194941,1,\"聠\"],[194942,1,\"𦖨\"],[194943,1,\"聰\"],[194944,1,\"𣍟\"],[194945,1,\"䏕\"],[194946,1,\"育\"],[194947,1,\"脃\"],[194948,1,\"䐋\"],[194949,1,\"脾\"],[194950,1,\"媵\"],[194951,1,\"𦞧\"],[194952,1,\"𦞵\"],[194953,1,\"𣎓\"],[194954,1,\"𣎜\"],[194955,1,\"舁\"],[194956,1,\"舄\"],[194957,1,\"辞\"],[194958,1,\"䑫\"],[194959,1,\"芑\"],[194960,1,\"芋\"],[194961,1,\"芝\"],[194962,1,\"劳\"],[194963,1,\"花\"],[194964,1,\"芳\"],[194965,1,\"芽\"],[194966,1,\"苦\"],[194967,1,\"𦬼\"],[194968,1,\"若\"],[194969,1,\"茝\"],[194970,1,\"荣\"],[194971,1,\"莭\"],[194972,1,\"茣\"],[194973,1,\"莽\"],[194974,1,\"菧\"],[194975,1,\"著\"],[194976,1,\"荓\"],[194977,1,\"菊\"],[194978,1,\"菌\"],[194979,1,\"菜\"],[194980,1,\"𦰶\"],[194981,1,\"𦵫\"],[194982,1,\"𦳕\"],[194983,1,\"䔫\"],[194984,1,\"蓱\"],[194985,1,\"蓳\"],[194986,1,\"蔖\"],[194987,1,\"𧏊\"],[194988,1,\"蕤\"],[194989,1,\"𦼬\"],[194990,1,\"䕝\"],[194991,1,\"䕡\"],[194992,1,\"𦾱\"],[194993,1,\"𧃒\"],[194994,1,\"䕫\"],[194995,1,\"虐\"],[194996,1,\"虜\"],[194997,1,\"虧\"],[194998,1,\"虩\"],[194999,1,\"蚩\"],[195000,1,\"蚈\"],[195001,1,\"蜎\"],[195002,1,\"蛢\"],[195003,1,\"蝹\"],[195004,1,\"蜨\"],[195005,1,\"蝫\"],[195006,1,\"螆\"],[195007,3],[195008,1,\"蟡\"],[195009,1,\"蠁\"],[195010,1,\"䗹\"],[195011,1,\"衠\"],[195012,1,\"衣\"],[195013,1,\"𧙧\"],[195014,1,\"裗\"],[195015,1,\"裞\"],[195016,1,\"䘵\"],[195017,1,\"裺\"],[195018,1,\"㒻\"],[195019,1,\"𧢮\"],[195020,1,\"𧥦\"],[195021,1,\"䚾\"],[195022,1,\"䛇\"],[195023,1,\"誠\"],[195024,1,\"諭\"],[195025,1,\"變\"],[195026,1,\"豕\"],[195027,1,\"𧲨\"],[195028,1,\"貫\"],[195029,1,\"賁\"],[195030,1,\"贛\"],[195031,1,\"起\"],[195032,1,\"𧼯\"],[195033,1,\"𠠄\"],[195034,1,\"跋\"],[195035,1,\"趼\"],[195036,1,\"跰\"],[195037,1,\"𠣞\"],[195038,1,\"軔\"],[195039,1,\"輸\"],[195040,1,\"𨗒\"],[195041,1,\"𨗭\"],[195042,1,\"邔\"],[195043,1,\"郱\"],[195044,1,\"鄑\"],[195045,1,\"𨜮\"],[195046,1,\"鄛\"],[195047,1,\"鈸\"],[195048,1,\"鋗\"],[195049,1,\"鋘\"],[195050,1,\"鉼\"],[195051,1,\"鏹\"],[195052,1,\"鐕\"],[195053,1,\"𨯺\"],[195054,1,\"開\"],[195055,1,\"䦕\"],[195056,1,\"閷\"],[195057,1,\"𨵷\"],[195058,1,\"䧦\"],[195059,1,\"雃\"],[195060,1,\"嶲\"],[195061,1,\"霣\"],[195062,1,\"𩅅\"],[195063,1,\"𩈚\"],[195064,1,\"䩮\"],[195065,1,\"䩶\"],[195066,1,\"韠\"],[195067,1,\"𩐊\"],[195068,1,\"䪲\"],[195069,1,\"𩒖\"],[[195070,195071],1,\"頋\"],[195072,1,\"頩\"],[195073,1,\"𩖶\"],[195074,1,\"飢\"],[195075,1,\"䬳\"],[195076,1,\"餩\"],[195077,1,\"馧\"],[195078,1,\"駂\"],[195079,1,\"駾\"],[195080,1,\"䯎\"],[195081,1,\"𩬰\"],[195082,1,\"鬒\"],[195083,1,\"鱀\"],[195084,1,\"鳽\"],[195085,1,\"䳎\"],[195086,1,\"䳭\"],[195087,1,\"鵧\"],[195088,1,\"𪃎\"],[195089,1,\"䳸\"],[195090,1,\"𪄅\"],[195091,1,\"𪈎\"],[195092,1,\"𪊑\"],[195093,1,\"麻\"],[195094,1,\"䵖\"],[195095,1,\"黹\"],[195096,1,\"黾\"],[195097,1,\"鼅\"],[195098,1,\"鼏\"],[195099,1,\"鼖\"],[195100,1,\"鼻\"],[195101,1,\"𪘀\"],[[195102,196605],3],[[196606,196607],3],[[196608,201546],2],[[201547,201551],3],[[201552,205743],2],[[205744,262141],3],[[262142,262143],3],[[262144,327677],3],[[327678,327679],3],[[327680,393213],3],[[393214,393215],3],[[393216,458749],3],[[458750,458751],3],[[458752,524285],3],[[524286,524287],3],[[524288,589821],3],[[589822,589823],3],[[589824,655357],3],[[655358,655359],3],[[655360,720893],3],[[720894,720895],3],[[720896,786429],3],[[786430,786431],3],[[786432,851965],3],[[851966,851967],3],[[851968,917501],3],[[917502,917503],3],[917504,3],[917505,3],[[917506,917535],3],[[917536,917631],3],[[917632,917759],3],[[917760,917999],7],[[918000,983037],3],[[983038,983039],3],[[983040,1048573],3],[[1048574,1048575],3],[[1048576,1114109],3],[[1114110,1114111],3]]","\"use strict\";\n\nmodule.exports.STATUS_MAPPING = {\n  mapped: 1,\n  valid: 2,\n  disallowed: 3,\n  disallowed_STD3_valid: 4,\n  disallowed_STD3_mapped: 5,\n  deviation: 6,\n  ignored: 7\n};\n","\"use strict\";\n\nconst punycode = require(\"punycode/\");\nconst regexes = require(\"./lib/regexes.js\");\nconst mappingTable = require(\"./lib/mappingTable.json\");\nconst { STATUS_MAPPING } = require(\"./lib/statusMapping.js\");\n\nfunction containsNonASCII(str) {\n  return /[^\\x00-\\x7F]/u.test(str);\n}\n\nfunction findStatus(val, { useSTD3ASCIIRules }) {\n  let start = 0;\n  let end = mappingTable.length - 1;\n\n  while (start <= end) {\n    const mid = Math.floor((start + end) / 2);\n\n    const target = mappingTable[mid];\n    const min = Array.isArray(target[0]) ? target[0][0] : target[0];\n    const max = Array.isArray(target[0]) ? target[0][1] : target[0];\n\n    if (min <= val && max >= val) {\n      if (useSTD3ASCIIRules &&\n          (target[1] === STATUS_MAPPING.disallowed_STD3_valid || target[1] === STATUS_MAPPING.disallowed_STD3_mapped)) {\n        return [STATUS_MAPPING.disallowed, ...target.slice(2)];\n      } else if (target[1] === STATUS_MAPPING.disallowed_STD3_valid) {\n        return [STATUS_MAPPING.valid, ...target.slice(2)];\n      } else if (target[1] === STATUS_MAPPING.disallowed_STD3_mapped) {\n        return [STATUS_MAPPING.mapped, ...target.slice(2)];\n      }\n\n      return target.slice(1);\n    } else if (min > val) {\n      end = mid - 1;\n    } else {\n      start = mid + 1;\n    }\n  }\n\n  return null;\n}\n\nfunction mapChars(domainName, { useSTD3ASCIIRules, processingOption }) {\n  let hasError = false;\n  let processed = \"\";\n\n  for (const ch of domainName) {\n    const [status, mapping] = findStatus(ch.codePointAt(0), { useSTD3ASCIIRules });\n\n    switch (status) {\n      case STATUS_MAPPING.disallowed:\n        hasError = true;\n        processed += ch;\n        break;\n      case STATUS_MAPPING.ignored:\n        break;\n      case STATUS_MAPPING.mapped:\n        processed += mapping;\n        break;\n      case STATUS_MAPPING.deviation:\n        if (processingOption === \"transitional\") {\n          processed += mapping;\n        } else {\n          processed += ch;\n        }\n        break;\n      case STATUS_MAPPING.valid:\n        processed += ch;\n        break;\n    }\n  }\n\n  return {\n    string: processed,\n    error: hasError\n  };\n}\n\nfunction validateLabel(label, { checkHyphens, checkBidi, checkJoiners, processingOption, useSTD3ASCIIRules }) {\n  if (label.normalize(\"NFC\") !== label) {\n    return false;\n  }\n\n  const codePoints = Array.from(label);\n\n  if (checkHyphens) {\n    if ((codePoints[2] === \"-\" && codePoints[3] === \"-\") ||\n        (label.startsWith(\"-\") || label.endsWith(\"-\"))) {\n      return false;\n    }\n  }\n\n  if (label.includes(\".\") ||\n      (codePoints.length > 0 && regexes.combiningMarks.test(codePoints[0]))) {\n    return false;\n  }\n\n  for (const ch of codePoints) {\n    const [status] = findStatus(ch.codePointAt(0), { useSTD3ASCIIRules });\n    if ((processingOption === \"transitional\" && status !== STATUS_MAPPING.valid) ||\n        (processingOption === \"nontransitional\" &&\n         status !== STATUS_MAPPING.valid && status !== STATUS_MAPPING.deviation)) {\n      return false;\n    }\n  }\n\n  // https://tools.ietf.org/html/rfc5892#appendix-A\n  if (checkJoiners) {\n    let last = 0;\n    for (const [i, ch] of codePoints.entries()) {\n      if (ch === \"\\u200C\" || ch === \"\\u200D\") {\n        if (i > 0) {\n          if (regexes.combiningClassVirama.test(codePoints[i - 1])) {\n            continue;\n          }\n          if (ch === \"\\u200C\") {\n            // TODO: make this more efficient\n            const next = codePoints.indexOf(\"\\u200C\", i + 1);\n            const test = next < 0 ? codePoints.slice(last) : codePoints.slice(last, next);\n            if (regexes.validZWNJ.test(test.join(\"\"))) {\n              last = i + 1;\n              continue;\n            }\n          }\n        }\n        return false;\n      }\n    }\n  }\n\n  // https://tools.ietf.org/html/rfc5893#section-2\n  // For the codePoints length check, see discussion in https://github.com/jsdom/whatwg-url/pull/250 and the second item\n  // in https://github.com/whatwg/url/issues/744.\n  if (checkBidi && codePoints.length > 0) {\n    let rtl;\n\n    // 1\n    if (regexes.bidiS1LTR.test(codePoints[0])) {\n      rtl = false;\n    } else if (regexes.bidiS1RTL.test(codePoints[0])) {\n      rtl = true;\n    } else {\n      return false;\n    }\n\n    if (rtl) {\n      // 2-4\n      if (!regexes.bidiS2.test(label) ||\n          !regexes.bidiS3.test(label) ||\n          (regexes.bidiS4EN.test(label) && regexes.bidiS4AN.test(label))) {\n        return false;\n      }\n    } else if (!regexes.bidiS5.test(label) ||\n               !regexes.bidiS6.test(label)) { // 5-6\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction isBidiDomain(labels) {\n  const domain = labels.map(label => {\n    if (label.startsWith(\"xn--\")) {\n      try {\n        return punycode.decode(label.substring(4));\n      } catch (err) {\n        return \"\";\n      }\n    }\n    return label;\n  }).join(\".\");\n  return regexes.bidiDomain.test(domain);\n}\n\nfunction processing(domainName, options) {\n  const { processingOption } = options;\n\n  // 1. Map.\n  let { string, error } = mapChars(domainName, options);\n\n  // 2. Normalize.\n  string = string.normalize(\"NFC\");\n\n  // 3. Break.\n  const labels = string.split(\".\");\n  const isBidi = isBidiDomain(labels);\n\n  // 4. Convert/Validate.\n  for (const [i, origLabel] of labels.entries()) {\n    let label = origLabel;\n    let curProcessing = processingOption;\n    if (label.startsWith(\"xn--\")) {\n      try {\n        label = punycode.decode(label.substring(4));\n        labels[i] = label;\n      } catch (err) {\n        error = true;\n        continue;\n      }\n      curProcessing = \"nontransitional\";\n    }\n\n    // No need to validate if we already know there is an error.\n    if (error) {\n      continue;\n    }\n    const validation = validateLabel(label, {\n      ...options,\n      processingOption: curProcessing,\n      checkBidi: options.checkBidi && isBidi\n    });\n    if (!validation) {\n      error = true;\n    }\n  }\n\n  return {\n    string: labels.join(\".\"),\n    error\n  };\n}\n\nfunction toASCII(domainName, {\n  checkHyphens = false,\n  checkBidi = false,\n  checkJoiners = false,\n  useSTD3ASCIIRules = false,\n  processingOption = \"nontransitional\",\n  verifyDNSLength = false\n} = {}) {\n  if (processingOption !== \"transitional\" && processingOption !== \"nontransitional\") {\n    throw new RangeError(\"processingOption must be either transitional or nontransitional\");\n  }\n\n  const result = processing(domainName, {\n    processingOption,\n    checkHyphens,\n    checkBidi,\n    checkJoiners,\n    useSTD3ASCIIRules\n  });\n  let labels = result.string.split(\".\");\n  labels = labels.map(l => {\n    if (containsNonASCII(l)) {\n      try {\n        return `xn--${punycode.encode(l)}`;\n      } catch (e) {\n        result.error = true;\n      }\n    }\n    return l;\n  });\n\n  if (verifyDNSLength) {\n    const total = labels.join(\".\").length;\n    if (total > 253 || total === 0) {\n      result.error = true;\n    }\n\n    for (let i = 0; i < labels.length; ++i) {\n      if (labels[i].length > 63 || labels[i].length === 0) {\n        result.error = true;\n        break;\n      }\n    }\n  }\n\n  if (result.error) {\n    return null;\n  }\n  return labels.join(\".\");\n}\n\nfunction toUnicode(domainName, {\n  checkHyphens = false,\n  checkBidi = false,\n  checkJoiners = false,\n  useSTD3ASCIIRules = false,\n  processingOption = \"nontransitional\"\n} = {}) {\n  const result = processing(domainName, {\n    processingOption,\n    checkHyphens,\n    checkBidi,\n    checkJoiners,\n    useSTD3ASCIIRules\n  });\n\n  return {\n    domain: result.string,\n    error: result.error\n  };\n}\n\nmodule.exports = {\n  toASCII,\n  toUnicode\n};\n","\"use strict\";\n\n// Note that we take code points as JS numbers, not JS strings.\n\nfunction isASCIIDigit(c) {\n  return c >= 0x30 && c <= 0x39;\n}\n\nfunction isASCIIAlpha(c) {\n  return (c >= 0x41 && c <= 0x5A) || (c >= 0x61 && c <= 0x7A);\n}\n\nfunction isASCIIAlphanumeric(c) {\n  return isASCIIAlpha(c) || isASCIIDigit(c);\n}\n\nfunction isASCIIHex(c) {\n  return isASCIIDigit(c) || (c >= 0x41 && c <= 0x46) || (c >= 0x61 && c <= 0x66);\n}\n\nmodule.exports = {\n  isASCIIDigit,\n  isASCIIAlpha,\n  isASCIIAlphanumeric,\n  isASCIIHex\n};\n","\"use strict\";\nconst utf8Encoder = new TextEncoder();\nconst utf8Decoder = new TextDecoder(\"utf-8\", { ignoreBOM: true });\n\nfunction utf8Encode(string) {\n  return utf8Encoder.encode(string);\n}\n\nfunction utf8DecodeWithoutBOM(bytes) {\n  return utf8Decoder.decode(bytes);\n}\n\nmodule.exports = {\n  utf8Encode,\n  utf8DecodeWithoutBOM\n};\n","\"use strict\";\nconst { isASCIIHex } = require(\"./infra\");\nconst { utf8Encode } = require(\"./encoding\");\n\nfunction p(char) {\n  return char.codePointAt(0);\n}\n\n// https://url.spec.whatwg.org/#percent-encode\nfunction percentEncode(c) {\n  let hex = c.toString(16).toUpperCase();\n  if (hex.length === 1) {\n    hex = `0${hex}`;\n  }\n\n  return `%${hex}`;\n}\n\n// https://url.spec.whatwg.org/#percent-decode\nfunction percentDecodeBytes(input) {\n  const output = new Uint8Array(input.byteLength);\n  let outputIndex = 0;\n  for (let i = 0; i < input.byteLength; ++i) {\n    const byte = input[i];\n    if (byte !== 0x25) {\n      output[outputIndex++] = byte;\n    } else if (byte === 0x25 && (!isASCIIHex(input[i + 1]) || !isASCIIHex(input[i + 2]))) {\n      output[outputIndex++] = byte;\n    } else {\n      const bytePoint = parseInt(String.fromCodePoint(input[i + 1], input[i + 2]), 16);\n      output[outputIndex++] = bytePoint;\n      i += 2;\n    }\n  }\n\n  return output.slice(0, outputIndex);\n}\n\n// https://url.spec.whatwg.org/#string-percent-decode\nfunction percentDecodeString(input) {\n  const bytes = utf8Encode(input);\n  return percentDecodeBytes(bytes);\n}\n\n// https://url.spec.whatwg.org/#c0-control-percent-encode-set\nfunction isC0ControlPercentEncode(c) {\n  return c <= 0x1F || c > 0x7E;\n}\n\n// https://url.spec.whatwg.org/#fragment-percent-encode-set\nconst extraFragmentPercentEncodeSet = new Set([p(\" \"), p(\"\\\"\"), p(\"<\"), p(\">\"), p(\"`\")]);\nfunction isFragmentPercentEncode(c) {\n  return isC0ControlPercentEncode(c) || extraFragmentPercentEncodeSet.has(c);\n}\n\n// https://url.spec.whatwg.org/#query-percent-encode-set\nconst extraQueryPercentEncodeSet = new Set([p(\" \"), p(\"\\\"\"), p(\"#\"), p(\"<\"), p(\">\")]);\nfunction isQueryPercentEncode(c) {\n  return isC0ControlPercentEncode(c) || extraQueryPercentEncodeSet.has(c);\n}\n\n// https://url.spec.whatwg.org/#special-query-percent-encode-set\nfunction isSpecialQueryPercentEncode(c) {\n  return isQueryPercentEncode(c) || c === p(\"'\");\n}\n\n// https://url.spec.whatwg.org/#path-percent-encode-set\nconst extraPathPercentEncodeSet = new Set([p(\"?\"), p(\"`\"), p(\"{\"), p(\"}\")]);\nfunction isPathPercentEncode(c) {\n  return isQueryPercentEncode(c) || extraPathPercentEncodeSet.has(c);\n}\n\n// https://url.spec.whatwg.org/#userinfo-percent-encode-set\nconst extraUserinfoPercentEncodeSet =\n  new Set([p(\"/\"), p(\":\"), p(\";\"), p(\"=\"), p(\"@\"), p(\"[\"), p(\"\\\\\"), p(\"]\"), p(\"^\"), p(\"|\")]);\nfunction isUserinfoPercentEncode(c) {\n  return isPathPercentEncode(c) || extraUserinfoPercentEncodeSet.has(c);\n}\n\n// https://url.spec.whatwg.org/#component-percent-encode-set\nconst extraComponentPercentEncodeSet = new Set([p(\"$\"), p(\"%\"), p(\"&\"), p(\"+\"), p(\",\")]);\nfunction isComponentPercentEncode(c) {\n  return isUserinfoPercentEncode(c) || extraComponentPercentEncodeSet.has(c);\n}\n\n// https://url.spec.whatwg.org/#application-x-www-form-urlencoded-percent-encode-set\nconst extraURLEncodedPercentEncodeSet = new Set([p(\"!\"), p(\"'\"), p(\"(\"), p(\")\"), p(\"~\")]);\nfunction isURLEncodedPercentEncode(c) {\n  return isComponentPercentEncode(c) || extraURLEncodedPercentEncodeSet.has(c);\n}\n\n// https://url.spec.whatwg.org/#code-point-percent-encode-after-encoding\n// https://url.spec.whatwg.org/#utf-8-percent-encode\n// Assuming encoding is always utf-8 allows us to trim one of the logic branches. TODO: support encoding.\n// The \"-Internal\" variant here has code points as JS strings. The external version used by other files has code points\n// as JS numbers, like the rest of the codebase.\nfunction utf8PercentEncodeCodePointInternal(codePoint, percentEncodePredicate) {\n  const bytes = utf8Encode(codePoint);\n  let output = \"\";\n  for (const byte of bytes) {\n    // Our percentEncodePredicate operates on bytes, not code points, so this is slightly different from the spec.\n    if (!percentEncodePredicate(byte)) {\n      output += String.fromCharCode(byte);\n    } else {\n      output += percentEncode(byte);\n    }\n  }\n\n  return output;\n}\n\nfunction utf8PercentEncodeCodePoint(codePoint, percentEncodePredicate) {\n  return utf8PercentEncodeCodePointInternal(String.fromCodePoint(codePoint), percentEncodePredicate);\n}\n\n// https://url.spec.whatwg.org/#string-percent-encode-after-encoding\n// https://url.spec.whatwg.org/#string-utf-8-percent-encode\nfunction utf8PercentEncodeString(input, percentEncodePredicate, spaceAsPlus = false) {\n  let output = \"\";\n  for (const codePoint of input) {\n    if (spaceAsPlus && codePoint === \" \") {\n      output += \"+\";\n    } else {\n      output += utf8PercentEncodeCodePointInternal(codePoint, percentEncodePredicate);\n    }\n  }\n  return output;\n}\n\nmodule.exports = {\n  isC0ControlPercentEncode,\n  isFragmentPercentEncode,\n  isQueryPercentEncode,\n  isSpecialQueryPercentEncode,\n  isPathPercentEncode,\n  isUserinfoPercentEncode,\n  isURLEncodedPercentEncode,\n  percentDecodeString,\n  percentDecodeBytes,\n  utf8PercentEncodeString,\n  utf8PercentEncodeCodePoint\n};\n","\"use strict\";\nconst tr46 = require(\"tr46\");\n\nconst infra = require(\"./infra\");\nconst { utf8DecodeWithoutBOM } = require(\"./encoding\");\nconst { percentDecodeString, utf8PercentEncodeCodePoint, utf8PercentEncodeString, isC0ControlPercentEncode,\n  isFragmentPercentEncode, isQueryPercentEncode, isSpecialQueryPercentEncode, isPathPercentEncode,\n  isUserinfoPercentEncode } = require(\"./percent-encoding\");\n\nfunction p(char) {\n  return char.codePointAt(0);\n}\n\nconst specialSchemes = {\n  ftp: 21,\n  file: null,\n  http: 80,\n  https: 443,\n  ws: 80,\n  wss: 443\n};\n\nconst failure = Symbol(\"failure\");\n\nfunction countSymbols(str) {\n  return [...str].length;\n}\n\nfunction at(input, idx) {\n  const c = input[idx];\n  return isNaN(c) ? undefined : String.fromCodePoint(c);\n}\n\nfunction isSingleDot(buffer) {\n  return buffer === \".\" || buffer.toLowerCase() === \"%2e\";\n}\n\nfunction isDoubleDot(buffer) {\n  buffer = buffer.toLowerCase();\n  return buffer === \"..\" || buffer === \"%2e.\" || buffer === \".%2e\" || buffer === \"%2e%2e\";\n}\n\nfunction isWindowsDriveLetterCodePoints(cp1, cp2) {\n  return infra.isASCIIAlpha(cp1) && (cp2 === p(\":\") || cp2 === p(\"|\"));\n}\n\nfunction isWindowsDriveLetterString(string) {\n  return string.length === 2 && infra.isASCIIAlpha(string.codePointAt(0)) && (string[1] === \":\" || string[1] === \"|\");\n}\n\nfunction isNormalizedWindowsDriveLetterString(string) {\n  return string.length === 2 && infra.isASCIIAlpha(string.codePointAt(0)) && string[1] === \":\";\n}\n\nfunction containsForbiddenHostCodePoint(string) {\n  return string.search(/\\u0000|\\u0009|\\u000A|\\u000D|\\u0020|#|\\/|:|<|>|\\?|@|\\[|\\\\|\\]|\\^|\\|/u) !== -1;\n}\n\nfunction containsForbiddenDomainCodePoint(string) {\n  return containsForbiddenHostCodePoint(string) || string.search(/[\\u0000-\\u001F]|%|\\u007F/u) !== -1;\n}\n\nfunction isSpecialScheme(scheme) {\n  return specialSchemes[scheme] !== undefined;\n}\n\nfunction isSpecial(url) {\n  return isSpecialScheme(url.scheme);\n}\n\nfunction isNotSpecial(url) {\n  return !isSpecialScheme(url.scheme);\n}\n\nfunction defaultPort(scheme) {\n  return specialSchemes[scheme];\n}\n\nfunction parseIPv4Number(input) {\n  if (input === \"\") {\n    return failure;\n  }\n\n  let R = 10;\n\n  if (input.length >= 2 && input.charAt(0) === \"0\" && input.charAt(1).toLowerCase() === \"x\") {\n    input = input.substring(2);\n    R = 16;\n  } else if (input.length >= 2 && input.charAt(0) === \"0\") {\n    input = input.substring(1);\n    R = 8;\n  }\n\n  if (input === \"\") {\n    return 0;\n  }\n\n  let regex = /[^0-7]/u;\n  if (R === 10) {\n    regex = /[^0-9]/u;\n  }\n  if (R === 16) {\n    regex = /[^0-9A-Fa-f]/u;\n  }\n\n  if (regex.test(input)) {\n    return failure;\n  }\n\n  return parseInt(input, R);\n}\n\nfunction parseIPv4(input) {\n  const parts = input.split(\".\");\n  if (parts[parts.length - 1] === \"\") {\n    if (parts.length > 1) {\n      parts.pop();\n    }\n  }\n\n  if (parts.length > 4) {\n    return failure;\n  }\n\n  const numbers = [];\n  for (const part of parts) {\n    const n = parseIPv4Number(part);\n    if (n === failure) {\n      return failure;\n    }\n\n    numbers.push(n);\n  }\n\n  for (let i = 0; i < numbers.length - 1; ++i) {\n    if (numbers[i] > 255) {\n      return failure;\n    }\n  }\n  if (numbers[numbers.length - 1] >= 256 ** (5 - numbers.length)) {\n    return failure;\n  }\n\n  let ipv4 = numbers.pop();\n  let counter = 0;\n\n  for (const n of numbers) {\n    ipv4 += n * 256 ** (3 - counter);\n    ++counter;\n  }\n\n  return ipv4;\n}\n\nfunction serializeIPv4(address) {\n  let output = \"\";\n  let n = address;\n\n  for (let i = 1; i <= 4; ++i) {\n    output = String(n % 256) + output;\n    if (i !== 4) {\n      output = `.${output}`;\n    }\n    n = Math.floor(n / 256);\n  }\n\n  return output;\n}\n\nfunction parseIPv6(input) {\n  const address = [0, 0, 0, 0, 0, 0, 0, 0];\n  let pieceIndex = 0;\n  let compress = null;\n  let pointer = 0;\n\n  input = Array.from(input, c => c.codePointAt(0));\n\n  if (input[pointer] === p(\":\")) {\n    if (input[pointer + 1] !== p(\":\")) {\n      return failure;\n    }\n\n    pointer += 2;\n    ++pieceIndex;\n    compress = pieceIndex;\n  }\n\n  while (pointer < input.length) {\n    if (pieceIndex === 8) {\n      return failure;\n    }\n\n    if (input[pointer] === p(\":\")) {\n      if (compress !== null) {\n        return failure;\n      }\n      ++pointer;\n      ++pieceIndex;\n      compress = pieceIndex;\n      continue;\n    }\n\n    let value = 0;\n    let length = 0;\n\n    while (length < 4 && infra.isASCIIHex(input[pointer])) {\n      value = value * 0x10 + parseInt(at(input, pointer), 16);\n      ++pointer;\n      ++length;\n    }\n\n    if (input[pointer] === p(\".\")) {\n      if (length === 0) {\n        return failure;\n      }\n\n      pointer -= length;\n\n      if (pieceIndex > 6) {\n        return failure;\n      }\n\n      let numbersSeen = 0;\n\n      while (input[pointer] !== undefined) {\n        let ipv4Piece = null;\n\n        if (numbersSeen > 0) {\n          if (input[pointer] === p(\".\") && numbersSeen < 4) {\n            ++pointer;\n          } else {\n            return failure;\n          }\n        }\n\n        if (!infra.isASCIIDigit(input[pointer])) {\n          return failure;\n        }\n\n        while (infra.isASCIIDigit(input[pointer])) {\n          const number = parseInt(at(input, pointer));\n          if (ipv4Piece === null) {\n            ipv4Piece = number;\n          } else if (ipv4Piece === 0) {\n            return failure;\n          } else {\n            ipv4Piece = ipv4Piece * 10 + number;\n          }\n          if (ipv4Piece > 255) {\n            return failure;\n          }\n          ++pointer;\n        }\n\n        address[pieceIndex] = address[pieceIndex] * 0x100 + ipv4Piece;\n\n        ++numbersSeen;\n\n        if (numbersSeen === 2 || numbersSeen === 4) {\n          ++pieceIndex;\n        }\n      }\n\n      if (numbersSeen !== 4) {\n        return failure;\n      }\n\n      break;\n    } else if (input[pointer] === p(\":\")) {\n      ++pointer;\n      if (input[pointer] === undefined) {\n        return failure;\n      }\n    } else if (input[pointer] !== undefined) {\n      return failure;\n    }\n\n    address[pieceIndex] = value;\n    ++pieceIndex;\n  }\n\n  if (compress !== null) {\n    let swaps = pieceIndex - compress;\n    pieceIndex = 7;\n    while (pieceIndex !== 0 && swaps > 0) {\n      const temp = address[compress + swaps - 1];\n      address[compress + swaps - 1] = address[pieceIndex];\n      address[pieceIndex] = temp;\n      --pieceIndex;\n      --swaps;\n    }\n  } else if (compress === null && pieceIndex !== 8) {\n    return failure;\n  }\n\n  return address;\n}\n\nfunction serializeIPv6(address) {\n  let output = \"\";\n  const compress = findLongestZeroSequence(address);\n  let ignore0 = false;\n\n  for (let pieceIndex = 0; pieceIndex <= 7; ++pieceIndex) {\n    if (ignore0 && address[pieceIndex] === 0) {\n      continue;\n    } else if (ignore0) {\n      ignore0 = false;\n    }\n\n    if (compress === pieceIndex) {\n      const separator = pieceIndex === 0 ? \"::\" : \":\";\n      output += separator;\n      ignore0 = true;\n      continue;\n    }\n\n    output += address[pieceIndex].toString(16);\n\n    if (pieceIndex !== 7) {\n      output += \":\";\n    }\n  }\n\n  return output;\n}\n\nfunction parseHost(input, isNotSpecialArg = false) {\n  if (input[0] === \"[\") {\n    if (input[input.length - 1] !== \"]\") {\n      return failure;\n    }\n\n    return parseIPv6(input.substring(1, input.length - 1));\n  }\n\n  if (isNotSpecialArg) {\n    return parseOpaqueHost(input);\n  }\n\n  const domain = utf8DecodeWithoutBOM(percentDecodeString(input));\n  const asciiDomain = domainToASCII(domain);\n  if (asciiDomain === failure) {\n    return failure;\n  }\n\n  if (containsForbiddenDomainCodePoint(asciiDomain)) {\n    return failure;\n  }\n\n  if (endsInANumber(asciiDomain)) {\n    return parseIPv4(asciiDomain);\n  }\n\n  return asciiDomain;\n}\n\nfunction endsInANumber(input) {\n  const parts = input.split(\".\");\n  if (parts[parts.length - 1] === \"\") {\n    if (parts.length === 1) {\n      return false;\n    }\n    parts.pop();\n  }\n\n  const last = parts[parts.length - 1];\n  if (parseIPv4Number(last) !== failure) {\n    return true;\n  }\n\n  if (/^[0-9]+$/u.test(last)) {\n    return true;\n  }\n\n  return false;\n}\n\nfunction parseOpaqueHost(input) {\n  if (containsForbiddenHostCodePoint(input)) {\n    return failure;\n  }\n\n  return utf8PercentEncodeString(input, isC0ControlPercentEncode);\n}\n\nfunction findLongestZeroSequence(arr) {\n  let maxIdx = null;\n  let maxLen = 1; // only find elements > 1\n  let currStart = null;\n  let currLen = 0;\n\n  for (let i = 0; i < arr.length; ++i) {\n    if (arr[i] !== 0) {\n      if (currLen > maxLen) {\n        maxIdx = currStart;\n        maxLen = currLen;\n      }\n\n      currStart = null;\n      currLen = 0;\n    } else {\n      if (currStart === null) {\n        currStart = i;\n      }\n      ++currLen;\n    }\n  }\n\n  // if trailing zeros\n  if (currLen > maxLen) {\n    return currStart;\n  }\n\n  return maxIdx;\n}\n\nfunction serializeHost(host) {\n  if (typeof host === \"number\") {\n    return serializeIPv4(host);\n  }\n\n  // IPv6 serializer\n  if (host instanceof Array) {\n    return `[${serializeIPv6(host)}]`;\n  }\n\n  return host;\n}\n\nfunction domainToASCII(domain, beStrict = false) {\n  const result = tr46.toASCII(domain, {\n    checkBidi: true,\n    checkHyphens: false,\n    checkJoiners: true,\n    useSTD3ASCIIRules: beStrict,\n    verifyDNSLength: beStrict\n  });\n  if (result === null || result === \"\") {\n    return failure;\n  }\n  return result;\n}\n\nfunction trimControlChars(url) {\n  return url.replace(/^[\\u0000-\\u001F\\u0020]+|[\\u0000-\\u001F\\u0020]+$/ug, \"\");\n}\n\nfunction trimTabAndNewline(url) {\n  return url.replace(/\\u0009|\\u000A|\\u000D/ug, \"\");\n}\n\nfunction shortenPath(url) {\n  const { path } = url;\n  if (path.length === 0) {\n    return;\n  }\n  if (url.scheme === \"file\" && path.length === 1 && isNormalizedWindowsDriveLetter(path[0])) {\n    return;\n  }\n\n  path.pop();\n}\n\nfunction includesCredentials(url) {\n  return url.username !== \"\" || url.password !== \"\";\n}\n\nfunction cannotHaveAUsernamePasswordPort(url) {\n  return url.host === null || url.host === \"\" || url.scheme === \"file\";\n}\n\nfunction hasAnOpaquePath(url) {\n  return typeof url.path === \"string\";\n}\n\nfunction isNormalizedWindowsDriveLetter(string) {\n  return /^[A-Za-z]:$/u.test(string);\n}\n\nfunction URLStateMachine(input, base, encodingOverride, url, stateOverride) {\n  this.pointer = 0;\n  this.input = input;\n  this.base = base || null;\n  this.encodingOverride = encodingOverride || \"utf-8\";\n  this.stateOverride = stateOverride;\n  this.url = url;\n  this.failure = false;\n  this.parseError = false;\n\n  if (!this.url) {\n    this.url = {\n      scheme: \"\",\n      username: \"\",\n      password: \"\",\n      host: null,\n      port: null,\n      path: [],\n      query: null,\n      fragment: null\n    };\n\n    const res = trimControlChars(this.input);\n    if (res !== this.input) {\n      this.parseError = true;\n    }\n    this.input = res;\n  }\n\n  const res = trimTabAndNewline(this.input);\n  if (res !== this.input) {\n    this.parseError = true;\n  }\n  this.input = res;\n\n  this.state = stateOverride || \"scheme start\";\n\n  this.buffer = \"\";\n  this.atFlag = false;\n  this.arrFlag = false;\n  this.passwordTokenSeenFlag = false;\n\n  this.input = Array.from(this.input, c => c.codePointAt(0));\n\n  for (; this.pointer <= this.input.length; ++this.pointer) {\n    const c = this.input[this.pointer];\n    const cStr = isNaN(c) ? undefined : String.fromCodePoint(c);\n\n    // exec state machine\n    const ret = this[`parse ${this.state}`](c, cStr);\n    if (!ret) {\n      break; // terminate algorithm\n    } else if (ret === failure) {\n      this.failure = true;\n      break;\n    }\n  }\n}\n\nURLStateMachine.prototype[\"parse scheme start\"] = function parseSchemeStart(c, cStr) {\n  if (infra.isASCIIAlpha(c)) {\n    this.buffer += cStr.toLowerCase();\n    this.state = \"scheme\";\n  } else if (!this.stateOverride) {\n    this.state = \"no scheme\";\n    --this.pointer;\n  } else {\n    this.parseError = true;\n    return failure;\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse scheme\"] = function parseScheme(c, cStr) {\n  if (infra.isASCIIAlphanumeric(c) || c === p(\"+\") || c === p(\"-\") || c === p(\".\")) {\n    this.buffer += cStr.toLowerCase();\n  } else if (c === p(\":\")) {\n    if (this.stateOverride) {\n      if (isSpecial(this.url) && !isSpecialScheme(this.buffer)) {\n        return false;\n      }\n\n      if (!isSpecial(this.url) && isSpecialScheme(this.buffer)) {\n        return false;\n      }\n\n      if ((includesCredentials(this.url) || this.url.port !== null) && this.buffer === \"file\") {\n        return false;\n      }\n\n      if (this.url.scheme === \"file\" && this.url.host === \"\") {\n        return false;\n      }\n    }\n    this.url.scheme = this.buffer;\n    if (this.stateOverride) {\n      if (this.url.port === defaultPort(this.url.scheme)) {\n        this.url.port = null;\n      }\n      return false;\n    }\n    this.buffer = \"\";\n    if (this.url.scheme === \"file\") {\n      if (this.input[this.pointer + 1] !== p(\"/\") || this.input[this.pointer + 2] !== p(\"/\")) {\n        this.parseError = true;\n      }\n      this.state = \"file\";\n    } else if (isSpecial(this.url) && this.base !== null && this.base.scheme === this.url.scheme) {\n      this.state = \"special relative or authority\";\n    } else if (isSpecial(this.url)) {\n      this.state = \"special authority slashes\";\n    } else if (this.input[this.pointer + 1] === p(\"/\")) {\n      this.state = \"path or authority\";\n      ++this.pointer;\n    } else {\n      this.url.path = \"\";\n      this.state = \"opaque path\";\n    }\n  } else if (!this.stateOverride) {\n    this.buffer = \"\";\n    this.state = \"no scheme\";\n    this.pointer = -1;\n  } else {\n    this.parseError = true;\n    return failure;\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse no scheme\"] = function parseNoScheme(c) {\n  if (this.base === null || (hasAnOpaquePath(this.base) && c !== p(\"#\"))) {\n    return failure;\n  } else if (hasAnOpaquePath(this.base) && c === p(\"#\")) {\n    this.url.scheme = this.base.scheme;\n    this.url.path = this.base.path;\n    this.url.query = this.base.query;\n    this.url.fragment = \"\";\n    this.state = \"fragment\";\n  } else if (this.base.scheme === \"file\") {\n    this.state = \"file\";\n    --this.pointer;\n  } else {\n    this.state = \"relative\";\n    --this.pointer;\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse special relative or authority\"] = function parseSpecialRelativeOrAuthority(c) {\n  if (c === p(\"/\") && this.input[this.pointer + 1] === p(\"/\")) {\n    this.state = \"special authority ignore slashes\";\n    ++this.pointer;\n  } else {\n    this.parseError = true;\n    this.state = \"relative\";\n    --this.pointer;\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse path or authority\"] = function parsePathOrAuthority(c) {\n  if (c === p(\"/\")) {\n    this.state = \"authority\";\n  } else {\n    this.state = \"path\";\n    --this.pointer;\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse relative\"] = function parseRelative(c) {\n  this.url.scheme = this.base.scheme;\n  if (c === p(\"/\")) {\n    this.state = \"relative slash\";\n  } else if (isSpecial(this.url) && c === p(\"\\\\\")) {\n    this.parseError = true;\n    this.state = \"relative slash\";\n  } else {\n    this.url.username = this.base.username;\n    this.url.password = this.base.password;\n    this.url.host = this.base.host;\n    this.url.port = this.base.port;\n    this.url.path = this.base.path.slice();\n    this.url.query = this.base.query;\n    if (c === p(\"?\")) {\n      this.url.query = \"\";\n      this.state = \"query\";\n    } else if (c === p(\"#\")) {\n      this.url.fragment = \"\";\n      this.state = \"fragment\";\n    } else if (!isNaN(c)) {\n      this.url.query = null;\n      this.url.path.pop();\n      this.state = \"path\";\n      --this.pointer;\n    }\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse relative slash\"] = function parseRelativeSlash(c) {\n  if (isSpecial(this.url) && (c === p(\"/\") || c === p(\"\\\\\"))) {\n    if (c === p(\"\\\\\")) {\n      this.parseError = true;\n    }\n    this.state = \"special authority ignore slashes\";\n  } else if (c === p(\"/\")) {\n    this.state = \"authority\";\n  } else {\n    this.url.username = this.base.username;\n    this.url.password = this.base.password;\n    this.url.host = this.base.host;\n    this.url.port = this.base.port;\n    this.state = \"path\";\n    --this.pointer;\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse special authority slashes\"] = function parseSpecialAuthoritySlashes(c) {\n  if (c === p(\"/\") && this.input[this.pointer + 1] === p(\"/\")) {\n    this.state = \"special authority ignore slashes\";\n    ++this.pointer;\n  } else {\n    this.parseError = true;\n    this.state = \"special authority ignore slashes\";\n    --this.pointer;\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse special authority ignore slashes\"] = function parseSpecialAuthorityIgnoreSlashes(c) {\n  if (c !== p(\"/\") && c !== p(\"\\\\\")) {\n    this.state = \"authority\";\n    --this.pointer;\n  } else {\n    this.parseError = true;\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse authority\"] = function parseAuthority(c, cStr) {\n  if (c === p(\"@\")) {\n    this.parseError = true;\n    if (this.atFlag) {\n      this.buffer = `%40${this.buffer}`;\n    }\n    this.atFlag = true;\n\n    // careful, this is based on buffer and has its own pointer (this.pointer != pointer) and inner chars\n    const len = countSymbols(this.buffer);\n    for (let pointer = 0; pointer < len; ++pointer) {\n      const codePoint = this.buffer.codePointAt(pointer);\n\n      if (codePoint === p(\":\") && !this.passwordTokenSeenFlag) {\n        this.passwordTokenSeenFlag = true;\n        continue;\n      }\n      const encodedCodePoints = utf8PercentEncodeCodePoint(codePoint, isUserinfoPercentEncode);\n      if (this.passwordTokenSeenFlag) {\n        this.url.password += encodedCodePoints;\n      } else {\n        this.url.username += encodedCodePoints;\n      }\n    }\n    this.buffer = \"\";\n  } else if (isNaN(c) || c === p(\"/\") || c === p(\"?\") || c === p(\"#\") ||\n             (isSpecial(this.url) && c === p(\"\\\\\"))) {\n    if (this.atFlag && this.buffer === \"\") {\n      this.parseError = true;\n      return failure;\n    }\n    this.pointer -= countSymbols(this.buffer) + 1;\n    this.buffer = \"\";\n    this.state = \"host\";\n  } else {\n    this.buffer += cStr;\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse hostname\"] =\nURLStateMachine.prototype[\"parse host\"] = function parseHostName(c, cStr) {\n  if (this.stateOverride && this.url.scheme === \"file\") {\n    --this.pointer;\n    this.state = \"file host\";\n  } else if (c === p(\":\") && !this.arrFlag) {\n    if (this.buffer === \"\") {\n      this.parseError = true;\n      return failure;\n    }\n\n    if (this.stateOverride === \"hostname\") {\n      return false;\n    }\n\n    const host = parseHost(this.buffer, isNotSpecial(this.url));\n    if (host === failure) {\n      return failure;\n    }\n\n    this.url.host = host;\n    this.buffer = \"\";\n    this.state = \"port\";\n  } else if (isNaN(c) || c === p(\"/\") || c === p(\"?\") || c === p(\"#\") ||\n             (isSpecial(this.url) && c === p(\"\\\\\"))) {\n    --this.pointer;\n    if (isSpecial(this.url) && this.buffer === \"\") {\n      this.parseError = true;\n      return failure;\n    } else if (this.stateOverride && this.buffer === \"\" &&\n               (includesCredentials(this.url) || this.url.port !== null)) {\n      this.parseError = true;\n      return false;\n    }\n\n    const host = parseHost(this.buffer, isNotSpecial(this.url));\n    if (host === failure) {\n      return failure;\n    }\n\n    this.url.host = host;\n    this.buffer = \"\";\n    this.state = \"path start\";\n    if (this.stateOverride) {\n      return false;\n    }\n  } else {\n    if (c === p(\"[\")) {\n      this.arrFlag = true;\n    } else if (c === p(\"]\")) {\n      this.arrFlag = false;\n    }\n    this.buffer += cStr;\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse port\"] = function parsePort(c, cStr) {\n  if (infra.isASCIIDigit(c)) {\n    this.buffer += cStr;\n  } else if (isNaN(c) || c === p(\"/\") || c === p(\"?\") || c === p(\"#\") ||\n             (isSpecial(this.url) && c === p(\"\\\\\")) ||\n             this.stateOverride) {\n    if (this.buffer !== \"\") {\n      const port = parseInt(this.buffer);\n      if (port > 2 ** 16 - 1) {\n        this.parseError = true;\n        return failure;\n      }\n      this.url.port = port === defaultPort(this.url.scheme) ? null : port;\n      this.buffer = \"\";\n    }\n    if (this.stateOverride) {\n      return false;\n    }\n    this.state = \"path start\";\n    --this.pointer;\n  } else {\n    this.parseError = true;\n    return failure;\n  }\n\n  return true;\n};\n\nconst fileOtherwiseCodePoints = new Set([p(\"/\"), p(\"\\\\\"), p(\"?\"), p(\"#\")]);\n\nfunction startsWithWindowsDriveLetter(input, pointer) {\n  const length = input.length - pointer;\n  return length >= 2 &&\n    isWindowsDriveLetterCodePoints(input[pointer], input[pointer + 1]) &&\n    (length === 2 || fileOtherwiseCodePoints.has(input[pointer + 2]));\n}\n\nURLStateMachine.prototype[\"parse file\"] = function parseFile(c) {\n  this.url.scheme = \"file\";\n  this.url.host = \"\";\n\n  if (c === p(\"/\") || c === p(\"\\\\\")) {\n    if (c === p(\"\\\\\")) {\n      this.parseError = true;\n    }\n    this.state = \"file slash\";\n  } else if (this.base !== null && this.base.scheme === \"file\") {\n    this.url.host = this.base.host;\n    this.url.path = this.base.path.slice();\n    this.url.query = this.base.query;\n    if (c === p(\"?\")) {\n      this.url.query = \"\";\n      this.state = \"query\";\n    } else if (c === p(\"#\")) {\n      this.url.fragment = \"\";\n      this.state = \"fragment\";\n    } else if (!isNaN(c)) {\n      this.url.query = null;\n      if (!startsWithWindowsDriveLetter(this.input, this.pointer)) {\n        shortenPath(this.url);\n      } else {\n        this.parseError = true;\n        this.url.path = [];\n      }\n\n      this.state = \"path\";\n      --this.pointer;\n    }\n  } else {\n    this.state = \"path\";\n    --this.pointer;\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse file slash\"] = function parseFileSlash(c) {\n  if (c === p(\"/\") || c === p(\"\\\\\")) {\n    if (c === p(\"\\\\\")) {\n      this.parseError = true;\n    }\n    this.state = \"file host\";\n  } else {\n    if (this.base !== null && this.base.scheme === \"file\") {\n      if (!startsWithWindowsDriveLetter(this.input, this.pointer) &&\n          isNormalizedWindowsDriveLetterString(this.base.path[0])) {\n        this.url.path.push(this.base.path[0]);\n      }\n      this.url.host = this.base.host;\n    }\n    this.state = \"path\";\n    --this.pointer;\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse file host\"] = function parseFileHost(c, cStr) {\n  if (isNaN(c) || c === p(\"/\") || c === p(\"\\\\\") || c === p(\"?\") || c === p(\"#\")) {\n    --this.pointer;\n    if (!this.stateOverride && isWindowsDriveLetterString(this.buffer)) {\n      this.parseError = true;\n      this.state = \"path\";\n    } else if (this.buffer === \"\") {\n      this.url.host = \"\";\n      if (this.stateOverride) {\n        return false;\n      }\n      this.state = \"path start\";\n    } else {\n      let host = parseHost(this.buffer, isNotSpecial(this.url));\n      if (host === failure) {\n        return failure;\n      }\n      if (host === \"localhost\") {\n        host = \"\";\n      }\n      this.url.host = host;\n\n      if (this.stateOverride) {\n        return false;\n      }\n\n      this.buffer = \"\";\n      this.state = \"path start\";\n    }\n  } else {\n    this.buffer += cStr;\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse path start\"] = function parsePathStart(c) {\n  if (isSpecial(this.url)) {\n    if (c === p(\"\\\\\")) {\n      this.parseError = true;\n    }\n    this.state = \"path\";\n\n    if (c !== p(\"/\") && c !== p(\"\\\\\")) {\n      --this.pointer;\n    }\n  } else if (!this.stateOverride && c === p(\"?\")) {\n    this.url.query = \"\";\n    this.state = \"query\";\n  } else if (!this.stateOverride && c === p(\"#\")) {\n    this.url.fragment = \"\";\n    this.state = \"fragment\";\n  } else if (c !== undefined) {\n    this.state = \"path\";\n    if (c !== p(\"/\")) {\n      --this.pointer;\n    }\n  } else if (this.stateOverride && this.url.host === null) {\n    this.url.path.push(\"\");\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse path\"] = function parsePath(c) {\n  if (isNaN(c) || c === p(\"/\") || (isSpecial(this.url) && c === p(\"\\\\\")) ||\n      (!this.stateOverride && (c === p(\"?\") || c === p(\"#\")))) {\n    if (isSpecial(this.url) && c === p(\"\\\\\")) {\n      this.parseError = true;\n    }\n\n    if (isDoubleDot(this.buffer)) {\n      shortenPath(this.url);\n      if (c !== p(\"/\") && !(isSpecial(this.url) && c === p(\"\\\\\"))) {\n        this.url.path.push(\"\");\n      }\n    } else if (isSingleDot(this.buffer) && c !== p(\"/\") &&\n               !(isSpecial(this.url) && c === p(\"\\\\\"))) {\n      this.url.path.push(\"\");\n    } else if (!isSingleDot(this.buffer)) {\n      if (this.url.scheme === \"file\" && this.url.path.length === 0 && isWindowsDriveLetterString(this.buffer)) {\n        this.buffer = `${this.buffer[0]}:`;\n      }\n      this.url.path.push(this.buffer);\n    }\n    this.buffer = \"\";\n    if (c === p(\"?\")) {\n      this.url.query = \"\";\n      this.state = \"query\";\n    }\n    if (c === p(\"#\")) {\n      this.url.fragment = \"\";\n      this.state = \"fragment\";\n    }\n  } else {\n    // TODO: If c is not a URL code point and not \"%\", parse error.\n\n    if (c === p(\"%\") &&\n      (!infra.isASCIIHex(this.input[this.pointer + 1]) ||\n        !infra.isASCIIHex(this.input[this.pointer + 2]))) {\n      this.parseError = true;\n    }\n\n    this.buffer += utf8PercentEncodeCodePoint(c, isPathPercentEncode);\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse opaque path\"] = function parseOpaquePath(c) {\n  if (c === p(\"?\")) {\n    this.url.query = \"\";\n    this.state = \"query\";\n  } else if (c === p(\"#\")) {\n    this.url.fragment = \"\";\n    this.state = \"fragment\";\n  } else {\n    // TODO: Add: not a URL code point\n    if (!isNaN(c) && c !== p(\"%\")) {\n      this.parseError = true;\n    }\n\n    if (c === p(\"%\") &&\n        (!infra.isASCIIHex(this.input[this.pointer + 1]) ||\n         !infra.isASCIIHex(this.input[this.pointer + 2]))) {\n      this.parseError = true;\n    }\n\n    if (!isNaN(c)) {\n      this.url.path += utf8PercentEncodeCodePoint(c, isC0ControlPercentEncode);\n    }\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse query\"] = function parseQuery(c, cStr) {\n  if (!isSpecial(this.url) || this.url.scheme === \"ws\" || this.url.scheme === \"wss\") {\n    this.encodingOverride = \"utf-8\";\n  }\n\n  if ((!this.stateOverride && c === p(\"#\")) || isNaN(c)) {\n    const queryPercentEncodePredicate = isSpecial(this.url) ? isSpecialQueryPercentEncode : isQueryPercentEncode;\n    this.url.query += utf8PercentEncodeString(this.buffer, queryPercentEncodePredicate);\n\n    this.buffer = \"\";\n\n    if (c === p(\"#\")) {\n      this.url.fragment = \"\";\n      this.state = \"fragment\";\n    }\n  } else if (!isNaN(c)) {\n    // TODO: If c is not a URL code point and not \"%\", parse error.\n\n    if (c === p(\"%\") &&\n      (!infra.isASCIIHex(this.input[this.pointer + 1]) ||\n        !infra.isASCIIHex(this.input[this.pointer + 2]))) {\n      this.parseError = true;\n    }\n\n    this.buffer += cStr;\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse fragment\"] = function parseFragment(c) {\n  if (!isNaN(c)) {\n    // TODO: If c is not a URL code point and not \"%\", parse error.\n    if (c === p(\"%\") &&\n      (!infra.isASCIIHex(this.input[this.pointer + 1]) ||\n        !infra.isASCIIHex(this.input[this.pointer + 2]))) {\n      this.parseError = true;\n    }\n\n    this.url.fragment += utf8PercentEncodeCodePoint(c, isFragmentPercentEncode);\n  }\n\n  return true;\n};\n\nfunction serializeURL(url, excludeFragment) {\n  let output = `${url.scheme}:`;\n  if (url.host !== null) {\n    output += \"//\";\n\n    if (url.username !== \"\" || url.password !== \"\") {\n      output += url.username;\n      if (url.password !== \"\") {\n        output += `:${url.password}`;\n      }\n      output += \"@\";\n    }\n\n    output += serializeHost(url.host);\n\n    if (url.port !== null) {\n      output += `:${url.port}`;\n    }\n  }\n\n  if (url.host === null && !hasAnOpaquePath(url) && url.path.length > 1 && url.path[0] === \"\") {\n    output += \"/.\";\n  }\n  output += serializePath(url);\n\n  if (url.query !== null) {\n    output += `?${url.query}`;\n  }\n\n  if (!excludeFragment && url.fragment !== null) {\n    output += `#${url.fragment}`;\n  }\n\n  return output;\n}\n\nfunction serializeOrigin(tuple) {\n  let result = `${tuple.scheme}://`;\n  result += serializeHost(tuple.host);\n\n  if (tuple.port !== null) {\n    result += `:${tuple.port}`;\n  }\n\n  return result;\n}\n\nfunction serializePath(url) {\n  if (hasAnOpaquePath(url)) {\n    return url.path;\n  }\n\n  let output = \"\";\n  for (const segment of url.path) {\n    output += `/${segment}`;\n  }\n  return output;\n}\n\nmodule.exports.serializeURL = serializeURL;\n\nmodule.exports.serializePath = serializePath;\n\nmodule.exports.serializeURLOrigin = function (url) {\n  // https://url.spec.whatwg.org/#concept-url-origin\n  switch (url.scheme) {\n    case \"blob\": {\n      const pathURL = module.exports.parseURL(serializePath(url));\n      if (pathURL === null) {\n        return \"null\";\n      }\n      if (pathURL.scheme !== \"http\" && pathURL.scheme !== \"https\") {\n        return \"null\";\n      }\n      return module.exports.serializeURLOrigin(pathURL);\n    }\n    case \"ftp\":\n    case \"http\":\n    case \"https\":\n    case \"ws\":\n    case \"wss\":\n      return serializeOrigin({\n        scheme: url.scheme,\n        host: url.host,\n        port: url.port\n      });\n    case \"file\":\n      // The spec says:\n      // > Unfortunate as it is, this is left as an exercise to the reader. When in doubt, return a new opaque origin.\n      // Browsers tested so far:\n      // - Chrome says \"file://\", but treats file: URLs as cross-origin for most (all?) purposes; see e.g.\n      //   https://bugs.chromium.org/p/chromium/issues/detail?id=37586\n      // - Firefox says \"null\", but treats file: URLs as same-origin sometimes based on directory stuff; see\n      //   https://developer.mozilla.org/en-US/docs/Archive/Misc_top_level/Same-origin_policy_for_file:_URIs\n      return \"null\";\n    default:\n      // serializing an opaque origin returns \"null\"\n      return \"null\";\n  }\n};\n\nmodule.exports.basicURLParse = function (input, options) {\n  if (options === undefined) {\n    options = {};\n  }\n\n  const usm = new URLStateMachine(input, options.baseURL, options.encodingOverride, options.url, options.stateOverride);\n  if (usm.failure) {\n    return null;\n  }\n\n  return usm.url;\n};\n\nmodule.exports.setTheUsername = function (url, username) {\n  url.username = utf8PercentEncodeString(username, isUserinfoPercentEncode);\n};\n\nmodule.exports.setThePassword = function (url, password) {\n  url.password = utf8PercentEncodeString(password, isUserinfoPercentEncode);\n};\n\nmodule.exports.serializeHost = serializeHost;\n\nmodule.exports.cannotHaveAUsernamePasswordPort = cannotHaveAUsernamePasswordPort;\n\nmodule.exports.hasAnOpaquePath = hasAnOpaquePath;\n\nmodule.exports.serializeInteger = function (integer) {\n  return String(integer);\n};\n\nmodule.exports.parseURL = function (input, options) {\n  if (options === undefined) {\n    options = {};\n  }\n\n  // We don't handle blobs, so this just delegates:\n  return module.exports.basicURLParse(input, { baseURL: options.baseURL, encodingOverride: options.encodingOverride });\n};\n","\"use strict\";\nconst { utf8Encode, utf8DecodeWithoutBOM } = require(\"./encoding\");\nconst { percentDecodeBytes, utf8PercentEncodeString, isURLEncodedPercentEncode } = require(\"./percent-encoding\");\n\nfunction p(char) {\n  return char.codePointAt(0);\n}\n\n// https://url.spec.whatwg.org/#concept-urlencoded-parser\nfunction parseUrlencoded(input) {\n  const sequences = strictlySplitByteSequence(input, p(\"&\"));\n  const output = [];\n  for (const bytes of sequences) {\n    if (bytes.length === 0) {\n      continue;\n    }\n\n    let name, value;\n    const indexOfEqual = bytes.indexOf(p(\"=\"));\n\n    if (indexOfEqual >= 0) {\n      name = bytes.slice(0, indexOfEqual);\n      value = bytes.slice(indexOfEqual + 1);\n    } else {\n      name = bytes;\n      value = new Uint8Array(0);\n    }\n\n    name = replaceByteInByteSequence(name, 0x2B, 0x20);\n    value = replaceByteInByteSequence(value, 0x2B, 0x20);\n\n    const nameString = utf8DecodeWithoutBOM(percentDecodeBytes(name));\n    const valueString = utf8DecodeWithoutBOM(percentDecodeBytes(value));\n\n    output.push([nameString, valueString]);\n  }\n  return output;\n}\n\n// https://url.spec.whatwg.org/#concept-urlencoded-string-parser\nfunction parseUrlencodedString(input) {\n  return parseUrlencoded(utf8Encode(input));\n}\n\n// https://url.spec.whatwg.org/#concept-urlencoded-serializer\nfunction serializeUrlencoded(tuples, encodingOverride = undefined) {\n  let encoding = \"utf-8\";\n  if (encodingOverride !== undefined) {\n    // TODO \"get the output encoding\", i.e. handle encoding labels vs. names.\n    encoding = encodingOverride;\n  }\n\n  let output = \"\";\n  for (const [i, tuple] of tuples.entries()) {\n    // TODO: handle encoding override\n\n    const name = utf8PercentEncodeString(tuple[0], isURLEncodedPercentEncode, true);\n\n    let value = tuple[1];\n    if (tuple.length > 2 && tuple[2] !== undefined) {\n      if (tuple[2] === \"hidden\" && name === \"_charset_\") {\n        value = encoding;\n      } else if (tuple[2] === \"file\") {\n        // value is a File object\n        value = value.name;\n      }\n    }\n\n    value = utf8PercentEncodeString(value, isURLEncodedPercentEncode, true);\n\n    if (i !== 0) {\n      output += \"&\";\n    }\n    output += `${name}=${value}`;\n  }\n  return output;\n}\n\nfunction strictlySplitByteSequence(buf, cp) {\n  const list = [];\n  let last = 0;\n  let i = buf.indexOf(cp);\n  while (i >= 0) {\n    list.push(buf.slice(last, i));\n    last = i + 1;\n    i = buf.indexOf(cp, last);\n  }\n  if (last !== buf.length) {\n    list.push(buf.slice(last));\n  }\n  return list;\n}\n\nfunction replaceByteInByteSequence(buf, from, to) {\n  let i = buf.indexOf(from);\n  while (i >= 0) {\n    buf[i] = to;\n    i = buf.indexOf(from, i + 1);\n  }\n  return buf;\n}\n\nmodule.exports = {\n  parseUrlencodedString,\n  serializeUrlencoded\n};\n","\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\nconst utils = require(\"./utils.js\");\n\nexports.convert = (globalObject, value, { context = \"The provided value\" } = {}) => {\n  if (typeof value !== \"function\") {\n    throw new globalObject.TypeError(context + \" is not a function\");\n  }\n\n  function invokeTheCallbackFunction(...args) {\n    const thisArg = utils.tryWrapperForImpl(this);\n    let callResult;\n\n    for (let i = 0; i < args.length; i++) {\n      args[i] = utils.tryWrapperForImpl(args[i]);\n    }\n\n    callResult = Reflect.apply(value, thisArg, args);\n\n    callResult = conversions[\"any\"](callResult, { context: context, globals: globalObject });\n\n    return callResult;\n  }\n\n  invokeTheCallbackFunction.construct = (...args) => {\n    for (let i = 0; i < args.length; i++) {\n      args[i] = utils.tryWrapperForImpl(args[i]);\n    }\n\n    let callResult = Reflect.construct(value, args);\n\n    callResult = conversions[\"any\"](callResult, { context: context, globals: globalObject });\n\n    return callResult;\n  };\n\n  invokeTheCallbackFunction[utils.wrapperSymbol] = value;\n  invokeTheCallbackFunction.objectReference = value;\n\n  return invokeTheCallbackFunction;\n};\n","\"use strict\";\nconst urlencoded = require(\"./urlencoded\");\n\nexports.implementation = class URLSearchParamsImpl {\n  constructor(globalObject, constructorArgs, { doNotStripQMark = false }) {\n    let init = constructorArgs[0];\n    this._list = [];\n    this._url = null;\n\n    if (!doNotStripQMark && typeof init === \"string\" && init[0] === \"?\") {\n      init = init.slice(1);\n    }\n\n    if (Array.isArray(init)) {\n      for (const pair of init) {\n        if (pair.length !== 2) {\n          throw new TypeError(\"Failed to construct 'URLSearchParams': parameter 1 sequence's element does not \" +\n                              \"contain exactly two elements.\");\n        }\n        this._list.push([pair[0], pair[1]]);\n      }\n    } else if (typeof init === \"object\" && Object.getPrototypeOf(init) === null) {\n      for (const name of Object.keys(init)) {\n        const value = init[name];\n        this._list.push([name, value]);\n      }\n    } else {\n      this._list = urlencoded.parseUrlencodedString(init);\n    }\n  }\n\n  _updateSteps() {\n    if (this._url !== null) {\n      let serializedQuery = urlencoded.serializeUrlencoded(this._list);\n      if (serializedQuery === \"\") {\n        serializedQuery = null;\n      }\n\n      this._url._url.query = serializedQuery;\n\n      if (serializedQuery === null) {\n        this._url._potentiallyStripTrailingSpacesFromAnOpaquePath();\n      }\n    }\n  }\n\n  get size() {\n    return this._list.length;\n  }\n\n  append(name, value) {\n    this._list.push([name, value]);\n    this._updateSteps();\n  }\n\n  delete(name, value) {\n    let i = 0;\n    while (i < this._list.length) {\n      if (this._list[i][0] === name && (value === undefined || this._list[i][1] === value)) {\n        this._list.splice(i, 1);\n      } else {\n        i++;\n      }\n    }\n    this._updateSteps();\n  }\n\n  get(name) {\n    for (const tuple of this._list) {\n      if (tuple[0] === name) {\n        return tuple[1];\n      }\n    }\n    return null;\n  }\n\n  getAll(name) {\n    const output = [];\n    for (const tuple of this._list) {\n      if (tuple[0] === name) {\n        output.push(tuple[1]);\n      }\n    }\n    return output;\n  }\n\n  has(name, value) {\n    for (const tuple of this._list) {\n      if (tuple[0] === name && (value === undefined || tuple[1] === value)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  set(name, value) {\n    let found = false;\n    let i = 0;\n    while (i < this._list.length) {\n      if (this._list[i][0] === name) {\n        if (found) {\n          this._list.splice(i, 1);\n        } else {\n          found = true;\n          this._list[i][1] = value;\n          i++;\n        }\n      } else {\n        i++;\n      }\n    }\n    if (!found) {\n      this._list.push([name, value]);\n    }\n    this._updateSteps();\n  }\n\n  sort() {\n    this._list.sort((a, b) => {\n      if (a[0] < b[0]) {\n        return -1;\n      }\n      if (a[0] > b[0]) {\n        return 1;\n      }\n      return 0;\n    });\n\n    this._updateSteps();\n  }\n\n  [Symbol.iterator]() {\n    return this._list[Symbol.iterator]();\n  }\n\n  toString() {\n    return urlencoded.serializeUrlencoded(this._list);\n  }\n};\n","\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\nconst utils = require(\"./utils.js\");\n\nconst Function = require(\"./Function.js\");\nconst newObjectInRealm = utils.newObjectInRealm;\nconst implSymbol = utils.implSymbol;\nconst ctorRegistrySymbol = utils.ctorRegistrySymbol;\n\nconst interfaceName = \"URLSearchParams\";\n\nexports.is = value => {\n  return utils.isObject(value) && utils.hasOwn(value, implSymbol) && value[implSymbol] instanceof Impl.implementation;\n};\nexports.isImpl = value => {\n  return utils.isObject(value) && value instanceof Impl.implementation;\n};\nexports.convert = (globalObject, value, { context = \"The provided value\" } = {}) => {\n  if (exports.is(value)) {\n    return utils.implForWrapper(value);\n  }\n  throw new globalObject.TypeError(`${context} is not of type 'URLSearchParams'.`);\n};\n\nexports.createDefaultIterator = (globalObject, target, kind) => {\n  const ctorRegistry = globalObject[ctorRegistrySymbol];\n  const iteratorPrototype = ctorRegistry[\"URLSearchParams Iterator\"];\n  const iterator = Object.create(iteratorPrototype);\n  Object.defineProperty(iterator, utils.iterInternalSymbol, {\n    value: { target, kind, index: 0 },\n    configurable: true\n  });\n  return iterator;\n};\n\nfunction makeWrapper(globalObject, newTarget) {\n  let proto;\n  if (newTarget !== undefined) {\n    proto = newTarget.prototype;\n  }\n\n  if (!utils.isObject(proto)) {\n    proto = globalObject[ctorRegistrySymbol][\"URLSearchParams\"].prototype;\n  }\n\n  return Object.create(proto);\n}\n\nexports.create = (globalObject, constructorArgs, privateData) => {\n  const wrapper = makeWrapper(globalObject);\n  return exports.setup(wrapper, globalObject, constructorArgs, privateData);\n};\n\nexports.createImpl = (globalObject, constructorArgs, privateData) => {\n  const wrapper = exports.create(globalObject, constructorArgs, privateData);\n  return utils.implForWrapper(wrapper);\n};\n\nexports._internalSetup = (wrapper, globalObject) => {};\n\nexports.setup = (wrapper, globalObject, constructorArgs = [], privateData = {}) => {\n  privateData.wrapper = wrapper;\n\n  exports._internalSetup(wrapper, globalObject);\n  Object.defineProperty(wrapper, implSymbol, {\n    value: new Impl.implementation(globalObject, constructorArgs, privateData),\n    configurable: true\n  });\n\n  wrapper[implSymbol][utils.wrapperSymbol] = wrapper;\n  if (Impl.init) {\n    Impl.init(wrapper[implSymbol]);\n  }\n  return wrapper;\n};\n\nexports.new = (globalObject, newTarget) => {\n  const wrapper = makeWrapper(globalObject, newTarget);\n\n  exports._internalSetup(wrapper, globalObject);\n  Object.defineProperty(wrapper, implSymbol, {\n    value: Object.create(Impl.implementation.prototype),\n    configurable: true\n  });\n\n  wrapper[implSymbol][utils.wrapperSymbol] = wrapper;\n  if (Impl.init) {\n    Impl.init(wrapper[implSymbol]);\n  }\n  return wrapper[implSymbol];\n};\n\nconst exposed = new Set([\"Window\", \"Worker\"]);\n\nexports.install = (globalObject, globalNames) => {\n  if (!globalNames.some(globalName => exposed.has(globalName))) {\n    return;\n  }\n\n  const ctorRegistry = utils.initCtorRegistry(globalObject);\n  class URLSearchParams {\n    constructor() {\n      const args = [];\n      {\n        let curArg = arguments[0];\n        if (curArg !== undefined) {\n          if (utils.isObject(curArg)) {\n            if (curArg[Symbol.iterator] !== undefined) {\n              if (!utils.isObject(curArg)) {\n                throw new globalObject.TypeError(\n                  \"Failed to construct 'URLSearchParams': parameter 1\" + \" sequence\" + \" is not an iterable object.\"\n                );\n              } else {\n                const V = [];\n                const tmp = curArg;\n                for (let nextItem of tmp) {\n                  if (!utils.isObject(nextItem)) {\n                    throw new globalObject.TypeError(\n                      \"Failed to construct 'URLSearchParams': parameter 1\" +\n                        \" sequence\" +\n                        \"'s element\" +\n                        \" is not an iterable object.\"\n                    );\n                  } else {\n                    const V = [];\n                    const tmp = nextItem;\n                    for (let nextItem of tmp) {\n                      nextItem = conversions[\"USVString\"](nextItem, {\n                        context:\n                          \"Failed to construct 'URLSearchParams': parameter 1\" +\n                          \" sequence\" +\n                          \"'s element\" +\n                          \"'s element\",\n                        globals: globalObject\n                      });\n\n                      V.push(nextItem);\n                    }\n                    nextItem = V;\n                  }\n\n                  V.push(nextItem);\n                }\n                curArg = V;\n              }\n            } else {\n              if (!utils.isObject(curArg)) {\n                throw new globalObject.TypeError(\n                  \"Failed to construct 'URLSearchParams': parameter 1\" + \" record\" + \" is not an object.\"\n                );\n              } else {\n                const result = Object.create(null);\n                for (const key of Reflect.ownKeys(curArg)) {\n                  const desc = Object.getOwnPropertyDescriptor(curArg, key);\n                  if (desc && desc.enumerable) {\n                    let typedKey = key;\n\n                    typedKey = conversions[\"USVString\"](typedKey, {\n                      context: \"Failed to construct 'URLSearchParams': parameter 1\" + \" record\" + \"'s key\",\n                      globals: globalObject\n                    });\n\n                    let typedValue = curArg[key];\n\n                    typedValue = conversions[\"USVString\"](typedValue, {\n                      context: \"Failed to construct 'URLSearchParams': parameter 1\" + \" record\" + \"'s value\",\n                      globals: globalObject\n                    });\n\n                    result[typedKey] = typedValue;\n                  }\n                }\n                curArg = result;\n              }\n            }\n          } else {\n            curArg = conversions[\"USVString\"](curArg, {\n              context: \"Failed to construct 'URLSearchParams': parameter 1\",\n              globals: globalObject\n            });\n          }\n        } else {\n          curArg = \"\";\n        }\n        args.push(curArg);\n      }\n      return exports.setup(Object.create(new.target.prototype), globalObject, args);\n    }\n\n    append(name, value) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\n          \"'append' called on an object that is not a valid instance of URLSearchParams.\"\n        );\n      }\n\n      if (arguments.length < 2) {\n        throw new globalObject.TypeError(\n          `Failed to execute 'append' on 'URLSearchParams': 2 arguments required, but only ${arguments.length} present.`\n        );\n      }\n      const args = [];\n      {\n        let curArg = arguments[0];\n        curArg = conversions[\"USVString\"](curArg, {\n          context: \"Failed to execute 'append' on 'URLSearchParams': parameter 1\",\n          globals: globalObject\n        });\n        args.push(curArg);\n      }\n      {\n        let curArg = arguments[1];\n        curArg = conversions[\"USVString\"](curArg, {\n          context: \"Failed to execute 'append' on 'URLSearchParams': parameter 2\",\n          globals: globalObject\n        });\n        args.push(curArg);\n      }\n      return utils.tryWrapperForImpl(esValue[implSymbol].append(...args));\n    }\n\n    delete(name) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\n          \"'delete' called on an object that is not a valid instance of URLSearchParams.\"\n        );\n      }\n\n      if (arguments.length < 1) {\n        throw new globalObject.TypeError(\n          `Failed to execute 'delete' on 'URLSearchParams': 1 argument required, but only ${arguments.length} present.`\n        );\n      }\n      const args = [];\n      {\n        let curArg = arguments[0];\n        curArg = conversions[\"USVString\"](curArg, {\n          context: \"Failed to execute 'delete' on 'URLSearchParams': parameter 1\",\n          globals: globalObject\n        });\n        args.push(curArg);\n      }\n      {\n        let curArg = arguments[1];\n        if (curArg !== undefined) {\n          curArg = conversions[\"USVString\"](curArg, {\n            context: \"Failed to execute 'delete' on 'URLSearchParams': parameter 2\",\n            globals: globalObject\n          });\n        }\n        args.push(curArg);\n      }\n      return utils.tryWrapperForImpl(esValue[implSymbol].delete(...args));\n    }\n\n    get(name) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'get' called on an object that is not a valid instance of URLSearchParams.\");\n      }\n\n      if (arguments.length < 1) {\n        throw new globalObject.TypeError(\n          `Failed to execute 'get' on 'URLSearchParams': 1 argument required, but only ${arguments.length} present.`\n        );\n      }\n      const args = [];\n      {\n        let curArg = arguments[0];\n        curArg = conversions[\"USVString\"](curArg, {\n          context: \"Failed to execute 'get' on 'URLSearchParams': parameter 1\",\n          globals: globalObject\n        });\n        args.push(curArg);\n      }\n      return esValue[implSymbol].get(...args);\n    }\n\n    getAll(name) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\n          \"'getAll' called on an object that is not a valid instance of URLSearchParams.\"\n        );\n      }\n\n      if (arguments.length < 1) {\n        throw new globalObject.TypeError(\n          `Failed to execute 'getAll' on 'URLSearchParams': 1 argument required, but only ${arguments.length} present.`\n        );\n      }\n      const args = [];\n      {\n        let curArg = arguments[0];\n        curArg = conversions[\"USVString\"](curArg, {\n          context: \"Failed to execute 'getAll' on 'URLSearchParams': parameter 1\",\n          globals: globalObject\n        });\n        args.push(curArg);\n      }\n      return utils.tryWrapperForImpl(esValue[implSymbol].getAll(...args));\n    }\n\n    has(name) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'has' called on an object that is not a valid instance of URLSearchParams.\");\n      }\n\n      if (arguments.length < 1) {\n        throw new globalObject.TypeError(\n          `Failed to execute 'has' on 'URLSearchParams': 1 argument required, but only ${arguments.length} present.`\n        );\n      }\n      const args = [];\n      {\n        let curArg = arguments[0];\n        curArg = conversions[\"USVString\"](curArg, {\n          context: \"Failed to execute 'has' on 'URLSearchParams': parameter 1\",\n          globals: globalObject\n        });\n        args.push(curArg);\n      }\n      {\n        let curArg = arguments[1];\n        if (curArg !== undefined) {\n          curArg = conversions[\"USVString\"](curArg, {\n            context: \"Failed to execute 'has' on 'URLSearchParams': parameter 2\",\n            globals: globalObject\n          });\n        }\n        args.push(curArg);\n      }\n      return esValue[implSymbol].has(...args);\n    }\n\n    set(name, value) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'set' called on an object that is not a valid instance of URLSearchParams.\");\n      }\n\n      if (arguments.length < 2) {\n        throw new globalObject.TypeError(\n          `Failed to execute 'set' on 'URLSearchParams': 2 arguments required, but only ${arguments.length} present.`\n        );\n      }\n      const args = [];\n      {\n        let curArg = arguments[0];\n        curArg = conversions[\"USVString\"](curArg, {\n          context: \"Failed to execute 'set' on 'URLSearchParams': parameter 1\",\n          globals: globalObject\n        });\n        args.push(curArg);\n      }\n      {\n        let curArg = arguments[1];\n        curArg = conversions[\"USVString\"](curArg, {\n          context: \"Failed to execute 'set' on 'URLSearchParams': parameter 2\",\n          globals: globalObject\n        });\n        args.push(curArg);\n      }\n      return utils.tryWrapperForImpl(esValue[implSymbol].set(...args));\n    }\n\n    sort() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'sort' called on an object that is not a valid instance of URLSearchParams.\");\n      }\n\n      return utils.tryWrapperForImpl(esValue[implSymbol].sort());\n    }\n\n    toString() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\n          \"'toString' called on an object that is not a valid instance of URLSearchParams.\"\n        );\n      }\n\n      return esValue[implSymbol].toString();\n    }\n\n    keys() {\n      if (!exports.is(this)) {\n        throw new globalObject.TypeError(\"'keys' called on an object that is not a valid instance of URLSearchParams.\");\n      }\n      return exports.createDefaultIterator(globalObject, this, \"key\");\n    }\n\n    values() {\n      if (!exports.is(this)) {\n        throw new globalObject.TypeError(\n          \"'values' called on an object that is not a valid instance of URLSearchParams.\"\n        );\n      }\n      return exports.createDefaultIterator(globalObject, this, \"value\");\n    }\n\n    entries() {\n      if (!exports.is(this)) {\n        throw new globalObject.TypeError(\n          \"'entries' called on an object that is not a valid instance of URLSearchParams.\"\n        );\n      }\n      return exports.createDefaultIterator(globalObject, this, \"key+value\");\n    }\n\n    forEach(callback) {\n      if (!exports.is(this)) {\n        throw new globalObject.TypeError(\n          \"'forEach' called on an object that is not a valid instance of URLSearchParams.\"\n        );\n      }\n      if (arguments.length < 1) {\n        throw new globalObject.TypeError(\n          \"Failed to execute 'forEach' on 'iterable': 1 argument required, but only 0 present.\"\n        );\n      }\n      callback = Function.convert(globalObject, callback, {\n        context: \"Failed to execute 'forEach' on 'iterable': The callback provided as parameter 1\"\n      });\n      const thisArg = arguments[1];\n      let pairs = Array.from(this[implSymbol]);\n      let i = 0;\n      while (i < pairs.length) {\n        const [key, value] = pairs[i].map(utils.tryWrapperForImpl);\n        callback.call(thisArg, value, key, this);\n        pairs = Array.from(this[implSymbol]);\n        i++;\n      }\n    }\n\n    get size() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\n          \"'get size' called on an object that is not a valid instance of URLSearchParams.\"\n        );\n      }\n\n      return esValue[implSymbol][\"size\"];\n    }\n  }\n  Object.defineProperties(URLSearchParams.prototype, {\n    append: { enumerable: true },\n    delete: { enumerable: true },\n    get: { enumerable: true },\n    getAll: { enumerable: true },\n    has: { enumerable: true },\n    set: { enumerable: true },\n    sort: { enumerable: true },\n    toString: { enumerable: true },\n    keys: { enumerable: true },\n    values: { enumerable: true },\n    entries: { enumerable: true },\n    forEach: { enumerable: true },\n    size: { enumerable: true },\n    [Symbol.toStringTag]: { value: \"URLSearchParams\", configurable: true },\n    [Symbol.iterator]: { value: URLSearchParams.prototype.entries, configurable: true, writable: true }\n  });\n  ctorRegistry[interfaceName] = URLSearchParams;\n\n  ctorRegistry[\"URLSearchParams Iterator\"] = Object.create(ctorRegistry[\"%IteratorPrototype%\"], {\n    [Symbol.toStringTag]: {\n      configurable: true,\n      value: \"URLSearchParams Iterator\"\n    }\n  });\n  utils.define(ctorRegistry[\"URLSearchParams Iterator\"], {\n    next() {\n      const internal = this && this[utils.iterInternalSymbol];\n      if (!internal) {\n        throw new globalObject.TypeError(\"next() called on a value that is not a URLSearchParams iterator object\");\n      }\n\n      const { target, kind, index } = internal;\n      const values = Array.from(target[implSymbol]);\n      const len = values.length;\n      if (index >= len) {\n        return newObjectInRealm(globalObject, { value: undefined, done: true });\n      }\n\n      const pair = values[index];\n      internal.index = index + 1;\n      return newObjectInRealm(globalObject, utils.iteratorResult(pair.map(utils.tryWrapperForImpl), kind));\n    }\n  });\n\n  Object.defineProperty(globalObject, interfaceName, {\n    configurable: true,\n    writable: true,\n    value: URLSearchParams\n  });\n};\n\nconst Impl = require(\"./URLSearchParams-impl.js\");\n","\"use strict\";\nconst usm = require(\"./url-state-machine\");\nconst urlencoded = require(\"./urlencoded\");\nconst URLSearchParams = require(\"./URLSearchParams\");\n\nexports.implementation = class URLImpl {\n  // Unlike the spec, we duplicate some code between the constructor and canParse, because we want to give useful error\n  // messages in the constructor that distinguish between the different causes of failure.\n  constructor(globalObject, constructorArgs) {\n    const url = constructorArgs[0];\n    const base = constructorArgs[1];\n\n    let parsedBase = null;\n    if (base !== undefined) {\n      parsedBase = usm.basicURLParse(base);\n      if (parsedBase === null) {\n        throw new TypeError(`Invalid base URL: ${base}`);\n      }\n    }\n\n    const parsedURL = usm.basicURLParse(url, { baseURL: parsedBase });\n    if (parsedURL === null) {\n      throw new TypeError(`Invalid URL: ${url}`);\n    }\n\n    const query = parsedURL.query !== null ? parsedURL.query : \"\";\n\n    this._url = parsedURL;\n\n    // We cannot invoke the \"new URLSearchParams object\" algorithm without going through the constructor, which strips\n    // question mark by default. Therefore the doNotStripQMark hack is used.\n    this._query = URLSearchParams.createImpl(globalObject, [query], { doNotStripQMark: true });\n    this._query._url = this;\n  }\n\n  static canParse(url, base) {\n    let parsedBase = null;\n    if (base !== undefined) {\n      parsedBase = usm.basicURLParse(base);\n      if (parsedBase === null) {\n        return false;\n      }\n    }\n\n    const parsedURL = usm.basicURLParse(url, { baseURL: parsedBase });\n    if (parsedURL === null) {\n      return false;\n    }\n\n    return true;\n  }\n\n  get href() {\n    return usm.serializeURL(this._url);\n  }\n\n  set href(v) {\n    const parsedURL = usm.basicURLParse(v);\n    if (parsedURL === null) {\n      throw new TypeError(`Invalid URL: ${v}`);\n    }\n\n    this._url = parsedURL;\n\n    this._query._list.splice(0);\n    const { query } = parsedURL;\n    if (query !== null) {\n      this._query._list = urlencoded.parseUrlencodedString(query);\n    }\n  }\n\n  get origin() {\n    return usm.serializeURLOrigin(this._url);\n  }\n\n  get protocol() {\n    return `${this._url.scheme}:`;\n  }\n\n  set protocol(v) {\n    usm.basicURLParse(`${v}:`, { url: this._url, stateOverride: \"scheme start\" });\n  }\n\n  get username() {\n    return this._url.username;\n  }\n\n  set username(v) {\n    if (usm.cannotHaveAUsernamePasswordPort(this._url)) {\n      return;\n    }\n\n    usm.setTheUsername(this._url, v);\n  }\n\n  get password() {\n    return this._url.password;\n  }\n\n  set password(v) {\n    if (usm.cannotHaveAUsernamePasswordPort(this._url)) {\n      return;\n    }\n\n    usm.setThePassword(this._url, v);\n  }\n\n  get host() {\n    const url = this._url;\n\n    if (url.host === null) {\n      return \"\";\n    }\n\n    if (url.port === null) {\n      return usm.serializeHost(url.host);\n    }\n\n    return `${usm.serializeHost(url.host)}:${usm.serializeInteger(url.port)}`;\n  }\n\n  set host(v) {\n    if (usm.hasAnOpaquePath(this._url)) {\n      return;\n    }\n\n    usm.basicURLParse(v, { url: this._url, stateOverride: \"host\" });\n  }\n\n  get hostname() {\n    if (this._url.host === null) {\n      return \"\";\n    }\n\n    return usm.serializeHost(this._url.host);\n  }\n\n  set hostname(v) {\n    if (usm.hasAnOpaquePath(this._url)) {\n      return;\n    }\n\n    usm.basicURLParse(v, { url: this._url, stateOverride: \"hostname\" });\n  }\n\n  get port() {\n    if (this._url.port === null) {\n      return \"\";\n    }\n\n    return usm.serializeInteger(this._url.port);\n  }\n\n  set port(v) {\n    if (usm.cannotHaveAUsernamePasswordPort(this._url)) {\n      return;\n    }\n\n    if (v === \"\") {\n      this._url.port = null;\n    } else {\n      usm.basicURLParse(v, { url: this._url, stateOverride: \"port\" });\n    }\n  }\n\n  get pathname() {\n    return usm.serializePath(this._url);\n  }\n\n  set pathname(v) {\n    if (usm.hasAnOpaquePath(this._url)) {\n      return;\n    }\n\n    this._url.path = [];\n    usm.basicURLParse(v, { url: this._url, stateOverride: \"path start\" });\n  }\n\n  get search() {\n    if (this._url.query === null || this._url.query === \"\") {\n      return \"\";\n    }\n\n    return `?${this._url.query}`;\n  }\n\n  set search(v) {\n    const url = this._url;\n\n    if (v === \"\") {\n      url.query = null;\n      this._query._list = [];\n      this._potentiallyStripTrailingSpacesFromAnOpaquePath();\n      return;\n    }\n\n    const input = v[0] === \"?\" ? v.substring(1) : v;\n    url.query = \"\";\n    usm.basicURLParse(input, { url, stateOverride: \"query\" });\n    this._query._list = urlencoded.parseUrlencodedString(input);\n  }\n\n  get searchParams() {\n    return this._query;\n  }\n\n  get hash() {\n    if (this._url.fragment === null || this._url.fragment === \"\") {\n      return \"\";\n    }\n\n    return `#${this._url.fragment}`;\n  }\n\n  set hash(v) {\n    if (v === \"\") {\n      this._url.fragment = null;\n      this._potentiallyStripTrailingSpacesFromAnOpaquePath();\n      return;\n    }\n\n    const input = v[0] === \"#\" ? v.substring(1) : v;\n    this._url.fragment = \"\";\n    usm.basicURLParse(input, { url: this._url, stateOverride: \"fragment\" });\n  }\n\n  toJSON() {\n    return this.href;\n  }\n\n  _potentiallyStripTrailingSpacesFromAnOpaquePath() {\n    if (!usm.hasAnOpaquePath(this._url)) {\n      return;\n    }\n\n    if (this._url.fragment !== null) {\n      return;\n    }\n\n    if (this._url.query !== null) {\n      return;\n    }\n\n    this._url.path = this._url.path.replace(/\\u0020+$/u, \"\");\n  }\n};\n","\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\nconst utils = require(\"./utils.js\");\n\nconst implSymbol = utils.implSymbol;\nconst ctorRegistrySymbol = utils.ctorRegistrySymbol;\n\nconst interfaceName = \"URL\";\n\nexports.is = value => {\n  return utils.isObject(value) && utils.hasOwn(value, implSymbol) && value[implSymbol] instanceof Impl.implementation;\n};\nexports.isImpl = value => {\n  return utils.isObject(value) && value instanceof Impl.implementation;\n};\nexports.convert = (globalObject, value, { context = \"The provided value\" } = {}) => {\n  if (exports.is(value)) {\n    return utils.implForWrapper(value);\n  }\n  throw new globalObject.TypeError(`${context} is not of type 'URL'.`);\n};\n\nfunction makeWrapper(globalObject, newTarget) {\n  let proto;\n  if (newTarget !== undefined) {\n    proto = newTarget.prototype;\n  }\n\n  if (!utils.isObject(proto)) {\n    proto = globalObject[ctorRegistrySymbol][\"URL\"].prototype;\n  }\n\n  return Object.create(proto);\n}\n\nexports.create = (globalObject, constructorArgs, privateData) => {\n  const wrapper = makeWrapper(globalObject);\n  return exports.setup(wrapper, globalObject, constructorArgs, privateData);\n};\n\nexports.createImpl = (globalObject, constructorArgs, privateData) => {\n  const wrapper = exports.create(globalObject, constructorArgs, privateData);\n  return utils.implForWrapper(wrapper);\n};\n\nexports._internalSetup = (wrapper, globalObject) => {};\n\nexports.setup = (wrapper, globalObject, constructorArgs = [], privateData = {}) => {\n  privateData.wrapper = wrapper;\n\n  exports._internalSetup(wrapper, globalObject);\n  Object.defineProperty(wrapper, implSymbol, {\n    value: new Impl.implementation(globalObject, constructorArgs, privateData),\n    configurable: true\n  });\n\n  wrapper[implSymbol][utils.wrapperSymbol] = wrapper;\n  if (Impl.init) {\n    Impl.init(wrapper[implSymbol]);\n  }\n  return wrapper;\n};\n\nexports.new = (globalObject, newTarget) => {\n  const wrapper = makeWrapper(globalObject, newTarget);\n\n  exports._internalSetup(wrapper, globalObject);\n  Object.defineProperty(wrapper, implSymbol, {\n    value: Object.create(Impl.implementation.prototype),\n    configurable: true\n  });\n\n  wrapper[implSymbol][utils.wrapperSymbol] = wrapper;\n  if (Impl.init) {\n    Impl.init(wrapper[implSymbol]);\n  }\n  return wrapper[implSymbol];\n};\n\nconst exposed = new Set([\"Window\", \"Worker\"]);\n\nexports.install = (globalObject, globalNames) => {\n  if (!globalNames.some(globalName => exposed.has(globalName))) {\n    return;\n  }\n\n  const ctorRegistry = utils.initCtorRegistry(globalObject);\n  class URL {\n    constructor(url) {\n      if (arguments.length < 1) {\n        throw new globalObject.TypeError(\n          `Failed to construct 'URL': 1 argument required, but only ${arguments.length} present.`\n        );\n      }\n      const args = [];\n      {\n        let curArg = arguments[0];\n        curArg = conversions[\"USVString\"](curArg, {\n          context: \"Failed to construct 'URL': parameter 1\",\n          globals: globalObject\n        });\n        args.push(curArg);\n      }\n      {\n        let curArg = arguments[1];\n        if (curArg !== undefined) {\n          curArg = conversions[\"USVString\"](curArg, {\n            context: \"Failed to construct 'URL': parameter 2\",\n            globals: globalObject\n          });\n        }\n        args.push(curArg);\n      }\n      return exports.setup(Object.create(new.target.prototype), globalObject, args);\n    }\n\n    toJSON() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'toJSON' called on an object that is not a valid instance of URL.\");\n      }\n\n      return esValue[implSymbol].toJSON();\n    }\n\n    get href() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'get href' called on an object that is not a valid instance of URL.\");\n      }\n\n      return esValue[implSymbol][\"href\"];\n    }\n\n    set href(V) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'set href' called on an object that is not a valid instance of URL.\");\n      }\n\n      V = conversions[\"USVString\"](V, {\n        context: \"Failed to set the 'href' property on 'URL': The provided value\",\n        globals: globalObject\n      });\n\n      esValue[implSymbol][\"href\"] = V;\n    }\n\n    toString() {\n      const esValue = this;\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'toString' called on an object that is not a valid instance of URL.\");\n      }\n\n      return esValue[implSymbol][\"href\"];\n    }\n\n    get origin() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'get origin' called on an object that is not a valid instance of URL.\");\n      }\n\n      return esValue[implSymbol][\"origin\"];\n    }\n\n    get protocol() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'get protocol' called on an object that is not a valid instance of URL.\");\n      }\n\n      return esValue[implSymbol][\"protocol\"];\n    }\n\n    set protocol(V) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'set protocol' called on an object that is not a valid instance of URL.\");\n      }\n\n      V = conversions[\"USVString\"](V, {\n        context: \"Failed to set the 'protocol' property on 'URL': The provided value\",\n        globals: globalObject\n      });\n\n      esValue[implSymbol][\"protocol\"] = V;\n    }\n\n    get username() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'get username' called on an object that is not a valid instance of URL.\");\n      }\n\n      return esValue[implSymbol][\"username\"];\n    }\n\n    set username(V) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'set username' called on an object that is not a valid instance of URL.\");\n      }\n\n      V = conversions[\"USVString\"](V, {\n        context: \"Failed to set the 'username' property on 'URL': The provided value\",\n        globals: globalObject\n      });\n\n      esValue[implSymbol][\"username\"] = V;\n    }\n\n    get password() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'get password' called on an object that is not a valid instance of URL.\");\n      }\n\n      return esValue[implSymbol][\"password\"];\n    }\n\n    set password(V) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'set password' called on an object that is not a valid instance of URL.\");\n      }\n\n      V = conversions[\"USVString\"](V, {\n        context: \"Failed to set the 'password' property on 'URL': The provided value\",\n        globals: globalObject\n      });\n\n      esValue[implSymbol][\"password\"] = V;\n    }\n\n    get host() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'get host' called on an object that is not a valid instance of URL.\");\n      }\n\n      return esValue[implSymbol][\"host\"];\n    }\n\n    set host(V) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'set host' called on an object that is not a valid instance of URL.\");\n      }\n\n      V = conversions[\"USVString\"](V, {\n        context: \"Failed to set the 'host' property on 'URL': The provided value\",\n        globals: globalObject\n      });\n\n      esValue[implSymbol][\"host\"] = V;\n    }\n\n    get hostname() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'get hostname' called on an object that is not a valid instance of URL.\");\n      }\n\n      return esValue[implSymbol][\"hostname\"];\n    }\n\n    set hostname(V) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'set hostname' called on an object that is not a valid instance of URL.\");\n      }\n\n      V = conversions[\"USVString\"](V, {\n        context: \"Failed to set the 'hostname' property on 'URL': The provided value\",\n        globals: globalObject\n      });\n\n      esValue[implSymbol][\"hostname\"] = V;\n    }\n\n    get port() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'get port' called on an object that is not a valid instance of URL.\");\n      }\n\n      return esValue[implSymbol][\"port\"];\n    }\n\n    set port(V) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'set port' called on an object that is not a valid instance of URL.\");\n      }\n\n      V = conversions[\"USVString\"](V, {\n        context: \"Failed to set the 'port' property on 'URL': The provided value\",\n        globals: globalObject\n      });\n\n      esValue[implSymbol][\"port\"] = V;\n    }\n\n    get pathname() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'get pathname' called on an object that is not a valid instance of URL.\");\n      }\n\n      return esValue[implSymbol][\"pathname\"];\n    }\n\n    set pathname(V) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'set pathname' called on an object that is not a valid instance of URL.\");\n      }\n\n      V = conversions[\"USVString\"](V, {\n        context: \"Failed to set the 'pathname' property on 'URL': The provided value\",\n        globals: globalObject\n      });\n\n      esValue[implSymbol][\"pathname\"] = V;\n    }\n\n    get search() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'get search' called on an object that is not a valid instance of URL.\");\n      }\n\n      return esValue[implSymbol][\"search\"];\n    }\n\n    set search(V) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'set search' called on an object that is not a valid instance of URL.\");\n      }\n\n      V = conversions[\"USVString\"](V, {\n        context: \"Failed to set the 'search' property on 'URL': The provided value\",\n        globals: globalObject\n      });\n\n      esValue[implSymbol][\"search\"] = V;\n    }\n\n    get searchParams() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'get searchParams' called on an object that is not a valid instance of URL.\");\n      }\n\n      return utils.getSameObject(this, \"searchParams\", () => {\n        return utils.tryWrapperForImpl(esValue[implSymbol][\"searchParams\"]);\n      });\n    }\n\n    get hash() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'get hash' called on an object that is not a valid instance of URL.\");\n      }\n\n      return esValue[implSymbol][\"hash\"];\n    }\n\n    set hash(V) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'set hash' called on an object that is not a valid instance of URL.\");\n      }\n\n      V = conversions[\"USVString\"](V, {\n        context: \"Failed to set the 'hash' property on 'URL': The provided value\",\n        globals: globalObject\n      });\n\n      esValue[implSymbol][\"hash\"] = V;\n    }\n\n    static canParse(url) {\n      if (arguments.length < 1) {\n        throw new globalObject.TypeError(\n          `Failed to execute 'canParse' on 'URL': 1 argument required, but only ${arguments.length} present.`\n        );\n      }\n      const args = [];\n      {\n        let curArg = arguments[0];\n        curArg = conversions[\"USVString\"](curArg, {\n          context: \"Failed to execute 'canParse' on 'URL': parameter 1\",\n          globals: globalObject\n        });\n        args.push(curArg);\n      }\n      {\n        let curArg = arguments[1];\n        if (curArg !== undefined) {\n          curArg = conversions[\"USVString\"](curArg, {\n            context: \"Failed to execute 'canParse' on 'URL': parameter 2\",\n            globals: globalObject\n          });\n        }\n        args.push(curArg);\n      }\n      return Impl.implementation.canParse(...args);\n    }\n  }\n  Object.defineProperties(URL.prototype, {\n    toJSON: { enumerable: true },\n    href: { enumerable: true },\n    toString: { enumerable: true },\n    origin: { enumerable: true },\n    protocol: { enumerable: true },\n    username: { enumerable: true },\n    password: { enumerable: true },\n    host: { enumerable: true },\n    hostname: { enumerable: true },\n    port: { enumerable: true },\n    pathname: { enumerable: true },\n    search: { enumerable: true },\n    searchParams: { enumerable: true },\n    hash: { enumerable: true },\n    [Symbol.toStringTag]: { value: \"URL\", configurable: true }\n  });\n  Object.defineProperties(URL, { canParse: { enumerable: true } });\n  ctorRegistry[interfaceName] = URL;\n\n  Object.defineProperty(globalObject, interfaceName, {\n    configurable: true,\n    writable: true,\n    value: URL\n  });\n\n  if (globalNames.includes(\"Window\")) {\n    Object.defineProperty(globalObject, \"webkitURL\", {\n      configurable: true,\n      writable: true,\n      value: URL\n    });\n  }\n};\n\nconst Impl = require(\"./URL-impl.js\");\n","\"use strict\";\n\nconst URL = require(\"./lib/URL\");\nconst URLSearchParams = require(\"./lib/URLSearchParams\");\n\nexports.URL = URL;\nexports.URLSearchParams = URLSearchParams;\n","\"use strict\";\n\nconst { URL, URLSearchParams } = require(\"./webidl2js-wrapper\");\nconst urlStateMachine = require(\"./lib/url-state-machine\");\nconst percentEncoding = require(\"./lib/percent-encoding\");\n\nconst sharedGlobalObject = { Array, Object, Promise, String, TypeError };\nURL.install(sharedGlobalObject, [\"Window\"]);\nURLSearchParams.install(sharedGlobalObject, [\"Window\"]);\n\nexports.URL = sharedGlobalObject.URL;\nexports.URLSearchParams = sharedGlobalObject.URLSearchParams;\n\nexports.parseURL = urlStateMachine.parseURL;\nexports.basicURLParse = urlStateMachine.basicURLParse;\nexports.serializeURL = urlStateMachine.serializeURL;\nexports.serializePath = urlStateMachine.serializePath;\nexports.serializeHost = urlStateMachine.serializeHost;\nexports.serializeInteger = urlStateMachine.serializeInteger;\nexports.serializeURLOrigin = urlStateMachine.serializeURLOrigin;\nexports.setTheUsername = urlStateMachine.setTheUsername;\nexports.setThePassword = urlStateMachine.setThePassword;\nexports.cannotHaveAUsernamePasswordPort = urlStateMachine.cannotHaveAUsernamePasswordPort;\nexports.hasAnOpaquePath = urlStateMachine.hasAnOpaquePath;\n\nexports.percentDecodeString = percentEncoding.percentDecodeString;\nexports.percentDecodeBytes = percentEncoding.percentDecodeBytes;\n","import Stream from 'stream';\nimport http from 'http';\nimport Url from 'url';\nimport whatwgUrl from 'whatwg-url';\nimport https from 'https';\nimport zlib from 'zlib';\n\n// Based on https://github.com/tmpvar/jsdom/blob/aa85b2abf07766ff7bf5c1f6daafb3726f2f2db5/lib/jsdom/living/blob.js\n\n// fix for \"Readable\" isn't a named export issue\nconst Readable = Stream.Readable;\n\nconst BUFFER = Symbol('buffer');\nconst TYPE = Symbol('type');\n\nclass Blob {\n\tconstructor() {\n\t\tthis[TYPE] = '';\n\n\t\tconst blobParts = arguments[0];\n\t\tconst options = arguments[1];\n\n\t\tconst buffers = [];\n\t\tlet size = 0;\n\n\t\tif (blobParts) {\n\t\t\tconst a = blobParts;\n\t\t\tconst length = Number(a.length);\n\t\t\tfor (let i = 0; i < length; i++) {\n\t\t\t\tconst element = a[i];\n\t\t\t\tlet buffer;\n\t\t\t\tif (element instanceof Buffer) {\n\t\t\t\t\tbuffer = element;\n\t\t\t\t} else if (ArrayBuffer.isView(element)) {\n\t\t\t\t\tbuffer = Buffer.from(element.buffer, element.byteOffset, element.byteLength);\n\t\t\t\t} else if (element instanceof ArrayBuffer) {\n\t\t\t\t\tbuffer = Buffer.from(element);\n\t\t\t\t} else if (element instanceof Blob) {\n\t\t\t\t\tbuffer = element[BUFFER];\n\t\t\t\t} else {\n\t\t\t\t\tbuffer = Buffer.from(typeof element === 'string' ? element : String(element));\n\t\t\t\t}\n\t\t\t\tsize += buffer.length;\n\t\t\t\tbuffers.push(buffer);\n\t\t\t}\n\t\t}\n\n\t\tthis[BUFFER] = Buffer.concat(buffers);\n\n\t\tlet type = options && options.type !== undefined && String(options.type).toLowerCase();\n\t\tif (type && !/[^\\u0020-\\u007E]/.test(type)) {\n\t\t\tthis[TYPE] = type;\n\t\t}\n\t}\n\tget size() {\n\t\treturn this[BUFFER].length;\n\t}\n\tget type() {\n\t\treturn this[TYPE];\n\t}\n\ttext() {\n\t\treturn Promise.resolve(this[BUFFER].toString());\n\t}\n\tarrayBuffer() {\n\t\tconst buf = this[BUFFER];\n\t\tconst ab = buf.buffer.slice(buf.byteOffset, buf.byteOffset + buf.byteLength);\n\t\treturn Promise.resolve(ab);\n\t}\n\tstream() {\n\t\tconst readable = new Readable();\n\t\treadable._read = function () {};\n\t\treadable.push(this[BUFFER]);\n\t\treadable.push(null);\n\t\treturn readable;\n\t}\n\ttoString() {\n\t\treturn '[object Blob]';\n\t}\n\tslice() {\n\t\tconst size = this.size;\n\n\t\tconst start = arguments[0];\n\t\tconst end = arguments[1];\n\t\tlet relativeStart, relativeEnd;\n\t\tif (start === undefined) {\n\t\t\trelativeStart = 0;\n\t\t} else if (start < 0) {\n\t\t\trelativeStart = Math.max(size + start, 0);\n\t\t} else {\n\t\t\trelativeStart = Math.min(start, size);\n\t\t}\n\t\tif (end === undefined) {\n\t\t\trelativeEnd = size;\n\t\t} else if (end < 0) {\n\t\t\trelativeEnd = Math.max(size + end, 0);\n\t\t} else {\n\t\t\trelativeEnd = Math.min(end, size);\n\t\t}\n\t\tconst span = Math.max(relativeEnd - relativeStart, 0);\n\n\t\tconst buffer = this[BUFFER];\n\t\tconst slicedBuffer = buffer.slice(relativeStart, relativeStart + span);\n\t\tconst blob = new Blob([], { type: arguments[2] });\n\t\tblob[BUFFER] = slicedBuffer;\n\t\treturn blob;\n\t}\n}\n\nObject.defineProperties(Blob.prototype, {\n\tsize: { enumerable: true },\n\ttype: { enumerable: true },\n\tslice: { enumerable: true }\n});\n\nObject.defineProperty(Blob.prototype, Symbol.toStringTag, {\n\tvalue: 'Blob',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\n/**\n * fetch-error.js\n *\n * FetchError interface for operational errors\n */\n\n/**\n * Create FetchError instance\n *\n * @param   String      message      Error message for human\n * @param   String      type         Error type for machine\n * @param   String      systemError  For Node.js system error\n * @return  FetchError\n */\nfunction FetchError(message, type, systemError) {\n  Error.call(this, message);\n\n  this.message = message;\n  this.type = type;\n\n  // when err.type is `system`, err.code contains system error code\n  if (systemError) {\n    this.code = this.errno = systemError.code;\n  }\n\n  // hide custom error implementation details from end-users\n  Error.captureStackTrace(this, this.constructor);\n}\n\nFetchError.prototype = Object.create(Error.prototype);\nFetchError.prototype.constructor = FetchError;\nFetchError.prototype.name = 'FetchError';\n\nlet convert;\ntry {\n\tconvert = require('encoding').convert;\n} catch (e) {}\n\nconst INTERNALS = Symbol('Body internals');\n\n// fix an issue where \"PassThrough\" isn't a named export for node <10\nconst PassThrough = Stream.PassThrough;\n\n/**\n * Body mixin\n *\n * Ref: https://fetch.spec.whatwg.org/#body\n *\n * @param   Stream  body  Readable stream\n * @param   Object  opts  Response options\n * @return  Void\n */\nfunction Body(body) {\n\tvar _this = this;\n\n\tvar _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n\t    _ref$size = _ref.size;\n\n\tlet size = _ref$size === undefined ? 0 : _ref$size;\n\tvar _ref$timeout = _ref.timeout;\n\tlet timeout = _ref$timeout === undefined ? 0 : _ref$timeout;\n\n\tif (body == null) {\n\t\t// body is undefined or null\n\t\tbody = null;\n\t} else if (isURLSearchParams(body)) {\n\t\t// body is a URLSearchParams\n\t\tbody = Buffer.from(body.toString());\n\t} else if (isBlob(body)) ; else if (Buffer.isBuffer(body)) ; else if (Object.prototype.toString.call(body) === '[object ArrayBuffer]') {\n\t\t// body is ArrayBuffer\n\t\tbody = Buffer.from(body);\n\t} else if (ArrayBuffer.isView(body)) {\n\t\t// body is ArrayBufferView\n\t\tbody = Buffer.from(body.buffer, body.byteOffset, body.byteLength);\n\t} else if (body instanceof Stream) ; else {\n\t\t// none of the above\n\t\t// coerce to string then buffer\n\t\tbody = Buffer.from(String(body));\n\t}\n\tthis[INTERNALS] = {\n\t\tbody,\n\t\tdisturbed: false,\n\t\terror: null\n\t};\n\tthis.size = size;\n\tthis.timeout = timeout;\n\n\tif (body instanceof Stream) {\n\t\tbody.on('error', function (err) {\n\t\t\tconst error = err.name === 'AbortError' ? err : new FetchError(`Invalid response body while trying to fetch ${_this.url}: ${err.message}`, 'system', err);\n\t\t\t_this[INTERNALS].error = error;\n\t\t});\n\t}\n}\n\nBody.prototype = {\n\tget body() {\n\t\treturn this[INTERNALS].body;\n\t},\n\n\tget bodyUsed() {\n\t\treturn this[INTERNALS].disturbed;\n\t},\n\n\t/**\n  * Decode response as ArrayBuffer\n  *\n  * @return  Promise\n  */\n\tarrayBuffer() {\n\t\treturn consumeBody.call(this).then(function (buf) {\n\t\t\treturn buf.buffer.slice(buf.byteOffset, buf.byteOffset + buf.byteLength);\n\t\t});\n\t},\n\n\t/**\n  * Return raw response as Blob\n  *\n  * @return Promise\n  */\n\tblob() {\n\t\tlet ct = this.headers && this.headers.get('content-type') || '';\n\t\treturn consumeBody.call(this).then(function (buf) {\n\t\t\treturn Object.assign(\n\t\t\t// Prevent copying\n\t\t\tnew Blob([], {\n\t\t\t\ttype: ct.toLowerCase()\n\t\t\t}), {\n\t\t\t\t[BUFFER]: buf\n\t\t\t});\n\t\t});\n\t},\n\n\t/**\n  * Decode response as json\n  *\n  * @return  Promise\n  */\n\tjson() {\n\t\tvar _this2 = this;\n\n\t\treturn consumeBody.call(this).then(function (buffer) {\n\t\t\ttry {\n\t\t\t\treturn JSON.parse(buffer.toString());\n\t\t\t} catch (err) {\n\t\t\t\treturn Body.Promise.reject(new FetchError(`invalid json response body at ${_this2.url} reason: ${err.message}`, 'invalid-json'));\n\t\t\t}\n\t\t});\n\t},\n\n\t/**\n  * Decode response as text\n  *\n  * @return  Promise\n  */\n\ttext() {\n\t\treturn consumeBody.call(this).then(function (buffer) {\n\t\t\treturn buffer.toString();\n\t\t});\n\t},\n\n\t/**\n  * Decode response as buffer (non-spec api)\n  *\n  * @return  Promise\n  */\n\tbuffer() {\n\t\treturn consumeBody.call(this);\n\t},\n\n\t/**\n  * Decode response as text, while automatically detecting the encoding and\n  * trying to decode to UTF-8 (non-spec api)\n  *\n  * @return  Promise\n  */\n\ttextConverted() {\n\t\tvar _this3 = this;\n\n\t\treturn consumeBody.call(this).then(function (buffer) {\n\t\t\treturn convertBody(buffer, _this3.headers);\n\t\t});\n\t}\n};\n\n// In browsers, all properties are enumerable.\nObject.defineProperties(Body.prototype, {\n\tbody: { enumerable: true },\n\tbodyUsed: { enumerable: true },\n\tarrayBuffer: { enumerable: true },\n\tblob: { enumerable: true },\n\tjson: { enumerable: true },\n\ttext: { enumerable: true }\n});\n\nBody.mixIn = function (proto) {\n\tfor (const name of Object.getOwnPropertyNames(Body.prototype)) {\n\t\t// istanbul ignore else: future proof\n\t\tif (!(name in proto)) {\n\t\t\tconst desc = Object.getOwnPropertyDescriptor(Body.prototype, name);\n\t\t\tObject.defineProperty(proto, name, desc);\n\t\t}\n\t}\n};\n\n/**\n * Consume and convert an entire Body to a Buffer.\n *\n * Ref: https://fetch.spec.whatwg.org/#concept-body-consume-body\n *\n * @return  Promise\n */\nfunction consumeBody() {\n\tvar _this4 = this;\n\n\tif (this[INTERNALS].disturbed) {\n\t\treturn Body.Promise.reject(new TypeError(`body used already for: ${this.url}`));\n\t}\n\n\tthis[INTERNALS].disturbed = true;\n\n\tif (this[INTERNALS].error) {\n\t\treturn Body.Promise.reject(this[INTERNALS].error);\n\t}\n\n\tlet body = this.body;\n\n\t// body is null\n\tif (body === null) {\n\t\treturn Body.Promise.resolve(Buffer.alloc(0));\n\t}\n\n\t// body is blob\n\tif (isBlob(body)) {\n\t\tbody = body.stream();\n\t}\n\n\t// body is buffer\n\tif (Buffer.isBuffer(body)) {\n\t\treturn Body.Promise.resolve(body);\n\t}\n\n\t// istanbul ignore if: should never happen\n\tif (!(body instanceof Stream)) {\n\t\treturn Body.Promise.resolve(Buffer.alloc(0));\n\t}\n\n\t// body is stream\n\t// get ready to actually consume the body\n\tlet accum = [];\n\tlet accumBytes = 0;\n\tlet abort = false;\n\n\treturn new Body.Promise(function (resolve, reject) {\n\t\tlet resTimeout;\n\n\t\t// allow timeout on slow response body\n\t\tif (_this4.timeout) {\n\t\t\tresTimeout = setTimeout(function () {\n\t\t\t\tabort = true;\n\t\t\t\treject(new FetchError(`Response timeout while trying to fetch ${_this4.url} (over ${_this4.timeout}ms)`, 'body-timeout'));\n\t\t\t}, _this4.timeout);\n\t\t}\n\n\t\t// handle stream errors\n\t\tbody.on('error', function (err) {\n\t\t\tif (err.name === 'AbortError') {\n\t\t\t\t// if the request was aborted, reject with this Error\n\t\t\t\tabort = true;\n\t\t\t\treject(err);\n\t\t\t} else {\n\t\t\t\t// other errors, such as incorrect content-encoding\n\t\t\t\treject(new FetchError(`Invalid response body while trying to fetch ${_this4.url}: ${err.message}`, 'system', err));\n\t\t\t}\n\t\t});\n\n\t\tbody.on('data', function (chunk) {\n\t\t\tif (abort || chunk === null) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (_this4.size && accumBytes + chunk.length > _this4.size) {\n\t\t\t\tabort = true;\n\t\t\t\treject(new FetchError(`content size at ${_this4.url} over limit: ${_this4.size}`, 'max-size'));\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\taccumBytes += chunk.length;\n\t\t\taccum.push(chunk);\n\t\t});\n\n\t\tbody.on('end', function () {\n\t\t\tif (abort) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tclearTimeout(resTimeout);\n\n\t\t\ttry {\n\t\t\t\tresolve(Buffer.concat(accum, accumBytes));\n\t\t\t} catch (err) {\n\t\t\t\t// handle streams that have accumulated too much data (issue #414)\n\t\t\t\treject(new FetchError(`Could not create Buffer from response body for ${_this4.url}: ${err.message}`, 'system', err));\n\t\t\t}\n\t\t});\n\t});\n}\n\n/**\n * Detect buffer encoding and convert to target encoding\n * ref: http://www.w3.org/TR/2011/WD-html5-20110113/parsing.html#determining-the-character-encoding\n *\n * @param   Buffer  buffer    Incoming buffer\n * @param   String  encoding  Target encoding\n * @return  String\n */\nfunction convertBody(buffer, headers) {\n\tif (typeof convert !== 'function') {\n\t\tthrow new Error('The package `encoding` must be installed to use the textConverted() function');\n\t}\n\n\tconst ct = headers.get('content-type');\n\tlet charset = 'utf-8';\n\tlet res, str;\n\n\t// header\n\tif (ct) {\n\t\tres = /charset=([^;]*)/i.exec(ct);\n\t}\n\n\t// no charset in content type, peek at response body for at most 1024 bytes\n\tstr = buffer.slice(0, 1024).toString();\n\n\t// html5\n\tif (!res && str) {\n\t\tres = /<meta.+?charset=(['\"])(.+?)\\1/i.exec(str);\n\t}\n\n\t// html4\n\tif (!res && str) {\n\t\tres = /<meta[\\s]+?http-equiv=(['\"])content-type\\1[\\s]+?content=(['\"])(.+?)\\2/i.exec(str);\n\t\tif (!res) {\n\t\t\tres = /<meta[\\s]+?content=(['\"])(.+?)\\1[\\s]+?http-equiv=(['\"])content-type\\3/i.exec(str);\n\t\t\tif (res) {\n\t\t\t\tres.pop(); // drop last quote\n\t\t\t}\n\t\t}\n\n\t\tif (res) {\n\t\t\tres = /charset=(.*)/i.exec(res.pop());\n\t\t}\n\t}\n\n\t// xml\n\tif (!res && str) {\n\t\tres = /<\\?xml.+?encoding=(['\"])(.+?)\\1/i.exec(str);\n\t}\n\n\t// found charset\n\tif (res) {\n\t\tcharset = res.pop();\n\n\t\t// prevent decode issues when sites use incorrect encoding\n\t\t// ref: https://hsivonen.fi/encoding-menu/\n\t\tif (charset === 'gb2312' || charset === 'gbk') {\n\t\t\tcharset = 'gb18030';\n\t\t}\n\t}\n\n\t// turn raw buffers into a single utf-8 buffer\n\treturn convert(buffer, 'UTF-8', charset).toString();\n}\n\n/**\n * Detect a URLSearchParams object\n * ref: https://github.com/bitinn/node-fetch/issues/296#issuecomment-307598143\n *\n * @param   Object  obj     Object to detect by type or brand\n * @return  String\n */\nfunction isURLSearchParams(obj) {\n\t// Duck-typing as a necessary condition.\n\tif (typeof obj !== 'object' || typeof obj.append !== 'function' || typeof obj.delete !== 'function' || typeof obj.get !== 'function' || typeof obj.getAll !== 'function' || typeof obj.has !== 'function' || typeof obj.set !== 'function') {\n\t\treturn false;\n\t}\n\n\t// Brand-checking and more duck-typing as optional condition.\n\treturn obj.constructor.name === 'URLSearchParams' || Object.prototype.toString.call(obj) === '[object URLSearchParams]' || typeof obj.sort === 'function';\n}\n\n/**\n * Check if `obj` is a W3C `Blob` object (which `File` inherits from)\n * @param  {*} obj\n * @return {boolean}\n */\nfunction isBlob(obj) {\n\treturn typeof obj === 'object' && typeof obj.arrayBuffer === 'function' && typeof obj.type === 'string' && typeof obj.stream === 'function' && typeof obj.constructor === 'function' && typeof obj.constructor.name === 'string' && /^(Blob|File)$/.test(obj.constructor.name) && /^(Blob|File)$/.test(obj[Symbol.toStringTag]);\n}\n\n/**\n * Clone body given Res/Req instance\n *\n * @param   Mixed  instance  Response or Request instance\n * @return  Mixed\n */\nfunction clone(instance) {\n\tlet p1, p2;\n\tlet body = instance.body;\n\n\t// don't allow cloning a used body\n\tif (instance.bodyUsed) {\n\t\tthrow new Error('cannot clone body after it is used');\n\t}\n\n\t// check that body is a stream and not form-data object\n\t// note: we can't clone the form-data object without having it as a dependency\n\tif (body instanceof Stream && typeof body.getBoundary !== 'function') {\n\t\t// tee instance body\n\t\tp1 = new PassThrough();\n\t\tp2 = new PassThrough();\n\t\tbody.pipe(p1);\n\t\tbody.pipe(p2);\n\t\t// set instance body to teed body and return the other teed body\n\t\tinstance[INTERNALS].body = p1;\n\t\tbody = p2;\n\t}\n\n\treturn body;\n}\n\n/**\n * Performs the operation \"extract a `Content-Type` value from |object|\" as\n * specified in the specification:\n * https://fetch.spec.whatwg.org/#concept-bodyinit-extract\n *\n * This function assumes that instance.body is present.\n *\n * @param   Mixed  instance  Any options.body input\n */\nfunction extractContentType(body) {\n\tif (body === null) {\n\t\t// body is null\n\t\treturn null;\n\t} else if (typeof body === 'string') {\n\t\t// body is string\n\t\treturn 'text/plain;charset=UTF-8';\n\t} else if (isURLSearchParams(body)) {\n\t\t// body is a URLSearchParams\n\t\treturn 'application/x-www-form-urlencoded;charset=UTF-8';\n\t} else if (isBlob(body)) {\n\t\t// body is blob\n\t\treturn body.type || null;\n\t} else if (Buffer.isBuffer(body)) {\n\t\t// body is buffer\n\t\treturn null;\n\t} else if (Object.prototype.toString.call(body) === '[object ArrayBuffer]') {\n\t\t// body is ArrayBuffer\n\t\treturn null;\n\t} else if (ArrayBuffer.isView(body)) {\n\t\t// body is ArrayBufferView\n\t\treturn null;\n\t} else if (typeof body.getBoundary === 'function') {\n\t\t// detect form data input from form-data module\n\t\treturn `multipart/form-data;boundary=${body.getBoundary()}`;\n\t} else if (body instanceof Stream) {\n\t\t// body is stream\n\t\t// can't really do much about this\n\t\treturn null;\n\t} else {\n\t\t// Body constructor defaults other things to string\n\t\treturn 'text/plain;charset=UTF-8';\n\t}\n}\n\n/**\n * The Fetch Standard treats this as if \"total bytes\" is a property on the body.\n * For us, we have to explicitly get it with a function.\n *\n * ref: https://fetch.spec.whatwg.org/#concept-body-total-bytes\n *\n * @param   Body    instance   Instance of Body\n * @return  Number?            Number of bytes, or null if not possible\n */\nfunction getTotalBytes(instance) {\n\tconst body = instance.body;\n\n\n\tif (body === null) {\n\t\t// body is null\n\t\treturn 0;\n\t} else if (isBlob(body)) {\n\t\treturn body.size;\n\t} else if (Buffer.isBuffer(body)) {\n\t\t// body is buffer\n\t\treturn body.length;\n\t} else if (body && typeof body.getLengthSync === 'function') {\n\t\t// detect form data input from form-data module\n\t\tif (body._lengthRetrievers && body._lengthRetrievers.length == 0 || // 1.x\n\t\tbody.hasKnownLength && body.hasKnownLength()) {\n\t\t\t// 2.x\n\t\t\treturn body.getLengthSync();\n\t\t}\n\t\treturn null;\n\t} else {\n\t\t// body is stream\n\t\treturn null;\n\t}\n}\n\n/**\n * Write a Body to a Node.js WritableStream (e.g. http.Request) object.\n *\n * @param   Body    instance   Instance of Body\n * @return  Void\n */\nfunction writeToStream(dest, instance) {\n\tconst body = instance.body;\n\n\n\tif (body === null) {\n\t\t// body is null\n\t\tdest.end();\n\t} else if (isBlob(body)) {\n\t\tbody.stream().pipe(dest);\n\t} else if (Buffer.isBuffer(body)) {\n\t\t// body is buffer\n\t\tdest.write(body);\n\t\tdest.end();\n\t} else {\n\t\t// body is stream\n\t\tbody.pipe(dest);\n\t}\n}\n\n// expose Promise\nBody.Promise = global.Promise;\n\n/**\n * headers.js\n *\n * Headers class offers convenient helpers\n */\n\nconst invalidTokenRegex = /[^\\^_`a-zA-Z\\-0-9!#$%&'*+.|~]/;\nconst invalidHeaderCharRegex = /[^\\t\\x20-\\x7e\\x80-\\xff]/;\n\nfunction validateName(name) {\n\tname = `${name}`;\n\tif (invalidTokenRegex.test(name) || name === '') {\n\t\tthrow new TypeError(`${name} is not a legal HTTP header name`);\n\t}\n}\n\nfunction validateValue(value) {\n\tvalue = `${value}`;\n\tif (invalidHeaderCharRegex.test(value)) {\n\t\tthrow new TypeError(`${value} is not a legal HTTP header value`);\n\t}\n}\n\n/**\n * Find the key in the map object given a header name.\n *\n * Returns undefined if not found.\n *\n * @param   String  name  Header name\n * @return  String|Undefined\n */\nfunction find(map, name) {\n\tname = name.toLowerCase();\n\tfor (const key in map) {\n\t\tif (key.toLowerCase() === name) {\n\t\t\treturn key;\n\t\t}\n\t}\n\treturn undefined;\n}\n\nconst MAP = Symbol('map');\nclass Headers {\n\t/**\n  * Headers class\n  *\n  * @param   Object  headers  Response headers\n  * @return  Void\n  */\n\tconstructor() {\n\t\tlet init = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : undefined;\n\n\t\tthis[MAP] = Object.create(null);\n\n\t\tif (init instanceof Headers) {\n\t\t\tconst rawHeaders = init.raw();\n\t\t\tconst headerNames = Object.keys(rawHeaders);\n\n\t\t\tfor (const headerName of headerNames) {\n\t\t\t\tfor (const value of rawHeaders[headerName]) {\n\t\t\t\t\tthis.append(headerName, value);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\t// We don't worry about converting prop to ByteString here as append()\n\t\t// will handle it.\n\t\tif (init == null) ; else if (typeof init === 'object') {\n\t\t\tconst method = init[Symbol.iterator];\n\t\t\tif (method != null) {\n\t\t\t\tif (typeof method !== 'function') {\n\t\t\t\t\tthrow new TypeError('Header pairs must be iterable');\n\t\t\t\t}\n\n\t\t\t\t// sequence<sequence<ByteString>>\n\t\t\t\t// Note: per spec we have to first exhaust the lists then process them\n\t\t\t\tconst pairs = [];\n\t\t\t\tfor (const pair of init) {\n\t\t\t\t\tif (typeof pair !== 'object' || typeof pair[Symbol.iterator] !== 'function') {\n\t\t\t\t\t\tthrow new TypeError('Each header pair must be iterable');\n\t\t\t\t\t}\n\t\t\t\t\tpairs.push(Array.from(pair));\n\t\t\t\t}\n\n\t\t\t\tfor (const pair of pairs) {\n\t\t\t\t\tif (pair.length !== 2) {\n\t\t\t\t\t\tthrow new TypeError('Each header pair must be a name/value tuple');\n\t\t\t\t\t}\n\t\t\t\t\tthis.append(pair[0], pair[1]);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// record<ByteString, ByteString>\n\t\t\t\tfor (const key of Object.keys(init)) {\n\t\t\t\t\tconst value = init[key];\n\t\t\t\t\tthis.append(key, value);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tthrow new TypeError('Provided initializer must be an object');\n\t\t}\n\t}\n\n\t/**\n  * Return combined header value given name\n  *\n  * @param   String  name  Header name\n  * @return  Mixed\n  */\n\tget(name) {\n\t\tname = `${name}`;\n\t\tvalidateName(name);\n\t\tconst key = find(this[MAP], name);\n\t\tif (key === undefined) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn this[MAP][key].join(', ');\n\t}\n\n\t/**\n  * Iterate over all headers\n  *\n  * @param   Function  callback  Executed for each item with parameters (value, name, thisArg)\n  * @param   Boolean   thisArg   `this` context for callback function\n  * @return  Void\n  */\n\tforEach(callback) {\n\t\tlet thisArg = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;\n\n\t\tlet pairs = getHeaders(this);\n\t\tlet i = 0;\n\t\twhile (i < pairs.length) {\n\t\t\tvar _pairs$i = pairs[i];\n\t\t\tconst name = _pairs$i[0],\n\t\t\t      value = _pairs$i[1];\n\n\t\t\tcallback.call(thisArg, value, name, this);\n\t\t\tpairs = getHeaders(this);\n\t\t\ti++;\n\t\t}\n\t}\n\n\t/**\n  * Overwrite header values given name\n  *\n  * @param   String  name   Header name\n  * @param   String  value  Header value\n  * @return  Void\n  */\n\tset(name, value) {\n\t\tname = `${name}`;\n\t\tvalue = `${value}`;\n\t\tvalidateName(name);\n\t\tvalidateValue(value);\n\t\tconst key = find(this[MAP], name);\n\t\tthis[MAP][key !== undefined ? key : name] = [value];\n\t}\n\n\t/**\n  * Append a value onto existing header\n  *\n  * @param   String  name   Header name\n  * @param   String  value  Header value\n  * @return  Void\n  */\n\tappend(name, value) {\n\t\tname = `${name}`;\n\t\tvalue = `${value}`;\n\t\tvalidateName(name);\n\t\tvalidateValue(value);\n\t\tconst key = find(this[MAP], name);\n\t\tif (key !== undefined) {\n\t\t\tthis[MAP][key].push(value);\n\t\t} else {\n\t\t\tthis[MAP][name] = [value];\n\t\t}\n\t}\n\n\t/**\n  * Check for header name existence\n  *\n  * @param   String   name  Header name\n  * @return  Boolean\n  */\n\thas(name) {\n\t\tname = `${name}`;\n\t\tvalidateName(name);\n\t\treturn find(this[MAP], name) !== undefined;\n\t}\n\n\t/**\n  * Delete all header values given name\n  *\n  * @param   String  name  Header name\n  * @return  Void\n  */\n\tdelete(name) {\n\t\tname = `${name}`;\n\t\tvalidateName(name);\n\t\tconst key = find(this[MAP], name);\n\t\tif (key !== undefined) {\n\t\t\tdelete this[MAP][key];\n\t\t}\n\t}\n\n\t/**\n  * Return raw headers (non-spec api)\n  *\n  * @return  Object\n  */\n\traw() {\n\t\treturn this[MAP];\n\t}\n\n\t/**\n  * Get an iterator on keys.\n  *\n  * @return  Iterator\n  */\n\tkeys() {\n\t\treturn createHeadersIterator(this, 'key');\n\t}\n\n\t/**\n  * Get an iterator on values.\n  *\n  * @return  Iterator\n  */\n\tvalues() {\n\t\treturn createHeadersIterator(this, 'value');\n\t}\n\n\t/**\n  * Get an iterator on entries.\n  *\n  * This is the default iterator of the Headers object.\n  *\n  * @return  Iterator\n  */\n\t[Symbol.iterator]() {\n\t\treturn createHeadersIterator(this, 'key+value');\n\t}\n}\nHeaders.prototype.entries = Headers.prototype[Symbol.iterator];\n\nObject.defineProperty(Headers.prototype, Symbol.toStringTag, {\n\tvalue: 'Headers',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\nObject.defineProperties(Headers.prototype, {\n\tget: { enumerable: true },\n\tforEach: { enumerable: true },\n\tset: { enumerable: true },\n\tappend: { enumerable: true },\n\thas: { enumerable: true },\n\tdelete: { enumerable: true },\n\tkeys: { enumerable: true },\n\tvalues: { enumerable: true },\n\tentries: { enumerable: true }\n});\n\nfunction getHeaders(headers) {\n\tlet kind = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'key+value';\n\n\tconst keys = Object.keys(headers[MAP]).sort();\n\treturn keys.map(kind === 'key' ? function (k) {\n\t\treturn k.toLowerCase();\n\t} : kind === 'value' ? function (k) {\n\t\treturn headers[MAP][k].join(', ');\n\t} : function (k) {\n\t\treturn [k.toLowerCase(), headers[MAP][k].join(', ')];\n\t});\n}\n\nconst INTERNAL = Symbol('internal');\n\nfunction createHeadersIterator(target, kind) {\n\tconst iterator = Object.create(HeadersIteratorPrototype);\n\titerator[INTERNAL] = {\n\t\ttarget,\n\t\tkind,\n\t\tindex: 0\n\t};\n\treturn iterator;\n}\n\nconst HeadersIteratorPrototype = Object.setPrototypeOf({\n\tnext() {\n\t\t// istanbul ignore if\n\t\tif (!this || Object.getPrototypeOf(this) !== HeadersIteratorPrototype) {\n\t\t\tthrow new TypeError('Value of `this` is not a HeadersIterator');\n\t\t}\n\n\t\tvar _INTERNAL = this[INTERNAL];\n\t\tconst target = _INTERNAL.target,\n\t\t      kind = _INTERNAL.kind,\n\t\t      index = _INTERNAL.index;\n\n\t\tconst values = getHeaders(target, kind);\n\t\tconst len = values.length;\n\t\tif (index >= len) {\n\t\t\treturn {\n\t\t\t\tvalue: undefined,\n\t\t\t\tdone: true\n\t\t\t};\n\t\t}\n\n\t\tthis[INTERNAL].index = index + 1;\n\n\t\treturn {\n\t\t\tvalue: values[index],\n\t\t\tdone: false\n\t\t};\n\t}\n}, Object.getPrototypeOf(Object.getPrototypeOf([][Symbol.iterator]())));\n\nObject.defineProperty(HeadersIteratorPrototype, Symbol.toStringTag, {\n\tvalue: 'HeadersIterator',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\n/**\n * Export the Headers object in a form that Node.js can consume.\n *\n * @param   Headers  headers\n * @return  Object\n */\nfunction exportNodeCompatibleHeaders(headers) {\n\tconst obj = Object.assign({ __proto__: null }, headers[MAP]);\n\n\t// http.request() only supports string as Host header. This hack makes\n\t// specifying custom Host header possible.\n\tconst hostHeaderKey = find(headers[MAP], 'Host');\n\tif (hostHeaderKey !== undefined) {\n\t\tobj[hostHeaderKey] = obj[hostHeaderKey][0];\n\t}\n\n\treturn obj;\n}\n\n/**\n * Create a Headers object from an object of headers, ignoring those that do\n * not conform to HTTP grammar productions.\n *\n * @param   Object  obj  Object of headers\n * @return  Headers\n */\nfunction createHeadersLenient(obj) {\n\tconst headers = new Headers();\n\tfor (const name of Object.keys(obj)) {\n\t\tif (invalidTokenRegex.test(name)) {\n\t\t\tcontinue;\n\t\t}\n\t\tif (Array.isArray(obj[name])) {\n\t\t\tfor (const val of obj[name]) {\n\t\t\t\tif (invalidHeaderCharRegex.test(val)) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif (headers[MAP][name] === undefined) {\n\t\t\t\t\theaders[MAP][name] = [val];\n\t\t\t\t} else {\n\t\t\t\t\theaders[MAP][name].push(val);\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (!invalidHeaderCharRegex.test(obj[name])) {\n\t\t\theaders[MAP][name] = [obj[name]];\n\t\t}\n\t}\n\treturn headers;\n}\n\nconst INTERNALS$1 = Symbol('Response internals');\n\n// fix an issue where \"STATUS_CODES\" aren't a named export for node <10\nconst STATUS_CODES = http.STATUS_CODES;\n\n/**\n * Response class\n *\n * @param   Stream  body  Readable stream\n * @param   Object  opts  Response options\n * @return  Void\n */\nclass Response {\n\tconstructor() {\n\t\tlet body = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n\t\tlet opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n\t\tBody.call(this, body, opts);\n\n\t\tconst status = opts.status || 200;\n\t\tconst headers = new Headers(opts.headers);\n\n\t\tif (body != null && !headers.has('Content-Type')) {\n\t\t\tconst contentType = extractContentType(body);\n\t\t\tif (contentType) {\n\t\t\t\theaders.append('Content-Type', contentType);\n\t\t\t}\n\t\t}\n\n\t\tthis[INTERNALS$1] = {\n\t\t\turl: opts.url,\n\t\t\tstatus,\n\t\t\tstatusText: opts.statusText || STATUS_CODES[status],\n\t\t\theaders,\n\t\t\tcounter: opts.counter\n\t\t};\n\t}\n\n\tget url() {\n\t\treturn this[INTERNALS$1].url || '';\n\t}\n\n\tget status() {\n\t\treturn this[INTERNALS$1].status;\n\t}\n\n\t/**\n  * Convenience property representing if the request ended normally\n  */\n\tget ok() {\n\t\treturn this[INTERNALS$1].status >= 200 && this[INTERNALS$1].status < 300;\n\t}\n\n\tget redirected() {\n\t\treturn this[INTERNALS$1].counter > 0;\n\t}\n\n\tget statusText() {\n\t\treturn this[INTERNALS$1].statusText;\n\t}\n\n\tget headers() {\n\t\treturn this[INTERNALS$1].headers;\n\t}\n\n\t/**\n  * Clone this response\n  *\n  * @return  Response\n  */\n\tclone() {\n\t\treturn new Response(clone(this), {\n\t\t\turl: this.url,\n\t\t\tstatus: this.status,\n\t\t\tstatusText: this.statusText,\n\t\t\theaders: this.headers,\n\t\t\tok: this.ok,\n\t\t\tredirected: this.redirected\n\t\t});\n\t}\n}\n\nBody.mixIn(Response.prototype);\n\nObject.defineProperties(Response.prototype, {\n\turl: { enumerable: true },\n\tstatus: { enumerable: true },\n\tok: { enumerable: true },\n\tredirected: { enumerable: true },\n\tstatusText: { enumerable: true },\n\theaders: { enumerable: true },\n\tclone: { enumerable: true }\n});\n\nObject.defineProperty(Response.prototype, Symbol.toStringTag, {\n\tvalue: 'Response',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\nconst INTERNALS$2 = Symbol('Request internals');\nconst URL = Url.URL || whatwgUrl.URL;\n\n// fix an issue where \"format\", \"parse\" aren't a named export for node <10\nconst parse_url = Url.parse;\nconst format_url = Url.format;\n\n/**\n * Wrapper around `new URL` to handle arbitrary URLs\n *\n * @param  {string} urlStr\n * @return {void}\n */\nfunction parseURL(urlStr) {\n\t/*\n \tCheck whether the URL is absolute or not\n \t\tScheme: https://tools.ietf.org/html/rfc3986#section-3.1\n \tAbsolute URL: https://tools.ietf.org/html/rfc3986#section-4.3\n */\n\tif (/^[a-zA-Z][a-zA-Z\\d+\\-.]*:/.exec(urlStr)) {\n\t\turlStr = new URL(urlStr).toString();\n\t}\n\n\t// Fallback to old implementation for arbitrary URLs\n\treturn parse_url(urlStr);\n}\n\nconst streamDestructionSupported = 'destroy' in Stream.Readable.prototype;\n\n/**\n * Check if a value is an instance of Request.\n *\n * @param   Mixed   input\n * @return  Boolean\n */\nfunction isRequest(input) {\n\treturn typeof input === 'object' && typeof input[INTERNALS$2] === 'object';\n}\n\nfunction isAbortSignal(signal) {\n\tconst proto = signal && typeof signal === 'object' && Object.getPrototypeOf(signal);\n\treturn !!(proto && proto.constructor.name === 'AbortSignal');\n}\n\n/**\n * Request class\n *\n * @param   Mixed   input  Url or Request instance\n * @param   Object  init   Custom options\n * @return  Void\n */\nclass Request {\n\tconstructor(input) {\n\t\tlet init = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n\t\tlet parsedURL;\n\n\t\t// normalize input\n\t\tif (!isRequest(input)) {\n\t\t\tif (input && input.href) {\n\t\t\t\t// in order to support Node.js' Url objects; though WHATWG's URL objects\n\t\t\t\t// will fall into this branch also (since their `toString()` will return\n\t\t\t\t// `href` property anyway)\n\t\t\t\tparsedURL = parseURL(input.href);\n\t\t\t} else {\n\t\t\t\t// coerce input to a string before attempting to parse\n\t\t\t\tparsedURL = parseURL(`${input}`);\n\t\t\t}\n\t\t\tinput = {};\n\t\t} else {\n\t\t\tparsedURL = parseURL(input.url);\n\t\t}\n\n\t\tlet method = init.method || input.method || 'GET';\n\t\tmethod = method.toUpperCase();\n\n\t\tif ((init.body != null || isRequest(input) && input.body !== null) && (method === 'GET' || method === 'HEAD')) {\n\t\t\tthrow new TypeError('Request with GET/HEAD method cannot have body');\n\t\t}\n\n\t\tlet inputBody = init.body != null ? init.body : isRequest(input) && input.body !== null ? clone(input) : null;\n\n\t\tBody.call(this, inputBody, {\n\t\t\ttimeout: init.timeout || input.timeout || 0,\n\t\t\tsize: init.size || input.size || 0\n\t\t});\n\n\t\tconst headers = new Headers(init.headers || input.headers || {});\n\n\t\tif (inputBody != null && !headers.has('Content-Type')) {\n\t\t\tconst contentType = extractContentType(inputBody);\n\t\t\tif (contentType) {\n\t\t\t\theaders.append('Content-Type', contentType);\n\t\t\t}\n\t\t}\n\n\t\tlet signal = isRequest(input) ? input.signal : null;\n\t\tif ('signal' in init) signal = init.signal;\n\n\t\tif (signal != null && !isAbortSignal(signal)) {\n\t\t\tthrow new TypeError('Expected signal to be an instanceof AbortSignal');\n\t\t}\n\n\t\tthis[INTERNALS$2] = {\n\t\t\tmethod,\n\t\t\tredirect: init.redirect || input.redirect || 'follow',\n\t\t\theaders,\n\t\t\tparsedURL,\n\t\t\tsignal\n\t\t};\n\n\t\t// node-fetch-only options\n\t\tthis.follow = init.follow !== undefined ? init.follow : input.follow !== undefined ? input.follow : 20;\n\t\tthis.compress = init.compress !== undefined ? init.compress : input.compress !== undefined ? input.compress : true;\n\t\tthis.counter = init.counter || input.counter || 0;\n\t\tthis.agent = init.agent || input.agent;\n\t}\n\n\tget method() {\n\t\treturn this[INTERNALS$2].method;\n\t}\n\n\tget url() {\n\t\treturn format_url(this[INTERNALS$2].parsedURL);\n\t}\n\n\tget headers() {\n\t\treturn this[INTERNALS$2].headers;\n\t}\n\n\tget redirect() {\n\t\treturn this[INTERNALS$2].redirect;\n\t}\n\n\tget signal() {\n\t\treturn this[INTERNALS$2].signal;\n\t}\n\n\t/**\n  * Clone this request\n  *\n  * @return  Request\n  */\n\tclone() {\n\t\treturn new Request(this);\n\t}\n}\n\nBody.mixIn(Request.prototype);\n\nObject.defineProperty(Request.prototype, Symbol.toStringTag, {\n\tvalue: 'Request',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\nObject.defineProperties(Request.prototype, {\n\tmethod: { enumerable: true },\n\turl: { enumerable: true },\n\theaders: { enumerable: true },\n\tredirect: { enumerable: true },\n\tclone: { enumerable: true },\n\tsignal: { enumerable: true }\n});\n\n/**\n * Convert a Request to Node.js http request options.\n *\n * @param   Request  A Request instance\n * @return  Object   The options object to be passed to http.request\n */\nfunction getNodeRequestOptions(request) {\n\tconst parsedURL = request[INTERNALS$2].parsedURL;\n\tconst headers = new Headers(request[INTERNALS$2].headers);\n\n\t// fetch step 1.3\n\tif (!headers.has('Accept')) {\n\t\theaders.set('Accept', '*/*');\n\t}\n\n\t// Basic fetch\n\tif (!parsedURL.protocol || !parsedURL.hostname) {\n\t\tthrow new TypeError('Only absolute URLs are supported');\n\t}\n\n\tif (!/^https?:$/.test(parsedURL.protocol)) {\n\t\tthrow new TypeError('Only HTTP(S) protocols are supported');\n\t}\n\n\tif (request.signal && request.body instanceof Stream.Readable && !streamDestructionSupported) {\n\t\tthrow new Error('Cancellation of streamed requests with AbortSignal is not supported in node < 8');\n\t}\n\n\t// HTTP-network-or-cache fetch steps 2.4-2.7\n\tlet contentLengthValue = null;\n\tif (request.body == null && /^(POST|PUT)$/i.test(request.method)) {\n\t\tcontentLengthValue = '0';\n\t}\n\tif (request.body != null) {\n\t\tconst totalBytes = getTotalBytes(request);\n\t\tif (typeof totalBytes === 'number') {\n\t\t\tcontentLengthValue = String(totalBytes);\n\t\t}\n\t}\n\tif (contentLengthValue) {\n\t\theaders.set('Content-Length', contentLengthValue);\n\t}\n\n\t// HTTP-network-or-cache fetch step 2.11\n\tif (!headers.has('User-Agent')) {\n\t\theaders.set('User-Agent', 'node-fetch/1.0 (+https://github.com/bitinn/node-fetch)');\n\t}\n\n\t// HTTP-network-or-cache fetch step 2.15\n\tif (request.compress && !headers.has('Accept-Encoding')) {\n\t\theaders.set('Accept-Encoding', 'gzip,deflate');\n\t}\n\n\tlet agent = request.agent;\n\tif (typeof agent === 'function') {\n\t\tagent = agent(parsedURL);\n\t}\n\n\t// HTTP-network fetch step 4.2\n\t// chunked encoding is handled by Node.js\n\n\treturn Object.assign({}, parsedURL, {\n\t\tmethod: request.method,\n\t\theaders: exportNodeCompatibleHeaders(headers),\n\t\tagent\n\t});\n}\n\n/**\n * abort-error.js\n *\n * AbortError interface for cancelled requests\n */\n\n/**\n * Create AbortError instance\n *\n * @param   String      message      Error message for human\n * @return  AbortError\n */\nfunction AbortError(message) {\n  Error.call(this, message);\n\n  this.type = 'aborted';\n  this.message = message;\n\n  // hide custom error implementation details from end-users\n  Error.captureStackTrace(this, this.constructor);\n}\n\nAbortError.prototype = Object.create(Error.prototype);\nAbortError.prototype.constructor = AbortError;\nAbortError.prototype.name = 'AbortError';\n\nconst URL$1 = Url.URL || whatwgUrl.URL;\n\n// fix an issue where \"PassThrough\", \"resolve\" aren't a named export for node <10\nconst PassThrough$1 = Stream.PassThrough;\n\nconst isDomainOrSubdomain = function isDomainOrSubdomain(destination, original) {\n\tconst orig = new URL$1(original).hostname;\n\tconst dest = new URL$1(destination).hostname;\n\n\treturn orig === dest || orig[orig.length - dest.length - 1] === '.' && orig.endsWith(dest);\n};\n\n/**\n * isSameProtocol reports whether the two provided URLs use the same protocol.\n *\n * Both domains must already be in canonical form.\n * @param {string|URL} original\n * @param {string|URL} destination\n */\nconst isSameProtocol = function isSameProtocol(destination, original) {\n\tconst orig = new URL$1(original).protocol;\n\tconst dest = new URL$1(destination).protocol;\n\n\treturn orig === dest;\n};\n\n/**\n * Fetch function\n *\n * @param   Mixed    url   Absolute url or Request instance\n * @param   Object   opts  Fetch options\n * @return  Promise\n */\nfunction fetch(url, opts) {\n\n\t// allow custom promise\n\tif (!fetch.Promise) {\n\t\tthrow new Error('native promise missing, set fetch.Promise to your favorite alternative');\n\t}\n\n\tBody.Promise = fetch.Promise;\n\n\t// wrap http.request into fetch\n\treturn new fetch.Promise(function (resolve, reject) {\n\t\t// build request object\n\t\tconst request = new Request(url, opts);\n\t\tconst options = getNodeRequestOptions(request);\n\n\t\tconst send = (options.protocol === 'https:' ? https : http).request;\n\t\tconst signal = request.signal;\n\n\t\tlet response = null;\n\n\t\tconst abort = function abort() {\n\t\t\tlet error = new AbortError('The user aborted a request.');\n\t\t\treject(error);\n\t\t\tif (request.body && request.body instanceof Stream.Readable) {\n\t\t\t\tdestroyStream(request.body, error);\n\t\t\t}\n\t\t\tif (!response || !response.body) return;\n\t\t\tresponse.body.emit('error', error);\n\t\t};\n\n\t\tif (signal && signal.aborted) {\n\t\t\tabort();\n\t\t\treturn;\n\t\t}\n\n\t\tconst abortAndFinalize = function abortAndFinalize() {\n\t\t\tabort();\n\t\t\tfinalize();\n\t\t};\n\n\t\t// send request\n\t\tconst req = send(options);\n\t\tlet reqTimeout;\n\n\t\tif (signal) {\n\t\t\tsignal.addEventListener('abort', abortAndFinalize);\n\t\t}\n\n\t\tfunction finalize() {\n\t\t\treq.abort();\n\t\t\tif (signal) signal.removeEventListener('abort', abortAndFinalize);\n\t\t\tclearTimeout(reqTimeout);\n\t\t}\n\n\t\tif (request.timeout) {\n\t\t\treq.once('socket', function (socket) {\n\t\t\t\treqTimeout = setTimeout(function () {\n\t\t\t\t\treject(new FetchError(`network timeout at: ${request.url}`, 'request-timeout'));\n\t\t\t\t\tfinalize();\n\t\t\t\t}, request.timeout);\n\t\t\t});\n\t\t}\n\n\t\treq.on('error', function (err) {\n\t\t\treject(new FetchError(`request to ${request.url} failed, reason: ${err.message}`, 'system', err));\n\n\t\t\tif (response && response.body) {\n\t\t\t\tdestroyStream(response.body, err);\n\t\t\t}\n\n\t\t\tfinalize();\n\t\t});\n\n\t\tfixResponseChunkedTransferBadEnding(req, function (err) {\n\t\t\tif (signal && signal.aborted) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (response && response.body) {\n\t\t\t\tdestroyStream(response.body, err);\n\t\t\t}\n\t\t});\n\n\t\t/* c8 ignore next 18 */\n\t\tif (parseInt(process.version.substring(1)) < 14) {\n\t\t\t// Before Node.js 14, pipeline() does not fully support async iterators and does not always\n\t\t\t// properly handle when the socket close/end events are out of order.\n\t\t\treq.on('socket', function (s) {\n\t\t\t\ts.addListener('close', function (hadError) {\n\t\t\t\t\t// if a data listener is still present we didn't end cleanly\n\t\t\t\t\tconst hasDataListener = s.listenerCount('data') > 0;\n\n\t\t\t\t\t// if end happened before close but the socket didn't emit an error, do it now\n\t\t\t\t\tif (response && hasDataListener && !hadError && !(signal && signal.aborted)) {\n\t\t\t\t\t\tconst err = new Error('Premature close');\n\t\t\t\t\t\terr.code = 'ERR_STREAM_PREMATURE_CLOSE';\n\t\t\t\t\t\tresponse.body.emit('error', err);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\n\t\treq.on('response', function (res) {\n\t\t\tclearTimeout(reqTimeout);\n\n\t\t\tconst headers = createHeadersLenient(res.headers);\n\n\t\t\t// HTTP fetch step 5\n\t\t\tif (fetch.isRedirect(res.statusCode)) {\n\t\t\t\t// HTTP fetch step 5.2\n\t\t\t\tconst location = headers.get('Location');\n\n\t\t\t\t// HTTP fetch step 5.3\n\t\t\t\tlet locationURL = null;\n\t\t\t\ttry {\n\t\t\t\t\tlocationURL = location === null ? null : new URL$1(location, request.url).toString();\n\t\t\t\t} catch (err) {\n\t\t\t\t\t// error here can only be invalid URL in Location: header\n\t\t\t\t\t// do not throw when options.redirect == manual\n\t\t\t\t\t// let the user extract the errorneous redirect URL\n\t\t\t\t\tif (request.redirect !== 'manual') {\n\t\t\t\t\t\treject(new FetchError(`uri requested responds with an invalid redirect URL: ${location}`, 'invalid-redirect'));\n\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// HTTP fetch step 5.5\n\t\t\t\tswitch (request.redirect) {\n\t\t\t\t\tcase 'error':\n\t\t\t\t\t\treject(new FetchError(`uri requested responds with a redirect, redirect mode is set to error: ${request.url}`, 'no-redirect'));\n\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\treturn;\n\t\t\t\t\tcase 'manual':\n\t\t\t\t\t\t// node-fetch-specific step: make manual redirect a bit easier to use by setting the Location header value to the resolved URL.\n\t\t\t\t\t\tif (locationURL !== null) {\n\t\t\t\t\t\t\t// handle corrupted header\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\theaders.set('Location', locationURL);\n\t\t\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\t\t\t// istanbul ignore next: nodejs server prevent invalid response headers, we can't test this through normal request\n\t\t\t\t\t\t\t\treject(err);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'follow':\n\t\t\t\t\t\t// HTTP-redirect fetch step 2\n\t\t\t\t\t\tif (locationURL === null) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 5\n\t\t\t\t\t\tif (request.counter >= request.follow) {\n\t\t\t\t\t\t\treject(new FetchError(`maximum redirect reached at: ${request.url}`, 'max-redirect'));\n\t\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 6 (counter increment)\n\t\t\t\t\t\t// Create a new Request object.\n\t\t\t\t\t\tconst requestOpts = {\n\t\t\t\t\t\t\theaders: new Headers(request.headers),\n\t\t\t\t\t\t\tfollow: request.follow,\n\t\t\t\t\t\t\tcounter: request.counter + 1,\n\t\t\t\t\t\t\tagent: request.agent,\n\t\t\t\t\t\t\tcompress: request.compress,\n\t\t\t\t\t\t\tmethod: request.method,\n\t\t\t\t\t\t\tbody: request.body,\n\t\t\t\t\t\t\tsignal: request.signal,\n\t\t\t\t\t\t\ttimeout: request.timeout,\n\t\t\t\t\t\t\tsize: request.size\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tif (!isDomainOrSubdomain(request.url, locationURL) || !isSameProtocol(request.url, locationURL)) {\n\t\t\t\t\t\t\tfor (const name of ['authorization', 'www-authenticate', 'cookie', 'cookie2']) {\n\t\t\t\t\t\t\t\trequestOpts.headers.delete(name);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 9\n\t\t\t\t\t\tif (res.statusCode !== 303 && request.body && getTotalBytes(request) === null) {\n\t\t\t\t\t\t\treject(new FetchError('Cannot follow redirect with body being a readable stream', 'unsupported-redirect'));\n\t\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 11\n\t\t\t\t\t\tif (res.statusCode === 303 || (res.statusCode === 301 || res.statusCode === 302) && request.method === 'POST') {\n\t\t\t\t\t\t\trequestOpts.method = 'GET';\n\t\t\t\t\t\t\trequestOpts.body = undefined;\n\t\t\t\t\t\t\trequestOpts.headers.delete('content-length');\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 15\n\t\t\t\t\t\tresolve(fetch(new Request(locationURL, requestOpts)));\n\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// prepare response\n\t\t\tres.once('end', function () {\n\t\t\t\tif (signal) signal.removeEventListener('abort', abortAndFinalize);\n\t\t\t});\n\t\t\tlet body = res.pipe(new PassThrough$1());\n\n\t\t\tconst response_options = {\n\t\t\t\turl: request.url,\n\t\t\t\tstatus: res.statusCode,\n\t\t\t\tstatusText: res.statusMessage,\n\t\t\t\theaders: headers,\n\t\t\t\tsize: request.size,\n\t\t\t\ttimeout: request.timeout,\n\t\t\t\tcounter: request.counter\n\t\t\t};\n\n\t\t\t// HTTP-network fetch step 12.1.1.3\n\t\t\tconst codings = headers.get('Content-Encoding');\n\n\t\t\t// HTTP-network fetch step 12.1.1.4: handle content codings\n\n\t\t\t// in following scenarios we ignore compression support\n\t\t\t// 1. compression support is disabled\n\t\t\t// 2. HEAD request\n\t\t\t// 3. no Content-Encoding header\n\t\t\t// 4. no content response (204)\n\t\t\t// 5. content not modified response (304)\n\t\t\tif (!request.compress || request.method === 'HEAD' || codings === null || res.statusCode === 204 || res.statusCode === 304) {\n\t\t\t\tresponse = new Response(body, response_options);\n\t\t\t\tresolve(response);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// For Node v6+\n\t\t\t// Be less strict when decoding compressed responses, since sometimes\n\t\t\t// servers send slightly invalid responses that are still accepted\n\t\t\t// by common browsers.\n\t\t\t// Always using Z_SYNC_FLUSH is what cURL does.\n\t\t\tconst zlibOptions = {\n\t\t\t\tflush: zlib.Z_SYNC_FLUSH,\n\t\t\t\tfinishFlush: zlib.Z_SYNC_FLUSH\n\t\t\t};\n\n\t\t\t// for gzip\n\t\t\tif (codings == 'gzip' || codings == 'x-gzip') {\n\t\t\t\tbody = body.pipe(zlib.createGunzip(zlibOptions));\n\t\t\t\tresponse = new Response(body, response_options);\n\t\t\t\tresolve(response);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// for deflate\n\t\t\tif (codings == 'deflate' || codings == 'x-deflate') {\n\t\t\t\t// handle the infamous raw deflate response from old servers\n\t\t\t\t// a hack for old IIS and Apache servers\n\t\t\t\tconst raw = res.pipe(new PassThrough$1());\n\t\t\t\traw.once('data', function (chunk) {\n\t\t\t\t\t// see http://stackoverflow.com/questions/37519828\n\t\t\t\t\tif ((chunk[0] & 0x0F) === 0x08) {\n\t\t\t\t\t\tbody = body.pipe(zlib.createInflate());\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbody = body.pipe(zlib.createInflateRaw());\n\t\t\t\t\t}\n\t\t\t\t\tresponse = new Response(body, response_options);\n\t\t\t\t\tresolve(response);\n\t\t\t\t});\n\t\t\t\traw.on('end', function () {\n\t\t\t\t\t// some old IIS servers return zero-length OK deflate responses, so 'data' is never emitted.\n\t\t\t\t\tif (!response) {\n\t\t\t\t\t\tresponse = new Response(body, response_options);\n\t\t\t\t\t\tresolve(response);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// for br\n\t\t\tif (codings == 'br' && typeof zlib.createBrotliDecompress === 'function') {\n\t\t\t\tbody = body.pipe(zlib.createBrotliDecompress());\n\t\t\t\tresponse = new Response(body, response_options);\n\t\t\t\tresolve(response);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// otherwise, use response as-is\n\t\t\tresponse = new Response(body, response_options);\n\t\t\tresolve(response);\n\t\t});\n\n\t\twriteToStream(req, request);\n\t});\n}\nfunction fixResponseChunkedTransferBadEnding(request, errorCallback) {\n\tlet socket;\n\n\trequest.on('socket', function (s) {\n\t\tsocket = s;\n\t});\n\n\trequest.on('response', function (response) {\n\t\tconst headers = response.headers;\n\n\t\tif (headers['transfer-encoding'] === 'chunked' && !headers['content-length']) {\n\t\t\tresponse.once('close', function (hadError) {\n\t\t\t\t// tests for socket presence, as in some situations the\n\t\t\t\t// the 'socket' event is not triggered for the request\n\t\t\t\t// (happens in deno), avoids `TypeError`\n\t\t\t\t// if a data listener is still present we didn't end cleanly\n\t\t\t\tconst hasDataListener = socket && socket.listenerCount('data') > 0;\n\n\t\t\t\tif (hasDataListener && !hadError) {\n\t\t\t\t\tconst err = new Error('Premature close');\n\t\t\t\t\terr.code = 'ERR_STREAM_PREMATURE_CLOSE';\n\t\t\t\t\terrorCallback(err);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t});\n}\n\nfunction destroyStream(stream, err) {\n\tif (stream.destroy) {\n\t\tstream.destroy(err);\n\t} else {\n\t\t// node < 8\n\t\tstream.emit('error', err);\n\t\tstream.end();\n\t}\n}\n\n/**\n * Redirect code matching\n *\n * @param   Number   code  Status code\n * @return  Boolean\n */\nfetch.isRedirect = function (code) {\n\treturn code === 301 || code === 302 || code === 303 || code === 307 || code === 308;\n};\n\n// expose Promise\nfetch.Promise = global.Promise;\n\nexport default fetch;\nexport { Headers, Request, Response, FetchError, AbortError };\n","\"use strict\";\n\nvar realFetch = require('node-fetch');\nmodule.exports = function(url, options) {\n\tif (/^\\/\\//.test(url)) {\n\t\turl = 'https:' + url;\n\t}\n\treturn realFetch.call(this, url, options);\n};\n\nif (!global.fetch) {\n\tglobal.fetch = module.exports;\n\tglobal.Response = realFetch.Response;\n\tglobal.Headers = realFetch.Headers;\n\tglobal.Request = realFetch.Request;\n}\n","export abstract class _CodeOrName {\n  abstract readonly str: string\n  abstract readonly names: UsedNames\n  abstract toString(): string\n  abstract emptyStr(): boolean\n}\n\nexport const IDENTIFIER = /^[a-z$_][a-z$_0-9]*$/i\n\nexport class Name extends _CodeOrName {\n  readonly str: string\n  constructor(s: string) {\n    super()\n    if (!IDENTIFIER.test(s)) throw new Error(\"CodeGen: name must be a valid identifier\")\n    this.str = s\n  }\n\n  toString(): string {\n    return this.str\n  }\n\n  emptyStr(): boolean {\n    return false\n  }\n\n  get names(): UsedNames {\n    return {[this.str]: 1}\n  }\n}\n\nexport class _Code extends _CodeOrName {\n  readonly _items: readonly CodeItem[]\n  private _str?: string\n  private _names?: UsedNames\n\n  constructor(code: string | readonly CodeItem[]) {\n    super()\n    this._items = typeof code === \"string\" ? [code] : code\n  }\n\n  toString(): string {\n    return this.str\n  }\n\n  emptyStr(): boolean {\n    if (this._items.length > 1) return false\n    const item = this._items[0]\n    return item === \"\" || item === '\"\"'\n  }\n\n  get str(): string {\n    return (this._str ??= this._items.reduce((s: string, c: CodeItem) => `${s}${c}`, \"\"))\n  }\n\n  get names(): UsedNames {\n    return (this._names ??= this._items.reduce((names: UsedNames, c) => {\n      if (c instanceof Name) names[c.str] = (names[c.str] || 0) + 1\n      return names\n    }, {}))\n  }\n}\n\nexport type CodeItem = Name | string | number | boolean | null\n\nexport type UsedNames = Record<string, number | undefined>\n\nexport type Code = _Code | Name\n\nexport type SafeExpr = Code | number | boolean | null\n\nexport const nil = new _Code(\"\")\n\ntype CodeArg = SafeExpr | string | undefined\n\nexport function _(strs: TemplateStringsArray, ...args: CodeArg[]): _Code {\n  const code: CodeItem[] = [strs[0]]\n  let i = 0\n  while (i < args.length) {\n    addCodeArg(code, args[i])\n    code.push(strs[++i])\n  }\n  return new _Code(code)\n}\n\nconst plus = new _Code(\"+\")\n\nexport function str(strs: TemplateStringsArray, ...args: (CodeArg | string[])[]): _Code {\n  const expr: CodeItem[] = [safeStringify(strs[0])]\n  let i = 0\n  while (i < args.length) {\n    expr.push(plus)\n    addCodeArg(expr, args[i])\n    expr.push(plus, safeStringify(strs[++i]))\n  }\n  optimize(expr)\n  return new _Code(expr)\n}\n\nexport function addCodeArg(code: CodeItem[], arg: CodeArg | string[]): void {\n  if (arg instanceof _Code) code.push(...arg._items)\n  else if (arg instanceof Name) code.push(arg)\n  else code.push(interpolate(arg))\n}\n\nfunction optimize(expr: CodeItem[]): void {\n  let i = 1\n  while (i < expr.length - 1) {\n    if (expr[i] === plus) {\n      const res = mergeExprItems(expr[i - 1], expr[i + 1])\n      if (res !== undefined) {\n        expr.splice(i - 1, 3, res)\n        continue\n      }\n      expr[i++] = \"+\"\n    }\n    i++\n  }\n}\n\nfunction mergeExprItems(a: CodeItem, b: CodeItem): CodeItem | undefined {\n  if (b === '\"\"') return a\n  if (a === '\"\"') return b\n  if (typeof a == \"string\") {\n    if (b instanceof Name || a[a.length - 1] !== '\"') return\n    if (typeof b != \"string\") return `${a.slice(0, -1)}${b}\"`\n    if (b[0] === '\"') return a.slice(0, -1) + b.slice(1)\n    return\n  }\n  if (typeof b == \"string\" && b[0] === '\"' && !(a instanceof Name)) return `\"${a}${b.slice(1)}`\n  return\n}\n\nexport function strConcat(c1: Code, c2: Code): Code {\n  return c2.emptyStr() ? c1 : c1.emptyStr() ? c2 : str`${c1}${c2}`\n}\n\n// TODO do not allow arrays here\nfunction interpolate(x?: string | string[] | number | boolean | null): SafeExpr | string {\n  return typeof x == \"number\" || typeof x == \"boolean\" || x === null\n    ? x\n    : safeStringify(Array.isArray(x) ? x.join(\",\") : x)\n}\n\nexport function stringify(x: unknown): Code {\n  return new _Code(safeStringify(x))\n}\n\nexport function safeStringify(x: unknown): string {\n  return JSON.stringify(x)\n    .replace(/\\u2028/g, \"\\\\u2028\")\n    .replace(/\\u2029/g, \"\\\\u2029\")\n}\n\nexport function getProperty(key: Code | string | number): Code {\n  return typeof key == \"string\" && IDENTIFIER.test(key) ? new _Code(`.${key}`) : _`[${key}]`\n}\n\n//Does best effort to format the name properly\nexport function getEsmExportName(key: Code | string | number): Code {\n  if (typeof key == \"string\" && IDENTIFIER.test(key)) {\n    return new _Code(`${key}`)\n  }\n  throw new Error(`CodeGen: invalid export name: ${key}, use explicit $id name mapping`)\n}\n\nexport function regexpCode(rx: RegExp): Code {\n  return new _Code(rx.toString())\n}\n","import {_, nil, Code, Name} from \"./code\"\n\ninterface NameGroup {\n  prefix: string\n  index: number\n}\n\nexport interface NameValue {\n  ref: ValueReference // this is the reference to any value that can be referred to from generated code via `globals` var in the closure\n  key?: unknown // any key to identify a global to avoid duplicates, if not passed ref is used\n  code?: Code // this is the code creating the value needed for standalone code wit_out closure - can be a primitive value, function or import (`require`)\n}\n\nexport type ValueReference = unknown // possibly make CodeGen parameterized type on this type\n\nclass ValueError extends Error {\n  readonly value?: NameValue\n  constructor(name: ValueScopeName) {\n    super(`CodeGen: \"code\" for ${name} not defined`)\n    this.value = name.value\n  }\n}\n\ninterface ScopeOptions {\n  prefixes?: Set<string>\n  parent?: Scope\n}\n\ninterface ValueScopeOptions extends ScopeOptions {\n  scope: ScopeStore\n  es5?: boolean\n  lines?: boolean\n}\n\nexport type ScopeStore = Record<string, ValueReference[] | undefined>\n\ntype ScopeValues = {\n  [Prefix in string]?: Map<unknown, ValueScopeName>\n}\n\nexport type ScopeValueSets = {\n  [Prefix in string]?: Set<ValueScopeName>\n}\n\nexport enum UsedValueState {\n  Started,\n  Completed,\n}\n\nexport type UsedScopeValues = {\n  [Prefix in string]?: Map<ValueScopeName, UsedValueState | undefined>\n}\n\nexport const varKinds = {\n  const: new Name(\"const\"),\n  let: new Name(\"let\"),\n  var: new Name(\"var\"),\n}\n\nexport class Scope {\n  protected readonly _names: {[Prefix in string]?: NameGroup} = {}\n  protected readonly _prefixes?: Set<string>\n  protected readonly _parent?: Scope\n\n  constructor({prefixes, parent}: ScopeOptions = {}) {\n    this._prefixes = prefixes\n    this._parent = parent\n  }\n\n  toName(nameOrPrefix: Name | string): Name {\n    return nameOrPrefix instanceof Name ? nameOrPrefix : this.name(nameOrPrefix)\n  }\n\n  name(prefix: string): Name {\n    return new Name(this._newName(prefix))\n  }\n\n  protected _newName(prefix: string): string {\n    const ng = this._names[prefix] || this._nameGroup(prefix)\n    return `${prefix}${ng.index++}`\n  }\n\n  private _nameGroup(prefix: string): NameGroup {\n    if (this._parent?._prefixes?.has(prefix) || (this._prefixes && !this._prefixes.has(prefix))) {\n      throw new Error(`CodeGen: prefix \"${prefix}\" is not allowed in this scope`)\n    }\n    return (this._names[prefix] = {prefix, index: 0})\n  }\n}\n\ninterface ScopePath {\n  property: string\n  itemIndex: number\n}\n\nexport class ValueScopeName extends Name {\n  readonly prefix: string\n  value?: NameValue\n  scopePath?: Code\n\n  constructor(prefix: string, nameStr: string) {\n    super(nameStr)\n    this.prefix = prefix\n  }\n\n  setValue(value: NameValue, {property, itemIndex}: ScopePath): void {\n    this.value = value\n    this.scopePath = _`.${new Name(property)}[${itemIndex}]`\n  }\n}\n\ninterface VSOptions extends ValueScopeOptions {\n  _n: Code\n}\n\nconst line = _`\\n`\n\nexport class ValueScope extends Scope {\n  protected readonly _values: ScopeValues = {}\n  protected readonly _scope: ScopeStore\n  readonly opts: VSOptions\n\n  constructor(opts: ValueScopeOptions) {\n    super(opts)\n    this._scope = opts.scope\n    this.opts = {...opts, _n: opts.lines ? line : nil}\n  }\n\n  get(): ScopeStore {\n    return this._scope\n  }\n\n  name(prefix: string): ValueScopeName {\n    return new ValueScopeName(prefix, this._newName(prefix))\n  }\n\n  value(nameOrPrefix: ValueScopeName | string, value: NameValue): ValueScopeName {\n    if (value.ref === undefined) throw new Error(\"CodeGen: ref must be passed in value\")\n    const name = this.toName(nameOrPrefix) as ValueScopeName\n    const {prefix} = name\n    const valueKey = value.key ?? value.ref\n    let vs = this._values[prefix]\n    if (vs) {\n      const _name = vs.get(valueKey)\n      if (_name) return _name\n    } else {\n      vs = this._values[prefix] = new Map()\n    }\n    vs.set(valueKey, name)\n\n    const s = this._scope[prefix] || (this._scope[prefix] = [])\n    const itemIndex = s.length\n    s[itemIndex] = value.ref\n    name.setValue(value, {property: prefix, itemIndex})\n    return name\n  }\n\n  getValue(prefix: string, keyOrRef: unknown): ValueScopeName | undefined {\n    const vs = this._values[prefix]\n    if (!vs) return\n    return vs.get(keyOrRef)\n  }\n\n  scopeRefs(scopeName: Name, values: ScopeValues | ScopeValueSets = this._values): Code {\n    return this._reduceValues(values, (name: ValueScopeName) => {\n      if (name.scopePath === undefined) throw new Error(`CodeGen: name \"${name}\" has no value`)\n      return _`${scopeName}${name.scopePath}`\n    })\n  }\n\n  scopeCode(\n    values: ScopeValues | ScopeValueSets = this._values,\n    usedValues?: UsedScopeValues,\n    getCode?: (n: ValueScopeName) => Code | undefined\n  ): Code {\n    return this._reduceValues(\n      values,\n      (name: ValueScopeName) => {\n        if (name.value === undefined) throw new Error(`CodeGen: name \"${name}\" has no value`)\n        return name.value.code\n      },\n      usedValues,\n      getCode\n    )\n  }\n\n  private _reduceValues(\n    values: ScopeValues | ScopeValueSets,\n    valueCode: (n: ValueScopeName) => Code | undefined,\n    usedValues: UsedScopeValues = {},\n    getCode?: (n: ValueScopeName) => Code | undefined\n  ): Code {\n    let code: Code = nil\n    for (const prefix in values) {\n      const vs = values[prefix]\n      if (!vs) continue\n      const nameSet = (usedValues[prefix] = usedValues[prefix] || new Map())\n      vs.forEach((name: ValueScopeName) => {\n        if (nameSet.has(name)) return\n        nameSet.set(name, UsedValueState.Started)\n        let c = valueCode(name)\n        if (c) {\n          const def = this.opts.es5 ? varKinds.var : varKinds.const\n          code = _`${code}${def} ${name} = ${c};${this.opts._n}`\n        } else if ((c = getCode?.(name))) {\n          code = _`${code}${c}${this.opts._n}`\n        } else {\n          throw new ValueError(name)\n        }\n        nameSet.set(name, UsedValueState.Completed)\n      })\n    }\n    return code\n  }\n}\n","import type {ScopeValueSets, NameValue, ValueScope, ValueScopeName} from \"./scope\"\nimport {_, nil, _Code, Code, Name, UsedNames, CodeItem, addCodeArg, _CodeOrName} from \"./code\"\nimport {Scope, varKinds} from \"./scope\"\n\nexport {_, str, strConcat, nil, getProperty, stringify, regexpCode, Name, Code} from \"./code\"\nexport {Scope, ScopeStore, ValueScope, ValueScopeName, ScopeValueSets, varKinds} from \"./scope\"\n\n// type for expressions that can be safely inserted in code without quotes\nexport type SafeExpr = Code | number | boolean | null\n\n// type that is either Code of function that adds code to CodeGen instance using its methods\nexport type Block = Code | (() => void)\n\nexport const operators = {\n  GT: new _Code(\">\"),\n  GTE: new _Code(\">=\"),\n  LT: new _Code(\"<\"),\n  LTE: new _Code(\"<=\"),\n  EQ: new _Code(\"===\"),\n  NEQ: new _Code(\"!==\"),\n  NOT: new _Code(\"!\"),\n  OR: new _Code(\"||\"),\n  AND: new _Code(\"&&\"),\n  ADD: new _Code(\"+\"),\n}\n\nabstract class Node {\n  abstract readonly names: UsedNames\n\n  optimizeNodes(): this | ChildNode | ChildNode[] | undefined {\n    return this\n  }\n\n  optimizeNames(_names: UsedNames, _constants: Constants): this | undefined {\n    return this\n  }\n\n  // get count(): number {\n  //   return 1\n  // }\n}\n\nclass Def extends Node {\n  constructor(\n    private readonly varKind: Name,\n    private readonly name: Name,\n    private rhs?: SafeExpr\n  ) {\n    super()\n  }\n\n  render({es5, _n}: CGOptions): string {\n    const varKind = es5 ? varKinds.var : this.varKind\n    const rhs = this.rhs === undefined ? \"\" : ` = ${this.rhs}`\n    return `${varKind} ${this.name}${rhs};` + _n\n  }\n\n  optimizeNames(names: UsedNames, constants: Constants): this | undefined {\n    if (!names[this.name.str]) return\n    if (this.rhs) this.rhs = optimizeExpr(this.rhs, names, constants)\n    return this\n  }\n\n  get names(): UsedNames {\n    return this.rhs instanceof _CodeOrName ? this.rhs.names : {}\n  }\n}\n\nclass Assign extends Node {\n  constructor(\n    readonly lhs: Code,\n    public rhs: SafeExpr,\n    private readonly sideEffects?: boolean\n  ) {\n    super()\n  }\n\n  render({_n}: CGOptions): string {\n    return `${this.lhs} = ${this.rhs};` + _n\n  }\n\n  optimizeNames(names: UsedNames, constants: Constants): this | undefined {\n    if (this.lhs instanceof Name && !names[this.lhs.str] && !this.sideEffects) return\n    this.rhs = optimizeExpr(this.rhs, names, constants)\n    return this\n  }\n\n  get names(): UsedNames {\n    const names = this.lhs instanceof Name ? {} : {...this.lhs.names}\n    return addExprNames(names, this.rhs)\n  }\n}\n\nclass AssignOp extends Assign {\n  constructor(\n    lhs: Code,\n    private readonly op: Code,\n    rhs: SafeExpr,\n    sideEffects?: boolean\n  ) {\n    super(lhs, rhs, sideEffects)\n  }\n\n  render({_n}: CGOptions): string {\n    return `${this.lhs} ${this.op}= ${this.rhs};` + _n\n  }\n}\n\nclass Label extends Node {\n  readonly names: UsedNames = {}\n  constructor(readonly label: Name) {\n    super()\n  }\n\n  render({_n}: CGOptions): string {\n    return `${this.label}:` + _n\n  }\n}\n\nclass Break extends Node {\n  readonly names: UsedNames = {}\n  constructor(readonly label?: Code) {\n    super()\n  }\n\n  render({_n}: CGOptions): string {\n    const label = this.label ? ` ${this.label}` : \"\"\n    return `break${label};` + _n\n  }\n}\n\nclass Throw extends Node {\n  constructor(readonly error: Code) {\n    super()\n  }\n\n  render({_n}: CGOptions): string {\n    return `throw ${this.error};` + _n\n  }\n\n  get names(): UsedNames {\n    return this.error.names\n  }\n}\n\nclass AnyCode extends Node {\n  constructor(private code: SafeExpr) {\n    super()\n  }\n\n  render({_n}: CGOptions): string {\n    return `${this.code};` + _n\n  }\n\n  optimizeNodes(): this | undefined {\n    return `${this.code}` ? this : undefined\n  }\n\n  optimizeNames(names: UsedNames, constants: Constants): this {\n    this.code = optimizeExpr(this.code, names, constants)\n    return this\n  }\n\n  get names(): UsedNames {\n    return this.code instanceof _CodeOrName ? this.code.names : {}\n  }\n}\n\nabstract class ParentNode extends Node {\n  constructor(readonly nodes: ChildNode[] = []) {\n    super()\n  }\n\n  render(opts: CGOptions): string {\n    return this.nodes.reduce((code, n) => code + n.render(opts), \"\")\n  }\n\n  optimizeNodes(): this | ChildNode | ChildNode[] | undefined {\n    const {nodes} = this\n    let i = nodes.length\n    while (i--) {\n      const n = nodes[i].optimizeNodes()\n      if (Array.isArray(n)) nodes.splice(i, 1, ...n)\n      else if (n) nodes[i] = n\n      else nodes.splice(i, 1)\n    }\n    return nodes.length > 0 ? this : undefined\n  }\n\n  optimizeNames(names: UsedNames, constants: Constants): this | undefined {\n    const {nodes} = this\n    let i = nodes.length\n    while (i--) {\n      // iterating backwards improves 1-pass optimization\n      const n = nodes[i]\n      if (n.optimizeNames(names, constants)) continue\n      subtractNames(names, n.names)\n      nodes.splice(i, 1)\n    }\n    return nodes.length > 0 ? this : undefined\n  }\n\n  get names(): UsedNames {\n    return this.nodes.reduce((names: UsedNames, n) => addNames(names, n.names), {})\n  }\n\n  // get count(): number {\n  //   return this.nodes.reduce((c, n) => c + n.count, 1)\n  // }\n}\n\nabstract class BlockNode extends ParentNode {\n  render(opts: CGOptions): string {\n    return \"{\" + opts._n + super.render(opts) + \"}\" + opts._n\n  }\n}\n\nclass Root extends ParentNode {}\n\nclass Else extends BlockNode {\n  static readonly kind = \"else\"\n}\n\nclass If extends BlockNode {\n  static readonly kind = \"if\"\n  else?: If | Else\n  constructor(\n    private condition: Code | boolean,\n    nodes?: ChildNode[]\n  ) {\n    super(nodes)\n  }\n\n  render(opts: CGOptions): string {\n    let code = `if(${this.condition})` + super.render(opts)\n    if (this.else) code += \"else \" + this.else.render(opts)\n    return code\n  }\n\n  optimizeNodes(): If | ChildNode[] | undefined {\n    super.optimizeNodes()\n    const cond = this.condition\n    if (cond === true) return this.nodes // else is ignored here\n    let e = this.else\n    if (e) {\n      const ns = e.optimizeNodes()\n      e = this.else = Array.isArray(ns) ? new Else(ns) : (ns as Else | undefined)\n    }\n    if (e) {\n      if (cond === false) return e instanceof If ? e : e.nodes\n      if (this.nodes.length) return this\n      return new If(not(cond), e instanceof If ? [e] : e.nodes)\n    }\n    if (cond === false || !this.nodes.length) return undefined\n    return this\n  }\n\n  optimizeNames(names: UsedNames, constants: Constants): this | undefined {\n    this.else = this.else?.optimizeNames(names, constants)\n    if (!(super.optimizeNames(names, constants) || this.else)) return\n    this.condition = optimizeExpr(this.condition, names, constants)\n    return this\n  }\n\n  get names(): UsedNames {\n    const names = super.names\n    addExprNames(names, this.condition)\n    if (this.else) addNames(names, this.else.names)\n    return names\n  }\n\n  // get count(): number {\n  //   return super.count + (this.else?.count || 0)\n  // }\n}\n\nabstract class For extends BlockNode {\n  static readonly kind = \"for\"\n}\n\nclass ForLoop extends For {\n  constructor(private iteration: Code) {\n    super()\n  }\n\n  render(opts: CGOptions): string {\n    return `for(${this.iteration})` + super.render(opts)\n  }\n\n  optimizeNames(names: UsedNames, constants: Constants): this | undefined {\n    if (!super.optimizeNames(names, constants)) return\n    this.iteration = optimizeExpr(this.iteration, names, constants)\n    return this\n  }\n\n  get names(): UsedNames {\n    return addNames(super.names, this.iteration.names)\n  }\n}\n\nclass ForRange extends For {\n  constructor(\n    private readonly varKind: Name,\n    private readonly name: Name,\n    private readonly from: SafeExpr,\n    private readonly to: SafeExpr\n  ) {\n    super()\n  }\n\n  render(opts: CGOptions): string {\n    const varKind = opts.es5 ? varKinds.var : this.varKind\n    const {name, from, to} = this\n    return `for(${varKind} ${name}=${from}; ${name}<${to}; ${name}++)` + super.render(opts)\n  }\n\n  get names(): UsedNames {\n    const names = addExprNames(super.names, this.from)\n    return addExprNames(names, this.to)\n  }\n}\n\nclass ForIter extends For {\n  constructor(\n    private readonly loop: \"of\" | \"in\",\n    private readonly varKind: Name,\n    private readonly name: Name,\n    private iterable: Code\n  ) {\n    super()\n  }\n\n  render(opts: CGOptions): string {\n    return `for(${this.varKind} ${this.name} ${this.loop} ${this.iterable})` + super.render(opts)\n  }\n\n  optimizeNames(names: UsedNames, constants: Constants): this | undefined {\n    if (!super.optimizeNames(names, constants)) return\n    this.iterable = optimizeExpr(this.iterable, names, constants)\n    return this\n  }\n\n  get names(): UsedNames {\n    return addNames(super.names, this.iterable.names)\n  }\n}\n\nclass Func extends BlockNode {\n  static readonly kind = \"func\"\n  constructor(\n    public name: Name,\n    public args: Code,\n    public async?: boolean\n  ) {\n    super()\n  }\n\n  render(opts: CGOptions): string {\n    const _async = this.async ? \"async \" : \"\"\n    return `${_async}function ${this.name}(${this.args})` + super.render(opts)\n  }\n}\n\nclass Return extends ParentNode {\n  static readonly kind = \"return\"\n\n  render(opts: CGOptions): string {\n    return \"return \" + super.render(opts)\n  }\n}\n\nclass Try extends BlockNode {\n  catch?: Catch\n  finally?: Finally\n\n  render(opts: CGOptions): string {\n    let code = \"try\" + super.render(opts)\n    if (this.catch) code += this.catch.render(opts)\n    if (this.finally) code += this.finally.render(opts)\n    return code\n  }\n\n  optimizeNodes(): this {\n    super.optimizeNodes()\n    this.catch?.optimizeNodes() as Catch | undefined\n    this.finally?.optimizeNodes() as Finally | undefined\n    return this\n  }\n\n  optimizeNames(names: UsedNames, constants: Constants): this {\n    super.optimizeNames(names, constants)\n    this.catch?.optimizeNames(names, constants)\n    this.finally?.optimizeNames(names, constants)\n    return this\n  }\n\n  get names(): UsedNames {\n    const names = super.names\n    if (this.catch) addNames(names, this.catch.names)\n    if (this.finally) addNames(names, this.finally.names)\n    return names\n  }\n\n  // get count(): number {\n  //   return super.count + (this.catch?.count || 0) + (this.finally?.count || 0)\n  // }\n}\n\nclass Catch extends BlockNode {\n  static readonly kind = \"catch\"\n  constructor(readonly error: Name) {\n    super()\n  }\n\n  render(opts: CGOptions): string {\n    return `catch(${this.error})` + super.render(opts)\n  }\n}\n\nclass Finally extends BlockNode {\n  static readonly kind = \"finally\"\n  render(opts: CGOptions): string {\n    return \"finally\" + super.render(opts)\n  }\n}\n\ntype StartBlockNode = If | For | Func | Return | Try\n\ntype LeafNode = Def | Assign | Label | Break | Throw | AnyCode\n\ntype ChildNode = StartBlockNode | LeafNode\n\ntype EndBlockNodeType =\n  | typeof If\n  | typeof Else\n  | typeof For\n  | typeof Func\n  | typeof Return\n  | typeof Catch\n  | typeof Finally\n\ntype Constants = Record<string, SafeExpr | undefined>\n\nexport interface CodeGenOptions {\n  es5?: boolean\n  lines?: boolean\n  ownProperties?: boolean\n}\n\ninterface CGOptions extends CodeGenOptions {\n  _n: \"\\n\" | \"\"\n}\n\nexport class CodeGen {\n  readonly _scope: Scope\n  readonly _extScope: ValueScope\n  readonly _values: ScopeValueSets = {}\n  private readonly _nodes: ParentNode[]\n  private readonly _blockStarts: number[] = []\n  private readonly _constants: Constants = {}\n  private readonly opts: CGOptions\n\n  constructor(extScope: ValueScope, opts: CodeGenOptions = {}) {\n    this.opts = {...opts, _n: opts.lines ? \"\\n\" : \"\"}\n    this._extScope = extScope\n    this._scope = new Scope({parent: extScope})\n    this._nodes = [new Root()]\n  }\n\n  toString(): string {\n    return this._root.render(this.opts)\n  }\n\n  // returns unique name in the internal scope\n  name(prefix: string): Name {\n    return this._scope.name(prefix)\n  }\n\n  // reserves unique name in the external scope\n  scopeName(prefix: string): ValueScopeName {\n    return this._extScope.name(prefix)\n  }\n\n  // reserves unique name in the external scope and assigns value to it\n  scopeValue(prefixOrName: ValueScopeName | string, value: NameValue): Name {\n    const name = this._extScope.value(prefixOrName, value)\n    const vs = this._values[name.prefix] || (this._values[name.prefix] = new Set())\n    vs.add(name)\n    return name\n  }\n\n  getScopeValue(prefix: string, keyOrRef: unknown): ValueScopeName | undefined {\n    return this._extScope.getValue(prefix, keyOrRef)\n  }\n\n  // return code that assigns values in the external scope to the names that are used internally\n  // (same names that were returned by gen.scopeName or gen.scopeValue)\n  scopeRefs(scopeName: Name): Code {\n    return this._extScope.scopeRefs(scopeName, this._values)\n  }\n\n  scopeCode(): Code {\n    return this._extScope.scopeCode(this._values)\n  }\n\n  private _def(\n    varKind: Name,\n    nameOrPrefix: Name | string,\n    rhs?: SafeExpr,\n    constant?: boolean\n  ): Name {\n    const name = this._scope.toName(nameOrPrefix)\n    if (rhs !== undefined && constant) this._constants[name.str] = rhs\n    this._leafNode(new Def(varKind, name, rhs))\n    return name\n  }\n\n  // `const` declaration (`var` in es5 mode)\n  const(nameOrPrefix: Name | string, rhs: SafeExpr, _constant?: boolean): Name {\n    return this._def(varKinds.const, nameOrPrefix, rhs, _constant)\n  }\n\n  // `let` declaration with optional assignment (`var` in es5 mode)\n  let(nameOrPrefix: Name | string, rhs?: SafeExpr, _constant?: boolean): Name {\n    return this._def(varKinds.let, nameOrPrefix, rhs, _constant)\n  }\n\n  // `var` declaration with optional assignment\n  var(nameOrPrefix: Name | string, rhs?: SafeExpr, _constant?: boolean): Name {\n    return this._def(varKinds.var, nameOrPrefix, rhs, _constant)\n  }\n\n  // assignment code\n  assign(lhs: Code, rhs: SafeExpr, sideEffects?: boolean): CodeGen {\n    return this._leafNode(new Assign(lhs, rhs, sideEffects))\n  }\n\n  // `+=` code\n  add(lhs: Code, rhs: SafeExpr): CodeGen {\n    return this._leafNode(new AssignOp(lhs, operators.ADD, rhs))\n  }\n\n  // appends passed SafeExpr to code or executes Block\n  code(c: Block | SafeExpr): CodeGen {\n    if (typeof c == \"function\") c()\n    else if (c !== nil) this._leafNode(new AnyCode(c))\n    return this\n  }\n\n  // returns code for object literal for the passed argument list of key-value pairs\n  object(...keyValues: [Name | string, SafeExpr | string][]): _Code {\n    const code: CodeItem[] = [\"{\"]\n    for (const [key, value] of keyValues) {\n      if (code.length > 1) code.push(\",\")\n      code.push(key)\n      if (key !== value || this.opts.es5) {\n        code.push(\":\")\n        addCodeArg(code, value)\n      }\n    }\n    code.push(\"}\")\n    return new _Code(code)\n  }\n\n  // `if` clause (or statement if `thenBody` and, optionally, `elseBody` are passed)\n  if(condition: Code | boolean, thenBody?: Block, elseBody?: Block): CodeGen {\n    this._blockNode(new If(condition))\n\n    if (thenBody && elseBody) {\n      this.code(thenBody).else().code(elseBody).endIf()\n    } else if (thenBody) {\n      this.code(thenBody).endIf()\n    } else if (elseBody) {\n      throw new Error('CodeGen: \"else\" body without \"then\" body')\n    }\n    return this\n  }\n\n  // `else if` clause - invalid without `if` or after `else` clauses\n  elseIf(condition: Code | boolean): CodeGen {\n    return this._elseNode(new If(condition))\n  }\n\n  // `else` clause - only valid after `if` or `else if` clauses\n  else(): CodeGen {\n    return this._elseNode(new Else())\n  }\n\n  // end `if` statement (needed if gen.if was used only with condition)\n  endIf(): CodeGen {\n    return this._endBlockNode(If, Else)\n  }\n\n  private _for(node: For, forBody?: Block): CodeGen {\n    this._blockNode(node)\n    if (forBody) this.code(forBody).endFor()\n    return this\n  }\n\n  // a generic `for` clause (or statement if `forBody` is passed)\n  for(iteration: Code, forBody?: Block): CodeGen {\n    return this._for(new ForLoop(iteration), forBody)\n  }\n\n  // `for` statement for a range of values\n  forRange(\n    nameOrPrefix: Name | string,\n    from: SafeExpr,\n    to: SafeExpr,\n    forBody: (index: Name) => void,\n    varKind: Code = this.opts.es5 ? varKinds.var : varKinds.let\n  ): CodeGen {\n    const name = this._scope.toName(nameOrPrefix)\n    return this._for(new ForRange(varKind, name, from, to), () => forBody(name))\n  }\n\n  // `for-of` statement (in es5 mode replace with a normal for loop)\n  forOf(\n    nameOrPrefix: Name | string,\n    iterable: Code,\n    forBody: (item: Name) => void,\n    varKind: Code = varKinds.const\n  ): CodeGen {\n    const name = this._scope.toName(nameOrPrefix)\n    if (this.opts.es5) {\n      const arr = iterable instanceof Name ? iterable : this.var(\"_arr\", iterable)\n      return this.forRange(\"_i\", 0, _`${arr}.length`, (i) => {\n        this.var(name, _`${arr}[${i}]`)\n        forBody(name)\n      })\n    }\n    return this._for(new ForIter(\"of\", varKind, name, iterable), () => forBody(name))\n  }\n\n  // `for-in` statement.\n  // With option `ownProperties` replaced with a `for-of` loop for object keys\n  forIn(\n    nameOrPrefix: Name | string,\n    obj: Code,\n    forBody: (item: Name) => void,\n    varKind: Code = this.opts.es5 ? varKinds.var : varKinds.const\n  ): CodeGen {\n    if (this.opts.ownProperties) {\n      return this.forOf(nameOrPrefix, _`Object.keys(${obj})`, forBody)\n    }\n    const name = this._scope.toName(nameOrPrefix)\n    return this._for(new ForIter(\"in\", varKind, name, obj), () => forBody(name))\n  }\n\n  // end `for` loop\n  endFor(): CodeGen {\n    return this._endBlockNode(For)\n  }\n\n  // `label` statement\n  label(label: Name): CodeGen {\n    return this._leafNode(new Label(label))\n  }\n\n  // `break` statement\n  break(label?: Code): CodeGen {\n    return this._leafNode(new Break(label))\n  }\n\n  // `return` statement\n  return(value: Block | SafeExpr): CodeGen {\n    const node = new Return()\n    this._blockNode(node)\n    this.code(value)\n    if (node.nodes.length !== 1) throw new Error('CodeGen: \"return\" should have one node')\n    return this._endBlockNode(Return)\n  }\n\n  // `try` statement\n  try(tryBody: Block, catchCode?: (e: Name) => void, finallyCode?: Block): CodeGen {\n    if (!catchCode && !finallyCode) throw new Error('CodeGen: \"try\" without \"catch\" and \"finally\"')\n    const node = new Try()\n    this._blockNode(node)\n    this.code(tryBody)\n    if (catchCode) {\n      const error = this.name(\"e\")\n      this._currNode = node.catch = new Catch(error)\n      catchCode(error)\n    }\n    if (finallyCode) {\n      this._currNode = node.finally = new Finally()\n      this.code(finallyCode)\n    }\n    return this._endBlockNode(Catch, Finally)\n  }\n\n  // `throw` statement\n  throw(error: Code): CodeGen {\n    return this._leafNode(new Throw(error))\n  }\n\n  // start self-balancing block\n  block(body?: Block, nodeCount?: number): CodeGen {\n    this._blockStarts.push(this._nodes.length)\n    if (body) this.code(body).endBlock(nodeCount)\n    return this\n  }\n\n  // end the current self-balancing block\n  endBlock(nodeCount?: number): CodeGen {\n    const len = this._blockStarts.pop()\n    if (len === undefined) throw new Error(\"CodeGen: not in self-balancing block\")\n    const toClose = this._nodes.length - len\n    if (toClose < 0 || (nodeCount !== undefined && toClose !== nodeCount)) {\n      throw new Error(`CodeGen: wrong number of nodes: ${toClose} vs ${nodeCount} expected`)\n    }\n    this._nodes.length = len\n    return this\n  }\n\n  // `function` heading (or definition if funcBody is passed)\n  func(name: Name, args: Code = nil, async?: boolean, funcBody?: Block): CodeGen {\n    this._blockNode(new Func(name, args, async))\n    if (funcBody) this.code(funcBody).endFunc()\n    return this\n  }\n\n  // end function definition\n  endFunc(): CodeGen {\n    return this._endBlockNode(Func)\n  }\n\n  optimize(n = 1): void {\n    while (n-- > 0) {\n      this._root.optimizeNodes()\n      this._root.optimizeNames(this._root.names, this._constants)\n    }\n  }\n\n  private _leafNode(node: LeafNode): CodeGen {\n    this._currNode.nodes.push(node)\n    return this\n  }\n\n  private _blockNode(node: StartBlockNode): void {\n    this._currNode.nodes.push(node)\n    this._nodes.push(node)\n  }\n\n  private _endBlockNode(N1: EndBlockNodeType, N2?: EndBlockNodeType): CodeGen {\n    const n = this._currNode\n    if (n instanceof N1 || (N2 && n instanceof N2)) {\n      this._nodes.pop()\n      return this\n    }\n    throw new Error(`CodeGen: not in block \"${N2 ? `${N1.kind}/${N2.kind}` : N1.kind}\"`)\n  }\n\n  private _elseNode(node: If | Else): CodeGen {\n    const n = this._currNode\n    if (!(n instanceof If)) {\n      throw new Error('CodeGen: \"else\" without \"if\"')\n    }\n    this._currNode = n.else = node\n    return this\n  }\n\n  private get _root(): Root {\n    return this._nodes[0] as Root\n  }\n\n  private get _currNode(): ParentNode {\n    const ns = this._nodes\n    return ns[ns.length - 1]\n  }\n\n  private set _currNode(node: ParentNode) {\n    const ns = this._nodes\n    ns[ns.length - 1] = node\n  }\n\n  // get nodeCount(): number {\n  //   return this._root.count\n  // }\n}\n\nfunction addNames(names: UsedNames, from: UsedNames): UsedNames {\n  for (const n in from) names[n] = (names[n] || 0) + (from[n] || 0)\n  return names\n}\n\nfunction addExprNames(names: UsedNames, from: SafeExpr): UsedNames {\n  return from instanceof _CodeOrName ? addNames(names, from.names) : names\n}\n\nfunction optimizeExpr<T extends SafeExpr | Code>(expr: T, names: UsedNames, constants: Constants): T\nfunction optimizeExpr(expr: SafeExpr, names: UsedNames, constants: Constants): SafeExpr {\n  if (expr instanceof Name) return replaceName(expr)\n  if (!canOptimize(expr)) return expr\n  return new _Code(\n    expr._items.reduce((items: CodeItem[], c: SafeExpr | string) => {\n      if (c instanceof Name) c = replaceName(c)\n      if (c instanceof _Code) items.push(...c._items)\n      else items.push(c)\n      return items\n    }, [])\n  )\n\n  function replaceName(n: Name): SafeExpr {\n    const c = constants[n.str]\n    if (c === undefined || names[n.str] !== 1) return n\n    delete names[n.str]\n    return c\n  }\n\n  function canOptimize(e: SafeExpr): e is _Code {\n    return (\n      e instanceof _Code &&\n      e._items.some(\n        (c) => c instanceof Name && names[c.str] === 1 && constants[c.str] !== undefined\n      )\n    )\n  }\n}\n\nfunction subtractNames(names: UsedNames, from: UsedNames): void {\n  for (const n in from) names[n] = (names[n] || 0) - (from[n] || 0)\n}\n\nexport function not<T extends Code | SafeExpr>(x: T): T\nexport function not(x: Code | SafeExpr): Code | SafeExpr {\n  return typeof x == \"boolean\" || typeof x == \"number\" || x === null ? !x : _`!${par(x)}`\n}\n\nconst andCode = mappend(operators.AND)\n\n// boolean AND (&&) expression with the passed arguments\nexport function and(...args: Code[]): Code {\n  return args.reduce(andCode)\n}\n\nconst orCode = mappend(operators.OR)\n\n// boolean OR (||) expression with the passed arguments\nexport function or(...args: Code[]): Code {\n  return args.reduce(orCode)\n}\n\ntype MAppend = (x: Code, y: Code) => Code\n\nfunction mappend(op: Code): MAppend {\n  return (x, y) => (x === nil ? y : y === nil ? x : _`${par(x)} ${op} ${par(y)}`)\n}\n\nfunction par(x: Code): Code {\n  return x instanceof Name ? x : _`(${x})`\n}\n","import type {AnySchema, EvaluatedProperties, EvaluatedItems} from \"../types\"\nimport type {SchemaCxt, SchemaObjCxt} from \".\"\nimport {_, getProperty, Code, Name, CodeGen} from \"./codegen\"\nimport {_Code} from \"./codegen/code\"\nimport type {Rule, ValidationRules} from \"./rules\"\n\n// TODO refactor to use Set\nexport function toHash<T extends string = string>(arr: T[]): {[K in T]?: true} {\n  const hash: {[K in T]?: true} = {}\n  for (const item of arr) hash[item] = true\n  return hash\n}\n\nexport function alwaysValidSchema(it: SchemaCxt, schema: AnySchema): boolean | void {\n  if (typeof schema == \"boolean\") return schema\n  if (Object.keys(schema).length === 0) return true\n  checkUnknownRules(it, schema)\n  return !schemaHasRules(schema, it.self.RULES.all)\n}\n\nexport function checkUnknownRules(it: SchemaCxt, schema: AnySchema = it.schema): void {\n  const {opts, self} = it\n  if (!opts.strictSchema) return\n  if (typeof schema === \"boolean\") return\n  const rules = self.RULES.keywords\n  for (const key in schema) {\n    if (!rules[key]) checkStrictMode(it, `unknown keyword: \"${key}\"`)\n  }\n}\n\nexport function schemaHasRules(\n  schema: AnySchema,\n  rules: {[Key in string]?: boolean | Rule}\n): boolean {\n  if (typeof schema == \"boolean\") return !schema\n  for (const key in schema) if (rules[key]) return true\n  return false\n}\n\nexport function schemaHasRulesButRef(schema: AnySchema, RULES: ValidationRules): boolean {\n  if (typeof schema == \"boolean\") return !schema\n  for (const key in schema) if (key !== \"$ref\" && RULES.all[key]) return true\n  return false\n}\n\nexport function schemaRefOrVal(\n  {topSchemaRef, schemaPath}: SchemaObjCxt,\n  schema: unknown,\n  keyword: string,\n  $data?: string | false\n): Code | number | boolean {\n  if (!$data) {\n    if (typeof schema == \"number\" || typeof schema == \"boolean\") return schema\n    if (typeof schema == \"string\") return _`${schema}`\n  }\n  return _`${topSchemaRef}${schemaPath}${getProperty(keyword)}`\n}\n\nexport function unescapeFragment(str: string): string {\n  return unescapeJsonPointer(decodeURIComponent(str))\n}\n\nexport function escapeFragment(str: string | number): string {\n  return encodeURIComponent(escapeJsonPointer(str))\n}\n\nexport function escapeJsonPointer(str: string | number): string {\n  if (typeof str == \"number\") return `${str}`\n  return str.replace(/~/g, \"~0\").replace(/\\//g, \"~1\")\n}\n\nexport function unescapeJsonPointer(str: string): string {\n  return str.replace(/~1/g, \"/\").replace(/~0/g, \"~\")\n}\n\nexport function eachItem<T>(xs: T | T[], f: (x: T) => void): void {\n  if (Array.isArray(xs)) {\n    for (const x of xs) f(x)\n  } else {\n    f(xs)\n  }\n}\n\ntype SomeEvaluated = EvaluatedProperties | EvaluatedItems\n\ntype MergeEvaluatedFunc<T extends SomeEvaluated> = (\n  gen: CodeGen,\n  from: Name | T,\n  to: Name | Exclude<T, true> | undefined,\n  toName?: typeof Name\n) => Name | T\n\ninterface MakeMergeFuncArgs<T extends SomeEvaluated> {\n  mergeNames: (gen: CodeGen, from: Name, to: Name) => void\n  mergeToName: (gen: CodeGen, from: T, to: Name) => void\n  mergeValues: (from: T, to: Exclude<T, true>) => T\n  resultToName: (gen: CodeGen, res?: T) => Name\n}\n\nfunction makeMergeEvaluated<T extends SomeEvaluated>({\n  mergeNames,\n  mergeToName,\n  mergeValues,\n  resultToName,\n}: MakeMergeFuncArgs<T>): MergeEvaluatedFunc<T> {\n  return (gen, from, to, toName) => {\n    const res =\n      to === undefined\n        ? from\n        : to instanceof Name\n        ? (from instanceof Name ? mergeNames(gen, from, to) : mergeToName(gen, from, to), to)\n        : from instanceof Name\n        ? (mergeToName(gen, to, from), from)\n        : mergeValues(from, to)\n    return toName === Name && !(res instanceof Name) ? resultToName(gen, res) : res\n  }\n}\n\ninterface MergeEvaluated {\n  props: MergeEvaluatedFunc<EvaluatedProperties>\n  items: MergeEvaluatedFunc<EvaluatedItems>\n}\n\nexport const mergeEvaluated: MergeEvaluated = {\n  props: makeMergeEvaluated({\n    mergeNames: (gen, from, to) =>\n      gen.if(_`${to} !== true && ${from} !== undefined`, () => {\n        gen.if(\n          _`${from} === true`,\n          () => gen.assign(to, true),\n          () => gen.assign(to, _`${to} || {}`).code(_`Object.assign(${to}, ${from})`)\n        )\n      }),\n    mergeToName: (gen, from, to) =>\n      gen.if(_`${to} !== true`, () => {\n        if (from === true) {\n          gen.assign(to, true)\n        } else {\n          gen.assign(to, _`${to} || {}`)\n          setEvaluated(gen, to, from)\n        }\n      }),\n    mergeValues: (from, to) => (from === true ? true : {...from, ...to}),\n    resultToName: evaluatedPropsToName,\n  }),\n  items: makeMergeEvaluated({\n    mergeNames: (gen, from, to) =>\n      gen.if(_`${to} !== true && ${from} !== undefined`, () =>\n        gen.assign(to, _`${from} === true ? true : ${to} > ${from} ? ${to} : ${from}`)\n      ),\n    mergeToName: (gen, from, to) =>\n      gen.if(_`${to} !== true`, () =>\n        gen.assign(to, from === true ? true : _`${to} > ${from} ? ${to} : ${from}`)\n      ),\n    mergeValues: (from, to) => (from === true ? true : Math.max(from, to)),\n    resultToName: (gen, items) => gen.var(\"items\", items),\n  }),\n}\n\nexport function evaluatedPropsToName(gen: CodeGen, ps?: EvaluatedProperties): Name {\n  if (ps === true) return gen.var(\"props\", true)\n  const props = gen.var(\"props\", _`{}`)\n  if (ps !== undefined) setEvaluated(gen, props, ps)\n  return props\n}\n\nexport function setEvaluated(gen: CodeGen, props: Name, ps: {[K in string]?: true}): void {\n  Object.keys(ps).forEach((p) => gen.assign(_`${props}${getProperty(p)}`, true))\n}\n\nconst snippets: {[S in string]?: _Code} = {}\n\nexport function useFunc(gen: CodeGen, f: {code: string}): Name {\n  return gen.scopeValue(\"func\", {\n    ref: f,\n    code: snippets[f.code] || (snippets[f.code] = new _Code(f.code)),\n  })\n}\n\nexport enum Type {\n  Num,\n  Str,\n}\n\nexport function getErrorPath(\n  dataProp: Name | string | number,\n  dataPropType?: Type,\n  jsPropertySyntax?: boolean\n): Code | string {\n  // let path\n  if (dataProp instanceof Name) {\n    const isNumber = dataPropType === Type.Num\n    return jsPropertySyntax\n      ? isNumber\n        ? _`\"[\" + ${dataProp} + \"]\"`\n        : _`\"['\" + ${dataProp} + \"']\"`\n      : isNumber\n      ? _`\"/\" + ${dataProp}`\n      : _`\"/\" + ${dataProp}.replace(/~/g, \"~0\").replace(/\\\\//g, \"~1\")` // TODO maybe use global escapePointer\n  }\n  return jsPropertySyntax ? getProperty(dataProp).toString() : \"/\" + escapeJsonPointer(dataProp)\n}\n\nexport function checkStrictMode(\n  it: SchemaCxt,\n  msg: string,\n  mode: boolean | \"log\" = it.opts.strictSchema\n): void {\n  if (!mode) return\n  msg = `strict mode: ${msg}`\n  if (mode === true) throw new Error(msg)\n  it.self.logger.warn(msg)\n}\n","import {Name} from \"./codegen\"\n\nconst names = {\n  // validation function arguments\n  data: new Name(\"data\"), // data passed to validation function\n  // args passed from referencing schema\n  valCxt: new Name(\"valCxt\"), // validation/data context - should not be used directly, it is destructured to the names below\n  instancePath: new Name(\"instancePath\"),\n  parentData: new Name(\"parentData\"),\n  parentDataProperty: new Name(\"parentDataProperty\"),\n  rootData: new Name(\"rootData\"), // root data - same as the data passed to the first/top validation function\n  dynamicAnchors: new Name(\"dynamicAnchors\"), // used to support recursiveRef and dynamicRef\n  // function scoped variables\n  vErrors: new Name(\"vErrors\"), // null or array of validation errors\n  errors: new Name(\"errors\"), // counter of validation errors\n  this: new Name(\"this\"),\n  // \"globals\"\n  self: new Name(\"self\"),\n  scope: new Name(\"scope\"),\n  // JTD serialize/parse name for JSON string and position\n  json: new Name(\"json\"),\n  jsonPos: new Name(\"jsonPos\"),\n  jsonLen: new Name(\"jsonLen\"),\n  jsonPart: new Name(\"jsonPart\"),\n}\n\nexport default names\n","import type {KeywordErrorCxt, KeywordErrorDefinition} from \"../types\"\nimport type {SchemaCxt} from \"./index\"\nimport {CodeGen, _, str, strConcat, Code, Name} from \"./codegen\"\nimport {SafeExpr} from \"./codegen/code\"\nimport {getErrorPath, Type} from \"./util\"\nimport N from \"./names\"\n\nexport const keywordError: KeywordErrorDefinition = {\n  message: ({keyword}) => str`must pass \"${keyword}\" keyword validation`,\n}\n\nexport const keyword$DataError: KeywordErrorDefinition = {\n  message: ({keyword, schemaType}) =>\n    schemaType\n      ? str`\"${keyword}\" keyword must be ${schemaType} ($data)`\n      : str`\"${keyword}\" keyword is invalid ($data)`,\n}\n\nexport interface ErrorPaths {\n  instancePath?: Code\n  schemaPath?: string\n  parentSchema?: boolean\n}\n\nexport function reportError(\n  cxt: KeywordErrorCxt,\n  error: KeywordErrorDefinition = keywordError,\n  errorPaths?: ErrorPaths,\n  overrideAllErrors?: boolean\n): void {\n  const {it} = cxt\n  const {gen, compositeRule, allErrors} = it\n  const errObj = errorObjectCode(cxt, error, errorPaths)\n  if (overrideAllErrors ?? (compositeRule || allErrors)) {\n    addError(gen, errObj)\n  } else {\n    returnErrors(it, _`[${errObj}]`)\n  }\n}\n\nexport function reportExtraError(\n  cxt: KeywordErrorCxt,\n  error: KeywordErrorDefinition = keywordError,\n  errorPaths?: ErrorPaths\n): void {\n  const {it} = cxt\n  const {gen, compositeRule, allErrors} = it\n  const errObj = errorObjectCode(cxt, error, errorPaths)\n  addError(gen, errObj)\n  if (!(compositeRule || allErrors)) {\n    returnErrors(it, N.vErrors)\n  }\n}\n\nexport function resetErrorsCount(gen: CodeGen, errsCount: Name): void {\n  gen.assign(N.errors, errsCount)\n  gen.if(_`${N.vErrors} !== null`, () =>\n    gen.if(\n      errsCount,\n      () => gen.assign(_`${N.vErrors}.length`, errsCount),\n      () => gen.assign(N.vErrors, null)\n    )\n  )\n}\n\nexport function extendErrors({\n  gen,\n  keyword,\n  schemaValue,\n  data,\n  errsCount,\n  it,\n}: KeywordErrorCxt): void {\n  /* istanbul ignore if */\n  if (errsCount === undefined) throw new Error(\"ajv implementation error\")\n  const err = gen.name(\"err\")\n  gen.forRange(\"i\", errsCount, N.errors, (i) => {\n    gen.const(err, _`${N.vErrors}[${i}]`)\n    gen.if(_`${err}.instancePath === undefined`, () =>\n      gen.assign(_`${err}.instancePath`, strConcat(N.instancePath, it.errorPath))\n    )\n    gen.assign(_`${err}.schemaPath`, str`${it.errSchemaPath}/${keyword}`)\n    if (it.opts.verbose) {\n      gen.assign(_`${err}.schema`, schemaValue)\n      gen.assign(_`${err}.data`, data)\n    }\n  })\n}\n\nfunction addError(gen: CodeGen, errObj: Code): void {\n  const err = gen.const(\"err\", errObj)\n  gen.if(\n    _`${N.vErrors} === null`,\n    () => gen.assign(N.vErrors, _`[${err}]`),\n    _`${N.vErrors}.push(${err})`\n  )\n  gen.code(_`${N.errors}++`)\n}\n\nfunction returnErrors(it: SchemaCxt, errs: Code): void {\n  const {gen, validateName, schemaEnv} = it\n  if (schemaEnv.$async) {\n    gen.throw(_`new ${it.ValidationError as Name}(${errs})`)\n  } else {\n    gen.assign(_`${validateName}.errors`, errs)\n    gen.return(false)\n  }\n}\n\nconst E = {\n  keyword: new Name(\"keyword\"),\n  schemaPath: new Name(\"schemaPath\"), // also used in JTD errors\n  params: new Name(\"params\"),\n  propertyName: new Name(\"propertyName\"),\n  message: new Name(\"message\"),\n  schema: new Name(\"schema\"),\n  parentSchema: new Name(\"parentSchema\"),\n}\n\nfunction errorObjectCode(\n  cxt: KeywordErrorCxt,\n  error: KeywordErrorDefinition,\n  errorPaths?: ErrorPaths\n): Code {\n  const {createErrors} = cxt.it\n  if (createErrors === false) return _`{}`\n  return errorObject(cxt, error, errorPaths)\n}\n\nfunction errorObject(\n  cxt: KeywordErrorCxt,\n  error: KeywordErrorDefinition,\n  errorPaths: ErrorPaths = {}\n): Code {\n  const {gen, it} = cxt\n  const keyValues: [Name, SafeExpr | string][] = [\n    errorInstancePath(it, errorPaths),\n    errorSchemaPath(cxt, errorPaths),\n  ]\n  extraErrorProps(cxt, error, keyValues)\n  return gen.object(...keyValues)\n}\n\nfunction errorInstancePath({errorPath}: SchemaCxt, {instancePath}: ErrorPaths): [Name, Code] {\n  const instPath = instancePath\n    ? str`${errorPath}${getErrorPath(instancePath, Type.Str)}`\n    : errorPath\n  return [N.instancePath, strConcat(N.instancePath, instPath)]\n}\n\nfunction errorSchemaPath(\n  {keyword, it: {errSchemaPath}}: KeywordErrorCxt,\n  {schemaPath, parentSchema}: ErrorPaths\n): [Name, string | Code] {\n  let schPath = parentSchema ? errSchemaPath : str`${errSchemaPath}/${keyword}`\n  if (schemaPath) {\n    schPath = str`${schPath}${getErrorPath(schemaPath, Type.Str)}`\n  }\n  return [E.schemaPath, schPath]\n}\n\nfunction extraErrorProps(\n  cxt: KeywordErrorCxt,\n  {params, message}: KeywordErrorDefinition,\n  keyValues: [Name, SafeExpr | string][]\n): void {\n  const {keyword, data, schemaValue, it} = cxt\n  const {opts, propertyName, topSchemaRef, schemaPath} = it\n  keyValues.push(\n    [E.keyword, keyword],\n    [E.params, typeof params == \"function\" ? params(cxt) : params || _`{}`]\n  )\n  if (opts.messages) {\n    keyValues.push([E.message, typeof message == \"function\" ? message(cxt) : message])\n  }\n  if (opts.verbose) {\n    keyValues.push(\n      [E.schema, schemaValue],\n      [E.parentSchema, _`${topSchemaRef}${schemaPath}`],\n      [N.data, data]\n    )\n  }\n  if (propertyName) keyValues.push([E.propertyName, propertyName])\n}\n","import type {KeywordErrorDefinition, KeywordErrorCxt} from \"../../types\"\nimport type {SchemaCxt} from \"..\"\nimport {reportError} from \"../errors\"\nimport {_, Name} from \"../codegen\"\nimport N from \"../names\"\n\nconst boolError: KeywordErrorDefinition = {\n  message: \"boolean schema is false\",\n}\n\nexport function topBoolOrEmptySchema(it: SchemaCxt): void {\n  const {gen, schema, validateName} = it\n  if (schema === false) {\n    falseSchemaError(it, false)\n  } else if (typeof schema == \"object\" && schema.$async === true) {\n    gen.return(N.data)\n  } else {\n    gen.assign(_`${validateName}.errors`, null)\n    gen.return(true)\n  }\n}\n\nexport function boolOrEmptySchema(it: SchemaCxt, valid: Name): void {\n  const {gen, schema} = it\n  if (schema === false) {\n    gen.var(valid, false) // TODO var\n    falseSchemaError(it)\n  } else {\n    gen.var(valid, true) // TODO var\n  }\n}\n\nfunction falseSchemaError(it: SchemaCxt, overrideAllErrors?: boolean): void {\n  const {gen, data} = it\n  // TODO maybe some other interface should be used for non-keyword validation errors...\n  const cxt: KeywordErrorCxt = {\n    gen,\n    keyword: \"false schema\",\n    data,\n    schema: false,\n    schemaCode: false,\n    schemaValue: false,\n    params: {},\n    it,\n  }\n  reportError(cxt, boolError, undefined, overrideAllErrors)\n}\n","import type {AddedKeywordDefinition} from \"../types\"\n\nconst _jsonTypes = [\"string\", \"number\", \"integer\", \"boolean\", \"null\", \"object\", \"array\"] as const\n\nexport type JSONType = (typeof _jsonTypes)[number]\n\nconst jsonTypes: Set<string> = new Set(_jsonTypes)\n\nexport function isJSONType(x: unknown): x is JSONType {\n  return typeof x == \"string\" && jsonTypes.has(x)\n}\n\ntype ValidationTypes = {\n  [K in JSONType]: boolean | RuleGroup | undefined\n}\n\nexport interface ValidationRules {\n  rules: RuleGroup[]\n  post: RuleGroup\n  all: {[Key in string]?: boolean | Rule} // rules that have to be validated\n  keywords: {[Key in string]?: boolean} // all known keywords (superset of \"all\")\n  types: ValidationTypes\n}\n\nexport interface RuleGroup {\n  type?: JSONType\n  rules: Rule[]\n}\n\n// This interface wraps KeywordDefinition because definition can have multiple keywords\nexport interface Rule {\n  keyword: string\n  definition: AddedKeywordDefinition\n}\n\nexport function getRules(): ValidationRules {\n  const groups: Record<\"number\" | \"string\" | \"array\" | \"object\", RuleGroup> = {\n    number: {type: \"number\", rules: []},\n    string: {type: \"string\", rules: []},\n    array: {type: \"array\", rules: []},\n    object: {type: \"object\", rules: []},\n  }\n  return {\n    types: {...groups, integer: true, boolean: true, null: true},\n    rules: [{rules: []}, groups.number, groups.string, groups.array, groups.object],\n    post: {rules: []},\n    all: {},\n    keywords: {},\n  }\n}\n","import type {AnySchemaObject} from \"../../types\"\nimport type {SchemaObjCxt} from \"..\"\nimport type {JSONType, RuleGroup, Rule} from \"../rules\"\n\nexport function schemaHasRulesForType(\n  {schema, self}: SchemaObjCxt,\n  type: JSONType\n): boolean | undefined {\n  const group = self.RULES.types[type]\n  return group && group !== true && shouldUseGroup(schema, group)\n}\n\nexport function shouldUseGroup(schema: AnySchemaObject, group: RuleGroup): boolean {\n  return group.rules.some((rule) => shouldUseRule(schema, rule))\n}\n\nexport function shouldUseRule(schema: AnySchemaObject, rule: Rule): boolean | undefined {\n  return (\n    schema[rule.keyword] !== undefined ||\n    rule.definition.implements?.some((kwd) => schema[kwd] !== undefined)\n  )\n}\n","import type {\n  KeywordErrorDefinition,\n  KeywordErrorCxt,\n  ErrorObject,\n  AnySchemaObject,\n} from \"../../types\"\nimport type {SchemaObjCxt} from \"..\"\nimport {isJSONType, JSONType} from \"../rules\"\nimport {schemaHasRulesForType} from \"./applicability\"\nimport {reportError} from \"../errors\"\nimport {_, nil, and, not, operators, Code, Name} from \"../codegen\"\nimport {toHash, schemaRefOrVal} from \"../util\"\n\nexport enum DataType {\n  Correct,\n  Wrong,\n}\n\nexport function getSchemaTypes(schema: AnySchemaObject): JSONType[] {\n  const types = getJSONTypes(schema.type)\n  const hasNull = types.includes(\"null\")\n  if (hasNull) {\n    if (schema.nullable === false) throw new Error(\"type: null contradicts nullable: false\")\n  } else {\n    if (!types.length && schema.nullable !== undefined) {\n      throw new Error('\"nullable\" cannot be used without \"type\"')\n    }\n    if (schema.nullable === true) types.push(\"null\")\n  }\n  return types\n}\n\n// eslint-disable-next-line @typescript-eslint/no-redundant-type-constituents\nexport function getJSONTypes(ts: unknown | unknown[]): JSONType[] {\n  const types: unknown[] = Array.isArray(ts) ? ts : ts ? [ts] : []\n  if (types.every(isJSONType)) return types\n  throw new Error(\"type must be JSONType or JSONType[]: \" + types.join(\",\"))\n}\n\nexport function coerceAndCheckDataType(it: SchemaObjCxt, types: JSONType[]): boolean {\n  const {gen, data, opts} = it\n  const coerceTo = coerceToTypes(types, opts.coerceTypes)\n  const checkTypes =\n    types.length > 0 &&\n    !(coerceTo.length === 0 && types.length === 1 && schemaHasRulesForType(it, types[0]))\n  if (checkTypes) {\n    const wrongType = checkDataTypes(types, data, opts.strictNumbers, DataType.Wrong)\n    gen.if(wrongType, () => {\n      if (coerceTo.length) coerceData(it, types, coerceTo)\n      else reportTypeError(it)\n    })\n  }\n  return checkTypes\n}\n\nconst COERCIBLE: Set<JSONType> = new Set([\"string\", \"number\", \"integer\", \"boolean\", \"null\"])\nfunction coerceToTypes(types: JSONType[], coerceTypes?: boolean | \"array\"): JSONType[] {\n  return coerceTypes\n    ? types.filter((t) => COERCIBLE.has(t) || (coerceTypes === \"array\" && t === \"array\"))\n    : []\n}\n\nfunction coerceData(it: SchemaObjCxt, types: JSONType[], coerceTo: JSONType[]): void {\n  const {gen, data, opts} = it\n  const dataType = gen.let(\"dataType\", _`typeof ${data}`)\n  const coerced = gen.let(\"coerced\", _`undefined`)\n  if (opts.coerceTypes === \"array\") {\n    gen.if(_`${dataType} == 'object' && Array.isArray(${data}) && ${data}.length == 1`, () =>\n      gen\n        .assign(data, _`${data}[0]`)\n        .assign(dataType, _`typeof ${data}`)\n        .if(checkDataTypes(types, data, opts.strictNumbers), () => gen.assign(coerced, data))\n    )\n  }\n  gen.if(_`${coerced} !== undefined`)\n  for (const t of coerceTo) {\n    if (COERCIBLE.has(t) || (t === \"array\" && opts.coerceTypes === \"array\")) {\n      coerceSpecificType(t)\n    }\n  }\n  gen.else()\n  reportTypeError(it)\n  gen.endIf()\n\n  gen.if(_`${coerced} !== undefined`, () => {\n    gen.assign(data, coerced)\n    assignParentData(it, coerced)\n  })\n\n  function coerceSpecificType(t: string): void {\n    switch (t) {\n      case \"string\":\n        gen\n          .elseIf(_`${dataType} == \"number\" || ${dataType} == \"boolean\"`)\n          .assign(coerced, _`\"\" + ${data}`)\n          .elseIf(_`${data} === null`)\n          .assign(coerced, _`\"\"`)\n        return\n      case \"number\":\n        gen\n          .elseIf(\n            _`${dataType} == \"boolean\" || ${data} === null\n              || (${dataType} == \"string\" && ${data} && ${data} == +${data})`\n          )\n          .assign(coerced, _`+${data}`)\n        return\n      case \"integer\":\n        gen\n          .elseIf(\n            _`${dataType} === \"boolean\" || ${data} === null\n              || (${dataType} === \"string\" && ${data} && ${data} == +${data} && !(${data} % 1))`\n          )\n          .assign(coerced, _`+${data}`)\n        return\n      case \"boolean\":\n        gen\n          .elseIf(_`${data} === \"false\" || ${data} === 0 || ${data} === null`)\n          .assign(coerced, false)\n          .elseIf(_`${data} === \"true\" || ${data} === 1`)\n          .assign(coerced, true)\n        return\n      case \"null\":\n        gen.elseIf(_`${data} === \"\" || ${data} === 0 || ${data} === false`)\n        gen.assign(coerced, null)\n        return\n\n      case \"array\":\n        gen\n          .elseIf(\n            _`${dataType} === \"string\" || ${dataType} === \"number\"\n              || ${dataType} === \"boolean\" || ${data} === null`\n          )\n          .assign(coerced, _`[${data}]`)\n    }\n  }\n}\n\nfunction assignParentData({gen, parentData, parentDataProperty}: SchemaObjCxt, expr: Name): void {\n  // TODO use gen.property\n  gen.if(_`${parentData} !== undefined`, () =>\n    gen.assign(_`${parentData}[${parentDataProperty}]`, expr)\n  )\n}\n\nexport function checkDataType(\n  dataType: JSONType,\n  data: Name,\n  strictNums?: boolean | \"log\",\n  correct = DataType.Correct\n): Code {\n  const EQ = correct === DataType.Correct ? operators.EQ : operators.NEQ\n  let cond: Code\n  switch (dataType) {\n    case \"null\":\n      return _`${data} ${EQ} null`\n    case \"array\":\n      cond = _`Array.isArray(${data})`\n      break\n    case \"object\":\n      cond = _`${data} && typeof ${data} == \"object\" && !Array.isArray(${data})`\n      break\n    case \"integer\":\n      cond = numCond(_`!(${data} % 1) && !isNaN(${data})`)\n      break\n    case \"number\":\n      cond = numCond()\n      break\n    default:\n      return _`typeof ${data} ${EQ} ${dataType}`\n  }\n  return correct === DataType.Correct ? cond : not(cond)\n\n  function numCond(_cond: Code = nil): Code {\n    return and(_`typeof ${data} == \"number\"`, _cond, strictNums ? _`isFinite(${data})` : nil)\n  }\n}\n\nexport function checkDataTypes(\n  dataTypes: JSONType[],\n  data: Name,\n  strictNums?: boolean | \"log\",\n  correct?: DataType\n): Code {\n  if (dataTypes.length === 1) {\n    return checkDataType(dataTypes[0], data, strictNums, correct)\n  }\n  let cond: Code\n  const types = toHash(dataTypes)\n  if (types.array && types.object) {\n    const notObj = _`typeof ${data} != \"object\"`\n    cond = types.null ? notObj : _`!${data} || ${notObj}`\n    delete types.null\n    delete types.array\n    delete types.object\n  } else {\n    cond = nil\n  }\n  if (types.number) delete types.integer\n  for (const t in types) cond = and(cond, checkDataType(t as JSONType, data, strictNums, correct))\n  return cond\n}\n\nexport type TypeError = ErrorObject<\"type\", {type: string}>\n\nconst typeError: KeywordErrorDefinition = {\n  message: ({schema}) => `must be ${schema}`,\n  params: ({schema, schemaValue}) =>\n    typeof schema == \"string\" ? _`{type: ${schema}}` : _`{type: ${schemaValue}}`,\n}\n\nexport function reportTypeError(it: SchemaObjCxt): void {\n  const cxt = getTypeErrorContext(it)\n  reportError(cxt, typeError)\n}\n\nfunction getTypeErrorContext(it: SchemaObjCxt): KeywordErrorCxt {\n  const {gen, data, schema} = it\n  const schemaCode = schemaRefOrVal(it, schema, \"type\")\n  return {\n    gen,\n    keyword: \"type\",\n    data,\n    schema: schema.type,\n    schemaCode,\n    schemaValue: schemaCode,\n    parentSchema: schema,\n    params: {},\n    it,\n  }\n}\n","import type {SchemaObjCxt} from \"..\"\nimport {_, getProperty, stringify} from \"../codegen\"\nimport {checkStrictMode} from \"../util\"\n\nexport function assignDefaults(it: SchemaObjCxt, ty?: string): void {\n  const {properties, items} = it.schema\n  if (ty === \"object\" && properties) {\n    for (const key in properties) {\n      assignDefault(it, key, properties[key].default)\n    }\n  } else if (ty === \"array\" && Array.isArray(items)) {\n    items.forEach((sch, i: number) => assignDefault(it, i, sch.default))\n  }\n}\n\nfunction assignDefault(it: SchemaObjCxt, prop: string | number, defaultValue: unknown): void {\n  const {gen, compositeRule, data, opts} = it\n  if (defaultValue === undefined) return\n  const childData = _`${data}${getProperty(prop)}`\n  if (compositeRule) {\n    checkStrictMode(it, `default is ignored for: ${childData}`)\n    return\n  }\n\n  let condition = _`${childData} === undefined`\n  if (opts.useDefaults === \"empty\") {\n    condition = _`${condition} || ${childData} === null || ${childData} === \"\"`\n  }\n  // `${childData} === undefined` +\n  // (opts.useDefaults === \"empty\" ? ` || ${childData} === null || ${childData} === \"\"` : \"\")\n  gen.if(condition, _`${childData} = ${stringify(defaultValue)}`)\n}\n","import type {AnySchema, SchemaMap} from \"../types\"\nimport type {SchemaCxt} from \"../compile\"\nimport type {KeywordCxt} from \"../compile/validate\"\nimport {CodeGen, _, and, or, not, nil, strConcat, getProperty, Code, Name} from \"../compile/codegen\"\nimport {alwaysValidSchema, Type} from \"../compile/util\"\nimport N from \"../compile/names\"\nimport {useFunc} from \"../compile/util\"\nexport function checkReportMissingProp(cxt: KeywordCxt, prop: string): void {\n  const {gen, data, it} = cxt\n  gen.if(noPropertyInData(gen, data, prop, it.opts.ownProperties), () => {\n    cxt.setParams({missingProperty: _`${prop}`}, true)\n    cxt.error()\n  })\n}\n\nexport function checkMissingProp(\n  {gen, data, it: {opts}}: KeywordCxt,\n  properties: string[],\n  missing: Name\n): Code {\n  return or(\n    ...properties.map((prop) =>\n      and(noPropertyInData(gen, data, prop, opts.ownProperties), _`${missing} = ${prop}`)\n    )\n  )\n}\n\nexport function reportMissingProp(cxt: KeywordCxt, missing: Name): void {\n  cxt.setParams({missingProperty: missing}, true)\n  cxt.error()\n}\n\nexport function hasPropFunc(gen: CodeGen): Name {\n  return gen.scopeValue(\"func\", {\n    // eslint-disable-next-line @typescript-eslint/unbound-method\n    ref: Object.prototype.hasOwnProperty,\n    code: _`Object.prototype.hasOwnProperty`,\n  })\n}\n\nexport function isOwnProperty(gen: CodeGen, data: Name, property: Name | string): Code {\n  return _`${hasPropFunc(gen)}.call(${data}, ${property})`\n}\n\nexport function propertyInData(\n  gen: CodeGen,\n  data: Name,\n  property: Name | string,\n  ownProperties?: boolean\n): Code {\n  const cond = _`${data}${getProperty(property)} !== undefined`\n  return ownProperties ? _`${cond} && ${isOwnProperty(gen, data, property)}` : cond\n}\n\nexport function noPropertyInData(\n  gen: CodeGen,\n  data: Name,\n  property: Name | string,\n  ownProperties?: boolean\n): Code {\n  const cond = _`${data}${getProperty(property)} === undefined`\n  return ownProperties ? or(cond, not(isOwnProperty(gen, data, property))) : cond\n}\n\nexport function allSchemaProperties(schemaMap?: SchemaMap): string[] {\n  return schemaMap ? Object.keys(schemaMap).filter((p) => p !== \"__proto__\") : []\n}\n\nexport function schemaProperties(it: SchemaCxt, schemaMap: SchemaMap): string[] {\n  return allSchemaProperties(schemaMap).filter(\n    (p) => !alwaysValidSchema(it, schemaMap[p] as AnySchema)\n  )\n}\n\nexport function callValidateCode(\n  {schemaCode, data, it: {gen, topSchemaRef, schemaPath, errorPath}, it}: KeywordCxt,\n  func: Code,\n  context: Code,\n  passSchema?: boolean\n): Code {\n  const dataAndSchema = passSchema ? _`${schemaCode}, ${data}, ${topSchemaRef}${schemaPath}` : data\n  const valCxt: [Name, Code | number][] = [\n    [N.instancePath, strConcat(N.instancePath, errorPath)],\n    [N.parentData, it.parentData],\n    [N.parentDataProperty, it.parentDataProperty],\n    [N.rootData, N.rootData],\n  ]\n  if (it.opts.dynamicRef) valCxt.push([N.dynamicAnchors, N.dynamicAnchors])\n  const args = _`${dataAndSchema}, ${gen.object(...valCxt)}`\n  return context !== nil ? _`${func}.call(${context}, ${args})` : _`${func}(${args})`\n}\n\nconst newRegExp = _`new RegExp`\n\nexport function usePattern({gen, it: {opts}}: KeywordCxt, pattern: string): Name {\n  const u = opts.unicodeRegExp ? \"u\" : \"\"\n  const {regExp} = opts.code\n  const rx = regExp(pattern, u)\n\n  return gen.scopeValue(\"pattern\", {\n    key: rx.toString(),\n    ref: rx,\n    code: _`${regExp.code === \"new RegExp\" ? newRegExp : useFunc(gen, regExp)}(${pattern}, ${u})`,\n  })\n}\n\nexport function validateArray(cxt: KeywordCxt): Name {\n  const {gen, data, keyword, it} = cxt\n  const valid = gen.name(\"valid\")\n  if (it.allErrors) {\n    const validArr = gen.let(\"valid\", true)\n    validateItems(() => gen.assign(validArr, false))\n    return validArr\n  }\n  gen.var(valid, true)\n  validateItems(() => gen.break())\n  return valid\n\n  function validateItems(notValid: () => void): void {\n    const len = gen.const(\"len\", _`${data}.length`)\n    gen.forRange(\"i\", 0, len, (i) => {\n      cxt.subschema(\n        {\n          keyword,\n          dataProp: i,\n          dataPropType: Type.Num,\n        },\n        valid\n      )\n      gen.if(not(valid), notValid)\n    })\n  }\n}\n\nexport function validateUnion(cxt: KeywordCxt): void {\n  const {gen, schema, keyword, it} = cxt\n  /* istanbul ignore if */\n  if (!Array.isArray(schema)) throw new Error(\"ajv implementation error\")\n  const alwaysValid = schema.some((sch: AnySchema) => alwaysValidSchema(it, sch))\n  if (alwaysValid && !it.opts.unevaluated) return\n\n  const valid = gen.let(\"valid\", false)\n  const schValid = gen.name(\"_valid\")\n\n  gen.block(() =>\n    schema.forEach((_sch: AnySchema, i: number) => {\n      const schCxt = cxt.subschema(\n        {\n          keyword,\n          schemaProp: i,\n          compositeRule: true,\n        },\n        schValid\n      )\n      gen.assign(valid, _`${valid} || ${schValid}`)\n      const merged = cxt.mergeValidEvaluated(schCxt, schValid)\n      // can short-circuit if `unevaluatedProperties/Items` not supported (opts.unevaluated !== true)\n      // or if all properties and items were evaluated (it.props === true && it.items === true)\n      if (!merged) gen.if(not(valid))\n    })\n  )\n\n  cxt.result(\n    valid,\n    () => cxt.reset(),\n    () => cxt.error(true)\n  )\n}\n","import type {KeywordCxt} from \".\"\nimport type {\n  AnySchema,\n  SchemaValidateFunction,\n  AnyValidateFunction,\n  AddedKeywordDefinition,\n  MacroKeywordDefinition,\n  FuncKeywordDefinition,\n} from \"../../types\"\nimport type {SchemaObjCxt} from \"..\"\nimport {_, nil, not, stringify, Code, Name, CodeGen} from \"../codegen\"\nimport N from \"../names\"\nimport type {JSONType} from \"../rules\"\nimport {callValidateCode} from \"../../vocabularies/code\"\nimport {extendErrors} from \"../errors\"\n\ntype KeywordCompilationResult = AnySchema | SchemaValidateFunction | AnyValidateFunction\n\nexport function macroKeywordCode(cxt: KeywordCxt, def: MacroKeywordDefinition): void {\n  const {gen, keyword, schema, parentSchema, it} = cxt\n  const macroSchema = def.macro.call(it.self, schema, parentSchema, it)\n  const schemaRef = useKeyword(gen, keyword, macroSchema)\n  if (it.opts.validateSchema !== false) it.self.validateSchema(macroSchema, true)\n\n  const valid = gen.name(\"valid\")\n  cxt.subschema(\n    {\n      schema: macroSchema,\n      schemaPath: nil,\n      errSchemaPath: `${it.errSchemaPath}/${keyword}`,\n      topSchemaRef: schemaRef,\n      compositeRule: true,\n    },\n    valid\n  )\n  cxt.pass(valid, () => cxt.error(true))\n}\n\nexport function funcKeywordCode(cxt: KeywordCxt, def: FuncKeywordDefinition): void {\n  const {gen, keyword, schema, parentSchema, $data, it} = cxt\n  checkAsyncKeyword(it, def)\n  const validate =\n    !$data && def.compile ? def.compile.call(it.self, schema, parentSchema, it) : def.validate\n  const validateRef = useKeyword(gen, keyword, validate)\n  const valid = gen.let(\"valid\")\n  cxt.block$data(valid, validateKeyword)\n  cxt.ok(def.valid ?? valid)\n\n  function validateKeyword(): void {\n    if (def.errors === false) {\n      assignValid()\n      if (def.modifying) modifyData(cxt)\n      reportErrs(() => cxt.error())\n    } else {\n      const ruleErrs = def.async ? validateAsync() : validateSync()\n      if (def.modifying) modifyData(cxt)\n      reportErrs(() => addErrs(cxt, ruleErrs))\n    }\n  }\n\n  function validateAsync(): Name {\n    const ruleErrs = gen.let(\"ruleErrs\", null)\n    gen.try(\n      () => assignValid(_`await `),\n      (e) =>\n        gen.assign(valid, false).if(\n          _`${e} instanceof ${it.ValidationError as Name}`,\n          () => gen.assign(ruleErrs, _`${e}.errors`),\n          () => gen.throw(e)\n        )\n    )\n    return ruleErrs\n  }\n\n  function validateSync(): Code {\n    const validateErrs = _`${validateRef}.errors`\n    gen.assign(validateErrs, null)\n    assignValid(nil)\n    return validateErrs\n  }\n\n  function assignValid(_await: Code = def.async ? _`await ` : nil): void {\n    const passCxt = it.opts.passContext ? N.this : N.self\n    const passSchema = !((\"compile\" in def && !$data) || def.schema === false)\n    gen.assign(\n      valid,\n      _`${_await}${callValidateCode(cxt, validateRef, passCxt, passSchema)}`,\n      def.modifying\n    )\n  }\n\n  function reportErrs(errors: () => void): void {\n    gen.if(not(def.valid ?? valid), errors)\n  }\n}\n\nfunction modifyData(cxt: KeywordCxt): void {\n  const {gen, data, it} = cxt\n  gen.if(it.parentData, () => gen.assign(data, _`${it.parentData}[${it.parentDataProperty}]`))\n}\n\nfunction addErrs(cxt: KeywordCxt, errs: Code): void {\n  const {gen} = cxt\n  gen.if(\n    _`Array.isArray(${errs})`,\n    () => {\n      gen\n        .assign(N.vErrors, _`${N.vErrors} === null ? ${errs} : ${N.vErrors}.concat(${errs})`)\n        .assign(N.errors, _`${N.vErrors}.length`)\n      extendErrors(cxt)\n    },\n    () => cxt.error()\n  )\n}\n\nfunction checkAsyncKeyword({schemaEnv}: SchemaObjCxt, def: FuncKeywordDefinition): void {\n  if (def.async && !schemaEnv.$async) throw new Error(\"async keyword in sync schema\")\n}\n\nfunction useKeyword(gen: CodeGen, keyword: string, result?: KeywordCompilationResult): Name {\n  if (result === undefined) throw new Error(`keyword \"${keyword}\" failed to compile`)\n  return gen.scopeValue(\n    \"keyword\",\n    typeof result == \"function\" ? {ref: result} : {ref: result, code: stringify(result)}\n  )\n}\n\nexport function validSchemaType(\n  schema: unknown,\n  schemaType: JSONType[],\n  allowUndefined = false\n): boolean {\n  // TODO add tests\n  return (\n    !schemaType.length ||\n    schemaType.some((st) =>\n      st === \"array\"\n        ? Array.isArray(schema)\n        : st === \"object\"\n        ? schema && typeof schema == \"object\" && !Array.isArray(schema)\n        : typeof schema == st || (allowUndefined && typeof schema == \"undefined\")\n    )\n  )\n}\n\nexport function validateKeywordUsage(\n  {schema, opts, self, errSchemaPath}: SchemaObjCxt,\n  def: AddedKeywordDefinition,\n  keyword: string\n): void {\n  /* istanbul ignore if */\n  if (Array.isArray(def.keyword) ? !def.keyword.includes(keyword) : def.keyword !== keyword) {\n    throw new Error(\"ajv implementation error\")\n  }\n\n  const deps = def.dependencies\n  if (deps?.some((kwd) => !Object.prototype.hasOwnProperty.call(schema, kwd))) {\n    throw new Error(`parent schema must have dependencies of ${keyword}: ${deps.join(\",\")}`)\n  }\n\n  if (def.validateSchema) {\n    const valid = def.validateSchema(schema[keyword])\n    if (!valid) {\n      const msg =\n        `keyword \"${keyword}\" value is invalid at path \"${errSchemaPath}\": ` +\n        self.errorsText(def.validateSchema.errors)\n      if (opts.validateSchema === \"log\") self.logger.error(msg)\n      else throw new Error(msg)\n    }\n  }\n}\n","import type {AnySchema} from \"../../types\"\nimport type {SchemaObjCxt} from \"..\"\nimport {_, str, getProperty, Code, Name} from \"../codegen\"\nimport {escapeFragment, getErrorPath, Type} from \"../util\"\nimport type {JSONType} from \"../rules\"\n\nexport interface SubschemaContext {\n  // TODO use Optional? align with SchemCxt property types\n  schema: AnySchema\n  schemaPath: Code\n  errSchemaPath: string\n  topSchemaRef?: Code\n  errorPath?: Code\n  dataLevel?: number\n  dataTypes?: JSONType[]\n  data?: Name\n  parentData?: Name\n  parentDataProperty?: Code | number\n  dataNames?: Name[]\n  dataPathArr?: (Code | number)[]\n  propertyName?: Name\n  jtdDiscriminator?: string\n  jtdMetadata?: boolean\n  compositeRule?: true\n  createErrors?: boolean\n  allErrors?: boolean\n}\n\nexport type SubschemaArgs = Partial<{\n  keyword: string\n  schemaProp: string | number\n  schema: AnySchema\n  schemaPath: Code\n  errSchemaPath: string\n  topSchemaRef: Code\n  data: Name | Code\n  dataProp: Code | string | number\n  dataTypes: JSONType[]\n  definedProperties: Set<string>\n  propertyName: Name\n  dataPropType: Type\n  jtdDiscriminator: string\n  jtdMetadata: boolean\n  compositeRule: true\n  createErrors: boolean\n  allErrors: boolean\n}>\n\nexport function getSubschema(\n  it: SchemaObjCxt,\n  {keyword, schemaProp, schema, schemaPath, errSchemaPath, topSchemaRef}: SubschemaArgs\n): SubschemaContext {\n  if (keyword !== undefined && schema !== undefined) {\n    throw new Error('both \"keyword\" and \"schema\" passed, only one allowed')\n  }\n\n  if (keyword !== undefined) {\n    const sch = it.schema[keyword]\n    return schemaProp === undefined\n      ? {\n          schema: sch,\n          schemaPath: _`${it.schemaPath}${getProperty(keyword)}`,\n          errSchemaPath: `${it.errSchemaPath}/${keyword}`,\n        }\n      : {\n          schema: sch[schemaProp],\n          schemaPath: _`${it.schemaPath}${getProperty(keyword)}${getProperty(schemaProp)}`,\n          errSchemaPath: `${it.errSchemaPath}/${keyword}/${escapeFragment(schemaProp)}`,\n        }\n  }\n\n  if (schema !== undefined) {\n    if (schemaPath === undefined || errSchemaPath === undefined || topSchemaRef === undefined) {\n      throw new Error('\"schemaPath\", \"errSchemaPath\" and \"topSchemaRef\" are required with \"schema\"')\n    }\n    return {\n      schema,\n      schemaPath,\n      topSchemaRef,\n      errSchemaPath,\n    }\n  }\n\n  throw new Error('either \"keyword\" or \"schema\" must be passed')\n}\n\nexport function extendSubschemaData(\n  subschema: SubschemaContext,\n  it: SchemaObjCxt,\n  {dataProp, dataPropType: dpType, data, dataTypes, propertyName}: SubschemaArgs\n): void {\n  if (data !== undefined && dataProp !== undefined) {\n    throw new Error('both \"data\" and \"dataProp\" passed, only one allowed')\n  }\n\n  const {gen} = it\n\n  if (dataProp !== undefined) {\n    const {errorPath, dataPathArr, opts} = it\n    const nextData = gen.let(\"data\", _`${it.data}${getProperty(dataProp)}`, true)\n    dataContextProps(nextData)\n    subschema.errorPath = str`${errorPath}${getErrorPath(dataProp, dpType, opts.jsPropertySyntax)}`\n    subschema.parentDataProperty = _`${dataProp}`\n    subschema.dataPathArr = [...dataPathArr, subschema.parentDataProperty]\n  }\n\n  if (data !== undefined) {\n    const nextData = data instanceof Name ? data : gen.let(\"data\", data, true) // replaceable if used once?\n    dataContextProps(nextData)\n    if (propertyName !== undefined) subschema.propertyName = propertyName\n    // TODO something is possibly wrong here with not changing parentDataProperty and not appending dataPathArr\n  }\n\n  if (dataTypes) subschema.dataTypes = dataTypes\n\n  function dataContextProps(_nextData: Name): void {\n    subschema.data = _nextData\n    subschema.dataLevel = it.dataLevel + 1\n    subschema.dataTypes = []\n    it.definedProperties = new Set<string>()\n    subschema.parentData = it.data\n    subschema.dataNames = [...it.dataNames, _nextData]\n  }\n}\n\nexport function extendSubschemaMode(\n  subschema: SubschemaContext,\n  {jtdDiscriminator, jtdMetadata, compositeRule, createErrors, allErrors}: SubschemaArgs\n): void {\n  if (compositeRule !== undefined) subschema.compositeRule = compositeRule\n  if (createErrors !== undefined) subschema.createErrors = createErrors\n  if (allErrors !== undefined) subschema.allErrors = allErrors\n  subschema.jtdDiscriminator = jtdDiscriminator // not inherited\n  subschema.jtdMetadata = jtdMetadata // not inherited\n}\n","'use strict';\n\n// do not edit .js files directly - edit src/index.jst\n\n\n\nmodule.exports = function equal(a, b) {\n  if (a === b) return true;\n\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    if (a.constructor !== b.constructor) return false;\n\n    var length, i, keys;\n    if (Array.isArray(a)) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (!equal(a[i], b[i])) return false;\n      return true;\n    }\n\n\n\n    if (a.constructor === RegExp) return a.source === b.source && a.flags === b.flags;\n    if (a.valueOf !== Object.prototype.valueOf) return a.valueOf() === b.valueOf();\n    if (a.toString !== Object.prototype.toString) return a.toString() === b.toString();\n\n    keys = Object.keys(a);\n    length = keys.length;\n    if (length !== Object.keys(b).length) return false;\n\n    for (i = length; i-- !== 0;)\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\n\n    for (i = length; i-- !== 0;) {\n      var key = keys[i];\n\n      if (!equal(a[key], b[key])) return false;\n    }\n\n    return true;\n  }\n\n  // true if both NaN, false otherwise\n  return a!==a && b!==b;\n};\n","'use strict';\n\nvar traverse = module.exports = function (schema, opts, cb) {\n  // Legacy support for v0.3.1 and earlier.\n  if (typeof opts == 'function') {\n    cb = opts;\n    opts = {};\n  }\n\n  cb = opts.cb || cb;\n  var pre = (typeof cb == 'function') ? cb : cb.pre || function() {};\n  var post = cb.post || function() {};\n\n  _traverse(opts, pre, post, schema, '', schema);\n};\n\n\ntraverse.keywords = {\n  additionalItems: true,\n  items: true,\n  contains: true,\n  additionalProperties: true,\n  propertyNames: true,\n  not: true,\n  if: true,\n  then: true,\n  else: true\n};\n\ntraverse.arrayKeywords = {\n  items: true,\n  allOf: true,\n  anyOf: true,\n  oneOf: true\n};\n\ntraverse.propsKeywords = {\n  $defs: true,\n  definitions: true,\n  properties: true,\n  patternProperties: true,\n  dependencies: true\n};\n\ntraverse.skipKeywords = {\n  default: true,\n  enum: true,\n  const: true,\n  required: true,\n  maximum: true,\n  minimum: true,\n  exclusiveMaximum: true,\n  exclusiveMinimum: true,\n  multipleOf: true,\n  maxLength: true,\n  minLength: true,\n  pattern: true,\n  format: true,\n  maxItems: true,\n  minItems: true,\n  uniqueItems: true,\n  maxProperties: true,\n  minProperties: true\n};\n\n\nfunction _traverse(opts, pre, post, schema, jsonPtr, rootSchema, parentJsonPtr, parentKeyword, parentSchema, keyIndex) {\n  if (schema && typeof schema == 'object' && !Array.isArray(schema)) {\n    pre(schema, jsonPtr, rootSchema, parentJsonPtr, parentKeyword, parentSchema, keyIndex);\n    for (var key in schema) {\n      var sch = schema[key];\n      if (Array.isArray(sch)) {\n        if (key in traverse.arrayKeywords) {\n          for (var i=0; i<sch.length; i++)\n            _traverse(opts, pre, post, sch[i], jsonPtr + '/' + key + '/' + i, rootSchema, jsonPtr, key, schema, i);\n        }\n      } else if (key in traverse.propsKeywords) {\n        if (sch && typeof sch == 'object') {\n          for (var prop in sch)\n            _traverse(opts, pre, post, sch[prop], jsonPtr + '/' + key + '/' + escapeJsonPtr(prop), rootSchema, jsonPtr, key, schema, prop);\n        }\n      } else if (key in traverse.keywords || (opts.allKeys && !(key in traverse.skipKeywords))) {\n        _traverse(opts, pre, post, sch, jsonPtr + '/' + key, rootSchema, jsonPtr, key, schema);\n      }\n    }\n    post(schema, jsonPtr, rootSchema, parentJsonPtr, parentKeyword, parentSchema, keyIndex);\n  }\n}\n\n\nfunction escapeJsonPtr(str) {\n  return str.replace(/~/g, '~0').replace(/\\//g, '~1');\n}\n","import type {AnySchema, AnySchemaObject, UriResolver} from \"../types\"\nimport type Ajv from \"../ajv\"\nimport type {URIComponents} from \"uri-js\"\nimport {eachItem} from \"./util\"\nimport * as equal from \"fast-deep-equal\"\nimport * as traverse from \"json-schema-traverse\"\n\n// the hash of local references inside the schema (created by getSchemaRefs), used for inline resolution\nexport type LocalRefs = {[Ref in string]?: AnySchemaObject}\n\n// TODO refactor to use keyword definitions\nconst SIMPLE_INLINED = new Set([\n  \"type\",\n  \"format\",\n  \"pattern\",\n  \"maxLength\",\n  \"minLength\",\n  \"maxProperties\",\n  \"minProperties\",\n  \"maxItems\",\n  \"minItems\",\n  \"maximum\",\n  \"minimum\",\n  \"uniqueItems\",\n  \"multipleOf\",\n  \"required\",\n  \"enum\",\n  \"const\",\n])\n\nexport function inlineRef(schema: AnySchema, limit: boolean | number = true): boolean {\n  if (typeof schema == \"boolean\") return true\n  if (limit === true) return !hasRef(schema)\n  if (!limit) return false\n  return countKeys(schema) <= limit\n}\n\nconst REF_KEYWORDS = new Set([\n  \"$ref\",\n  \"$recursiveRef\",\n  \"$recursiveAnchor\",\n  \"$dynamicRef\",\n  \"$dynamicAnchor\",\n])\n\nfunction hasRef(schema: AnySchemaObject): boolean {\n  for (const key in schema) {\n    if (REF_KEYWORDS.has(key)) return true\n    const sch = schema[key]\n    if (Array.isArray(sch) && sch.some(hasRef)) return true\n    if (typeof sch == \"object\" && hasRef(sch)) return true\n  }\n  return false\n}\n\nfunction countKeys(schema: AnySchemaObject): number {\n  let count = 0\n  for (const key in schema) {\n    if (key === \"$ref\") return Infinity\n    count++\n    if (SIMPLE_INLINED.has(key)) continue\n    if (typeof schema[key] == \"object\") {\n      eachItem(schema[key], (sch) => (count += countKeys(sch)))\n    }\n    if (count === Infinity) return Infinity\n  }\n  return count\n}\n\nexport function getFullPath(resolver: UriResolver, id = \"\", normalize?: boolean): string {\n  if (normalize !== false) id = normalizeId(id)\n  const p = resolver.parse(id)\n  return _getFullPath(resolver, p)\n}\n\nexport function _getFullPath(resolver: UriResolver, p: URIComponents): string {\n  const serialized = resolver.serialize(p)\n  return serialized.split(\"#\")[0] + \"#\"\n}\n\nconst TRAILING_SLASH_HASH = /#\\/?$/\nexport function normalizeId(id: string | undefined): string {\n  return id ? id.replace(TRAILING_SLASH_HASH, \"\") : \"\"\n}\n\nexport function resolveUrl(resolver: UriResolver, baseId: string, id: string): string {\n  id = normalizeId(id)\n  return resolver.resolve(baseId, id)\n}\n\nconst ANCHOR = /^[a-z_][-a-z0-9._]*$/i\n\nexport function getSchemaRefs(this: Ajv, schema: AnySchema, baseId: string): LocalRefs {\n  if (typeof schema == \"boolean\") return {}\n  const {schemaId, uriResolver} = this.opts\n  const schId = normalizeId(schema[schemaId] || baseId)\n  const baseIds: {[JsonPtr in string]?: string} = {\"\": schId}\n  const pathPrefix = getFullPath(uriResolver, schId, false)\n  const localRefs: LocalRefs = {}\n  const schemaRefs: Set<string> = new Set()\n\n  traverse(schema, {allKeys: true}, (sch, jsonPtr, _, parentJsonPtr) => {\n    if (parentJsonPtr === undefined) return\n    const fullPath = pathPrefix + jsonPtr\n    let innerBaseId = baseIds[parentJsonPtr]\n    if (typeof sch[schemaId] == \"string\") innerBaseId = addRef.call(this, sch[schemaId])\n    addAnchor.call(this, sch.$anchor)\n    addAnchor.call(this, sch.$dynamicAnchor)\n    baseIds[jsonPtr] = innerBaseId\n\n    function addRef(this: Ajv, ref: string): string {\n      // eslint-disable-next-line @typescript-eslint/unbound-method\n      const _resolve = this.opts.uriResolver.resolve\n      ref = normalizeId(innerBaseId ? _resolve(innerBaseId, ref) : ref)\n      if (schemaRefs.has(ref)) throw ambiguos(ref)\n      schemaRefs.add(ref)\n      let schOrRef = this.refs[ref]\n      if (typeof schOrRef == \"string\") schOrRef = this.refs[schOrRef]\n      if (typeof schOrRef == \"object\") {\n        checkAmbiguosRef(sch, schOrRef.schema, ref)\n      } else if (ref !== normalizeId(fullPath)) {\n        if (ref[0] === \"#\") {\n          checkAmbiguosRef(sch, localRefs[ref], ref)\n          localRefs[ref] = sch\n        } else {\n          this.refs[ref] = fullPath\n        }\n      }\n      return ref\n    }\n\n    function addAnchor(this: Ajv, anchor: unknown): void {\n      if (typeof anchor == \"string\") {\n        if (!ANCHOR.test(anchor)) throw new Error(`invalid anchor \"${anchor}\"`)\n        addRef.call(this, `#${anchor}`)\n      }\n    }\n  })\n\n  return localRefs\n\n  function checkAmbiguosRef(sch1: AnySchema, sch2: AnySchema | undefined, ref: string): void {\n    if (sch2 !== undefined && !equal(sch1, sch2)) throw ambiguos(ref)\n  }\n\n  function ambiguos(ref: string): Error {\n    return new Error(`reference \"${ref}\" resolves to more than one schema`)\n  }\n}\n","import type {\n  AddedKeywordDefinition,\n  AnySchema,\n  AnySchemaObject,\n  KeywordErrorCxt,\n  KeywordCxtParams,\n} from \"../../types\"\nimport type {SchemaCxt, SchemaObjCxt} from \"..\"\nimport type {InstanceOptions} from \"../../core\"\nimport {boolOrEmptySchema, topBoolOrEmptySchema} from \"./boolSchema\"\nimport {coerceAndCheckDataType, getSchemaTypes} from \"./dataType\"\nimport {shouldUseGroup, shouldUseRule} from \"./applicability\"\nimport {checkDataType, checkDataTypes, reportTypeError, DataType} from \"./dataType\"\nimport {assignDefaults} from \"./defaults\"\nimport {funcKeywordCode, macroKeywordCode, validateKeywordUsage, validSchemaType} from \"./keyword\"\nimport {getSubschema, extendSubschemaData, SubschemaArgs, extendSubschemaMode} from \"./subschema\"\nimport {_, nil, str, or, not, getProperty, Block, Code, Name, CodeGen} from \"../codegen\"\nimport N from \"../names\"\nimport {resolveUrl} from \"../resolve\"\nimport {\n  schemaRefOrVal,\n  schemaHasRulesButRef,\n  checkUnknownRules,\n  checkStrictMode,\n  unescapeJsonPointer,\n  mergeEvaluated,\n} from \"../util\"\nimport type {JSONType, Rule, RuleGroup} from \"../rules\"\nimport {\n  ErrorPaths,\n  reportError,\n  reportExtraError,\n  resetErrorsCount,\n  keyword$DataError,\n} from \"../errors\"\n\n// schema compilation - generates validation function, subschemaCode (below) is used for subschemas\nexport function validateFunctionCode(it: SchemaCxt): void {\n  if (isSchemaObj(it)) {\n    checkKeywords(it)\n    if (schemaCxtHasRules(it)) {\n      topSchemaObjCode(it)\n      return\n    }\n  }\n  validateFunction(it, () => topBoolOrEmptySchema(it))\n}\n\nfunction validateFunction(\n  {gen, validateName, schema, schemaEnv, opts}: SchemaCxt,\n  body: Block\n): void {\n  if (opts.code.es5) {\n    gen.func(validateName, _`${N.data}, ${N.valCxt}`, schemaEnv.$async, () => {\n      gen.code(_`\"use strict\"; ${funcSourceUrl(schema, opts)}`)\n      destructureValCxtES5(gen, opts)\n      gen.code(body)\n    })\n  } else {\n    gen.func(validateName, _`${N.data}, ${destructureValCxt(opts)}`, schemaEnv.$async, () =>\n      gen.code(funcSourceUrl(schema, opts)).code(body)\n    )\n  }\n}\n\nfunction destructureValCxt(opts: InstanceOptions): Code {\n  return _`{${N.instancePath}=\"\", ${N.parentData}, ${N.parentDataProperty}, ${N.rootData}=${\n    N.data\n  }${opts.dynamicRef ? _`, ${N.dynamicAnchors}={}` : nil}}={}`\n}\n\nfunction destructureValCxtES5(gen: CodeGen, opts: InstanceOptions): void {\n  gen.if(\n    N.valCxt,\n    () => {\n      gen.var(N.instancePath, _`${N.valCxt}.${N.instancePath}`)\n      gen.var(N.parentData, _`${N.valCxt}.${N.parentData}`)\n      gen.var(N.parentDataProperty, _`${N.valCxt}.${N.parentDataProperty}`)\n      gen.var(N.rootData, _`${N.valCxt}.${N.rootData}`)\n      if (opts.dynamicRef) gen.var(N.dynamicAnchors, _`${N.valCxt}.${N.dynamicAnchors}`)\n    },\n    () => {\n      gen.var(N.instancePath, _`\"\"`)\n      gen.var(N.parentData, _`undefined`)\n      gen.var(N.parentDataProperty, _`undefined`)\n      gen.var(N.rootData, N.data)\n      if (opts.dynamicRef) gen.var(N.dynamicAnchors, _`{}`)\n    }\n  )\n}\n\nfunction topSchemaObjCode(it: SchemaObjCxt): void {\n  const {schema, opts, gen} = it\n  validateFunction(it, () => {\n    if (opts.$comment && schema.$comment) commentKeyword(it)\n    checkNoDefault(it)\n    gen.let(N.vErrors, null)\n    gen.let(N.errors, 0)\n    if (opts.unevaluated) resetEvaluated(it)\n    typeAndKeywords(it)\n    returnResults(it)\n  })\n  return\n}\n\nfunction resetEvaluated(it: SchemaObjCxt): void {\n  // TODO maybe some hook to execute it in the end to check whether props/items are Name, as in assignEvaluated\n  const {gen, validateName} = it\n  it.evaluated = gen.const(\"evaluated\", _`${validateName}.evaluated`)\n  gen.if(_`${it.evaluated}.dynamicProps`, () => gen.assign(_`${it.evaluated}.props`, _`undefined`))\n  gen.if(_`${it.evaluated}.dynamicItems`, () => gen.assign(_`${it.evaluated}.items`, _`undefined`))\n}\n\nfunction funcSourceUrl(schema: AnySchema, opts: InstanceOptions): Code {\n  const schId = typeof schema == \"object\" && schema[opts.schemaId]\n  return schId && (opts.code.source || opts.code.process) ? _`/*# sourceURL=${schId} */` : nil\n}\n\n// schema compilation - this function is used recursively to generate code for sub-schemas\nfunction subschemaCode(it: SchemaCxt, valid: Name): void {\n  if (isSchemaObj(it)) {\n    checkKeywords(it)\n    if (schemaCxtHasRules(it)) {\n      subSchemaObjCode(it, valid)\n      return\n    }\n  }\n  boolOrEmptySchema(it, valid)\n}\n\nfunction schemaCxtHasRules({schema, self}: SchemaCxt): boolean {\n  if (typeof schema == \"boolean\") return !schema\n  for (const key in schema) if (self.RULES.all[key]) return true\n  return false\n}\n\nfunction isSchemaObj(it: SchemaCxt): it is SchemaObjCxt {\n  return typeof it.schema != \"boolean\"\n}\n\nfunction subSchemaObjCode(it: SchemaObjCxt, valid: Name): void {\n  const {schema, gen, opts} = it\n  if (opts.$comment && schema.$comment) commentKeyword(it)\n  updateContext(it)\n  checkAsyncSchema(it)\n  const errsCount = gen.const(\"_errs\", N.errors)\n  typeAndKeywords(it, errsCount)\n  // TODO var\n  gen.var(valid, _`${errsCount} === ${N.errors}`)\n}\n\nfunction checkKeywords(it: SchemaObjCxt): void {\n  checkUnknownRules(it)\n  checkRefsAndKeywords(it)\n}\n\nfunction typeAndKeywords(it: SchemaObjCxt, errsCount?: Name): void {\n  if (it.opts.jtd) return schemaKeywords(it, [], false, errsCount)\n  const types = getSchemaTypes(it.schema)\n  const checkedTypes = coerceAndCheckDataType(it, types)\n  schemaKeywords(it, types, !checkedTypes, errsCount)\n}\n\nfunction checkRefsAndKeywords(it: SchemaObjCxt): void {\n  const {schema, errSchemaPath, opts, self} = it\n  if (schema.$ref && opts.ignoreKeywordsWithRef && schemaHasRulesButRef(schema, self.RULES)) {\n    self.logger.warn(`$ref: keywords ignored in schema at path \"${errSchemaPath}\"`)\n  }\n}\n\nfunction checkNoDefault(it: SchemaObjCxt): void {\n  const {schema, opts} = it\n  if (schema.default !== undefined && opts.useDefaults && opts.strictSchema) {\n    checkStrictMode(it, \"default is ignored in the schema root\")\n  }\n}\n\nfunction updateContext(it: SchemaObjCxt): void {\n  const schId = it.schema[it.opts.schemaId]\n  if (schId) it.baseId = resolveUrl(it.opts.uriResolver, it.baseId, schId)\n}\n\nfunction checkAsyncSchema(it: SchemaObjCxt): void {\n  if (it.schema.$async && !it.schemaEnv.$async) throw new Error(\"async schema in sync schema\")\n}\n\nfunction commentKeyword({gen, schemaEnv, schema, errSchemaPath, opts}: SchemaObjCxt): void {\n  const msg = schema.$comment\n  if (opts.$comment === true) {\n    gen.code(_`${N.self}.logger.log(${msg})`)\n  } else if (typeof opts.$comment == \"function\") {\n    const schemaPath = str`${errSchemaPath}/$comment`\n    const rootName = gen.scopeValue(\"root\", {ref: schemaEnv.root})\n    gen.code(_`${N.self}.opts.$comment(${msg}, ${schemaPath}, ${rootName}.schema)`)\n  }\n}\n\nfunction returnResults(it: SchemaCxt): void {\n  const {gen, schemaEnv, validateName, ValidationError, opts} = it\n  if (schemaEnv.$async) {\n    // TODO assign unevaluated\n    gen.if(\n      _`${N.errors} === 0`,\n      () => gen.return(N.data),\n      () => gen.throw(_`new ${ValidationError as Name}(${N.vErrors})`)\n    )\n  } else {\n    gen.assign(_`${validateName}.errors`, N.vErrors)\n    if (opts.unevaluated) assignEvaluated(it)\n    gen.return(_`${N.errors} === 0`)\n  }\n}\n\nfunction assignEvaluated({gen, evaluated, props, items}: SchemaCxt): void {\n  if (props instanceof Name) gen.assign(_`${evaluated}.props`, props)\n  if (items instanceof Name) gen.assign(_`${evaluated}.items`, items)\n}\n\nfunction schemaKeywords(\n  it: SchemaObjCxt,\n  types: JSONType[],\n  typeErrors: boolean,\n  errsCount?: Name\n): void {\n  const {gen, schema, data, allErrors, opts, self} = it\n  const {RULES} = self\n  if (schema.$ref && (opts.ignoreKeywordsWithRef || !schemaHasRulesButRef(schema, RULES))) {\n    gen.block(() => keywordCode(it, \"$ref\", (RULES.all.$ref as Rule).definition)) // TODO typecast\n    return\n  }\n  if (!opts.jtd) checkStrictTypes(it, types)\n  gen.block(() => {\n    for (const group of RULES.rules) groupKeywords(group)\n    groupKeywords(RULES.post)\n  })\n\n  function groupKeywords(group: RuleGroup): void {\n    if (!shouldUseGroup(schema, group)) return\n    if (group.type) {\n      gen.if(checkDataType(group.type, data, opts.strictNumbers))\n      iterateKeywords(it, group)\n      if (types.length === 1 && types[0] === group.type && typeErrors) {\n        gen.else()\n        reportTypeError(it)\n      }\n      gen.endIf()\n    } else {\n      iterateKeywords(it, group)\n    }\n    // TODO make it \"ok\" call?\n    if (!allErrors) gen.if(_`${N.errors} === ${errsCount || 0}`)\n  }\n}\n\nfunction iterateKeywords(it: SchemaObjCxt, group: RuleGroup): void {\n  const {\n    gen,\n    schema,\n    opts: {useDefaults},\n  } = it\n  if (useDefaults) assignDefaults(it, group.type)\n  gen.block(() => {\n    for (const rule of group.rules) {\n      if (shouldUseRule(schema, rule)) {\n        keywordCode(it, rule.keyword, rule.definition, group.type)\n      }\n    }\n  })\n}\n\nfunction checkStrictTypes(it: SchemaObjCxt, types: JSONType[]): void {\n  if (it.schemaEnv.meta || !it.opts.strictTypes) return\n  checkContextTypes(it, types)\n  if (!it.opts.allowUnionTypes) checkMultipleTypes(it, types)\n  checkKeywordTypes(it, it.dataTypes)\n}\n\nfunction checkContextTypes(it: SchemaObjCxt, types: JSONType[]): void {\n  if (!types.length) return\n  if (!it.dataTypes.length) {\n    it.dataTypes = types\n    return\n  }\n  types.forEach((t) => {\n    if (!includesType(it.dataTypes, t)) {\n      strictTypesError(it, `type \"${t}\" not allowed by context \"${it.dataTypes.join(\",\")}\"`)\n    }\n  })\n  narrowSchemaTypes(it, types)\n}\n\nfunction checkMultipleTypes(it: SchemaObjCxt, ts: JSONType[]): void {\n  if (ts.length > 1 && !(ts.length === 2 && ts.includes(\"null\"))) {\n    strictTypesError(it, \"use allowUnionTypes to allow union type keyword\")\n  }\n}\n\nfunction checkKeywordTypes(it: SchemaObjCxt, ts: JSONType[]): void {\n  const rules = it.self.RULES.all\n  for (const keyword in rules) {\n    const rule = rules[keyword]\n    if (typeof rule == \"object\" && shouldUseRule(it.schema, rule)) {\n      const {type} = rule.definition\n      if (type.length && !type.some((t) => hasApplicableType(ts, t))) {\n        strictTypesError(it, `missing type \"${type.join(\",\")}\" for keyword \"${keyword}\"`)\n      }\n    }\n  }\n}\n\nfunction hasApplicableType(schTs: JSONType[], kwdT: JSONType): boolean {\n  return schTs.includes(kwdT) || (kwdT === \"number\" && schTs.includes(\"integer\"))\n}\n\nfunction includesType(ts: JSONType[], t: JSONType): boolean {\n  return ts.includes(t) || (t === \"integer\" && ts.includes(\"number\"))\n}\n\nfunction narrowSchemaTypes(it: SchemaObjCxt, withTypes: JSONType[]): void {\n  const ts: JSONType[] = []\n  for (const t of it.dataTypes) {\n    if (includesType(withTypes, t)) ts.push(t)\n    else if (withTypes.includes(\"integer\") && t === \"number\") ts.push(\"integer\")\n  }\n  it.dataTypes = ts\n}\n\nfunction strictTypesError(it: SchemaObjCxt, msg: string): void {\n  const schemaPath = it.schemaEnv.baseId + it.errSchemaPath\n  msg += ` at \"${schemaPath}\" (strictTypes)`\n  checkStrictMode(it, msg, it.opts.strictTypes)\n}\n\nexport class KeywordCxt implements KeywordErrorCxt {\n  readonly gen: CodeGen\n  readonly allErrors?: boolean\n  readonly keyword: string\n  readonly data: Name // Name referencing the current level of the data instance\n  readonly $data?: string | false\n  schema: any // keyword value in the schema\n  readonly schemaValue: Code | number | boolean // Code reference to keyword schema value or primitive value\n  readonly schemaCode: Code | number | boolean // Code reference to resolved schema value (different if schema is $data)\n  readonly schemaType: JSONType[] // allowed type(s) of keyword value in the schema\n  readonly parentSchema: AnySchemaObject\n  readonly errsCount?: Name // Name reference to the number of validation errors collected before this keyword,\n  // requires option trackErrors in keyword definition\n  params: KeywordCxtParams // object to pass parameters to error messages from keyword code\n  readonly it: SchemaObjCxt // schema compilation context (schema is guaranteed to be an object, not boolean)\n  readonly def: AddedKeywordDefinition\n\n  constructor(it: SchemaObjCxt, def: AddedKeywordDefinition, keyword: string) {\n    validateKeywordUsage(it, def, keyword)\n    this.gen = it.gen\n    this.allErrors = it.allErrors\n    this.keyword = keyword\n    this.data = it.data\n    this.schema = it.schema[keyword]\n    this.$data = def.$data && it.opts.$data && this.schema && this.schema.$data\n    this.schemaValue = schemaRefOrVal(it, this.schema, keyword, this.$data)\n    this.schemaType = def.schemaType\n    this.parentSchema = it.schema\n    this.params = {}\n    this.it = it\n    this.def = def\n\n    if (this.$data) {\n      this.schemaCode = it.gen.const(\"vSchema\", getData(this.$data, it))\n    } else {\n      this.schemaCode = this.schemaValue\n      if (!validSchemaType(this.schema, def.schemaType, def.allowUndefined)) {\n        throw new Error(`${keyword} value must be ${JSON.stringify(def.schemaType)}`)\n      }\n    }\n\n    if (\"code\" in def ? def.trackErrors : def.errors !== false) {\n      this.errsCount = it.gen.const(\"_errs\", N.errors)\n    }\n  }\n\n  result(condition: Code, successAction?: () => void, failAction?: () => void): void {\n    this.failResult(not(condition), successAction, failAction)\n  }\n\n  failResult(condition: Code, successAction?: () => void, failAction?: () => void): void {\n    this.gen.if(condition)\n    if (failAction) failAction()\n    else this.error()\n    if (successAction) {\n      this.gen.else()\n      successAction()\n      if (this.allErrors) this.gen.endIf()\n    } else {\n      if (this.allErrors) this.gen.endIf()\n      else this.gen.else()\n    }\n  }\n\n  pass(condition: Code, failAction?: () => void): void {\n    this.failResult(not(condition), undefined, failAction)\n  }\n\n  fail(condition?: Code): void {\n    if (condition === undefined) {\n      this.error()\n      if (!this.allErrors) this.gen.if(false) // this branch will be removed by gen.optimize\n      return\n    }\n    this.gen.if(condition)\n    this.error()\n    if (this.allErrors) this.gen.endIf()\n    else this.gen.else()\n  }\n\n  fail$data(condition: Code): void {\n    if (!this.$data) return this.fail(condition)\n    const {schemaCode} = this\n    this.fail(_`${schemaCode} !== undefined && (${or(this.invalid$data(), condition)})`)\n  }\n\n  error(append?: boolean, errorParams?: KeywordCxtParams, errorPaths?: ErrorPaths): void {\n    if (errorParams) {\n      this.setParams(errorParams)\n      this._error(append, errorPaths)\n      this.setParams({})\n      return\n    }\n    this._error(append, errorPaths)\n  }\n\n  private _error(append?: boolean, errorPaths?: ErrorPaths): void {\n    ;(append ? reportExtraError : reportError)(this, this.def.error, errorPaths)\n  }\n\n  $dataError(): void {\n    reportError(this, this.def.$dataError || keyword$DataError)\n  }\n\n  reset(): void {\n    if (this.errsCount === undefined) throw new Error('add \"trackErrors\" to keyword definition')\n    resetErrorsCount(this.gen, this.errsCount)\n  }\n\n  ok(cond: Code | boolean): void {\n    if (!this.allErrors) this.gen.if(cond)\n  }\n\n  setParams(obj: KeywordCxtParams, assign?: true): void {\n    if (assign) Object.assign(this.params, obj)\n    else this.params = obj\n  }\n\n  block$data(valid: Name, codeBlock: () => void, $dataValid: Code = nil): void {\n    this.gen.block(() => {\n      this.check$data(valid, $dataValid)\n      codeBlock()\n    })\n  }\n\n  check$data(valid: Name = nil, $dataValid: Code = nil): void {\n    if (!this.$data) return\n    const {gen, schemaCode, schemaType, def} = this\n    gen.if(or(_`${schemaCode} === undefined`, $dataValid))\n    if (valid !== nil) gen.assign(valid, true)\n    if (schemaType.length || def.validateSchema) {\n      gen.elseIf(this.invalid$data())\n      this.$dataError()\n      if (valid !== nil) gen.assign(valid, false)\n    }\n    gen.else()\n  }\n\n  invalid$data(): Code {\n    const {gen, schemaCode, schemaType, def, it} = this\n    return or(wrong$DataType(), invalid$DataSchema())\n\n    function wrong$DataType(): Code {\n      if (schemaType.length) {\n        /* istanbul ignore if */\n        if (!(schemaCode instanceof Name)) throw new Error(\"ajv implementation error\")\n        const st = Array.isArray(schemaType) ? schemaType : [schemaType]\n        return _`${checkDataTypes(st, schemaCode, it.opts.strictNumbers, DataType.Wrong)}`\n      }\n      return nil\n    }\n\n    function invalid$DataSchema(): Code {\n      if (def.validateSchema) {\n        const validateSchemaRef = gen.scopeValue(\"validate$data\", {ref: def.validateSchema}) // TODO value.code for standalone\n        return _`!${validateSchemaRef}(${schemaCode})`\n      }\n      return nil\n    }\n  }\n\n  subschema(appl: SubschemaArgs, valid: Name): SchemaCxt {\n    const subschema = getSubschema(this.it, appl)\n    extendSubschemaData(subschema, this.it, appl)\n    extendSubschemaMode(subschema, appl)\n    const nextContext = {...this.it, ...subschema, items: undefined, props: undefined}\n    subschemaCode(nextContext, valid)\n    return nextContext\n  }\n\n  mergeEvaluated(schemaCxt: SchemaCxt, toName?: typeof Name): void {\n    const {it, gen} = this\n    if (!it.opts.unevaluated) return\n    if (it.props !== true && schemaCxt.props !== undefined) {\n      it.props = mergeEvaluated.props(gen, schemaCxt.props, it.props, toName)\n    }\n    if (it.items !== true && schemaCxt.items !== undefined) {\n      it.items = mergeEvaluated.items(gen, schemaCxt.items, it.items, toName)\n    }\n  }\n\n  mergeValidEvaluated(schemaCxt: SchemaCxt, valid: Name): boolean | void {\n    const {it, gen} = this\n    if (it.opts.unevaluated && (it.props !== true || it.items !== true)) {\n      gen.if(valid, () => this.mergeEvaluated(schemaCxt, Name))\n      return true\n    }\n  }\n}\n\nfunction keywordCode(\n  it: SchemaObjCxt,\n  keyword: string,\n  def: AddedKeywordDefinition,\n  ruleType?: JSONType\n): void {\n  const cxt = new KeywordCxt(it, def, keyword)\n  if (\"code\" in def) {\n    def.code(cxt, ruleType)\n  } else if (cxt.$data && def.validate) {\n    funcKeywordCode(cxt, def)\n  } else if (\"macro\" in def) {\n    macroKeywordCode(cxt, def)\n  } else if (def.compile || def.validate) {\n    funcKeywordCode(cxt, def)\n  }\n}\n\nconst JSON_POINTER = /^\\/(?:[^~]|~0|~1)*$/\nconst RELATIVE_JSON_POINTER = /^([0-9]+)(#|\\/(?:[^~]|~0|~1)*)?$/\nexport function getData(\n  $data: string,\n  {dataLevel, dataNames, dataPathArr}: SchemaCxt\n): Code | number {\n  let jsonPointer\n  let data: Code\n  if ($data === \"\") return N.rootData\n  if ($data[0] === \"/\") {\n    if (!JSON_POINTER.test($data)) throw new Error(`Invalid JSON-pointer: ${$data}`)\n    jsonPointer = $data\n    data = N.rootData\n  } else {\n    const matches = RELATIVE_JSON_POINTER.exec($data)\n    if (!matches) throw new Error(`Invalid JSON-pointer: ${$data}`)\n    const up: number = +matches[1]\n    jsonPointer = matches[2]\n    if (jsonPointer === \"#\") {\n      if (up >= dataLevel) throw new Error(errorMsg(\"property/index\", up))\n      return dataPathArr[dataLevel - up]\n    }\n    if (up > dataLevel) throw new Error(errorMsg(\"data\", up))\n    data = dataNames[dataLevel - up]\n    if (!jsonPointer) return data\n  }\n\n  let expr = data\n  const segments = jsonPointer.split(\"/\")\n  for (const segment of segments) {\n    if (segment) {\n      data = _`${data}${getProperty(unescapeJsonPointer(segment))}`\n      expr = _`${expr} && ${data}`\n    }\n  }\n  return expr\n\n  function errorMsg(pointerType: string, up: number): string {\n    return `Cannot access ${pointerType} ${up} levels up, current level is ${dataLevel}`\n  }\n}\n","import type {ErrorObject} from \"../types\"\n\nexport default class ValidationError extends Error {\n  readonly errors: Partial<ErrorObject>[]\n  readonly ajv: true\n  readonly validation: true\n\n  constructor(errors: Partial<ErrorObject>[]) {\n    super(\"validation failed\")\n    this.errors = errors\n    this.ajv = this.validation = true\n  }\n}\n","import {resolveUrl, normalizeId, getFullPath} from \"./resolve\"\nimport type {UriResolver} from \"../types\"\n\nexport default class MissingRefError extends Error {\n  readonly missingRef: string\n  readonly missingSchema: string\n\n  constructor(resolver: UriResolver, baseId: string, ref: string, msg?: string) {\n    super(msg || `can't resolve reference ${ref} from id ${baseId}`)\n    this.missingRef = resolveUrl(resolver, baseId, ref)\n    this.missingSchema = normalizeId(getFullPath(resolver, this.missingRef))\n  }\n}\n","import type {\n  AnySchema,\n  AnySchemaObject,\n  AnyValidateFunction,\n  AsyncValidateFunction,\n  EvaluatedProperties,\n  EvaluatedItems,\n} from \"../types\"\nimport type Ajv from \"../core\"\nimport type {InstanceOptions} from \"../core\"\nimport {CodeGen, _, nil, stringify, Name, Code, ValueScopeName} from \"./codegen\"\nimport ValidationError from \"../runtime/validation_error\"\nimport N from \"./names\"\nimport {LocalRefs, getFullPath, _getFullPath, inlineRef, normalizeId, resolveUrl} from \"./resolve\"\nimport {schemaHasRulesButRef, unescapeFragment} from \"./util\"\nimport {validateFunctionCode} from \"./validate\"\nimport * as URI from \"uri-js\"\nimport {JSONType} from \"./rules\"\n\nexport type SchemaRefs = {\n  [Ref in string]?: SchemaEnv | AnySchema\n}\n\nexport interface SchemaCxt {\n  readonly gen: CodeGen\n  readonly allErrors?: boolean // validation mode - whether to collect all errors or break on error\n  readonly data: Name // Name with reference to the current part of data instance\n  readonly parentData: Name // should be used in keywords modifying data\n  readonly parentDataProperty: Code | number // should be used in keywords modifying data\n  readonly dataNames: Name[]\n  readonly dataPathArr: (Code | number)[]\n  readonly dataLevel: number // the level of the currently validated data,\n  // it can be used to access both the property names and the data on all levels from the top.\n  dataTypes: JSONType[] // data types applied to the current part of data instance\n  definedProperties: Set<string> // set of properties to keep track of for required checks\n  readonly topSchemaRef: Code\n  readonly validateName: Name\n  evaluated?: Name\n  readonly ValidationError?: Name\n  readonly schema: AnySchema // current schema object - equal to parentSchema passed via KeywordCxt\n  readonly schemaEnv: SchemaEnv\n  readonly rootId: string\n  baseId: string // the current schema base URI that should be used as the base for resolving URIs in references (\\$ref)\n  readonly schemaPath: Code // the run-time expression that evaluates to the property name of the current schema\n  readonly errSchemaPath: string // this is actual string, should not be changed to Code\n  readonly errorPath: Code\n  readonly propertyName?: Name\n  readonly compositeRule?: boolean // true indicates that the current schema is inside the compound keyword,\n  // where failing some rule doesn't mean validation failure (`anyOf`, `oneOf`, `not`, `if`).\n  // This flag is used to determine whether you can return validation result immediately after any error in case the option `allErrors` is not `true.\n  // You only need to use it if you have many steps in your keywords and potentially can define multiple errors.\n  props?: EvaluatedProperties | Name // properties evaluated by this schema - used by parent schema or assigned to validation function\n  items?: EvaluatedItems | Name // last item evaluated by this schema - used by parent schema or assigned to validation function\n  jtdDiscriminator?: string\n  jtdMetadata?: boolean\n  readonly createErrors?: boolean\n  readonly opts: InstanceOptions // Ajv instance option.\n  readonly self: Ajv // current Ajv instance\n}\n\nexport interface SchemaObjCxt extends SchemaCxt {\n  readonly schema: AnySchemaObject\n}\ninterface SchemaEnvArgs {\n  readonly schema: AnySchema\n  readonly schemaId?: \"$id\" | \"id\"\n  readonly root?: SchemaEnv\n  readonly baseId?: string\n  readonly schemaPath?: string\n  readonly localRefs?: LocalRefs\n  readonly meta?: boolean\n}\n\nexport class SchemaEnv implements SchemaEnvArgs {\n  readonly schema: AnySchema\n  readonly schemaId?: \"$id\" | \"id\"\n  readonly root: SchemaEnv\n  baseId: string // TODO possibly, it should be readonly\n  schemaPath?: string\n  localRefs?: LocalRefs\n  readonly meta?: boolean\n  readonly $async?: boolean // true if the current schema is asynchronous.\n  readonly refs: SchemaRefs = {}\n  readonly dynamicAnchors: {[Ref in string]?: true} = {}\n  validate?: AnyValidateFunction\n  validateName?: ValueScopeName\n  serialize?: (data: unknown) => string\n  serializeName?: ValueScopeName\n  parse?: (data: string) => unknown\n  parseName?: ValueScopeName\n\n  constructor(env: SchemaEnvArgs) {\n    let schema: AnySchemaObject | undefined\n    if (typeof env.schema == \"object\") schema = env.schema\n    this.schema = env.schema\n    this.schemaId = env.schemaId\n    this.root = env.root || this\n    this.baseId = env.baseId ?? normalizeId(schema?.[env.schemaId || \"$id\"])\n    this.schemaPath = env.schemaPath\n    this.localRefs = env.localRefs\n    this.meta = env.meta\n    this.$async = schema?.$async\n    this.refs = {}\n  }\n}\n\n// let codeSize = 0\n// let nodeCount = 0\n\n// Compiles schema in SchemaEnv\nexport function compileSchema(this: Ajv, sch: SchemaEnv): SchemaEnv {\n  // TODO refactor - remove compilations\n  const _sch = getCompilingSchema.call(this, sch)\n  if (_sch) return _sch\n  const rootId = getFullPath(this.opts.uriResolver, sch.root.baseId) // TODO if getFullPath removed 1 tests fails\n  const {es5, lines} = this.opts.code\n  const {ownProperties} = this.opts\n  const gen = new CodeGen(this.scope, {es5, lines, ownProperties})\n  let _ValidationError\n  if (sch.$async) {\n    _ValidationError = gen.scopeValue(\"Error\", {\n      ref: ValidationError,\n      code: _`require(\"ajv/dist/runtime/validation_error\").default`,\n    })\n  }\n\n  const validateName = gen.scopeName(\"validate\")\n  sch.validateName = validateName\n\n  const schemaCxt: SchemaCxt = {\n    gen,\n    allErrors: this.opts.allErrors,\n    data: N.data,\n    parentData: N.parentData,\n    parentDataProperty: N.parentDataProperty,\n    dataNames: [N.data],\n    dataPathArr: [nil], // TODO can its length be used as dataLevel if nil is removed?\n    dataLevel: 0,\n    dataTypes: [],\n    definedProperties: new Set<string>(),\n    topSchemaRef: gen.scopeValue(\n      \"schema\",\n      this.opts.code.source === true\n        ? {ref: sch.schema, code: stringify(sch.schema)}\n        : {ref: sch.schema}\n    ),\n    validateName,\n    ValidationError: _ValidationError,\n    schema: sch.schema,\n    schemaEnv: sch,\n    rootId,\n    baseId: sch.baseId || rootId,\n    schemaPath: nil,\n    errSchemaPath: sch.schemaPath || (this.opts.jtd ? \"\" : \"#\"),\n    errorPath: _`\"\"`,\n    opts: this.opts,\n    self: this,\n  }\n\n  let sourceCode: string | undefined\n  try {\n    this._compilations.add(sch)\n    validateFunctionCode(schemaCxt)\n    gen.optimize(this.opts.code.optimize)\n    // gen.optimize(1)\n    const validateCode = gen.toString()\n    sourceCode = `${gen.scopeRefs(N.scope)}return ${validateCode}`\n    // console.log((codeSize += sourceCode.length), (nodeCount += gen.nodeCount))\n    if (this.opts.code.process) sourceCode = this.opts.code.process(sourceCode, sch)\n    // console.log(\"\\n\\n\\n *** \\n\", sourceCode)\n    const makeValidate = new Function(`${N.self}`, `${N.scope}`, sourceCode)\n    const validate: AnyValidateFunction = makeValidate(this, this.scope.get())\n    this.scope.value(validateName, {ref: validate})\n\n    validate.errors = null\n    validate.schema = sch.schema\n    validate.schemaEnv = sch\n    if (sch.$async) (validate as AsyncValidateFunction).$async = true\n    if (this.opts.code.source === true) {\n      validate.source = {validateName, validateCode, scopeValues: gen._values}\n    }\n    if (this.opts.unevaluated) {\n      const {props, items} = schemaCxt\n      validate.evaluated = {\n        props: props instanceof Name ? undefined : props,\n        items: items instanceof Name ? undefined : items,\n        dynamicProps: props instanceof Name,\n        dynamicItems: items instanceof Name,\n      }\n      if (validate.source) validate.source.evaluated = stringify(validate.evaluated)\n    }\n    sch.validate = validate\n    return sch\n  } catch (e) {\n    delete sch.validate\n    delete sch.validateName\n    if (sourceCode) this.logger.error(\"Error compiling schema, function code:\", sourceCode)\n    // console.log(\"\\n\\n\\n *** \\n\", sourceCode, this.opts)\n    throw e\n  } finally {\n    this._compilations.delete(sch)\n  }\n}\n\nexport function resolveRef(\n  this: Ajv,\n  root: SchemaEnv,\n  baseId: string,\n  ref: string\n): AnySchema | SchemaEnv | undefined {\n  ref = resolveUrl(this.opts.uriResolver, baseId, ref)\n  const schOrFunc = root.refs[ref]\n  if (schOrFunc) return schOrFunc\n\n  let _sch = resolve.call(this, root, ref)\n  if (_sch === undefined) {\n    const schema = root.localRefs?.[ref] // TODO maybe localRefs should hold SchemaEnv\n    const {schemaId} = this.opts\n    if (schema) _sch = new SchemaEnv({schema, schemaId, root, baseId})\n  }\n\n  if (_sch === undefined) return\n  return (root.refs[ref] = inlineOrCompile.call(this, _sch))\n}\n\nfunction inlineOrCompile(this: Ajv, sch: SchemaEnv): AnySchema | SchemaEnv {\n  if (inlineRef(sch.schema, this.opts.inlineRefs)) return sch.schema\n  return sch.validate ? sch : compileSchema.call(this, sch)\n}\n\n// Index of schema compilation in the currently compiled list\nexport function getCompilingSchema(this: Ajv, schEnv: SchemaEnv): SchemaEnv | void {\n  for (const sch of this._compilations) {\n    if (sameSchemaEnv(sch, schEnv)) return sch\n  }\n}\n\nfunction sameSchemaEnv(s1: SchemaEnv, s2: SchemaEnv): boolean {\n  return s1.schema === s2.schema && s1.root === s2.root && s1.baseId === s2.baseId\n}\n\n// resolve and compile the references ($ref)\n// TODO returns AnySchemaObject (if the schema can be inlined) or validation function\nfunction resolve(\n  this: Ajv,\n  root: SchemaEnv, // information about the root schema for the current schema\n  ref: string // reference to resolve\n): SchemaEnv | undefined {\n  let sch\n  while (typeof (sch = this.refs[ref]) == \"string\") ref = sch\n  return sch || this.schemas[ref] || resolveSchema.call(this, root, ref)\n}\n\n// Resolve schema, its root and baseId\nexport function resolveSchema(\n  this: Ajv,\n  root: SchemaEnv, // root object with properties schema, refs TODO below SchemaEnv is assigned to it\n  ref: string // reference to resolve\n): SchemaEnv | undefined {\n  const p = this.opts.uriResolver.parse(ref)\n  const refPath = _getFullPath(this.opts.uriResolver, p)\n  let baseId = getFullPath(this.opts.uriResolver, root.baseId, undefined)\n  // TODO `Object.keys(root.schema).length > 0` should not be needed - but removing breaks 2 tests\n  if (Object.keys(root.schema).length > 0 && refPath === baseId) {\n    return getJsonPointer.call(this, p, root)\n  }\n\n  const id = normalizeId(refPath)\n  const schOrRef = this.refs[id] || this.schemas[id]\n  if (typeof schOrRef == \"string\") {\n    const sch = resolveSchema.call(this, root, schOrRef)\n    if (typeof sch?.schema !== \"object\") return\n    return getJsonPointer.call(this, p, sch)\n  }\n\n  if (typeof schOrRef?.schema !== \"object\") return\n  if (!schOrRef.validate) compileSchema.call(this, schOrRef)\n  if (id === normalizeId(ref)) {\n    const {schema} = schOrRef\n    const {schemaId} = this.opts\n    const schId = schema[schemaId]\n    if (schId) baseId = resolveUrl(this.opts.uriResolver, baseId, schId)\n    return new SchemaEnv({schema, schemaId, root, baseId})\n  }\n  return getJsonPointer.call(this, p, schOrRef)\n}\n\nconst PREVENT_SCOPE_CHANGE = new Set([\n  \"properties\",\n  \"patternProperties\",\n  \"enum\",\n  \"dependencies\",\n  \"definitions\",\n])\n\nfunction getJsonPointer(\n  this: Ajv,\n  parsedRef: URI.URIComponents,\n  {baseId, schema, root}: SchemaEnv\n): SchemaEnv | undefined {\n  if (parsedRef.fragment?.[0] !== \"/\") return\n  for (const part of parsedRef.fragment.slice(1).split(\"/\")) {\n    if (typeof schema === \"boolean\") return\n    const partSchema = schema[unescapeFragment(part)]\n    if (partSchema === undefined) return\n    schema = partSchema\n    // TODO PREVENT_SCOPE_CHANGE could be defined in keyword def?\n    const schId = typeof schema === \"object\" && schema[this.opts.schemaId]\n    if (!PREVENT_SCOPE_CHANGE.has(part) && schId) {\n      baseId = resolveUrl(this.opts.uriResolver, baseId, schId)\n    }\n  }\n  let env: SchemaEnv | undefined\n  if (typeof schema != \"boolean\" && schema.$ref && !schemaHasRulesButRef(schema, this.RULES)) {\n    const $ref = resolveUrl(this.opts.uriResolver, baseId, schema.$ref)\n    env = resolveSchema.call(this, root, $ref)\n  }\n  // even though resolution failed we need to return SchemaEnv to throw exception\n  // so that compileAsync loads missing schema.\n  const {schemaId} = this.opts\n  env = env || new SchemaEnv({schema, schemaId, root, baseId})\n  if (env.schema !== env.root.schema) return env\n  return undefined\n}\n","{\n  \"$id\": \"https://raw.githubusercontent.com/ajv-validator/ajv/master/lib/refs/data.json#\",\n  \"description\": \"Meta-schema for $data reference (JSON AnySchema extension proposal)\",\n  \"type\": \"object\",\n  \"required\": [\"$data\"],\n  \"properties\": {\n    \"$data\": {\n      \"type\": \"string\",\n      \"anyOf\": [{\"format\": \"relative-json-pointer\"}, {\"format\": \"json-pointer\"}]\n    }\n  },\n  \"additionalProperties\": false\n}\n","import { SCHEMES } from \"./uri\";\n\nimport http from \"./schemes/http\";\nSCHEMES[http.scheme] = http;\n\nimport https from \"./schemes/https\";\nSCHEMES[https.scheme] = https;\n\nimport ws from \"./schemes/ws\";\nSCHEMES[ws.scheme] = ws;\n\nimport wss from \"./schemes/wss\";\nSCHEMES[wss.scheme] = wss;\n\nimport mailto from \"./schemes/mailto\";\nSCHEMES[mailto.scheme] = mailto;\n\nimport urn from \"./schemes/urn\";\nSCHEMES[urn.scheme] = urn;\n\nimport uuid from \"./schemes/urn-uuid\";\nSCHEMES[uuid.scheme] = uuid;\n\nexport * from \"./uri\";\n","import { URISchemeHandler, URIComponents, URIOptions } from \"../uri\";\nimport { URNComponents } from \"./urn\";\nimport { SCHEMES } from \"../uri\";\n\nexport interface UUIDComponents extends URNComponents {\n\tuuid?: string;\n}\n\nconst UUID = /^[0-9A-Fa-f]{8}(?:\\-[0-9A-Fa-f]{4}){3}\\-[0-9A-Fa-f]{12}$/;\nconst UUID_PARSE = /^[0-9A-Fa-f\\-]{36}/;\n\n//RFC 4122\nconst handler:URISchemeHandler<UUIDComponents, URIOptions, URNComponents> = {\n\tscheme : \"urn:uuid\",\n\n\tparse : function (urnComponents:URNComponents, options:URIOptions):UUIDComponents {\n\t\tconst uuidComponents = urnComponents as UUIDComponents;\n\t\tuuidComponents.uuid = uuidComponents.nss;\n\t\tuuidComponents.nss = undefined;\n\n\t\tif (!options.tolerant && (!uuidComponents.uuid || !uuidComponents.uuid.match(UUID))) {\n\t\t\tuuidComponents.error = uuidComponents.error || \"UUID is not valid.\";\n\t\t}\n\n\t\treturn uuidComponents;\n\t},\n\n\tserialize : function (uuidComponents:UUIDComponents, options:URIOptions):URNComponents {\n\t\tconst urnComponents = uuidComponents as URNComponents;\n\t\t//normalize UUID\n\t\turnComponents.nss = (uuidComponents.uuid || \"\").toLowerCase();\n\t\treturn urnComponents;\n\t},\n};\n\nexport default handler;","import { URISchemeHandler, URIComponents, URIOptions } from \"../uri\";\nimport { pctEncChar, SCHEMES } from \"../uri\";\n\nexport interface URNComponents extends URIComponents {\n\tnid?:string;\n\tnss?:string;\n}\n\nexport interface URNOptions extends URIOptions {\n\tnid?:string;\n}\n\nconst NID$ = \"(?:[0-9A-Za-z][0-9A-Za-z\\\\-]{1,31})\";\nconst PCT_ENCODED$ = \"(?:\\\\%[0-9A-Fa-f]{2})\";\nconst TRANS$$ = \"[0-9A-Za-z\\\\(\\\\)\\\\+\\\\,\\\\-\\\\.\\\\:\\\\=\\\\@\\\\;\\\\$\\\\_\\\\!\\\\*\\\\'\\\\/\\\\?\\\\#]\";\nconst NSS$ = \"(?:(?:\" + PCT_ENCODED$ + \"|\" + TRANS$$ + \")+)\";\nconst URN_SCHEME = new RegExp(\"^urn\\\\:(\" + NID$ + \")$\");\nconst URN_PATH = new RegExp(\"^(\" + NID$ + \")\\\\:(\" + NSS$ + \")$\");\nconst URN_PARSE = /^([^\\:]+)\\:(.*)/;\nconst URN_EXCLUDED = /[\\x00-\\x20\\\\\\\"\\&\\<\\>\\[\\]\\^\\`\\{\\|\\}\\~\\x7F-\\xFF]/g;\n\n//RFC 2141\nconst handler:URISchemeHandler<URNComponents,URNOptions> = {\n\tscheme : \"urn\",\n\n\tparse : function (components:URIComponents, options:URNOptions):URNComponents {\n\t\tconst matches = components.path && components.path.match(URN_PARSE);\n\t\tlet urnComponents = components as URNComponents;\n\n\t\tif (matches) {\n\t\t\tconst scheme = options.scheme || urnComponents.scheme || \"urn\";\n\t\t\tconst nid = matches[1].toLowerCase();\n\t\t\tconst nss = matches[2];\n\t\t\tconst urnScheme = `${scheme}:${options.nid || nid}`;\n\t\t\tconst schemeHandler = SCHEMES[urnScheme];\n\n\t\t\turnComponents.nid = nid;\n\t\t\turnComponents.nss = nss;\n\t\t\turnComponents.path = undefined;\n\n\t\t\tif (schemeHandler) {\n\t\t\t\turnComponents = schemeHandler.parse(urnComponents, options) as URNComponents;\n\t\t\t}\n\t\t} else {\n\t\t\turnComponents.error = urnComponents.error || \"URN can not be parsed.\";\n\t\t}\n\n\t\treturn urnComponents;\n\t},\n\n\tserialize : function (urnComponents:URNComponents, options:URNOptions):URIComponents {\n\t\tconst scheme = options.scheme || urnComponents.scheme || \"urn\";\n\t\tconst nid = urnComponents.nid;\n\t\tconst urnScheme = `${scheme}:${options.nid || nid}`;\n\t\tconst schemeHandler = SCHEMES[urnScheme];\n\n\t\tif (schemeHandler) {\n\t\t\turnComponents = schemeHandler.serialize(urnComponents, options) as URNComponents;\n\t\t}\n\n\t\tconst uriComponents = urnComponents as URIComponents;\n\t\tconst nss = urnComponents.nss;\n\t\turiComponents.path = `${nid || options.nid}:${nss}`;\n\n\t\treturn uriComponents;\n\t},\n};\n\nexport default handler;","import { URISchemeHandler, URIComponents, URIOptions } from \"../uri\";\nimport { pctEncChar, pctDecChars, unescapeComponent } from \"../uri\";\nimport punycode from \"punycode\";\nimport { merge, subexp, toUpperCase, toArray } from \"../util\";\n\nexport interface MailtoHeaders {\n\t[hfname:string]:string\n}\n\nexport interface MailtoComponents extends URIComponents {\n\tto:Array<string>,\n\theaders?:MailtoHeaders,\n\tsubject?:string,\n\tbody?:string\n}\n\nconst O:MailtoHeaders = {};\nconst isIRI = true;\n\n//RFC 3986\nconst UNRESERVED$$ = \"[A-Za-z0-9\\\\-\\\\.\\\\_\\\\~\" + (isIRI ? \"\\\\xA0-\\\\u200D\\\\u2010-\\\\u2029\\\\u202F-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFEF\" : \"\") + \"]\";\nconst HEXDIG$$ = \"[0-9A-Fa-f]\";  //case-insensitive\nconst PCT_ENCODED$ = subexp(subexp(\"%[EFef]\" + HEXDIG$$ + \"%\" + HEXDIG$$ + HEXDIG$$ + \"%\" + HEXDIG$$ + HEXDIG$$) + \"|\" + subexp(\"%[89A-Fa-f]\" + HEXDIG$$ + \"%\" + HEXDIG$$ + HEXDIG$$) + \"|\" + subexp(\"%\" + HEXDIG$$ + HEXDIG$$));  //expanded\n\n//RFC 5322, except these symbols as per RFC 6068: @ : / ? # [ ] & ; =\n//const ATEXT$$ = \"[A-Za-z0-9\\\\!\\\\#\\\\$\\\\%\\\\&\\\\'\\\\*\\\\+\\\\-\\\\/\\\\=\\\\?\\\\^\\\\_\\\\`\\\\{\\\\|\\\\}\\\\~]\";\n//const WSP$$ = \"[\\\\x20\\\\x09]\";\n//const OBS_QTEXT$$ = \"[\\\\x01-\\\\x08\\\\x0B\\\\x0C\\\\x0E-\\\\x1F\\\\x7F]\";  //(%d1-8 / %d11-12 / %d14-31 / %d127)\n//const QTEXT$$ = merge(\"[\\\\x21\\\\x23-\\\\x5B\\\\x5D-\\\\x7E]\", OBS_QTEXT$$);  //%d33 / %d35-91 / %d93-126 / obs-qtext\n//const VCHAR$$ = \"[\\\\x21-\\\\x7E]\";\n//const WSP$$ = \"[\\\\x20\\\\x09]\";\n//const OBS_QP$ = subexp(\"\\\\\\\\\" + merge(\"[\\\\x00\\\\x0D\\\\x0A]\", OBS_QTEXT$$));  //%d0 / CR / LF / obs-qtext\n//const FWS$ = subexp(subexp(WSP$$ + \"*\" + \"\\\\x0D\\\\x0A\") + \"?\" + WSP$$ + \"+\");\n//const QUOTED_PAIR$ = subexp(subexp(\"\\\\\\\\\" + subexp(VCHAR$$ + \"|\" + WSP$$)) + \"|\" + OBS_QP$);\n//const QUOTED_STRING$ = subexp('\\\\\"' + subexp(FWS$ + \"?\" + QCONTENT$) + \"*\" + FWS$ + \"?\" + '\\\\\"');\nconst ATEXT$$ = \"[A-Za-z0-9\\\\!\\\\$\\\\%\\\\'\\\\*\\\\+\\\\-\\\\^\\\\_\\\\`\\\\{\\\\|\\\\}\\\\~]\";\nconst QTEXT$$ = \"[\\\\!\\\\$\\\\%\\\\'\\\\(\\\\)\\\\*\\\\+\\\\,\\\\-\\\\.0-9\\\\<\\\\>A-Z\\\\x5E-\\\\x7E]\";\nconst VCHAR$$ = merge(QTEXT$$, \"[\\\\\\\"\\\\\\\\]\");\nconst DOT_ATOM_TEXT$ = subexp(ATEXT$$ + \"+\" + subexp(\"\\\\.\" + ATEXT$$ + \"+\") + \"*\");\nconst QUOTED_PAIR$ = subexp(\"\\\\\\\\\" + VCHAR$$);\nconst QCONTENT$ = subexp(QTEXT$$ + \"|\" + QUOTED_PAIR$);\nconst QUOTED_STRING$ = subexp('\\\\\"' + QCONTENT$ + \"*\" + '\\\\\"');\n\n//RFC 6068\nconst DTEXT_NO_OBS$$ = \"[\\\\x21-\\\\x5A\\\\x5E-\\\\x7E]\";  //%d33-90 / %d94-126\nconst SOME_DELIMS$$ = \"[\\\\!\\\\$\\\\'\\\\(\\\\)\\\\*\\\\+\\\\,\\\\;\\\\:\\\\@]\";\nconst QCHAR$ = subexp(UNRESERVED$$ + \"|\" + PCT_ENCODED$ + \"|\" + SOME_DELIMS$$);\nconst DOMAIN$ = subexp(DOT_ATOM_TEXT$ + \"|\" + \"\\\\[\" + DTEXT_NO_OBS$$ + \"*\" + \"\\\\]\");\nconst LOCAL_PART$ = subexp(DOT_ATOM_TEXT$ + \"|\" + QUOTED_STRING$);\nconst ADDR_SPEC$ = subexp(LOCAL_PART$ + \"\\\\@\" + DOMAIN$);\nconst TO$ = subexp(ADDR_SPEC$ + subexp(\"\\\\,\" + ADDR_SPEC$) + \"*\");\nconst HFNAME$ = subexp(QCHAR$ + \"*\");\nconst HFVALUE$ = HFNAME$;\nconst HFIELD$ = subexp(HFNAME$ + \"\\\\=\" + HFVALUE$);\nconst HFIELDS2$ = subexp(HFIELD$ + subexp(\"\\\\&\" + HFIELD$) + \"*\");\nconst HFIELDS$ = subexp(\"\\\\?\" + HFIELDS2$);\nconst MAILTO_URI = new RegExp(\"^mailto\\\\:\" + TO$ + \"?\" + HFIELDS$ + \"?$\");\n\nconst UNRESERVED = new RegExp(UNRESERVED$$, \"g\");\nconst PCT_ENCODED = new RegExp(PCT_ENCODED$, \"g\");\nconst NOT_LOCAL_PART = new RegExp(merge(\"[^]\", ATEXT$$, \"[\\\\.]\", '[\\\\\"]', VCHAR$$), \"g\");\nconst NOT_DOMAIN = new RegExp(merge(\"[^]\", ATEXT$$, \"[\\\\.]\", \"[\\\\[]\", DTEXT_NO_OBS$$, \"[\\\\]]\"), \"g\");\nconst NOT_HFNAME = new RegExp(merge(\"[^]\", UNRESERVED$$, SOME_DELIMS$$), \"g\");\nconst NOT_HFVALUE = NOT_HFNAME;\nconst TO = new RegExp(\"^\" + TO$ + \"$\");\nconst HFIELDS = new RegExp(\"^\" + HFIELDS2$ + \"$\");\n\nfunction decodeUnreserved(str:string):string {\n\tconst decStr = pctDecChars(str);\n\treturn (!decStr.match(UNRESERVED) ? str : decStr);\n}\n\nconst handler:URISchemeHandler<MailtoComponents> =  {\n\tscheme : \"mailto\",\n\n\tparse : function (components:URIComponents, options:URIOptions):MailtoComponents {\n\t\tconst mailtoComponents = components as MailtoComponents;\n\t\tconst to = mailtoComponents.to = (mailtoComponents.path ? mailtoComponents.path.split(\",\") : []);\n\t\tmailtoComponents.path = undefined;\n\n\t\tif (mailtoComponents.query) {\n\t\t\tlet unknownHeaders = false\n\t\t\tconst headers:MailtoHeaders = {};\n\t\t\tconst hfields = mailtoComponents.query.split(\"&\");\n\n\t\t\tfor (let x = 0, xl = hfields.length; x < xl; ++x) {\n\t\t\t\tconst hfield = hfields[x].split(\"=\");\n\n\t\t\t\tswitch (hfield[0]) {\n\t\t\t\t\tcase \"to\":\n\t\t\t\t\t\tconst toAddrs = hfield[1].split(\",\");\n\t\t\t\t\t\tfor (let x = 0, xl = toAddrs.length; x < xl; ++x) {\n\t\t\t\t\t\t\tto.push(toAddrs[x]);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"subject\":\n\t\t\t\t\t\tmailtoComponents.subject = unescapeComponent(hfield[1], options);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"body\":\n\t\t\t\t\t\tmailtoComponents.body = unescapeComponent(hfield[1], options);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tunknownHeaders = true;\n\t\t\t\t\t\theaders[unescapeComponent(hfield[0], options)] = unescapeComponent(hfield[1], options);\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (unknownHeaders) mailtoComponents.headers = headers;\n\t\t}\n\n\t\tmailtoComponents.query = undefined;\n\n\t\tfor (let x = 0, xl = to.length; x < xl; ++x) {\n\t\t\tconst addr = to[x].split(\"@\");\n\n\t\t\taddr[0] = unescapeComponent(addr[0]);\n\n\t\t\tif (!options.unicodeSupport) {\n\t\t\t\t//convert Unicode IDN -> ASCII IDN\n\t\t\t\ttry {\n\t\t\t\t\taddr[1] = punycode.toASCII(unescapeComponent(addr[1], options).toLowerCase());\n\t\t\t\t} catch (e) {\n\t\t\t\t\tmailtoComponents.error = mailtoComponents.error || \"Email address's domain name can not be converted to ASCII via punycode: \" + e;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\taddr[1] = unescapeComponent(addr[1], options).toLowerCase();\n\t\t\t}\n\n\t\t\tto[x] = addr.join(\"@\");\n\t\t}\n\n\t\treturn mailtoComponents;\n\t},\n\n\tserialize : function (mailtoComponents:MailtoComponents, options:URIOptions):URIComponents {\n\t\tconst components = mailtoComponents as URIComponents;\n\t\tconst to = toArray(mailtoComponents.to);\n\t\tif (to) {\n\t\t\tfor (let x = 0, xl = to.length; x < xl; ++x) {\n\t\t\t\tconst toAddr = String(to[x]);\n\t\t\t\tconst atIdx = toAddr.lastIndexOf(\"@\");\n\t\t\t\tconst localPart = (toAddr.slice(0, atIdx)).replace(PCT_ENCODED, decodeUnreserved).replace(PCT_ENCODED, toUpperCase).replace(NOT_LOCAL_PART, pctEncChar);\n\t\t\t\tlet domain = toAddr.slice(atIdx + 1);\n\n\t\t\t\t//convert IDN via punycode\n\t\t\t\ttry {\n\t\t\t\t\tdomain = (!options.iri ? punycode.toASCII(unescapeComponent(domain, options).toLowerCase()) : punycode.toUnicode(domain));\n\t\t\t\t} catch (e) {\n\t\t\t\t\tcomponents.error = components.error || \"Email address's domain name can not be converted to \" + (!options.iri ? \"ASCII\" : \"Unicode\") + \" via punycode: \" + e;\n\t\t\t\t}\n\n\t\t\t\tto[x] = localPart + \"@\" + domain;\n\t\t\t}\n\n\t\t\tcomponents.path = to.join(\",\");\n\t\t}\n\n\t\tconst headers = mailtoComponents.headers = mailtoComponents.headers || {};\n\n\t\tif (mailtoComponents.subject) headers[\"subject\"] = mailtoComponents.subject;\n\t\tif (mailtoComponents.body) headers[\"body\"] = mailtoComponents.body;\n\n\t\tconst fields = [];\n\t\tfor (const name in headers) {\n\t\t\tif (headers[name] !== O[name]) {\n\t\t\t\tfields.push(\n\t\t\t\t\tname.replace(PCT_ENCODED, decodeUnreserved).replace(PCT_ENCODED, toUpperCase).replace(NOT_HFNAME, pctEncChar) +\n\t\t\t\t\t\"=\" +\n\t\t\t\t\theaders[name].replace(PCT_ENCODED, decodeUnreserved).replace(PCT_ENCODED, toUpperCase).replace(NOT_HFVALUE, pctEncChar)\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\tif (fields.length) {\n\t\t\tcomponents.query = fields.join(\"&\");\n\t\t}\n\n\t\treturn components;\n\t}\n}\n\nexport default handler;","import { URISchemeHandler, URIComponents, URIOptions } from \"../uri\";\nimport ws from \"./ws\";\n\nconst handler:URISchemeHandler = {\n\tscheme : \"wss\",\n\tdomainHost : ws.domainHost,\n\tparse : ws.parse,\n\tserialize : ws.serialize\n}\n\nexport default handler;","import { URISchemeHandler, URIComponents, URIOptions } from \"../uri\";\n\nexport interface WSComponents extends URIComponents {\n\tresourceName?: string;\n\tsecure?: boolean;\n}\n\nfunction isSecure(wsComponents:WSComponents):boolean {\n\treturn typeof wsComponents.secure === 'boolean' ? wsComponents.secure : String(wsComponents.scheme).toLowerCase() === \"wss\";\n}\n\n//RFC 6455\nconst handler:URISchemeHandler = {\n\tscheme : \"ws\",\n\n\tdomainHost : true,\n\n\tparse : function (components:URIComponents, options:URIOptions):WSComponents {\n\t\tconst wsComponents = components as WSComponents;\n\n\t\t//indicate if the secure flag is set\n\t\twsComponents.secure = isSecure(wsComponents);\n\n\t\t//construct resouce name\n\t\twsComponents.resourceName = (wsComponents.path || '/') + (wsComponents.query ? '?' + wsComponents.query : '');\n\t\twsComponents.path = undefined;\n\t\twsComponents.query = undefined;\n\n\t\treturn wsComponents;\n\t},\n\n\tserialize : function (wsComponents:WSComponents, options:URIOptions):URIComponents {\n\t\t//normalize the default port\n\t\tif (wsComponents.port === (isSecure(wsComponents) ? 443 : 80) || wsComponents.port === \"\") {\n\t\t\twsComponents.port = undefined;\n\t\t}\n\n\t\t//ensure scheme matches secure flag\n\t\tif (typeof wsComponents.secure === 'boolean') {\n\t\t\twsComponents.scheme = (wsComponents.secure ? 'wss' : 'ws');\n\t\t\twsComponents.secure = undefined;\n\t\t}\n\n\t\t//reconstruct path from resource name\n\t\tif (wsComponents.resourceName) {\n\t\t\tconst [path, query] = wsComponents.resourceName.split('?');\n\t\t\twsComponents.path = (path && path !== '/' ? path : undefined);\n\t\t\twsComponents.query = query;\n\t\t\twsComponents.resourceName = undefined;\n\t\t}\n\n\t\t//forbid fragment component\n\t\twsComponents.fragment = undefined;\n\n\t\treturn wsComponents;\n\t}\n};\n\nexport default handler;","import { URISchemeHandler, URIComponents, URIOptions } from \"../uri\";\nimport http from \"./http\";\n\nconst handler:URISchemeHandler = {\n\tscheme : \"https\",\n\tdomainHost : http.domainHost,\n\tparse : http.parse,\n\tserialize : http.serialize\n}\n\nexport default handler;","import { URISchemeHandler, URIComponents, URIOptions } from \"../uri\";\n\nconst handler:URISchemeHandler = {\n\tscheme : \"http\",\n\n\tdomainHost : true,\n\n\tparse : function (components:URIComponents, options:URIOptions):URIComponents {\n\t\t//report missing host\n\t\tif (!components.host) {\n\t\t\tcomponents.error = components.error || \"HTTP URIs must have a host.\";\n\t\t}\n\n\t\treturn components;\n\t},\n\n\tserialize : function (components:URIComponents, options:URIOptions):URIComponents {\n\t\tconst secure = String(components.scheme).toLowerCase() === \"https\";\n\n\t\t//normalize the default port\n\t\tif (components.port === (secure ? 443 : 80) || components.port === \"\") {\n\t\t\tcomponents.port = undefined;\n\t\t}\n\t\t\n\t\t//normalize the empty path\n\t\tif (!components.path) {\n\t\t\tcomponents.path = \"/\";\n\t\t}\n\n\t\t//NOTE: We do not parse query strings for HTTP URIs\n\t\t//as WWW Form Url Encoded query strings are part of the HTML4+ spec,\n\t\t//and not the HTTP spec.\n\n\t\treturn components;\n\t}\n};\n\nexport default handler;","/**\n * URI.js\n *\n * @fileoverview An RFC 3986 compliant, scheme extendable URI parsing/validating/resolving library for JavaScript.\n * @author <a href=\"mailto:gary.court@gmail.com\">Gary Court</a>\n * @see http://github.com/garycourt/uri-js\n */\n\n/**\n * Copyright 2011 Gary Court. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification, are\n * permitted provided that the following conditions are met:\n *\n *    1. Redistributions of source code must retain the above copyright notice, this list of\n *       conditions and the following disclaimer.\n *\n *    2. Redistributions in binary form must reproduce the above copyright notice, this list\n *       of conditions and the following disclaimer in the documentation and/or other materials\n *       provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY GARY COURT ``AS IS'' AND ANY EXPRESS OR IMPLIED\n * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n * FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL GARY COURT OR\n * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\n * ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF\n * ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *\n * The views and conclusions contained in the software and documentation are those of the\n * authors and should not be interpreted as representing official policies, either expressed\n * or implied, of Gary Court.\n */\n\nimport URI_PROTOCOL from \"./regexps-uri\";\nimport IRI_PROTOCOL from \"./regexps-iri\";\nimport punycode from \"punycode\";\nimport { toUpperCase, typeOf, assign } from \"./util\";\n\nexport interface URIComponents {\n\tscheme?:string;\n\tuserinfo?:string;\n\thost?:string;\n\tport?:number|string;\n\tpath?:string;\n\tquery?:string;\n\tfragment?:string;\n\treference?:string;\n\terror?:string;\n}\n\nexport interface URIOptions {\n\tscheme?:string;\n\treference?:string;\n\ttolerant?:boolean;\n\tabsolutePath?:boolean;\n\tiri?:boolean;\n\tunicodeSupport?:boolean;\n\tdomainHost?:boolean;\n}\n\nexport interface URISchemeHandler<Components extends URIComponents = URIComponents, Options extends URIOptions = URIOptions, ParentComponents extends URIComponents = URIComponents> {\n\tscheme:string;\n\tparse(components:ParentComponents, options:Options):Components;\n\tserialize(components:Components, options:Options):ParentComponents;\n\tunicodeSupport?:boolean;\n\tdomainHost?:boolean;\n\tabsolutePath?:boolean;\n}\n\nexport interface URIRegExps {\n\tNOT_SCHEME : RegExp,\n\tNOT_USERINFO : RegExp,\n\tNOT_HOST : RegExp,\n\tNOT_PATH : RegExp,\n\tNOT_PATH_NOSCHEME : RegExp,\n\tNOT_QUERY : RegExp,\n\tNOT_FRAGMENT : RegExp,\n\tESCAPE : RegExp,\n\tUNRESERVED : RegExp,\n\tOTHER_CHARS : RegExp,\n\tPCT_ENCODED : RegExp,\n\tIPV4ADDRESS : RegExp,\n\tIPV6ADDRESS : RegExp,\n}\n\nexport const SCHEMES:{[scheme:string]:URISchemeHandler} = {};\n\nexport function pctEncChar(chr:string):string {\n\tconst c = chr.charCodeAt(0);\n\tlet e:string;\n\n\tif (c < 16) e = \"%0\" + c.toString(16).toUpperCase();\n\telse if (c < 128) e = \"%\" + c.toString(16).toUpperCase();\n\telse if (c < 2048) e = \"%\" + ((c >> 6) | 192).toString(16).toUpperCase() + \"%\" + ((c & 63) | 128).toString(16).toUpperCase();\n\telse e = \"%\" + ((c >> 12) | 224).toString(16).toUpperCase() + \"%\" + (((c >> 6) & 63) | 128).toString(16).toUpperCase() + \"%\" + ((c & 63) | 128).toString(16).toUpperCase();\n\n\treturn e;\n}\n\nexport function pctDecChars(str:string):string {\n\tlet newStr = \"\";\n\tlet i = 0;\n\tconst il = str.length;\n\n\twhile (i < il) {\n\t\tconst c = parseInt(str.substr(i + 1, 2), 16);\n\n\t\tif (c < 128) {\n\t\t\tnewStr += String.fromCharCode(c);\n\t\t\ti += 3;\n\t\t}\n\t\telse if (c >= 194 && c < 224) {\n\t\t\tif ((il - i) >= 6) {\n\t\t\t\tconst c2 = parseInt(str.substr(i + 4, 2), 16);\n\t\t\t\tnewStr += String.fromCharCode(((c & 31) << 6) | (c2 & 63));\n\t\t\t} else {\n\t\t\t\tnewStr += str.substr(i, 6);\n\t\t\t}\n\t\t\ti += 6;\n\t\t}\n\t\telse if (c >= 224) {\n\t\t\tif ((il - i) >= 9) {\n\t\t\t\tconst c2 = parseInt(str.substr(i + 4, 2), 16);\n\t\t\t\tconst c3 = parseInt(str.substr(i + 7, 2), 16);\n\t\t\t\tnewStr += String.fromCharCode(((c & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63));\n\t\t\t} else {\n\t\t\t\tnewStr += str.substr(i, 9);\n\t\t\t}\n\t\t\ti += 9;\n\t\t}\n\t\telse {\n\t\t\tnewStr += str.substr(i, 3);\n\t\t\ti += 3;\n\t\t}\n\t}\n\n\treturn newStr;\n}\n\nfunction _normalizeComponentEncoding(components:URIComponents, protocol:URIRegExps) {\n\tfunction decodeUnreserved(str:string):string {\n\t\tconst decStr = pctDecChars(str);\n\t\treturn (!decStr.match(protocol.UNRESERVED) ? str : decStr);\n\t}\n\n\tif (components.scheme) components.scheme = String(components.scheme).replace(protocol.PCT_ENCODED, decodeUnreserved).toLowerCase().replace(protocol.NOT_SCHEME, \"\");\n\tif (components.userinfo !== undefined) components.userinfo = String(components.userinfo).replace(protocol.PCT_ENCODED, decodeUnreserved).replace(protocol.NOT_USERINFO, pctEncChar).replace(protocol.PCT_ENCODED, toUpperCase);\n\tif (components.host !== undefined) components.host = String(components.host).replace(protocol.PCT_ENCODED, decodeUnreserved).toLowerCase().replace(protocol.NOT_HOST, pctEncChar).replace(protocol.PCT_ENCODED, toUpperCase);\n\tif (components.path !== undefined) components.path = String(components.path).replace(protocol.PCT_ENCODED, decodeUnreserved).replace((components.scheme ? protocol.NOT_PATH : protocol.NOT_PATH_NOSCHEME), pctEncChar).replace(protocol.PCT_ENCODED, toUpperCase);\n\tif (components.query !== undefined) components.query = String(components.query).replace(protocol.PCT_ENCODED, decodeUnreserved).replace(protocol.NOT_QUERY, pctEncChar).replace(protocol.PCT_ENCODED, toUpperCase);\n\tif (components.fragment !== undefined) components.fragment = String(components.fragment).replace(protocol.PCT_ENCODED, decodeUnreserved).replace(protocol.NOT_FRAGMENT, pctEncChar).replace(protocol.PCT_ENCODED, toUpperCase);\n\n\treturn components;\n};\n\nfunction _stripLeadingZeros(str:string):string {\n\treturn str.replace(/^0*(.*)/, \"$1\") || \"0\";\n}\n\nfunction _normalizeIPv4(host:string, protocol:URIRegExps):string {\n\tconst matches = host.match(protocol.IPV4ADDRESS) || [];\n\tconst [, address] = matches;\n\t\n\tif (address) {\n\t\treturn address.split(\".\").map(_stripLeadingZeros).join(\".\");\n\t} else {\n\t\treturn host;\n\t}\n}\n\nfunction _normalizeIPv6(host:string, protocol:URIRegExps):string {\n\tconst matches = host.match(protocol.IPV6ADDRESS) || [];\n\tconst [, address, zone] = matches;\n\n\tif (address) {\n\t\tconst [last, first] = address.toLowerCase().split('::').reverse();\n\t\tconst firstFields = first ? first.split(\":\").map(_stripLeadingZeros) : [];\n\t\tconst lastFields = last.split(\":\").map(_stripLeadingZeros);\n\t\tconst isLastFieldIPv4Address = protocol.IPV4ADDRESS.test(lastFields[lastFields.length - 1]);\n\t\tconst fieldCount = isLastFieldIPv4Address ? 7 : 8;\n\t\tconst lastFieldsStart = lastFields.length - fieldCount;\n\t\tconst fields = Array<string>(fieldCount);\n\n\t\tfor (let x = 0; x < fieldCount; ++x) {\n\t\t\tfields[x] = firstFields[x] || lastFields[lastFieldsStart + x] || '';\n\t\t}\n\n\t\tif (isLastFieldIPv4Address) {\n\t\t\tfields[fieldCount - 1] = _normalizeIPv4(fields[fieldCount - 1], protocol);\n\t\t}\n\n\t\tconst allZeroFields = fields.reduce<Array<{index:number,length:number}>>((acc, field, index) => {\n\t\t\tif (!field || field === \"0\") {\n\t\t\t\tconst lastLongest = acc[acc.length - 1];\n\t\t\t\tif (lastLongest && lastLongest.index + lastLongest.length === index) {\n\t\t\t\t\tlastLongest.length++;\n\t\t\t\t} else {\n\t\t\t\t\tacc.push({ index, length : 1 });\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn acc;\n\t\t}, []);\n\n\t\tconst longestZeroFields = allZeroFields.sort((a, b) => b.length - a.length)[0];\n\n\t\tlet newHost:string;\n\t\tif (longestZeroFields && longestZeroFields.length > 1) {\n\t\t\tconst newFirst = fields.slice(0, longestZeroFields.index) ;\n\t\t\tconst newLast = fields.slice(longestZeroFields.index + longestZeroFields.length);\n\t\t\tnewHost = newFirst.join(\":\") + \"::\" + newLast.join(\":\");\n\t\t} else {\n\t\t\tnewHost = fields.join(\":\");\n\t\t}\n\n\t\tif (zone) {\n\t\t\tnewHost += \"%\" + zone;\n\t\t}\n\n\t\treturn newHost;\n\t} else {\n\t\treturn host;\n\t}\n}\n\nconst URI_PARSE = /^(?:([^:\\/?#]+):)?(?:\\/\\/((?:([^\\/?#@]*)@)?(\\[[^\\/?#\\]]+\\]|[^\\/?#:]*)(?:\\:(\\d*))?))?([^?#]*)(?:\\?([^#]*))?(?:#((?:.|\\n|\\r)*))?/i;\nconst NO_MATCH_IS_UNDEFINED = (<RegExpMatchArray>(\"\").match(/(){0}/))[1] === undefined;\n\nexport function parse(uriString:string, options:URIOptions = {}):URIComponents {\n\tconst components:URIComponents = {};\n\tconst protocol = (options.iri !== false ? IRI_PROTOCOL : URI_PROTOCOL);\n\n\tif (options.reference === \"suffix\") uriString = (options.scheme ? options.scheme + \":\" : \"\") + \"//\" + uriString;\n\n\tconst matches = uriString.match(URI_PARSE);\n\n\tif (matches) {\n\t\tif (NO_MATCH_IS_UNDEFINED) {\n\t\t\t//store each component\n\t\t\tcomponents.scheme = matches[1];\n\t\t\tcomponents.userinfo = matches[3];\n\t\t\tcomponents.host = matches[4];\n\t\t\tcomponents.port = parseInt(matches[5], 10);\n\t\t\tcomponents.path = matches[6] || \"\";\n\t\t\tcomponents.query = matches[7];\n\t\t\tcomponents.fragment = matches[8];\n\n\t\t\t//fix port number\n\t\t\tif (isNaN(components.port)) {\n\t\t\t\tcomponents.port = matches[5];\n\t\t\t}\n\t\t} else {  //IE FIX for improper RegExp matching\n\t\t\t//store each component\n\t\t\tcomponents.scheme = matches[1] || undefined;\n\t\t\tcomponents.userinfo = (uriString.indexOf(\"@\") !== -1 ? matches[3] : undefined);\n\t\t\tcomponents.host = (uriString.indexOf(\"//\") !== -1 ? matches[4] : undefined);\n\t\t\tcomponents.port = parseInt(matches[5], 10);\n\t\t\tcomponents.path = matches[6] || \"\";\n\t\t\tcomponents.query = (uriString.indexOf(\"?\") !== -1 ? matches[7] : undefined);\n\t\t\tcomponents.fragment = (uriString.indexOf(\"#\") !== -1 ? matches[8] : undefined);\n\n\t\t\t//fix port number\n\t\t\tif (isNaN(components.port)) {\n\t\t\t\tcomponents.port = (uriString.match(/\\/\\/(?:.|\\n)*\\:(?:\\/|\\?|\\#|$)/) ? matches[4] : undefined);\n\t\t\t}\n\t\t}\n\n\t\tif (components.host) {\n\t\t\t//normalize IP hosts\n\t\t\tcomponents.host = _normalizeIPv6(_normalizeIPv4(components.host, protocol), protocol);\n\t\t}\n\n\t\t//determine reference type\n\t\tif (components.scheme === undefined && components.userinfo === undefined && components.host === undefined && components.port === undefined && !components.path && components.query === undefined) {\n\t\t\tcomponents.reference = \"same-document\";\n\t\t} else if (components.scheme === undefined) {\n\t\t\tcomponents.reference = \"relative\";\n\t\t} else if (components.fragment === undefined) {\n\t\t\tcomponents.reference = \"absolute\";\n\t\t} else {\n\t\t\tcomponents.reference = \"uri\";\n\t\t}\n\n\t\t//check for reference errors\n\t\tif (options.reference && options.reference !== \"suffix\" && options.reference !== components.reference) {\n\t\t\tcomponents.error = components.error || \"URI is not a \" + options.reference + \" reference.\";\n\t\t}\n\n\t\t//find scheme handler\n\t\tconst schemeHandler = SCHEMES[(options.scheme || components.scheme || \"\").toLowerCase()];\n\n\t\t//check if scheme can't handle IRIs\n\t\tif (!options.unicodeSupport && (!schemeHandler || !schemeHandler.unicodeSupport)) {\n\t\t\t//if host component is a domain name\n\t\t\tif (components.host && (options.domainHost || (schemeHandler && schemeHandler.domainHost))) {\n\t\t\t\t//convert Unicode IDN -> ASCII IDN\n\t\t\t\ttry {\n\t\t\t\t\tcomponents.host = punycode.toASCII(components.host.replace(protocol.PCT_ENCODED, pctDecChars).toLowerCase());\n\t\t\t\t} catch (e) {\n\t\t\t\t\tcomponents.error = components.error || \"Host's domain name can not be converted to ASCII via punycode: \" + e;\n\t\t\t\t}\n\t\t\t}\n\t\t\t//convert IRI -> URI\n\t\t\t_normalizeComponentEncoding(components, URI_PROTOCOL);\n\t\t} else {\n\t\t\t//normalize encodings\n\t\t\t_normalizeComponentEncoding(components, protocol);\n\t\t}\n\n\t\t//perform scheme specific parsing\n\t\tif (schemeHandler && schemeHandler.parse) {\n\t\t\tschemeHandler.parse(components, options);\n\t\t}\n\t} else {\n\t\tcomponents.error = components.error || \"URI can not be parsed.\";\n\t}\n\n\treturn components;\n};\n\nfunction _recomposeAuthority(components:URIComponents, options:URIOptions):string|undefined {\n\tconst protocol = (options.iri !== false ? IRI_PROTOCOL : URI_PROTOCOL);\n\tconst uriTokens:Array<string> = [];\n\n\tif (components.userinfo !== undefined) {\n\t\turiTokens.push(components.userinfo);\n\t\turiTokens.push(\"@\");\n\t}\n\n\tif (components.host !== undefined) {\n\t\t//normalize IP hosts, add brackets and escape zone separator for IPv6\n\t\turiTokens.push(_normalizeIPv6(_normalizeIPv4(String(components.host), protocol), protocol).replace(protocol.IPV6ADDRESS, (_, $1, $2) => \"[\" + $1 + ($2 ? \"%25\" + $2 : \"\") + \"]\"));\n\t}\n\n\tif (typeof components.port === \"number\" || typeof components.port === \"string\") {\n\t\turiTokens.push(\":\");\n\t\turiTokens.push(String(components.port));\n\t}\n\n\treturn uriTokens.length ? uriTokens.join(\"\") : undefined;\n};\n\nconst RDS1 = /^\\.\\.?\\//;\nconst RDS2 = /^\\/\\.(\\/|$)/;\nconst RDS3 = /^\\/\\.\\.(\\/|$)/;\nconst RDS4 = /^\\.\\.?$/;\nconst RDS5 = /^\\/?(?:.|\\n)*?(?=\\/|$)/;\n\nexport function removeDotSegments(input:string):string {\n\tconst output:Array<string> = [];\n\n\twhile (input.length) {\n\t\tif (input.match(RDS1)) {\n\t\t\tinput = input.replace(RDS1, \"\");\n\t\t} else if (input.match(RDS2)) {\n\t\t\tinput = input.replace(RDS2, \"/\");\n\t\t} else if (input.match(RDS3)) {\n\t\t\tinput = input.replace(RDS3, \"/\");\n\t\t\toutput.pop();\n\t\t} else if (input === \".\" || input === \"..\") {\n\t\t\tinput = \"\";\n\t\t} else {\n\t\t\tconst im = input.match(RDS5);\n\t\t\tif (im) {\n\t\t\t\tconst s = im[0];\n\t\t\t\tinput = input.slice(s.length);\n\t\t\t\toutput.push(s);\n\t\t\t} else {\n\t\t\t\tthrow new Error(\"Unexpected dot segment condition\");\n\t\t\t}\n\t\t}\n\t}\n\n\treturn output.join(\"\");\n};\n\nexport function serialize(components:URIComponents, options:URIOptions = {}):string {\n\tconst protocol = (options.iri ? IRI_PROTOCOL : URI_PROTOCOL);\n\tconst uriTokens:Array<string> = [];\n\n\t//find scheme handler\n\tconst schemeHandler = SCHEMES[(options.scheme || components.scheme || \"\").toLowerCase()];\n\n\t//perform scheme specific serialization\n\tif (schemeHandler && schemeHandler.serialize) schemeHandler.serialize(components, options);\n\n\tif (components.host) {\n\t\t//if host component is an IPv6 address\n\t\tif (protocol.IPV6ADDRESS.test(components.host)) {\n\t\t\t//TODO: normalize IPv6 address as per RFC 5952\n\t\t}\n\n\t\t//if host component is a domain name\n\t\telse if (options.domainHost || (schemeHandler && schemeHandler.domainHost)) {\n\t\t\t//convert IDN via punycode\n\t\t\ttry {\n\t\t\t\tcomponents.host = (!options.iri ? punycode.toASCII(components.host.replace(protocol.PCT_ENCODED, pctDecChars).toLowerCase()) : punycode.toUnicode(components.host));\n\t\t\t} catch (e) {\n\t\t\t\tcomponents.error = components.error || \"Host's domain name can not be converted to \" + (!options.iri ? \"ASCII\" : \"Unicode\") + \" via punycode: \" + e;\n\t\t\t}\n\t\t}\n\t}\n\n\t//normalize encoding\n\t_normalizeComponentEncoding(components, protocol);\n\n\tif (options.reference !== \"suffix\" && components.scheme) {\n\t\turiTokens.push(components.scheme);\n\t\turiTokens.push(\":\");\n\t}\n\n\tconst authority = _recomposeAuthority(components, options);\n\tif (authority !== undefined) {\n\t\tif (options.reference !== \"suffix\") {\n\t\t\turiTokens.push(\"//\");\n\t\t}\n\n\t\turiTokens.push(authority);\n\n\t\tif (components.path && components.path.charAt(0) !== \"/\") {\n\t\t\turiTokens.push(\"/\");\n\t\t}\n\t}\n\n\tif (components.path !== undefined) {\n\t\tlet s = components.path;\n\n\t\tif (!options.absolutePath && (!schemeHandler || !schemeHandler.absolutePath)) {\n\t\t\ts = removeDotSegments(s);\n\t\t}\n\n\t\tif (authority === undefined) {\n\t\t\ts = s.replace(/^\\/\\//, \"/%2F\");  //don't allow the path to start with \"//\"\n\t\t}\n\n\t\turiTokens.push(s);\n\t}\n\n\tif (components.query !== undefined) {\n\t\turiTokens.push(\"?\");\n\t\turiTokens.push(components.query);\n\t}\n\n\tif (components.fragment !== undefined) {\n\t\turiTokens.push(\"#\");\n\t\turiTokens.push(components.fragment);\n\t}\n\n\treturn uriTokens.join(\"\");  //merge tokens into a string\n};\n\nexport function resolveComponents(base:URIComponents, relative:URIComponents, options:URIOptions = {}, skipNormalization?:boolean):URIComponents {\n\tconst target:URIComponents = {};\n\n\tif (!skipNormalization) {\n\t\tbase = parse(serialize(base, options), options);  //normalize base components\n\t\trelative = parse(serialize(relative, options), options);  //normalize relative components\n\t}\n\toptions = options || {};\n\n\tif (!options.tolerant && relative.scheme) {\n\t\ttarget.scheme = relative.scheme;\n\t\t//target.authority = relative.authority;\n\t\ttarget.userinfo = relative.userinfo;\n\t\ttarget.host = relative.host;\n\t\ttarget.port = relative.port;\n\t\ttarget.path = removeDotSegments(relative.path || \"\");\n\t\ttarget.query = relative.query;\n\t} else {\n\t\tif (relative.userinfo !== undefined || relative.host !== undefined || relative.port !== undefined) {\n\t\t\t//target.authority = relative.authority;\n\t\t\ttarget.userinfo = relative.userinfo;\n\t\t\ttarget.host = relative.host;\n\t\t\ttarget.port = relative.port;\n\t\t\ttarget.path = removeDotSegments(relative.path || \"\");\n\t\t\ttarget.query = relative.query;\n\t\t} else {\n\t\t\tif (!relative.path) {\n\t\t\t\ttarget.path = base.path;\n\t\t\t\tif (relative.query !== undefined) {\n\t\t\t\t\ttarget.query = relative.query;\n\t\t\t\t} else {\n\t\t\t\t\ttarget.query = base.query;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (relative.path.charAt(0) === \"/\") {\n\t\t\t\t\ttarget.path = removeDotSegments(relative.path);\n\t\t\t\t} else {\n\t\t\t\t\tif ((base.userinfo !== undefined || base.host !== undefined || base.port !== undefined) && !base.path) {\n\t\t\t\t\t\ttarget.path = \"/\" + relative.path;\n\t\t\t\t\t} else if (!base.path) {\n\t\t\t\t\t\ttarget.path = relative.path;\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttarget.path = base.path.slice(0, base.path.lastIndexOf(\"/\") + 1) + relative.path;\n\t\t\t\t\t}\n\t\t\t\t\ttarget.path = removeDotSegments(target.path);\n\t\t\t\t}\n\t\t\t\ttarget.query = relative.query;\n\t\t\t}\n\t\t\t//target.authority = base.authority;\n\t\t\ttarget.userinfo = base.userinfo;\n\t\t\ttarget.host = base.host;\n\t\t\ttarget.port = base.port;\n\t\t}\n\t\ttarget.scheme = base.scheme;\n\t}\n\n\ttarget.fragment = relative.fragment;\n\n\treturn target;\n};\n\nexport function resolve(baseURI:string, relativeURI:string, options?:URIOptions):string {\n\tconst schemelessOptions = assign({ scheme : 'null' }, options);\n\treturn serialize(resolveComponents(parse(baseURI, schemelessOptions), parse(relativeURI, schemelessOptions), schemelessOptions, true), schemelessOptions);\n};\n\nexport function normalize(uri:string, options?:URIOptions):string;\nexport function normalize(uri:URIComponents, options?:URIOptions):URIComponents;\nexport function normalize(uri:any, options?:URIOptions):any {\n\tif (typeof uri === \"string\") {\n\t\turi = serialize(parse(uri, options), options);\n\t} else if (typeOf(uri) === \"object\") {\n\t\turi = parse(serialize(<URIComponents>uri, options), options);\n\t}\n\n\treturn uri;\n};\n\nexport function equal(uriA:string, uriB:string, options?: URIOptions):boolean;\nexport function equal(uriA:URIComponents, uriB:URIComponents, options?:URIOptions):boolean;\nexport function equal(uriA:any, uriB:any, options?:URIOptions):boolean {\n\tif (typeof uriA === \"string\") {\n\t\turiA = serialize(parse(uriA, options), options);\n\t} else if (typeOf(uriA) === \"object\") {\n\t\turiA = serialize(<URIComponents>uriA, options);\n\t}\n\n\tif (typeof uriB === \"string\") {\n\t\turiB = serialize(parse(uriB, options), options);\n\t} else if (typeOf(uriB) === \"object\") {\n\t\turiB = serialize(<URIComponents>uriB, options);\n\t}\n\n\treturn uriA === uriB;\n};\n\nexport function escapeComponent(str:string, options?:URIOptions):string {\n\treturn str && str.toString().replace((!options || !options.iri ? URI_PROTOCOL.ESCAPE : IRI_PROTOCOL.ESCAPE), pctEncChar);\n};\n\nexport function unescapeComponent(str:string, options?:URIOptions):string {\n\treturn str && str.toString().replace((!options || !options.iri ? URI_PROTOCOL.PCT_ENCODED : IRI_PROTOCOL.PCT_ENCODED), pctDecChars);\n};\n","'use strict';\n\n/** Highest positive signed 32-bit float value */\nconst maxInt = 2147483647; // aka. 0x7FFFFFFF or 2^31-1\n\n/** Bootstring parameters */\nconst base = 36;\nconst tMin = 1;\nconst tMax = 26;\nconst skew = 38;\nconst damp = 700;\nconst initialBias = 72;\nconst initialN = 128; // 0x80\nconst delimiter = '-'; // '\\x2D'\n\n/** Regular expressions */\nconst regexPunycode = /^xn--/;\nconst regexNonASCII = /[^\\0-\\x7E]/; // non-ASCII chars\nconst regexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g; // RFC 3490 separators\n\n/** Error messages */\nconst errors = {\n\t'overflow': 'Overflow: input needs wider integers to process',\n\t'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n\t'invalid-input': 'Invalid input'\n};\n\n/** Convenience shortcuts */\nconst baseMinusTMin = base - tMin;\nconst floor = Math.floor;\nconst stringFromCharCode = String.fromCharCode;\n\n/*--------------------------------------------------------------------------*/\n\n/**\n * A generic error utility function.\n * @private\n * @param {String} type The error type.\n * @returns {Error} Throws a `RangeError` with the applicable error message.\n */\nfunction error(type) {\n\tthrow new RangeError(errors[type]);\n}\n\n/**\n * A generic `Array#map` utility function.\n * @private\n * @param {Array} array The array to iterate over.\n * @param {Function} callback The function that gets called for every array\n * item.\n * @returns {Array} A new array of values returned by the callback function.\n */\nfunction map(array, fn) {\n\tconst result = [];\n\tlet length = array.length;\n\twhile (length--) {\n\t\tresult[length] = fn(array[length]);\n\t}\n\treturn result;\n}\n\n/**\n * A simple `Array#map`-like wrapper to work with domain name strings or email\n * addresses.\n * @private\n * @param {String} domain The domain name or email address.\n * @param {Function} callback The function that gets called for every\n * character.\n * @returns {Array} A new string of characters returned by the callback\n * function.\n */\nfunction mapDomain(string, fn) {\n\tconst parts = string.split('@');\n\tlet result = '';\n\tif (parts.length > 1) {\n\t\t// In email addresses, only the domain name should be punycoded. Leave\n\t\t// the local part (i.e. everything up to `@`) intact.\n\t\tresult = parts[0] + '@';\n\t\tstring = parts[1];\n\t}\n\t// Avoid `split(regex)` for IE8 compatibility. See #17.\n\tstring = string.replace(regexSeparators, '\\x2E');\n\tconst labels = string.split('.');\n\tconst encoded = map(labels, fn).join('.');\n\treturn result + encoded;\n}\n\n/**\n * Creates an array containing the numeric code points of each Unicode\n * character in the string. While JavaScript uses UCS-2 internally,\n * this function will convert a pair of surrogate halves (each of which\n * UCS-2 exposes as separate characters) into a single code point,\n * matching UTF-16.\n * @see `punycode.ucs2.encode`\n * @see <https://mathiasbynens.be/notes/javascript-encoding>\n * @memberOf punycode.ucs2\n * @name decode\n * @param {String} string The Unicode input string (UCS-2).\n * @returns {Array} The new array of code points.\n */\nfunction ucs2decode(string) {\n\tconst output = [];\n\tlet counter = 0;\n\tconst length = string.length;\n\twhile (counter < length) {\n\t\tconst value = string.charCodeAt(counter++);\n\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t// It's a high surrogate, and there is a next character.\n\t\t\tconst extra = string.charCodeAt(counter++);\n\t\t\tif ((extra & 0xFC00) == 0xDC00) { // Low surrogate.\n\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t} else {\n\t\t\t\t// It's an unmatched surrogate; only append this code unit, in case the\n\t\t\t\t// next code unit is the high surrogate of a surrogate pair.\n\t\t\t\toutput.push(value);\n\t\t\t\tcounter--;\n\t\t\t}\n\t\t} else {\n\t\t\toutput.push(value);\n\t\t}\n\t}\n\treturn output;\n}\n\n/**\n * Creates a string based on an array of numeric code points.\n * @see `punycode.ucs2.decode`\n * @memberOf punycode.ucs2\n * @name encode\n * @param {Array} codePoints The array of numeric code points.\n * @returns {String} The new Unicode string (UCS-2).\n */\nconst ucs2encode = array => String.fromCodePoint(...array);\n\n/**\n * Converts a basic code point into a digit/integer.\n * @see `digitToBasic()`\n * @private\n * @param {Number} codePoint The basic numeric code point value.\n * @returns {Number} The numeric value of a basic code point (for use in\n * representing integers) in the range `0` to `base - 1`, or `base` if\n * the code point does not represent a value.\n */\nconst basicToDigit = function(codePoint) {\n\tif (codePoint - 0x30 < 0x0A) {\n\t\treturn codePoint - 0x16;\n\t}\n\tif (codePoint - 0x41 < 0x1A) {\n\t\treturn codePoint - 0x41;\n\t}\n\tif (codePoint - 0x61 < 0x1A) {\n\t\treturn codePoint - 0x61;\n\t}\n\treturn base;\n};\n\n/**\n * Converts a digit/integer into a basic code point.\n * @see `basicToDigit()`\n * @private\n * @param {Number} digit The numeric value of a basic code point.\n * @returns {Number} The basic code point whose value (when used for\n * representing integers) is `digit`, which needs to be in the range\n * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n * used; else, the lowercase form is used. The behavior is undefined\n * if `flag` is non-zero and `digit` has no uppercase form.\n */\nconst digitToBasic = function(digit, flag) {\n\t//  0..25 map to ASCII a..z or A..Z\n\t// 26..35 map to ASCII 0..9\n\treturn digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n};\n\n/**\n * Bias adaptation function as per section 3.4 of RFC 3492.\n * https://tools.ietf.org/html/rfc3492#section-3.4\n * @private\n */\nconst adapt = function(delta, numPoints, firstTime) {\n\tlet k = 0;\n\tdelta = firstTime ? floor(delta / damp) : delta >> 1;\n\tdelta += floor(delta / numPoints);\n\tfor (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {\n\t\tdelta = floor(delta / baseMinusTMin);\n\t}\n\treturn floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n};\n\n/**\n * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n * symbols.\n * @memberOf punycode\n * @param {String} input The Punycode string of ASCII-only symbols.\n * @returns {String} The resulting string of Unicode symbols.\n */\nconst decode = function(input) {\n\t// Don't use UCS-2.\n\tconst output = [];\n\tconst inputLength = input.length;\n\tlet i = 0;\n\tlet n = initialN;\n\tlet bias = initialBias;\n\n\t// Handle the basic code points: let `basic` be the number of input code\n\t// points before the last delimiter, or `0` if there is none, then copy\n\t// the first basic code points to the output.\n\n\tlet basic = input.lastIndexOf(delimiter);\n\tif (basic < 0) {\n\t\tbasic = 0;\n\t}\n\n\tfor (let j = 0; j < basic; ++j) {\n\t\t// if it's not a basic code point\n\t\tif (input.charCodeAt(j) >= 0x80) {\n\t\t\terror('not-basic');\n\t\t}\n\t\toutput.push(input.charCodeAt(j));\n\t}\n\n\t// Main decoding loop: start just after the last delimiter if any basic code\n\t// points were copied; start at the beginning otherwise.\n\n\tfor (let index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {\n\n\t\t// `index` is the index of the next character to be consumed.\n\t\t// Decode a generalized variable-length integer into `delta`,\n\t\t// which gets added to `i`. The overflow checking is easier\n\t\t// if we increase `i` as we go, then subtract off its starting\n\t\t// value at the end to obtain `delta`.\n\t\tlet oldi = i;\n\t\tfor (let w = 1, k = base; /* no condition */; k += base) {\n\n\t\t\tif (index >= inputLength) {\n\t\t\t\terror('invalid-input');\n\t\t\t}\n\n\t\t\tconst digit = basicToDigit(input.charCodeAt(index++));\n\n\t\t\tif (digit >= base || digit > floor((maxInt - i) / w)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\ti += digit * w;\n\t\t\tconst t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\n\t\t\tif (digit < t) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tconst baseMinusT = base - t;\n\t\t\tif (w > floor(maxInt / baseMinusT)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tw *= baseMinusT;\n\n\t\t}\n\n\t\tconst out = output.length + 1;\n\t\tbias = adapt(i - oldi, out, oldi == 0);\n\n\t\t// `i` was supposed to wrap around from `out` to `0`,\n\t\t// incrementing `n` each time, so we'll fix that now:\n\t\tif (floor(i / out) > maxInt - n) {\n\t\t\terror('overflow');\n\t\t}\n\n\t\tn += floor(i / out);\n\t\ti %= out;\n\n\t\t// Insert `n` at position `i` of the output.\n\t\toutput.splice(i++, 0, n);\n\n\t}\n\n\treturn String.fromCodePoint(...output);\n};\n\n/**\n * Converts a string of Unicode symbols (e.g. a domain name label) to a\n * Punycode string of ASCII-only symbols.\n * @memberOf punycode\n * @param {String} input The string of Unicode symbols.\n * @returns {String} The resulting Punycode string of ASCII-only symbols.\n */\nconst encode = function(input) {\n\tconst output = [];\n\n\t// Convert the input in UCS-2 to an array of Unicode code points.\n\tinput = ucs2decode(input);\n\n\t// Cache the length.\n\tlet inputLength = input.length;\n\n\t// Initialize the state.\n\tlet n = initialN;\n\tlet delta = 0;\n\tlet bias = initialBias;\n\n\t// Handle the basic code points.\n\tfor (const currentValue of input) {\n\t\tif (currentValue < 0x80) {\n\t\t\toutput.push(stringFromCharCode(currentValue));\n\t\t}\n\t}\n\n\tlet basicLength = output.length;\n\tlet handledCPCount = basicLength;\n\n\t// `handledCPCount` is the number of code points that have been handled;\n\t// `basicLength` is the number of basic code points.\n\n\t// Finish the basic string with a delimiter unless it's empty.\n\tif (basicLength) {\n\t\toutput.push(delimiter);\n\t}\n\n\t// Main encoding loop:\n\twhile (handledCPCount < inputLength) {\n\n\t\t// All non-basic code points < n have been handled already. Find the next\n\t\t// larger one:\n\t\tlet m = maxInt;\n\t\tfor (const currentValue of input) {\n\t\t\tif (currentValue >= n && currentValue < m) {\n\t\t\t\tm = currentValue;\n\t\t\t}\n\t\t}\n\n\t\t// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n\t\t// but guard against overflow.\n\t\tconst handledCPCountPlusOne = handledCPCount + 1;\n\t\tif (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n\t\t\terror('overflow');\n\t\t}\n\n\t\tdelta += (m - n) * handledCPCountPlusOne;\n\t\tn = m;\n\n\t\tfor (const currentValue of input) {\n\t\t\tif (currentValue < n && ++delta > maxInt) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\t\t\tif (currentValue == n) {\n\t\t\t\t// Represent delta as a generalized variable-length integer.\n\t\t\t\tlet q = delta;\n\t\t\t\tfor (let k = base; /* no condition */; k += base) {\n\t\t\t\t\tconst t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\t\t\t\t\tif (q < t) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tconst qMinusT = q - t;\n\t\t\t\t\tconst baseMinusT = base - t;\n\t\t\t\t\toutput.push(\n\t\t\t\t\t\tstringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))\n\t\t\t\t\t);\n\t\t\t\t\tq = floor(qMinusT / baseMinusT);\n\t\t\t\t}\n\n\t\t\t\toutput.push(stringFromCharCode(digitToBasic(q, 0)));\n\t\t\t\tbias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);\n\t\t\t\tdelta = 0;\n\t\t\t\t++handledCPCount;\n\t\t\t}\n\t\t}\n\n\t\t++delta;\n\t\t++n;\n\n\t}\n\treturn output.join('');\n};\n\n/**\n * Converts a Punycode string representing a domain name or an email address\n * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\n * it doesn't matter if you call it on a string that has already been\n * converted to Unicode.\n * @memberOf punycode\n * @param {String} input The Punycoded domain name or email address to\n * convert to Unicode.\n * @returns {String} The Unicode representation of the given Punycode\n * string.\n */\nconst toUnicode = function(input) {\n\treturn mapDomain(input, function(string) {\n\t\treturn regexPunycode.test(string)\n\t\t\t? decode(string.slice(4).toLowerCase())\n\t\t\t: string;\n\t});\n};\n\n/**\n * Converts a Unicode string representing a domain name or an email address to\n * Punycode. Only the non-ASCII parts of the domain name will be converted,\n * i.e. it doesn't matter if you call it with a domain that's already in\n * ASCII.\n * @memberOf punycode\n * @param {String} input The domain name or email address to convert, as a\n * Unicode string.\n * @returns {String} The Punycode representation of the given domain name or\n * email address.\n */\nconst toASCII = function(input) {\n\treturn mapDomain(input, function(string) {\n\t\treturn regexNonASCII.test(string)\n\t\t\t? 'xn--' + encode(string)\n\t\t\t: string;\n\t});\n};\n\n/*--------------------------------------------------------------------------*/\n\n/** Define the public API */\nconst punycode = {\n\t/**\n\t * A string representing the current Punycode.js version number.\n\t * @memberOf punycode\n\t * @type String\n\t */\n\t'version': '2.1.0',\n\t/**\n\t * An object of methods to convert from JavaScript's internal character\n\t * representation (UCS-2) to Unicode code points, and back.\n\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t * @memberOf punycode\n\t * @type Object\n\t */\n\t'ucs2': {\n\t\t'decode': ucs2decode,\n\t\t'encode': ucs2encode\n\t},\n\t'decode': decode,\n\t'encode': encode,\n\t'toASCII': toASCII,\n\t'toUnicode': toUnicode\n};\n\nexport default punycode;\n","import { URIRegExps } from \"./uri\";\nimport { buildExps } from \"./regexps-uri\";\n\nexport default buildExps(true);\n","import { URIRegExps } from \"./uri\";\nimport { merge, subexp } from \"./util\";\n\nexport function buildExps(isIRI:boolean):URIRegExps {\n\tconst\n\t\tALPHA$$ = \"[A-Za-z]\",\n\t\tCR$ = \"[\\\\x0D]\",\n\t\tDIGIT$$ = \"[0-9]\",\n\t\tDQUOTE$$ = \"[\\\\x22]\",\n\t\tHEXDIG$$ = merge(DIGIT$$, \"[A-Fa-f]\"),  //case-insensitive\n\t\tLF$$ = \"[\\\\x0A]\",\n\t\tSP$$ = \"[\\\\x20]\",\n\t\tPCT_ENCODED$ = subexp(subexp(\"%[EFef]\" + HEXDIG$$ + \"%\" + HEXDIG$$ + HEXDIG$$ + \"%\" + HEXDIG$$ + HEXDIG$$) + \"|\" + subexp(\"%[89A-Fa-f]\" + HEXDIG$$ + \"%\" + HEXDIG$$ + HEXDIG$$) + \"|\" + subexp(\"%\" + HEXDIG$$ + HEXDIG$$)),  //expanded\n\t\tGEN_DELIMS$$ = \"[\\\\:\\\\/\\\\?\\\\#\\\\[\\\\]\\\\@]\",\n\t\tSUB_DELIMS$$ = \"[\\\\!\\\\$\\\\&\\\\'\\\\(\\\\)\\\\*\\\\+\\\\,\\\\;\\\\=]\",\n\t\tRESERVED$$ = merge(GEN_DELIMS$$, SUB_DELIMS$$),\n\t\tUCSCHAR$$ = isIRI ? \"[\\\\xA0-\\\\u200D\\\\u2010-\\\\u2029\\\\u202F-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFEF]\" : \"[]\",  //subset, excludes bidi control characters\n\t\tIPRIVATE$$ = isIRI ? \"[\\\\uE000-\\\\uF8FF]\" : \"[]\",  //subset\n\t\tUNRESERVED$$ = merge(ALPHA$$, DIGIT$$, \"[\\\\-\\\\.\\\\_\\\\~]\", UCSCHAR$$),\n\t\tSCHEME$ = subexp(ALPHA$$ + merge(ALPHA$$, DIGIT$$, \"[\\\\+\\\\-\\\\.]\") + \"*\"),\n\t\tUSERINFO$ = subexp(subexp(PCT_ENCODED$ + \"|\" + merge(UNRESERVED$$, SUB_DELIMS$$, \"[\\\\:]\")) + \"*\"),\n\t\tDEC_OCTET$ = subexp(subexp(\"25[0-5]\") + \"|\" + subexp(\"2[0-4]\" + DIGIT$$) + \"|\" + subexp(\"1\" + DIGIT$$ + DIGIT$$) + \"|\" + subexp(\"[1-9]\" + DIGIT$$) + \"|\" + DIGIT$$),\n\t\tDEC_OCTET_RELAXED$ = subexp(subexp(\"25[0-5]\") + \"|\" + subexp(\"2[0-4]\" + DIGIT$$) + \"|\" + subexp(\"1\" + DIGIT$$ + DIGIT$$) + \"|\" + subexp(\"0?[1-9]\" + DIGIT$$) + \"|0?0?\" + DIGIT$$),  //relaxed parsing rules\n\t\tIPV4ADDRESS$ = subexp(DEC_OCTET_RELAXED$ + \"\\\\.\" + DEC_OCTET_RELAXED$ + \"\\\\.\" + DEC_OCTET_RELAXED$ + \"\\\\.\" + DEC_OCTET_RELAXED$),\n\t\tH16$ = subexp(HEXDIG$$ + \"{1,4}\"),\n\t\tLS32$ = subexp(subexp(H16$ + \"\\\\:\" + H16$) + \"|\" + IPV4ADDRESS$),\n\t\tIPV6ADDRESS1$ = subexp(                                                            subexp(H16$ + \"\\\\:\") + \"{6}\" + LS32$), //                           6( h16 \":\" ) ls32\n\t\tIPV6ADDRESS2$ = subexp(                                                 \"\\\\:\\\\:\" + subexp(H16$ + \"\\\\:\") + \"{5}\" + LS32$), //                      \"::\" 5( h16 \":\" ) ls32\n\t\tIPV6ADDRESS3$ = subexp(subexp(                                 H16$) + \"?\\\\:\\\\:\" + subexp(H16$ + \"\\\\:\") + \"{4}\" + LS32$), //[               h16 ] \"::\" 4( h16 \":\" ) ls32\n\t\tIPV6ADDRESS4$ = subexp(subexp(subexp(H16$ + \"\\\\:\") + \"{0,1}\" + H16$) + \"?\\\\:\\\\:\" + subexp(H16$ + \"\\\\:\") + \"{3}\" + LS32$), //[ *1( h16 \":\" ) h16 ] \"::\" 3( h16 \":\" ) ls32\n\t\tIPV6ADDRESS5$ = subexp(subexp(subexp(H16$ + \"\\\\:\") + \"{0,2}\" + H16$) + \"?\\\\:\\\\:\" + subexp(H16$ + \"\\\\:\") + \"{2}\" + LS32$), //[ *2( h16 \":\" ) h16 ] \"::\" 2( h16 \":\" ) ls32\n\t\tIPV6ADDRESS6$ = subexp(subexp(subexp(H16$ + \"\\\\:\") + \"{0,3}\" + H16$) + \"?\\\\:\\\\:\" +        H16$ + \"\\\\:\"          + LS32$), //[ *3( h16 \":\" ) h16 ] \"::\"    h16 \":\"   ls32\n\t\tIPV6ADDRESS7$ = subexp(subexp(subexp(H16$ + \"\\\\:\") + \"{0,4}\" + H16$) + \"?\\\\:\\\\:\"                                + LS32$), //[ *4( h16 \":\" ) h16 ] \"::\"              ls32\n\t\tIPV6ADDRESS8$ = subexp(subexp(subexp(H16$ + \"\\\\:\") + \"{0,5}\" + H16$) + \"?\\\\:\\\\:\"                                + H16$ ), //[ *5( h16 \":\" ) h16 ] \"::\"              h16\n\t\tIPV6ADDRESS9$ = subexp(subexp(subexp(H16$ + \"\\\\:\") + \"{0,6}\" + H16$) + \"?\\\\:\\\\:\"                                       ), //[ *6( h16 \":\" ) h16 ] \"::\"\n\t\tIPV6ADDRESS$ = subexp([IPV6ADDRESS1$, IPV6ADDRESS2$, IPV6ADDRESS3$, IPV6ADDRESS4$, IPV6ADDRESS5$, IPV6ADDRESS6$, IPV6ADDRESS7$, IPV6ADDRESS8$, IPV6ADDRESS9$].join(\"|\")),\n\t\tZONEID$ = subexp(subexp(UNRESERVED$$ + \"|\" + PCT_ENCODED$) + \"+\"),  //RFC 6874\n\t\tIPV6ADDRZ$ = subexp(IPV6ADDRESS$ + \"\\\\%25\" + ZONEID$),  //RFC 6874\n\t\tIPV6ADDRZ_RELAXED$ = subexp(IPV6ADDRESS$ + subexp(\"\\\\%25|\\\\%(?!\" + HEXDIG$$ + \"{2})\") + ZONEID$),  //RFC 6874, with relaxed parsing rules\n\t\tIPVFUTURE$ = subexp(\"[vV]\" + HEXDIG$$ + \"+\\\\.\" + merge(UNRESERVED$$, SUB_DELIMS$$, \"[\\\\:]\") + \"+\"),\n\t\tIP_LITERAL$ = subexp(\"\\\\[\" + subexp(IPV6ADDRZ_RELAXED$ + \"|\" + IPV6ADDRESS$ + \"|\" + IPVFUTURE$) + \"\\\\]\"),  //RFC 6874\n\t\tREG_NAME$ = subexp(subexp(PCT_ENCODED$ + \"|\" + merge(UNRESERVED$$, SUB_DELIMS$$)) + \"*\"),\n\t\tHOST$ = subexp(IP_LITERAL$ + \"|\" + IPV4ADDRESS$ + \"(?!\" + REG_NAME$ + \")\" + \"|\" + REG_NAME$),\n\t\tPORT$ = subexp(DIGIT$$ + \"*\"),\n\t\tAUTHORITY$ = subexp(subexp(USERINFO$ + \"@\") + \"?\" + HOST$ + subexp(\"\\\\:\" + PORT$) + \"?\"),\n\t\tPCHAR$ = subexp(PCT_ENCODED$ + \"|\" + merge(UNRESERVED$$, SUB_DELIMS$$, \"[\\\\:\\\\@]\")),\n\t\tSEGMENT$ = subexp(PCHAR$ + \"*\"),\n\t\tSEGMENT_NZ$ = subexp(PCHAR$ + \"+\"),\n\t\tSEGMENT_NZ_NC$ = subexp(subexp(PCT_ENCODED$ + \"|\" + merge(UNRESERVED$$, SUB_DELIMS$$, \"[\\\\@]\")) + \"+\"),\n\t\tPATH_ABEMPTY$ = subexp(subexp(\"\\\\/\" + SEGMENT$) + \"*\"),\n\t\tPATH_ABSOLUTE$ = subexp(\"\\\\/\" + subexp(SEGMENT_NZ$ + PATH_ABEMPTY$) + \"?\"),  //simplified\n\t\tPATH_NOSCHEME$ = subexp(SEGMENT_NZ_NC$ + PATH_ABEMPTY$),  //simplified\n\t\tPATH_ROOTLESS$ = subexp(SEGMENT_NZ$ + PATH_ABEMPTY$),  //simplified\n\t\tPATH_EMPTY$ = \"(?!\" + PCHAR$ + \")\",\n\t\tPATH$ = subexp(PATH_ABEMPTY$ + \"|\" + PATH_ABSOLUTE$ + \"|\" + PATH_NOSCHEME$ + \"|\" + PATH_ROOTLESS$ + \"|\" + PATH_EMPTY$),\n\t\tQUERY$ = subexp(subexp(PCHAR$ + \"|\" + merge(\"[\\\\/\\\\?]\", IPRIVATE$$)) + \"*\"),\n\t\tFRAGMENT$ = subexp(subexp(PCHAR$ + \"|[\\\\/\\\\?]\") + \"*\"),\n\t\tHIER_PART$ = subexp(subexp(\"\\\\/\\\\/\" + AUTHORITY$ + PATH_ABEMPTY$) + \"|\" + PATH_ABSOLUTE$ + \"|\" + PATH_ROOTLESS$ + \"|\" + PATH_EMPTY$),\n\t\tURI$ = subexp(SCHEME$ + \"\\\\:\" + HIER_PART$ + subexp(\"\\\\?\" + QUERY$) + \"?\" + subexp(\"\\\\#\" + FRAGMENT$) + \"?\"),\n\t\tRELATIVE_PART$ = subexp(subexp(\"\\\\/\\\\/\" + AUTHORITY$ + PATH_ABEMPTY$) + \"|\" + PATH_ABSOLUTE$ + \"|\" + PATH_NOSCHEME$ + \"|\" + PATH_EMPTY$),\n\t\tRELATIVE$ = subexp(RELATIVE_PART$ + subexp(\"\\\\?\" + QUERY$) + \"?\" + subexp(\"\\\\#\" + FRAGMENT$) + \"?\"),\n\t\tURI_REFERENCE$ = subexp(URI$ + \"|\" + RELATIVE$),\n\t\tABSOLUTE_URI$ = subexp(SCHEME$ + \"\\\\:\" + HIER_PART$ + subexp(\"\\\\?\" + QUERY$) + \"?\"),\n\n\t\tGENERIC_REF$ = \"^(\" + SCHEME$ + \")\\\\:\" + subexp(subexp(\"\\\\/\\\\/(\" + subexp(\"(\" + USERINFO$ + \")@\") + \"?(\" + HOST$ + \")\" + subexp(\"\\\\:(\" + PORT$ + \")\") + \"?)\") + \"?(\" + PATH_ABEMPTY$ + \"|\" + PATH_ABSOLUTE$ + \"|\" + PATH_ROOTLESS$ + \"|\" + PATH_EMPTY$ + \")\") + subexp(\"\\\\?(\" + QUERY$ + \")\") + \"?\" + subexp(\"\\\\#(\" + FRAGMENT$ + \")\") + \"?$\",\n\t\tRELATIVE_REF$ = \"^(){0}\" + subexp(subexp(\"\\\\/\\\\/(\" + subexp(\"(\" + USERINFO$ + \")@\") + \"?(\" + HOST$ + \")\" + subexp(\"\\\\:(\" + PORT$ + \")\") + \"?)\") + \"?(\" + PATH_ABEMPTY$ + \"|\" + PATH_ABSOLUTE$ + \"|\" + PATH_NOSCHEME$ + \"|\" + PATH_EMPTY$ + \")\") + subexp(\"\\\\?(\" + QUERY$ + \")\") + \"?\" + subexp(\"\\\\#(\" + FRAGMENT$ + \")\") + \"?$\",\n\t\tABSOLUTE_REF$ = \"^(\" + SCHEME$ + \")\\\\:\" + subexp(subexp(\"\\\\/\\\\/(\" + subexp(\"(\" + USERINFO$ + \")@\") + \"?(\" + HOST$ + \")\" + subexp(\"\\\\:(\" + PORT$ + \")\") + \"?)\") + \"?(\" + PATH_ABEMPTY$ + \"|\" + PATH_ABSOLUTE$ + \"|\" + PATH_ROOTLESS$ + \"|\" + PATH_EMPTY$ + \")\") + subexp(\"\\\\?(\" + QUERY$ + \")\") + \"?$\",\n\t\tSAMEDOC_REF$ = \"^\" + subexp(\"\\\\#(\" + FRAGMENT$ + \")\") + \"?$\",\n\t\tAUTHORITY_REF$ = \"^\" + subexp(\"(\" + USERINFO$ + \")@\") + \"?(\" + HOST$ + \")\" + subexp(\"\\\\:(\" + PORT$ + \")\") + \"?$\"\n\t;\n\n\treturn {\n\t\tNOT_SCHEME : new RegExp(merge(\"[^]\", ALPHA$$, DIGIT$$, \"[\\\\+\\\\-\\\\.]\"), \"g\"),\n\t\tNOT_USERINFO : new RegExp(merge(\"[^\\\\%\\\\:]\", UNRESERVED$$, SUB_DELIMS$$), \"g\"),\n\t\tNOT_HOST : new RegExp(merge(\"[^\\\\%\\\\[\\\\]\\\\:]\", UNRESERVED$$, SUB_DELIMS$$), \"g\"),\n\t\tNOT_PATH : new RegExp(merge(\"[^\\\\%\\\\/\\\\:\\\\@]\", UNRESERVED$$, SUB_DELIMS$$), \"g\"),\n\t\tNOT_PATH_NOSCHEME : new RegExp(merge(\"[^\\\\%\\\\/\\\\@]\", UNRESERVED$$, SUB_DELIMS$$), \"g\"),\n\t\tNOT_QUERY : new RegExp(merge(\"[^\\\\%]\", UNRESERVED$$, SUB_DELIMS$$, \"[\\\\:\\\\@\\\\/\\\\?]\", IPRIVATE$$), \"g\"),\n\t\tNOT_FRAGMENT : new RegExp(merge(\"[^\\\\%]\", UNRESERVED$$, SUB_DELIMS$$, \"[\\\\:\\\\@\\\\/\\\\?]\"), \"g\"),\n\t\tESCAPE : new RegExp(merge(\"[^]\", UNRESERVED$$, SUB_DELIMS$$), \"g\"),\n\t\tUNRESERVED : new RegExp(UNRESERVED$$, \"g\"),\n\t\tOTHER_CHARS : new RegExp(merge(\"[^\\\\%]\", UNRESERVED$$, RESERVED$$), \"g\"),\n\t\tPCT_ENCODED : new RegExp(PCT_ENCODED$, \"g\"),\n\t\tIPV4ADDRESS : new RegExp(\"^(\" + IPV4ADDRESS$ + \")$\"),\n\t\tIPV6ADDRESS : new RegExp(\"^\\\\[?(\" + IPV6ADDRESS$ + \")\" + subexp(subexp(\"\\\\%25|\\\\%(?!\" + HEXDIG$$ + \"{2})\") + \"(\" + ZONEID$ + \")\") + \"?\\\\]?$\")  //RFC 6874, with relaxed parsing rules\n\t};\n}\n\nexport default buildExps(false);\n","export function merge(...sets:Array<string>):string {\n\tif (sets.length > 1) {\n\t\tsets[0] = sets[0].slice(0, -1);\n\t\tconst xl = sets.length - 1;\n\t\tfor (let x = 1; x < xl; ++x) {\n\t\t\tsets[x] = sets[x].slice(1, -1);\n\t\t}\n\t\tsets[xl] = sets[xl].slice(1);\n\t\treturn sets.join('');\n\t} else {\n\t\treturn sets[0];\n\t}\n}\n\nexport function subexp(str:string):string {\n\treturn \"(?:\" + str + \")\";\n}\n\nexport function typeOf(o:any):string {\n\treturn o === undefined ? \"undefined\" : (o === null ? \"null\" : Object.prototype.toString.call(o).split(\" \").pop().split(\"]\").shift().toLowerCase());\n}\n\nexport function toUpperCase(str:string):string {\n\treturn str.toUpperCase();\n}\n\nexport function toArray(obj:any):Array<any> {\n\treturn obj !== undefined && obj !== null ? (obj instanceof Array ? obj : (typeof obj.length !== \"number\" || obj.split || obj.setInterval || obj.call ? [obj] : Array.prototype.slice.call(obj))) : [];\n}\n\n\nexport function assign(target: object, source: any): any {\n\tconst obj = target as any;\n\tif (source) {\n\t\tfor (const key in source) {\n\t\t\tobj[key] = source[key];\n\t\t}\n\t}\n\treturn obj;\n}","import * as uri from \"uri-js\"\n\ntype URI = typeof uri & {code: string}\n;(uri as URI).code = 'require(\"ajv/dist/runtime/uri\").default'\n\nexport default uri as URI\n","export {\n  Format,\n  FormatDefinition,\n  AsyncFormatDefinition,\n  KeywordDefinition,\n  KeywordErrorDefinition,\n  CodeKeywordDefinition,\n  MacroKeywordDefinition,\n  FuncKeywordDefinition,\n  Vocabulary,\n  Schema,\n  SchemaObject,\n  AnySchemaObject,\n  AsyncSchema,\n  AnySchema,\n  ValidateFunction,\n  AsyncValidateFunction,\n  AnyValidateFunction,\n  ErrorObject,\n  ErrorNoParams,\n} from \"./types\"\n\nexport {SchemaCxt, SchemaObjCxt} from \"./compile\"\nexport interface Plugin<Opts> {\n  (ajv: Ajv, options?: Opts): Ajv\n  [prop: string]: any\n}\n\nexport {KeywordCxt} from \"./compile/validate\"\nexport {DefinedError} from \"./vocabularies/errors\"\nexport {JSONType} from \"./compile/rules\"\nexport {JSONSchemaType} from \"./types/json-schema\"\nexport {JTDSchemaType, SomeJTDSchemaType, JTDDataType} from \"./types/jtd-schema\"\nexport {_, str, stringify, nil, Name, Code, CodeGen, CodeGenOptions} from \"./compile/codegen\"\n\nimport type {\n  Schema,\n  AnySchema,\n  AnySchemaObject,\n  SchemaObject,\n  AsyncSchema,\n  Vocabulary,\n  KeywordDefinition,\n  AddedKeywordDefinition,\n  AnyValidateFunction,\n  ValidateFunction,\n  AsyncValidateFunction,\n  ErrorObject,\n  Format,\n  AddedFormat,\n  RegExpEngine,\n  UriResolver,\n} from \"./types\"\nimport type {JSONSchemaType} from \"./types/json-schema\"\nimport type {JTDSchemaType, SomeJTDSchemaType, JTDDataType} from \"./types/jtd-schema\"\nimport ValidationError from \"./runtime/validation_error\"\nimport MissingRefError from \"./compile/ref_error\"\nimport {getRules, ValidationRules, Rule, RuleGroup, JSONType} from \"./compile/rules\"\nimport {SchemaEnv, compileSchema, resolveSchema} from \"./compile\"\nimport {Code, ValueScope} from \"./compile/codegen\"\nimport {normalizeId, getSchemaRefs} from \"./compile/resolve\"\nimport {getJSONTypes} from \"./compile/validate/dataType\"\nimport {eachItem} from \"./compile/util\"\nimport * as $dataRefSchema from \"./refs/data.json\"\n\nimport DefaultUriResolver from \"./runtime/uri\"\n\nconst defaultRegExp: RegExpEngine = (str, flags) => new RegExp(str, flags)\ndefaultRegExp.code = \"new RegExp\"\n\nconst META_IGNORE_OPTIONS: (keyof Options)[] = [\"removeAdditional\", \"useDefaults\", \"coerceTypes\"]\nconst EXT_SCOPE_NAMES = new Set([\n  \"validate\",\n  \"serialize\",\n  \"parse\",\n  \"wrapper\",\n  \"root\",\n  \"schema\",\n  \"keyword\",\n  \"pattern\",\n  \"formats\",\n  \"validate$data\",\n  \"func\",\n  \"obj\",\n  \"Error\",\n])\n\nexport type Options = CurrentOptions & DeprecatedOptions\n\nexport interface CurrentOptions {\n  // strict mode options (NEW)\n  strict?: boolean | \"log\"\n  strictSchema?: boolean | \"log\"\n  strictNumbers?: boolean | \"log\"\n  strictTypes?: boolean | \"log\"\n  strictTuples?: boolean | \"log\"\n  strictRequired?: boolean | \"log\"\n  allowMatchingProperties?: boolean // disables a strict mode restriction\n  allowUnionTypes?: boolean\n  validateFormats?: boolean\n  // validation and reporting options:\n  $data?: boolean\n  allErrors?: boolean\n  verbose?: boolean\n  discriminator?: boolean\n  unicodeRegExp?: boolean\n  timestamp?: \"string\" | \"date\" // JTD only\n  parseDate?: boolean // JTD only\n  allowDate?: boolean // JTD only\n  $comment?:\n    | true\n    | ((comment: string, schemaPath?: string, rootSchema?: AnySchemaObject) => unknown)\n  formats?: {[Name in string]?: Format}\n  keywords?: Vocabulary\n  schemas?: AnySchema[] | {[Key in string]?: AnySchema}\n  logger?: Logger | false\n  loadSchema?: (uri: string) => Promise<AnySchemaObject>\n  // options to modify validated data:\n  removeAdditional?: boolean | \"all\" | \"failing\"\n  useDefaults?: boolean | \"empty\"\n  coerceTypes?: boolean | \"array\"\n  // advanced options:\n  next?: boolean // NEW\n  unevaluated?: boolean // NEW\n  dynamicRef?: boolean // NEW\n  schemaId?: \"id\" | \"$id\"\n  jtd?: boolean // NEW\n  meta?: SchemaObject | boolean\n  defaultMeta?: string | AnySchemaObject\n  validateSchema?: boolean | \"log\"\n  addUsedSchema?: boolean\n  inlineRefs?: boolean | number\n  passContext?: boolean\n  loopRequired?: number\n  loopEnum?: number // NEW\n  ownProperties?: boolean\n  multipleOfPrecision?: number\n  int32range?: boolean // JTD only\n  messages?: boolean\n  code?: CodeOptions // NEW\n  uriResolver?: UriResolver\n}\n\nexport interface CodeOptions {\n  es5?: boolean\n  esm?: boolean\n  lines?: boolean\n  optimize?: boolean | number\n  formats?: Code // code to require (or construct) map of available formats - for standalone code\n  source?: boolean\n  process?: (code: string, schema?: SchemaEnv) => string\n  regExp?: RegExpEngine\n}\n\ninterface InstanceCodeOptions extends CodeOptions {\n  regExp: RegExpEngine\n  optimize: number\n}\n\ninterface DeprecatedOptions {\n  /** @deprecated */\n  ignoreKeywordsWithRef?: boolean\n  /** @deprecated */\n  jsPropertySyntax?: boolean // added instead of jsonPointers\n  /** @deprecated */\n  unicode?: boolean\n}\n\ninterface RemovedOptions {\n  format?: boolean\n  errorDataPath?: \"object\" | \"property\"\n  nullable?: boolean // \"nullable\" keyword is supported by default\n  jsonPointers?: boolean\n  extendRefs?: true | \"ignore\" | \"fail\"\n  missingRefs?: true | \"ignore\" | \"fail\"\n  processCode?: (code: string, schema?: SchemaEnv) => string\n  sourceCode?: boolean\n  strictDefaults?: boolean\n  strictKeywords?: boolean\n  uniqueItems?: boolean\n  unknownFormats?: true | string[] | \"ignore\"\n  cache?: any\n  serialize?: (schema: AnySchema) => unknown\n  ajvErrors?: boolean\n}\n\ntype OptionsInfo<T extends RemovedOptions | DeprecatedOptions> = {\n  [K in keyof T]-?: string | undefined\n}\n\nconst removedOptions: OptionsInfo<RemovedOptions> = {\n  errorDataPath: \"\",\n  format: \"`validateFormats: false` can be used instead.\",\n  nullable: '\"nullable\" keyword is supported by default.',\n  jsonPointers: \"Deprecated jsPropertySyntax can be used instead.\",\n  extendRefs: \"Deprecated ignoreKeywordsWithRef can be used instead.\",\n  missingRefs: \"Pass empty schema with $id that should be ignored to ajv.addSchema.\",\n  processCode: \"Use option `code: {process: (code, schemaEnv: object) => string}`\",\n  sourceCode: \"Use option `code: {source: true}`\",\n  strictDefaults: \"It is default now, see option `strict`.\",\n  strictKeywords: \"It is default now, see option `strict`.\",\n  uniqueItems: '\"uniqueItems\" keyword is always validated.',\n  unknownFormats: \"Disable strict mode or pass `true` to `ajv.addFormat` (or `formats` option).\",\n  cache: \"Map is used as cache, schema object as key.\",\n  serialize: \"Map is used as cache, schema object as key.\",\n  ajvErrors: \"It is default now.\",\n}\n\nconst deprecatedOptions: OptionsInfo<DeprecatedOptions> = {\n  ignoreKeywordsWithRef: \"\",\n  jsPropertySyntax: \"\",\n  unicode: '\"minLength\"/\"maxLength\" account for unicode characters by default.',\n}\n\ntype RequiredInstanceOptions = {\n  [K in\n    | \"strictSchema\"\n    | \"strictNumbers\"\n    | \"strictTypes\"\n    | \"strictTuples\"\n    | \"strictRequired\"\n    | \"inlineRefs\"\n    | \"loopRequired\"\n    | \"loopEnum\"\n    | \"meta\"\n    | \"messages\"\n    | \"schemaId\"\n    | \"addUsedSchema\"\n    | \"validateSchema\"\n    | \"validateFormats\"\n    | \"int32range\"\n    | \"unicodeRegExp\"\n    | \"uriResolver\"]: NonNullable<Options[K]>\n} & {code: InstanceCodeOptions}\n\nexport type InstanceOptions = Options & RequiredInstanceOptions\n\nconst MAX_EXPRESSION = 200\n\n// eslint-disable-next-line complexity\nfunction requiredOptions(o: Options): RequiredInstanceOptions {\n  const s = o.strict\n  const _optz = o.code?.optimize\n  const optimize = _optz === true || _optz === undefined ? 1 : _optz || 0\n  const regExp = o.code?.regExp ?? defaultRegExp\n  const uriResolver = o.uriResolver ?? DefaultUriResolver\n  return {\n    strictSchema: o.strictSchema ?? s ?? true,\n    strictNumbers: o.strictNumbers ?? s ?? true,\n    strictTypes: o.strictTypes ?? s ?? \"log\",\n    strictTuples: o.strictTuples ?? s ?? \"log\",\n    strictRequired: o.strictRequired ?? s ?? false,\n    code: o.code ? {...o.code, optimize, regExp} : {optimize, regExp},\n    loopRequired: o.loopRequired ?? MAX_EXPRESSION,\n    loopEnum: o.loopEnum ?? MAX_EXPRESSION,\n    meta: o.meta ?? true,\n    messages: o.messages ?? true,\n    inlineRefs: o.inlineRefs ?? true,\n    schemaId: o.schemaId ?? \"$id\",\n    addUsedSchema: o.addUsedSchema ?? true,\n    validateSchema: o.validateSchema ?? true,\n    validateFormats: o.validateFormats ?? true,\n    unicodeRegExp: o.unicodeRegExp ?? true,\n    int32range: o.int32range ?? true,\n    uriResolver: uriResolver,\n  }\n}\n\nexport interface Logger {\n  log(...args: unknown[]): unknown\n  warn(...args: unknown[]): unknown\n  error(...args: unknown[]): unknown\n}\n\nexport default class Ajv {\n  opts: InstanceOptions\n  errors?: ErrorObject[] | null // errors from the last validation\n  logger: Logger\n  // shared external scope values for compiled functions\n  readonly scope: ValueScope\n  readonly schemas: {[Key in string]?: SchemaEnv} = {}\n  readonly refs: {[Ref in string]?: SchemaEnv | string} = {}\n  readonly formats: {[Name in string]?: AddedFormat} = {}\n  readonly RULES: ValidationRules\n  readonly _compilations: Set<SchemaEnv> = new Set()\n  private readonly _loading: {[Ref in string]?: Promise<AnySchemaObject>} = {}\n  private readonly _cache: Map<AnySchema, SchemaEnv> = new Map()\n  private readonly _metaOpts: InstanceOptions\n\n  static ValidationError = ValidationError\n  static MissingRefError = MissingRefError\n\n  constructor(opts: Options = {}) {\n    opts = this.opts = {...opts, ...requiredOptions(opts)}\n    const {es5, lines} = this.opts.code\n\n    this.scope = new ValueScope({scope: {}, prefixes: EXT_SCOPE_NAMES, es5, lines})\n    this.logger = getLogger(opts.logger)\n    const formatOpt = opts.validateFormats\n    opts.validateFormats = false\n\n    this.RULES = getRules()\n    checkOptions.call(this, removedOptions, opts, \"NOT SUPPORTED\")\n    checkOptions.call(this, deprecatedOptions, opts, \"DEPRECATED\", \"warn\")\n    this._metaOpts = getMetaSchemaOptions.call(this)\n\n    if (opts.formats) addInitialFormats.call(this)\n    this._addVocabularies()\n    this._addDefaultMetaSchema()\n    if (opts.keywords) addInitialKeywords.call(this, opts.keywords)\n    if (typeof opts.meta == \"object\") this.addMetaSchema(opts.meta)\n    addInitialSchemas.call(this)\n    opts.validateFormats = formatOpt\n  }\n\n  _addVocabularies(): void {\n    this.addKeyword(\"$async\")\n  }\n\n  _addDefaultMetaSchema(): void {\n    const {$data, meta, schemaId} = this.opts\n    let _dataRefSchema: SchemaObject = $dataRefSchema\n    if (schemaId === \"id\") {\n      _dataRefSchema = {...$dataRefSchema}\n      _dataRefSchema.id = _dataRefSchema.$id\n      delete _dataRefSchema.$id\n    }\n    if (meta && $data) this.addMetaSchema(_dataRefSchema, _dataRefSchema[schemaId], false)\n  }\n\n  defaultMeta(): string | AnySchemaObject | undefined {\n    const {meta, schemaId} = this.opts\n    return (this.opts.defaultMeta = typeof meta == \"object\" ? meta[schemaId] || meta : undefined)\n  }\n\n  // Validate data using schema\n  // AnySchema will be compiled and cached using schema itself as a key for Map\n  validate(schema: Schema | string, data: unknown): boolean\n  validate(schemaKeyRef: AnySchema | string, data: unknown): boolean | Promise<unknown>\n  validate<T>(schema: Schema | JSONSchemaType<T> | string, data: unknown): data is T\n  // Separated for type inference to work\n  // eslint-disable-next-line @typescript-eslint/unified-signatures\n  validate<T>(schema: JTDSchemaType<T>, data: unknown): data is T\n  // This overload is only intended for typescript inference, the first\n  // argument prevents manual type annotation from matching this overload\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  validate<N extends never, T extends SomeJTDSchemaType>(\n    schema: T,\n    data: unknown\n  ): data is JTDDataType<T>\n  // eslint-disable-next-line @typescript-eslint/no-redundant-type-constituents\n  validate<T>(schema: AsyncSchema, data: unknown | T): Promise<T>\n  validate<T>(schemaKeyRef: AnySchema | string, data: unknown): data is T | Promise<T>\n  validate<T>(\n    schemaKeyRef: AnySchema | string, // key, ref or schema object\n    // eslint-disable-next-line @typescript-eslint/no-redundant-type-constituents\n    data: unknown | T // to be validated\n  ): boolean | Promise<T> {\n    let v: AnyValidateFunction | undefined\n    if (typeof schemaKeyRef == \"string\") {\n      v = this.getSchema<T>(schemaKeyRef)\n      if (!v) throw new Error(`no schema with key or ref \"${schemaKeyRef}\"`)\n    } else {\n      v = this.compile<T>(schemaKeyRef)\n    }\n\n    const valid = v(data)\n    if (!(\"$async\" in v)) this.errors = v.errors\n    return valid\n  }\n\n  // Create validation function for passed schema\n  // _meta: true if schema is a meta-schema. Used internally to compile meta schemas of user-defined keywords.\n  compile<T = unknown>(schema: Schema | JSONSchemaType<T>, _meta?: boolean): ValidateFunction<T>\n  // Separated for type inference to work\n  // eslint-disable-next-line @typescript-eslint/unified-signatures\n  compile<T = unknown>(schema: JTDSchemaType<T>, _meta?: boolean): ValidateFunction<T>\n  // This overload is only intended for typescript inference, the first\n  // argument prevents manual type annotation from matching this overload\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  compile<N extends never, T extends SomeJTDSchemaType>(\n    schema: T,\n    _meta?: boolean\n  ): ValidateFunction<JTDDataType<T>>\n  compile<T = unknown>(schema: AsyncSchema, _meta?: boolean): AsyncValidateFunction<T>\n  compile<T = unknown>(schema: AnySchema, _meta?: boolean): AnyValidateFunction<T>\n  compile<T = unknown>(schema: AnySchema, _meta?: boolean): AnyValidateFunction<T> {\n    const sch = this._addSchema(schema, _meta)\n    return (sch.validate || this._compileSchemaEnv(sch)) as AnyValidateFunction<T>\n  }\n\n  // Creates validating function for passed schema with asynchronous loading of missing schemas.\n  // `loadSchema` option should be a function that accepts schema uri and returns promise that resolves with the schema.\n  // TODO allow passing schema URI\n  // meta - optional true to compile meta-schema\n  compileAsync<T = unknown>(\n    schema: SchemaObject | JSONSchemaType<T>,\n    _meta?: boolean\n  ): Promise<ValidateFunction<T>>\n  // Separated for type inference to work\n  // eslint-disable-next-line @typescript-eslint/unified-signatures\n  compileAsync<T = unknown>(schema: JTDSchemaType<T>, _meta?: boolean): Promise<ValidateFunction<T>>\n  compileAsync<T = unknown>(schema: AsyncSchema, meta?: boolean): Promise<AsyncValidateFunction<T>>\n  // eslint-disable-next-line @typescript-eslint/unified-signatures\n  compileAsync<T = unknown>(\n    schema: AnySchemaObject,\n    meta?: boolean\n  ): Promise<AnyValidateFunction<T>>\n  compileAsync<T = unknown>(\n    schema: AnySchemaObject,\n    meta?: boolean\n  ): Promise<AnyValidateFunction<T>> {\n    if (typeof this.opts.loadSchema != \"function\") {\n      throw new Error(\"options.loadSchema should be a function\")\n    }\n    const {loadSchema} = this.opts\n    return runCompileAsync.call(this, schema, meta)\n\n    async function runCompileAsync(\n      this: Ajv,\n      _schema: AnySchemaObject,\n      _meta?: boolean\n    ): Promise<AnyValidateFunction> {\n      await loadMetaSchema.call(this, _schema.$schema)\n      const sch = this._addSchema(_schema, _meta)\n      return sch.validate || _compileAsync.call(this, sch)\n    }\n\n    async function loadMetaSchema(this: Ajv, $ref?: string): Promise<void> {\n      if ($ref && !this.getSchema($ref)) {\n        await runCompileAsync.call(this, {$ref}, true)\n      }\n    }\n\n    async function _compileAsync(this: Ajv, sch: SchemaEnv): Promise<AnyValidateFunction> {\n      try {\n        return this._compileSchemaEnv(sch)\n      } catch (e) {\n        if (!(e instanceof MissingRefError)) throw e\n        checkLoaded.call(this, e)\n        await loadMissingSchema.call(this, e.missingSchema)\n        return _compileAsync.call(this, sch)\n      }\n    }\n\n    function checkLoaded(this: Ajv, {missingSchema: ref, missingRef}: MissingRefError): void {\n      if (this.refs[ref]) {\n        throw new Error(`AnySchema ${ref} is loaded but ${missingRef} cannot be resolved`)\n      }\n    }\n\n    async function loadMissingSchema(this: Ajv, ref: string): Promise<void> {\n      const _schema = await _loadSchema.call(this, ref)\n      if (!this.refs[ref]) await loadMetaSchema.call(this, _schema.$schema)\n      if (!this.refs[ref]) this.addSchema(_schema, ref, meta)\n    }\n\n    async function _loadSchema(this: Ajv, ref: string): Promise<AnySchemaObject> {\n      const p = this._loading[ref]\n      if (p) return p\n      try {\n        return await (this._loading[ref] = loadSchema(ref))\n      } finally {\n        delete this._loading[ref]\n      }\n    }\n  }\n\n  // Adds schema to the instance\n  addSchema(\n    schema: AnySchema | AnySchema[], // If array is passed, `key` will be ignored\n    key?: string, // Optional schema key. Can be passed to `validate` method instead of schema object or id/ref. One schema per instance can have empty `id` and `key`.\n    _meta?: boolean, // true if schema is a meta-schema. Used internally, addMetaSchema should be used instead.\n    _validateSchema = this.opts.validateSchema // false to skip schema validation. Used internally, option validateSchema should be used instead.\n  ): Ajv {\n    if (Array.isArray(schema)) {\n      for (const sch of schema) this.addSchema(sch, undefined, _meta, _validateSchema)\n      return this\n    }\n    let id: string | undefined\n    if (typeof schema === \"object\") {\n      const {schemaId} = this.opts\n      id = schema[schemaId]\n      if (id !== undefined && typeof id != \"string\") {\n        throw new Error(`schema ${schemaId} must be string`)\n      }\n    }\n    key = normalizeId(key || id)\n    this._checkUnique(key)\n    this.schemas[key] = this._addSchema(schema, _meta, key, _validateSchema, true)\n    return this\n  }\n\n  // Add schema that will be used to validate other schemas\n  // options in META_IGNORE_OPTIONS are alway set to false\n  addMetaSchema(\n    schema: AnySchemaObject,\n    key?: string, // schema key\n    _validateSchema = this.opts.validateSchema // false to skip schema validation, can be used to override validateSchema option for meta-schema\n  ): Ajv {\n    this.addSchema(schema, key, true, _validateSchema)\n    return this\n  }\n\n  //  Validate schema against its meta-schema\n  validateSchema(schema: AnySchema, throwOrLogError?: boolean): boolean | Promise<unknown> {\n    if (typeof schema == \"boolean\") return true\n    let $schema: string | AnySchemaObject | undefined\n    $schema = schema.$schema\n    if ($schema !== undefined && typeof $schema != \"string\") {\n      throw new Error(\"$schema must be a string\")\n    }\n    $schema = $schema || this.opts.defaultMeta || this.defaultMeta()\n    if (!$schema) {\n      this.logger.warn(\"meta-schema not available\")\n      this.errors = null\n      return true\n    }\n    const valid = this.validate($schema, schema)\n    if (!valid && throwOrLogError) {\n      const message = \"schema is invalid: \" + this.errorsText()\n      if (this.opts.validateSchema === \"log\") this.logger.error(message)\n      else throw new Error(message)\n    }\n    return valid\n  }\n\n  // Get compiled schema by `key` or `ref`.\n  // (`key` that was passed to `addSchema` or full schema reference - `schema.$id` or resolved id)\n  getSchema<T = unknown>(keyRef: string): AnyValidateFunction<T> | undefined {\n    let sch\n    while (typeof (sch = getSchEnv.call(this, keyRef)) == \"string\") keyRef = sch\n    if (sch === undefined) {\n      const {schemaId} = this.opts\n      const root = new SchemaEnv({schema: {}, schemaId})\n      sch = resolveSchema.call(this, root, keyRef)\n      if (!sch) return\n      this.refs[keyRef] = sch\n    }\n    return (sch.validate || this._compileSchemaEnv(sch)) as AnyValidateFunction<T> | undefined\n  }\n\n  // Remove cached schema(s).\n  // If no parameter is passed all schemas but meta-schemas are removed.\n  // If RegExp is passed all schemas with key/id matching pattern but meta-schemas are removed.\n  // Even if schema is referenced by other schemas it still can be removed as other schemas have local references.\n  removeSchema(schemaKeyRef?: AnySchema | string | RegExp): Ajv {\n    if (schemaKeyRef instanceof RegExp) {\n      this._removeAllSchemas(this.schemas, schemaKeyRef)\n      this._removeAllSchemas(this.refs, schemaKeyRef)\n      return this\n    }\n    switch (typeof schemaKeyRef) {\n      case \"undefined\":\n        this._removeAllSchemas(this.schemas)\n        this._removeAllSchemas(this.refs)\n        this._cache.clear()\n        return this\n      case \"string\": {\n        const sch = getSchEnv.call(this, schemaKeyRef)\n        if (typeof sch == \"object\") this._cache.delete(sch.schema)\n        delete this.schemas[schemaKeyRef]\n        delete this.refs[schemaKeyRef]\n        return this\n      }\n      case \"object\": {\n        const cacheKey = schemaKeyRef\n        this._cache.delete(cacheKey)\n        let id = schemaKeyRef[this.opts.schemaId]\n        if (id) {\n          id = normalizeId(id)\n          delete this.schemas[id]\n          delete this.refs[id]\n        }\n        return this\n      }\n      default:\n        throw new Error(\"ajv.removeSchema: invalid parameter\")\n    }\n  }\n\n  // add \"vocabulary\" - a collection of keywords\n  addVocabulary(definitions: Vocabulary): Ajv {\n    for (const def of definitions) this.addKeyword(def)\n    return this\n  }\n\n  addKeyword(\n    kwdOrDef: string | KeywordDefinition,\n    def?: KeywordDefinition // deprecated\n  ): Ajv {\n    let keyword: string | string[]\n    if (typeof kwdOrDef == \"string\") {\n      keyword = kwdOrDef\n      if (typeof def == \"object\") {\n        this.logger.warn(\"these parameters are deprecated, see docs for addKeyword\")\n        def.keyword = keyword\n      }\n    } else if (typeof kwdOrDef == \"object\" && def === undefined) {\n      def = kwdOrDef\n      keyword = def.keyword\n      if (Array.isArray(keyword) && !keyword.length) {\n        throw new Error(\"addKeywords: keyword must be string or non-empty array\")\n      }\n    } else {\n      throw new Error(\"invalid addKeywords parameters\")\n    }\n\n    checkKeyword.call(this, keyword, def)\n    if (!def) {\n      eachItem(keyword, (kwd) => addRule.call(this, kwd))\n      return this\n    }\n    keywordMetaschema.call(this, def)\n    const definition: AddedKeywordDefinition = {\n      ...def,\n      type: getJSONTypes(def.type),\n      schemaType: getJSONTypes(def.schemaType),\n    }\n    eachItem(\n      keyword,\n      definition.type.length === 0\n        ? (k) => addRule.call(this, k, definition)\n        : (k) => definition.type.forEach((t) => addRule.call(this, k, definition, t))\n    )\n    return this\n  }\n\n  getKeyword(keyword: string): AddedKeywordDefinition | boolean {\n    const rule = this.RULES.all[keyword]\n    return typeof rule == \"object\" ? rule.definition : !!rule\n  }\n\n  // Remove keyword\n  removeKeyword(keyword: string): Ajv {\n    // TODO return type should be Ajv\n    const {RULES} = this\n    delete RULES.keywords[keyword]\n    delete RULES.all[keyword]\n    for (const group of RULES.rules) {\n      const i = group.rules.findIndex((rule) => rule.keyword === keyword)\n      if (i >= 0) group.rules.splice(i, 1)\n    }\n    return this\n  }\n\n  // Add format\n  addFormat(name: string, format: Format): Ajv {\n    if (typeof format == \"string\") format = new RegExp(format)\n    this.formats[name] = format\n    return this\n  }\n\n  errorsText(\n    errors: ErrorObject[] | null | undefined = this.errors, // optional array of validation errors\n    {separator = \", \", dataVar = \"data\"}: ErrorsTextOptions = {} // optional options with properties `separator` and `dataVar`\n  ): string {\n    if (!errors || errors.length === 0) return \"No errors\"\n    return errors\n      .map((e) => `${dataVar}${e.instancePath} ${e.message}`)\n      .reduce((text, msg) => text + separator + msg)\n  }\n\n  $dataMetaSchema(metaSchema: AnySchemaObject, keywordsJsonPointers: string[]): AnySchemaObject {\n    const rules = this.RULES.all\n    metaSchema = JSON.parse(JSON.stringify(metaSchema))\n    for (const jsonPointer of keywordsJsonPointers) {\n      const segments = jsonPointer.split(\"/\").slice(1) // first segment is an empty string\n      let keywords = metaSchema\n      for (const seg of segments) keywords = keywords[seg] as AnySchemaObject\n\n      for (const key in rules) {\n        const rule = rules[key]\n        if (typeof rule != \"object\") continue\n        const {$data} = rule.definition\n        const schema = keywords[key] as AnySchemaObject | undefined\n        if ($data && schema) keywords[key] = schemaOrData(schema)\n      }\n    }\n\n    return metaSchema\n  }\n\n  private _removeAllSchemas(schemas: {[Ref in string]?: SchemaEnv | string}, regex?: RegExp): void {\n    for (const keyRef in schemas) {\n      const sch = schemas[keyRef]\n      if (!regex || regex.test(keyRef)) {\n        if (typeof sch == \"string\") {\n          delete schemas[keyRef]\n        } else if (sch && !sch.meta) {\n          this._cache.delete(sch.schema)\n          delete schemas[keyRef]\n        }\n      }\n    }\n  }\n\n  _addSchema(\n    schema: AnySchema,\n    meta?: boolean,\n    baseId?: string,\n    validateSchema = this.opts.validateSchema,\n    addSchema = this.opts.addUsedSchema\n  ): SchemaEnv {\n    let id: string | undefined\n    const {schemaId} = this.opts\n    if (typeof schema == \"object\") {\n      id = schema[schemaId]\n    } else {\n      if (this.opts.jtd) throw new Error(\"schema must be object\")\n      else if (typeof schema != \"boolean\") throw new Error(\"schema must be object or boolean\")\n    }\n    let sch = this._cache.get(schema)\n    if (sch !== undefined) return sch\n\n    baseId = normalizeId(id || baseId)\n    const localRefs = getSchemaRefs.call(this, schema, baseId)\n    sch = new SchemaEnv({schema, schemaId, meta, baseId, localRefs})\n    this._cache.set(sch.schema, sch)\n    if (addSchema && !baseId.startsWith(\"#\")) {\n      // TODO atm it is allowed to overwrite schemas without id (instead of not adding them)\n      if (baseId) this._checkUnique(baseId)\n      this.refs[baseId] = sch\n    }\n    if (validateSchema) this.validateSchema(schema, true)\n    return sch\n  }\n\n  private _checkUnique(id: string): void {\n    if (this.schemas[id] || this.refs[id]) {\n      throw new Error(`schema with key or id \"${id}\" already exists`)\n    }\n  }\n\n  private _compileSchemaEnv(sch: SchemaEnv): AnyValidateFunction {\n    if (sch.meta) this._compileMetaSchema(sch)\n    else compileSchema.call(this, sch)\n\n    /* istanbul ignore if */\n    if (!sch.validate) throw new Error(\"ajv implementation error\")\n    return sch.validate\n  }\n\n  private _compileMetaSchema(sch: SchemaEnv): void {\n    const currentOpts = this.opts\n    this.opts = this._metaOpts\n    try {\n      compileSchema.call(this, sch)\n    } finally {\n      this.opts = currentOpts\n    }\n  }\n}\n\nexport interface ErrorsTextOptions {\n  separator?: string\n  dataVar?: string\n}\n\nfunction checkOptions(\n  this: Ajv,\n  checkOpts: OptionsInfo<RemovedOptions | DeprecatedOptions>,\n  options: Options & RemovedOptions,\n  msg: string,\n  log: \"warn\" | \"error\" = \"error\"\n): void {\n  for (const key in checkOpts) {\n    const opt = key as keyof typeof checkOpts\n    if (opt in options) this.logger[log](`${msg}: option ${key}. ${checkOpts[opt]}`)\n  }\n}\n\nfunction getSchEnv(this: Ajv, keyRef: string): SchemaEnv | string | undefined {\n  keyRef = normalizeId(keyRef) // TODO tests fail without this line\n  return this.schemas[keyRef] || this.refs[keyRef]\n}\n\nfunction addInitialSchemas(this: Ajv): void {\n  const optsSchemas = this.opts.schemas\n  if (!optsSchemas) return\n  if (Array.isArray(optsSchemas)) this.addSchema(optsSchemas)\n  else for (const key in optsSchemas) this.addSchema(optsSchemas[key] as AnySchema, key)\n}\n\nfunction addInitialFormats(this: Ajv): void {\n  for (const name in this.opts.formats) {\n    const format = this.opts.formats[name]\n    if (format) this.addFormat(name, format)\n  }\n}\n\nfunction addInitialKeywords(\n  this: Ajv,\n  defs: Vocabulary | {[K in string]?: KeywordDefinition}\n): void {\n  if (Array.isArray(defs)) {\n    this.addVocabulary(defs)\n    return\n  }\n  this.logger.warn(\"keywords option as map is deprecated, pass array\")\n  for (const keyword in defs) {\n    const def = defs[keyword] as KeywordDefinition\n    if (!def.keyword) def.keyword = keyword\n    this.addKeyword(def)\n  }\n}\n\nfunction getMetaSchemaOptions(this: Ajv): InstanceOptions {\n  const metaOpts = {...this.opts}\n  for (const opt of META_IGNORE_OPTIONS) delete metaOpts[opt]\n  return metaOpts\n}\n\nconst noLogs = {log() {}, warn() {}, error() {}}\n\nfunction getLogger(logger?: Partial<Logger> | false): Logger {\n  if (logger === false) return noLogs\n  if (logger === undefined) return console\n  if (logger.log && logger.warn && logger.error) return logger as Logger\n  throw new Error(\"logger must implement log, warn and error methods\")\n}\n\nconst KEYWORD_NAME = /^[a-z_$][a-z0-9_$:-]*$/i\n\nfunction checkKeyword(this: Ajv, keyword: string | string[], def?: KeywordDefinition): void {\n  const {RULES} = this\n  eachItem(keyword, (kwd) => {\n    if (RULES.keywords[kwd]) throw new Error(`Keyword ${kwd} is already defined`)\n    if (!KEYWORD_NAME.test(kwd)) throw new Error(`Keyword ${kwd} has invalid name`)\n  })\n  if (!def) return\n  if (def.$data && !(\"code\" in def || \"validate\" in def)) {\n    throw new Error('$data keyword must have \"code\" or \"validate\" function')\n  }\n}\n\nfunction addRule(\n  this: Ajv,\n  keyword: string,\n  definition?: AddedKeywordDefinition,\n  dataType?: JSONType\n): void {\n  const post = definition?.post\n  if (dataType && post) throw new Error('keyword with \"post\" flag cannot have \"type\"')\n  const {RULES} = this\n  let ruleGroup = post ? RULES.post : RULES.rules.find(({type: t}) => t === dataType)\n  if (!ruleGroup) {\n    ruleGroup = {type: dataType, rules: []}\n    RULES.rules.push(ruleGroup)\n  }\n  RULES.keywords[keyword] = true\n  if (!definition) return\n\n  const rule: Rule = {\n    keyword,\n    definition: {\n      ...definition,\n      type: getJSONTypes(definition.type),\n      schemaType: getJSONTypes(definition.schemaType),\n    },\n  }\n  if (definition.before) addBeforeRule.call(this, ruleGroup, rule, definition.before)\n  else ruleGroup.rules.push(rule)\n  RULES.all[keyword] = rule\n  definition.implements?.forEach((kwd) => this.addKeyword(kwd))\n}\n\nfunction addBeforeRule(this: Ajv, ruleGroup: RuleGroup, rule: Rule, before: string): void {\n  const i = ruleGroup.rules.findIndex((_rule) => _rule.keyword === before)\n  if (i >= 0) {\n    ruleGroup.rules.splice(i, 0, rule)\n  } else {\n    ruleGroup.rules.push(rule)\n    this.logger.warn(`rule ${before} is not defined`)\n  }\n}\n\nfunction keywordMetaschema(this: Ajv, def: KeywordDefinition): void {\n  let {metaSchema} = def\n  if (metaSchema === undefined) return\n  if (def.$data && this.opts.$data) metaSchema = schemaOrData(metaSchema)\n  def.validateSchema = this.compile(metaSchema, true)\n}\n\nconst $dataRef = {\n  $ref: \"https://raw.githubusercontent.com/ajv-validator/ajv/master/lib/refs/data.json#\",\n}\n\nfunction schemaOrData(schema: AnySchema): AnySchemaObject {\n  return {anyOf: [schema, $dataRef]}\n}\n","import type {CodeKeywordDefinition} from \"../../types\"\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"id\",\n  code() {\n    throw new Error('NOT SUPPORTED: keyword \"id\", use \"$id\" for schema ID')\n  },\n}\n\nexport default def\n","import type {CodeKeywordDefinition, AnySchema} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport MissingRefError from \"../../compile/ref_error\"\nimport {callValidateCode} from \"../code\"\nimport {_, nil, stringify, Code, Name} from \"../../compile/codegen\"\nimport N from \"../../compile/names\"\nimport {SchemaEnv, resolveRef} from \"../../compile\"\nimport {mergeEvaluated} from \"../../compile/util\"\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"$ref\",\n  schemaType: \"string\",\n  code(cxt: KeywordCxt): void {\n    const {gen, schema: $ref, it} = cxt\n    const {baseId, schemaEnv: env, validateName, opts, self} = it\n    const {root} = env\n    if (($ref === \"#\" || $ref === \"#/\") && baseId === root.baseId) return callRootRef()\n    const schOrEnv = resolveRef.call(self, root, baseId, $ref)\n    if (schOrEnv === undefined) throw new MissingRefError(it.opts.uriResolver, baseId, $ref)\n    if (schOrEnv instanceof SchemaEnv) return callValidate(schOrEnv)\n    return inlineRefSchema(schOrEnv)\n\n    function callRootRef(): void {\n      if (env === root) return callRef(cxt, validateName, env, env.$async)\n      const rootName = gen.scopeValue(\"root\", {ref: root})\n      return callRef(cxt, _`${rootName}.validate`, root, root.$async)\n    }\n\n    function callValidate(sch: SchemaEnv): void {\n      const v = getValidate(cxt, sch)\n      callRef(cxt, v, sch, sch.$async)\n    }\n\n    function inlineRefSchema(sch: AnySchema): void {\n      const schName = gen.scopeValue(\n        \"schema\",\n        opts.code.source === true ? {ref: sch, code: stringify(sch)} : {ref: sch}\n      )\n      const valid = gen.name(\"valid\")\n      const schCxt = cxt.subschema(\n        {\n          schema: sch,\n          dataTypes: [],\n          schemaPath: nil,\n          topSchemaRef: schName,\n          errSchemaPath: $ref,\n        },\n        valid\n      )\n      cxt.mergeEvaluated(schCxt)\n      cxt.ok(valid)\n    }\n  },\n}\n\nexport function getValidate(cxt: KeywordCxt, sch: SchemaEnv): Code {\n  const {gen} = cxt\n  return sch.validate\n    ? gen.scopeValue(\"validate\", {ref: sch.validate})\n    : _`${gen.scopeValue(\"wrapper\", {ref: sch})}.validate`\n}\n\nexport function callRef(cxt: KeywordCxt, v: Code, sch?: SchemaEnv, $async?: boolean): void {\n  const {gen, it} = cxt\n  const {allErrors, schemaEnv: env, opts} = it\n  const passCxt = opts.passContext ? N.this : nil\n  if ($async) callAsyncRef()\n  else callSyncRef()\n\n  function callAsyncRef(): void {\n    if (!env.$async) throw new Error(\"async schema referenced by sync schema\")\n    const valid = gen.let(\"valid\")\n    gen.try(\n      () => {\n        gen.code(_`await ${callValidateCode(cxt, v, passCxt)}`)\n        addEvaluatedFrom(v) // TODO will not work with async, it has to be returned with the result\n        if (!allErrors) gen.assign(valid, true)\n      },\n      (e) => {\n        gen.if(_`!(${e} instanceof ${it.ValidationError as Name})`, () => gen.throw(e))\n        addErrorsFrom(e)\n        if (!allErrors) gen.assign(valid, false)\n      }\n    )\n    cxt.ok(valid)\n  }\n\n  function callSyncRef(): void {\n    cxt.result(\n      callValidateCode(cxt, v, passCxt),\n      () => addEvaluatedFrom(v),\n      () => addErrorsFrom(v)\n    )\n  }\n\n  function addErrorsFrom(source: Code): void {\n    const errs = _`${source}.errors`\n    gen.assign(N.vErrors, _`${N.vErrors} === null ? ${errs} : ${N.vErrors}.concat(${errs})`) // TODO tagged\n    gen.assign(N.errors, _`${N.vErrors}.length`)\n  }\n\n  function addEvaluatedFrom(source: Code): void {\n    if (!it.opts.unevaluated) return\n    const schEvaluated = sch?.validate?.evaluated\n    // TODO refactor\n    if (it.props !== true) {\n      if (schEvaluated && !schEvaluated.dynamicProps) {\n        if (schEvaluated.props !== undefined) {\n          it.props = mergeEvaluated.props(gen, schEvaluated.props, it.props)\n        }\n      } else {\n        const props = gen.var(\"props\", _`${source}.evaluated.props`)\n        it.props = mergeEvaluated.props(gen, props, it.props, Name)\n      }\n    }\n    if (it.items !== true) {\n      if (schEvaluated && !schEvaluated.dynamicItems) {\n        if (schEvaluated.items !== undefined) {\n          it.items = mergeEvaluated.items(gen, schEvaluated.items, it.items)\n        }\n      } else {\n        const items = gen.var(\"items\", _`${source}.evaluated.items`)\n        it.items = mergeEvaluated.items(gen, items, it.items, Name)\n      }\n    }\n  }\n}\n\nexport default def\n","import type {Vocabulary} from \"../../types\"\nimport idKeyword from \"./id\"\nimport refKeyword from \"./ref\"\n\nconst core: Vocabulary = [\n  \"$schema\",\n  \"$id\",\n  \"$defs\",\n  \"$vocabulary\",\n  {keyword: \"$comment\"},\n  \"definitions\",\n  idKeyword,\n  refKeyword,\n]\n\nexport default core\n","import type {CodeKeywordDefinition, ErrorObject, KeywordErrorDefinition} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_, str, operators, Code} from \"../../compile/codegen\"\n\nconst ops = operators\n\ntype Kwd = \"maximum\" | \"minimum\" | \"exclusiveMaximum\" | \"exclusiveMinimum\"\n\ntype Comparison = \"<=\" | \">=\" | \"<\" | \">\"\n\nconst KWDs: {[K in Kwd]: {okStr: Comparison; ok: Code; fail: Code}} = {\n  maximum: {okStr: \"<=\", ok: ops.LTE, fail: ops.GT},\n  minimum: {okStr: \">=\", ok: ops.GTE, fail: ops.LT},\n  exclusiveMaximum: {okStr: \"<\", ok: ops.LT, fail: ops.GTE},\n  exclusiveMinimum: {okStr: \">\", ok: ops.GT, fail: ops.LTE},\n}\n\nexport type LimitNumberError = ErrorObject<\n  Kwd,\n  {limit: number; comparison: Comparison},\n  number | {$data: string}\n>\n\nconst error: KeywordErrorDefinition = {\n  message: ({keyword, schemaCode}) => str`must be ${KWDs[keyword as Kwd].okStr} ${schemaCode}`,\n  params: ({keyword, schemaCode}) =>\n    _`{comparison: ${KWDs[keyword as Kwd].okStr}, limit: ${schemaCode}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: Object.keys(KWDs),\n  type: \"number\",\n  schemaType: \"number\",\n  $data: true,\n  error,\n  code(cxt: KeywordCxt) {\n    const {keyword, data, schemaCode} = cxt\n    cxt.fail$data(_`${data} ${KWDs[keyword as Kwd].fail} ${schemaCode} || isNaN(${data})`)\n  },\n}\n\nexport default def\n","import type {CodeKeywordDefinition, ErrorObject, KeywordErrorDefinition} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_, str} from \"../../compile/codegen\"\n\nexport type MultipleOfError = ErrorObject<\n  \"multipleOf\",\n  {multipleOf: number},\n  number | {$data: string}\n>\n\nconst error: KeywordErrorDefinition = {\n  message: ({schemaCode}) => str`must be multiple of ${schemaCode}`,\n  params: ({schemaCode}) => _`{multipleOf: ${schemaCode}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"multipleOf\",\n  type: \"number\",\n  schemaType: \"number\",\n  $data: true,\n  error,\n  code(cxt: KeywordCxt) {\n    const {gen, data, schemaCode, it} = cxt\n    // const bdt = bad$DataType(schemaCode, <string>def.schemaType, $data)\n    const prec = it.opts.multipleOfPrecision\n    const res = gen.let(\"res\")\n    const invalid = prec\n      ? _`Math.abs(Math.round(${res}) - ${res}) > 1e-${prec}`\n      : _`${res} !== parseInt(${res})`\n    cxt.fail$data(_`(${schemaCode} === 0 || (${res} = ${data}/${schemaCode}, ${invalid}))`)\n  },\n}\n\nexport default def\n","// https://mathiasbynens.be/notes/javascript-encoding\n// https://github.com/bestiejs/punycode.js - punycode.ucs2.decode\nexport default function ucs2length(str: string): number {\n  const len = str.length\n  let length = 0\n  let pos = 0\n  let value: number\n  while (pos < len) {\n    length++\n    value = str.charCodeAt(pos++)\n    if (value >= 0xd800 && value <= 0xdbff && pos < len) {\n      // high surrogate, and there is a next character\n      value = str.charCodeAt(pos)\n      if ((value & 0xfc00) === 0xdc00) pos++ // low surrogate\n    }\n  }\n  return length\n}\n\nucs2length.code = 'require(\"ajv/dist/runtime/ucs2length\").default'\n","import type {CodeKeywordDefinition, KeywordErrorDefinition} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_, str, operators} from \"../../compile/codegen\"\nimport {useFunc} from \"../../compile/util\"\nimport ucs2length from \"../../runtime/ucs2length\"\n\nconst error: KeywordErrorDefinition = {\n  message({keyword, schemaCode}) {\n    const comp = keyword === \"maxLength\" ? \"more\" : \"fewer\"\n    return str`must NOT have ${comp} than ${schemaCode} characters`\n  },\n  params: ({schemaCode}) => _`{limit: ${schemaCode}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: [\"maxLength\", \"minLength\"],\n  type: \"string\",\n  schemaType: \"number\",\n  $data: true,\n  error,\n  code(cxt: KeywordCxt) {\n    const {keyword, data, schemaCode, it} = cxt\n    const op = keyword === \"maxLength\" ? operators.GT : operators.LT\n    const len =\n      it.opts.unicode === false ? _`${data}.length` : _`${useFunc(cxt.gen, ucs2length)}(${data})`\n    cxt.fail$data(_`${len} ${op} ${schemaCode}`)\n  },\n}\n\nexport default def\n","import type {CodeKeywordDefinition, ErrorObject, KeywordErrorDefinition} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {usePattern} from \"../code\"\nimport {_, str} from \"../../compile/codegen\"\n\nexport type PatternError = ErrorObject<\"pattern\", {pattern: string}, string | {$data: string}>\n\nconst error: KeywordErrorDefinition = {\n  message: ({schemaCode}) => str`must match pattern \"${schemaCode}\"`,\n  params: ({schemaCode}) => _`{pattern: ${schemaCode}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"pattern\",\n  type: \"string\",\n  schemaType: \"string\",\n  $data: true,\n  error,\n  code(cxt: KeywordCxt) {\n    const {data, $data, schema, schemaCode, it} = cxt\n    // TODO regexp should be wrapped in try/catchs\n    const u = it.opts.unicodeRegExp ? \"u\" : \"\"\n    const regExp = $data ? _`(new RegExp(${schemaCode}, ${u}))` : usePattern(cxt, schema)\n    cxt.fail$data(_`!${regExp}.test(${data})`)\n  },\n}\n\nexport default def\n","import type {CodeKeywordDefinition, KeywordErrorDefinition} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_, str, operators} from \"../../compile/codegen\"\n\nconst error: KeywordErrorDefinition = {\n  message({keyword, schemaCode}) {\n    const comp = keyword === \"maxProperties\" ? \"more\" : \"fewer\"\n    return str`must NOT have ${comp} than ${schemaCode} properties`\n  },\n  params: ({schemaCode}) => _`{limit: ${schemaCode}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: [\"maxProperties\", \"minProperties\"],\n  type: \"object\",\n  schemaType: \"number\",\n  $data: true,\n  error,\n  code(cxt: KeywordCxt) {\n    const {keyword, data, schemaCode} = cxt\n    const op = keyword === \"maxProperties\" ? operators.GT : operators.LT\n    cxt.fail$data(_`Object.keys(${data}).length ${op} ${schemaCode}`)\n  },\n}\n\nexport default def\n","import type {CodeKeywordDefinition, ErrorObject, KeywordErrorDefinition} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {\n  checkReportMissingProp,\n  checkMissingProp,\n  reportMissingProp,\n  propertyInData,\n  noPropertyInData,\n} from \"../code\"\nimport {_, str, nil, not, Name, Code} from \"../../compile/codegen\"\nimport {checkStrictMode} from \"../../compile/util\"\n\nexport type RequiredError = ErrorObject<\n  \"required\",\n  {missingProperty: string},\n  string[] | {$data: string}\n>\n\nconst error: KeywordErrorDefinition = {\n  message: ({params: {missingProperty}}) => str`must have required property '${missingProperty}'`,\n  params: ({params: {missingProperty}}) => _`{missingProperty: ${missingProperty}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"required\",\n  type: \"object\",\n  schemaType: \"array\",\n  $data: true,\n  error,\n  code(cxt: KeywordCxt) {\n    const {gen, schema, schemaCode, data, $data, it} = cxt\n    const {opts} = it\n    if (!$data && schema.length === 0) return\n    const useLoop = schema.length >= opts.loopRequired\n    if (it.allErrors) allErrorsMode()\n    else exitOnErrorMode()\n\n    if (opts.strictRequired) {\n      const props = cxt.parentSchema.properties\n      const {definedProperties} = cxt.it\n      for (const requiredKey of schema) {\n        if (props?.[requiredKey] === undefined && !definedProperties.has(requiredKey)) {\n          const schemaPath = it.schemaEnv.baseId + it.errSchemaPath\n          const msg = `required property \"${requiredKey}\" is not defined at \"${schemaPath}\" (strictRequired)`\n          checkStrictMode(it, msg, it.opts.strictRequired)\n        }\n      }\n    }\n\n    function allErrorsMode(): void {\n      if (useLoop || $data) {\n        cxt.block$data(nil, loopAllRequired)\n      } else {\n        for (const prop of schema) {\n          checkReportMissingProp(cxt, prop)\n        }\n      }\n    }\n\n    function exitOnErrorMode(): void {\n      const missing = gen.let(\"missing\")\n      if (useLoop || $data) {\n        const valid = gen.let(\"valid\", true)\n        cxt.block$data(valid, () => loopUntilMissing(missing, valid))\n        cxt.ok(valid)\n      } else {\n        gen.if(checkMissingProp(cxt, schema, missing))\n        reportMissingProp(cxt, missing)\n        gen.else()\n      }\n    }\n\n    function loopAllRequired(): void {\n      gen.forOf(\"prop\", schemaCode as Code, (prop) => {\n        cxt.setParams({missingProperty: prop})\n        gen.if(noPropertyInData(gen, data, prop, opts.ownProperties), () => cxt.error())\n      })\n    }\n\n    function loopUntilMissing(missing: Name, valid: Name): void {\n      cxt.setParams({missingProperty: missing})\n      gen.forOf(\n        missing,\n        schemaCode as Code,\n        () => {\n          gen.assign(valid, propertyInData(gen, data, missing, opts.ownProperties))\n          gen.if(not(valid), () => {\n            cxt.error()\n            gen.break()\n          })\n        },\n        nil\n      )\n    }\n  },\n}\n\nexport default def\n","import type {CodeKeywordDefinition, KeywordErrorDefinition} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_, str, operators} from \"../../compile/codegen\"\n\nconst error: KeywordErrorDefinition = {\n  message({keyword, schemaCode}) {\n    const comp = keyword === \"maxItems\" ? \"more\" : \"fewer\"\n    return str`must NOT have ${comp} than ${schemaCode} items`\n  },\n  params: ({schemaCode}) => _`{limit: ${schemaCode}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: [\"maxItems\", \"minItems\"],\n  type: \"array\",\n  schemaType: \"number\",\n  $data: true,\n  error,\n  code(cxt: KeywordCxt) {\n    const {keyword, data, schemaCode} = cxt\n    const op = keyword === \"maxItems\" ? operators.GT : operators.LT\n    cxt.fail$data(_`${data}.length ${op} ${schemaCode}`)\n  },\n}\n\nexport default def\n","// https://github.com/ajv-validator/ajv/issues/889\nimport * as equal from \"fast-deep-equal\"\n\ntype Equal = typeof equal & {code: string}\n;(equal as Equal).code = 'require(\"ajv/dist/runtime/equal\").default'\n\nexport default equal as Equal\n","import type {CodeKeywordDefinition, ErrorObject, KeywordErrorDefinition} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {checkDataTypes, getSchemaTypes, DataType} from \"../../compile/validate/dataType\"\nimport {_, str, Name} from \"../../compile/codegen\"\nimport {useFunc} from \"../../compile/util\"\nimport equal from \"../../runtime/equal\"\n\nexport type UniqueItemsError = ErrorObject<\n  \"uniqueItems\",\n  {i: number; j: number},\n  boolean | {$data: string}\n>\n\nconst error: KeywordErrorDefinition = {\n  message: ({params: {i, j}}) =>\n    str`must NOT have duplicate items (items ## ${j} and ${i} are identical)`,\n  params: ({params: {i, j}}) => _`{i: ${i}, j: ${j}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"uniqueItems\",\n  type: \"array\",\n  schemaType: \"boolean\",\n  $data: true,\n  error,\n  code(cxt: KeywordCxt) {\n    const {gen, data, $data, schema, parentSchema, schemaCode, it} = cxt\n    if (!$data && !schema) return\n    const valid = gen.let(\"valid\")\n    const itemTypes = parentSchema.items ? getSchemaTypes(parentSchema.items) : []\n    cxt.block$data(valid, validateUniqueItems, _`${schemaCode} === false`)\n    cxt.ok(valid)\n\n    function validateUniqueItems(): void {\n      const i = gen.let(\"i\", _`${data}.length`)\n      const j = gen.let(\"j\")\n      cxt.setParams({i, j})\n      gen.assign(valid, true)\n      gen.if(_`${i} > 1`, () => (canOptimize() ? loopN : loopN2)(i, j))\n    }\n\n    function canOptimize(): boolean {\n      return itemTypes.length > 0 && !itemTypes.some((t) => t === \"object\" || t === \"array\")\n    }\n\n    function loopN(i: Name, j: Name): void {\n      const item = gen.name(\"item\")\n      const wrongType = checkDataTypes(itemTypes, item, it.opts.strictNumbers, DataType.Wrong)\n      const indices = gen.const(\"indices\", _`{}`)\n      gen.for(_`;${i}--;`, () => {\n        gen.let(item, _`${data}[${i}]`)\n        gen.if(wrongType, _`continue`)\n        if (itemTypes.length > 1) gen.if(_`typeof ${item} == \"string\"`, _`${item} += \"_\"`)\n        gen\n          .if(_`typeof ${indices}[${item}] == \"number\"`, () => {\n            gen.assign(j, _`${indices}[${item}]`)\n            cxt.error()\n            gen.assign(valid, false).break()\n          })\n          .code(_`${indices}[${item}] = ${i}`)\n      })\n    }\n\n    function loopN2(i: Name, j: Name): void {\n      const eql = useFunc(gen, equal)\n      const outer = gen.name(\"outer\")\n      gen.label(outer).for(_`;${i}--;`, () =>\n        gen.for(_`${j} = ${i}; ${j}--;`, () =>\n          gen.if(_`${eql}(${data}[${i}], ${data}[${j}])`, () => {\n            cxt.error()\n            gen.assign(valid, false).break(outer)\n          })\n        )\n      )\n    }\n  },\n}\n\nexport default def\n","import type {CodeKeywordDefinition, ErrorObject, KeywordErrorDefinition} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_} from \"../../compile/codegen\"\nimport {useFunc} from \"../../compile/util\"\nimport equal from \"../../runtime/equal\"\n\nexport type ConstError = ErrorObject<\"const\", {allowedValue: any}>\n\nconst error: KeywordErrorDefinition = {\n  message: \"must be equal to constant\",\n  params: ({schemaCode}) => _`{allowedValue: ${schemaCode}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"const\",\n  $data: true,\n  error,\n  code(cxt: KeywordCxt) {\n    const {gen, data, $data, schemaCode, schema} = cxt\n    if ($data || (schema && typeof schema == \"object\")) {\n      cxt.fail$data(_`!${useFunc(gen, equal)}(${data}, ${schemaCode})`)\n    } else {\n      cxt.fail(_`${schema} !== ${data}`)\n    }\n  },\n}\n\nexport default def\n","import type {CodeKeywordDefinition, ErrorObject, KeywordErrorDefinition} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_, or, Name, Code} from \"../../compile/codegen\"\nimport {useFunc} from \"../../compile/util\"\nimport equal from \"../../runtime/equal\"\n\nexport type EnumError = ErrorObject<\"enum\", {allowedValues: any[]}, any[] | {$data: string}>\n\nconst error: KeywordErrorDefinition = {\n  message: \"must be equal to one of the allowed values\",\n  params: ({schemaCode}) => _`{allowedValues: ${schemaCode}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"enum\",\n  schemaType: \"array\",\n  $data: true,\n  error,\n  code(cxt: KeywordCxt) {\n    const {gen, data, $data, schema, schemaCode, it} = cxt\n    if (!$data && schema.length === 0) throw new Error(\"enum must have non-empty array\")\n    const useLoop = schema.length >= it.opts.loopEnum\n    let eql: Name | undefined\n    const getEql = (): Name => (eql ??= useFunc(gen, equal))\n\n    let valid: Code\n    if (useLoop || $data) {\n      valid = gen.let(\"valid\")\n      cxt.block$data(valid, loopEnum)\n    } else {\n      /* istanbul ignore if */\n      if (!Array.isArray(schema)) throw new Error(\"ajv implementation error\")\n      const vSchema = gen.const(\"vSchema\", schemaCode)\n      valid = or(...schema.map((_x: unknown, i: number) => equalCode(vSchema, i)))\n    }\n    cxt.pass(valid)\n\n    function loopEnum(): void {\n      gen.assign(valid, false)\n      gen.forOf(\"v\", schemaCode as Code, (v) =>\n        gen.if(_`${getEql()}(${data}, ${v})`, () => gen.assign(valid, true).break())\n      )\n    }\n\n    function equalCode(vSchema: Name, i: number): Code {\n      const sch = schema[i]\n      return typeof sch === \"object\" && sch !== null\n        ? _`${getEql()}(${data}, ${vSchema}[${i}])`\n        : _`${data} === ${sch}`\n    }\n  },\n}\n\nexport default def\n","import type {ErrorObject, Vocabulary} from \"../../types\"\nimport limitNumber, {LimitNumberError} from \"./limitNumber\"\nimport multipleOf, {MultipleOfError} from \"./multipleOf\"\nimport limitLength from \"./limitLength\"\nimport pattern, {PatternError} from \"./pattern\"\nimport limitProperties from \"./limitProperties\"\nimport required, {RequiredError} from \"./required\"\nimport limitItems from \"./limitItems\"\nimport uniqueItems, {UniqueItemsError} from \"./uniqueItems\"\nimport constKeyword, {ConstError} from \"./const\"\nimport enumKeyword, {EnumError} from \"./enum\"\n\nconst validation: Vocabulary = [\n  // number\n  limitNumber,\n  multipleOf,\n  // string\n  limitLength,\n  pattern,\n  // object\n  limitProperties,\n  required,\n  // array\n  limitItems,\n  uniqueItems,\n  // any\n  {keyword: \"type\", schemaType: [\"string\", \"array\"]},\n  {keyword: \"nullable\", schemaType: \"boolean\"},\n  constKeyword,\n  enumKeyword,\n]\n\nexport default validation\n\ntype LimitError = ErrorObject<\n  \"maxItems\" | \"minItems\" | \"minProperties\" | \"maxProperties\" | \"minLength\" | \"maxLength\",\n  {limit: number},\n  number | {$data: string}\n>\n\nexport type ValidationKeywordError =\n  | LimitError\n  | LimitNumberError\n  | MultipleOfError\n  | PatternError\n  | RequiredError\n  | UniqueItemsError\n  | ConstError\n  | EnumError\n","import type {\n  CodeKeywordDefinition,\n  ErrorObject,\n  KeywordErrorDefinition,\n  AnySchema,\n} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_, str, not, Name} from \"../../compile/codegen\"\nimport {alwaysValidSchema, checkStrictMode, Type} from \"../../compile/util\"\n\nexport type AdditionalItemsError = ErrorObject<\"additionalItems\", {limit: number}, AnySchema>\n\nconst error: KeywordErrorDefinition = {\n  message: ({params: {len}}) => str`must NOT have more than ${len} items`,\n  params: ({params: {len}}) => _`{limit: ${len}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"additionalItems\" as const,\n  type: \"array\",\n  schemaType: [\"boolean\", \"object\"],\n  before: \"uniqueItems\",\n  error,\n  code(cxt: KeywordCxt) {\n    const {parentSchema, it} = cxt\n    const {items} = parentSchema\n    if (!Array.isArray(items)) {\n      checkStrictMode(it, '\"additionalItems\" is ignored when \"items\" is not an array of schemas')\n      return\n    }\n    validateAdditionalItems(cxt, items)\n  },\n}\n\nexport function validateAdditionalItems(cxt: KeywordCxt, items: AnySchema[]): void {\n  const {gen, schema, data, keyword, it} = cxt\n  it.items = true\n  const len = gen.const(\"len\", _`${data}.length`)\n  if (schema === false) {\n    cxt.setParams({len: items.length})\n    cxt.pass(_`${len} <= ${items.length}`)\n  } else if (typeof schema == \"object\" && !alwaysValidSchema(it, schema)) {\n    const valid = gen.var(\"valid\", _`${len} <= ${items.length}`) // TODO var\n    gen.if(not(valid), () => validateItems(valid))\n    cxt.ok(valid)\n  }\n\n  function validateItems(valid: Name): void {\n    gen.forRange(\"i\", items.length, len, (i) => {\n      cxt.subschema({keyword, dataProp: i, dataPropType: Type.Num}, valid)\n      if (!it.allErrors) gen.if(not(valid), () => gen.break())\n    })\n  }\n}\n\nexport default def\n","import type {CodeKeywordDefinition, AnySchema, AnySchemaObject} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_} from \"../../compile/codegen\"\nimport {alwaysValidSchema, mergeEvaluated, checkStrictMode} from \"../../compile/util\"\nimport {validateArray} from \"../code\"\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"items\",\n  type: \"array\",\n  schemaType: [\"object\", \"array\", \"boolean\"],\n  before: \"uniqueItems\",\n  code(cxt: KeywordCxt) {\n    const {schema, it} = cxt\n    if (Array.isArray(schema)) return validateTuple(cxt, \"additionalItems\", schema)\n    it.items = true\n    if (alwaysValidSchema(it, schema)) return\n    cxt.ok(validateArray(cxt))\n  },\n}\n\nexport function validateTuple(\n  cxt: KeywordCxt,\n  extraItems: string,\n  schArr: AnySchema[] = cxt.schema\n): void {\n  const {gen, parentSchema, data, keyword, it} = cxt\n  checkStrictTuple(parentSchema)\n  if (it.opts.unevaluated && schArr.length && it.items !== true) {\n    it.items = mergeEvaluated.items(gen, schArr.length, it.items)\n  }\n  const valid = gen.name(\"valid\")\n  const len = gen.const(\"len\", _`${data}.length`)\n  schArr.forEach((sch: AnySchema, i: number) => {\n    if (alwaysValidSchema(it, sch)) return\n    gen.if(_`${len} > ${i}`, () =>\n      cxt.subschema(\n        {\n          keyword,\n          schemaProp: i,\n          dataProp: i,\n        },\n        valid\n      )\n    )\n    cxt.ok(valid)\n  })\n\n  function checkStrictTuple(sch: AnySchemaObject): void {\n    const {opts, errSchemaPath} = it\n    const l = schArr.length\n    const fullTuple = l === sch.minItems && (l === sch.maxItems || sch[extraItems] === false)\n    if (opts.strictTuples && !fullTuple) {\n      const msg = `\"${keyword}\" is ${l}-tuple, but minItems or maxItems/${extraItems} are not specified or different at path \"${errSchemaPath}\"`\n      checkStrictMode(it, msg, opts.strictTuples)\n    }\n  }\n}\n\nexport default def\n","import type {CodeKeywordDefinition} from \"../../types\"\nimport {validateTuple} from \"./items\"\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"prefixItems\",\n  type: \"array\",\n  schemaType: [\"array\"],\n  before: \"uniqueItems\",\n  code: (cxt) => validateTuple(cxt, \"items\"),\n}\n\nexport default def\n","import type {\n  CodeKeywordDefinition,\n  KeywordErrorDefinition,\n  ErrorObject,\n  AnySchema,\n} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_, str} from \"../../compile/codegen\"\nimport {alwaysValidSchema} from \"../../compile/util\"\nimport {validateArray} from \"../code\"\nimport {validateAdditionalItems} from \"./additionalItems\"\n\nexport type ItemsError = ErrorObject<\"items\", {limit: number}, AnySchema>\n\nconst error: KeywordErrorDefinition = {\n  message: ({params: {len}}) => str`must NOT have more than ${len} items`,\n  params: ({params: {len}}) => _`{limit: ${len}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"items\",\n  type: \"array\",\n  schemaType: [\"object\", \"boolean\"],\n  before: \"uniqueItems\",\n  error,\n  code(cxt: KeywordCxt) {\n    const {schema, parentSchema, it} = cxt\n    const {prefixItems} = parentSchema\n    it.items = true\n    if (alwaysValidSchema(it, schema)) return\n    if (prefixItems) validateAdditionalItems(cxt, prefixItems)\n    else cxt.ok(validateArray(cxt))\n  },\n}\n\nexport default def\n","import type {\n  CodeKeywordDefinition,\n  KeywordErrorDefinition,\n  ErrorObject,\n  AnySchema,\n} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_, str, Name} from \"../../compile/codegen\"\nimport {alwaysValidSchema, checkStrictMode, Type} from \"../../compile/util\"\n\nexport type ContainsError = ErrorObject<\n  \"contains\",\n  {minContains: number; maxContains?: number},\n  AnySchema\n>\n\nconst error: KeywordErrorDefinition = {\n  message: ({params: {min, max}}) =>\n    max === undefined\n      ? str`must contain at least ${min} valid item(s)`\n      : str`must contain at least ${min} and no more than ${max} valid item(s)`,\n  params: ({params: {min, max}}) =>\n    max === undefined ? _`{minContains: ${min}}` : _`{minContains: ${min}, maxContains: ${max}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"contains\",\n  type: \"array\",\n  schemaType: [\"object\", \"boolean\"],\n  before: \"uniqueItems\",\n  trackErrors: true,\n  error,\n  code(cxt: KeywordCxt) {\n    const {gen, schema, parentSchema, data, it} = cxt\n    let min: number\n    let max: number | undefined\n    const {minContains, maxContains} = parentSchema\n    if (it.opts.next) {\n      min = minContains === undefined ? 1 : minContains\n      max = maxContains\n    } else {\n      min = 1\n    }\n    const len = gen.const(\"len\", _`${data}.length`)\n    cxt.setParams({min, max})\n    if (max === undefined && min === 0) {\n      checkStrictMode(it, `\"minContains\" == 0 without \"maxContains\": \"contains\" keyword ignored`)\n      return\n    }\n    if (max !== undefined && min > max) {\n      checkStrictMode(it, `\"minContains\" > \"maxContains\" is always invalid`)\n      cxt.fail()\n      return\n    }\n    if (alwaysValidSchema(it, schema)) {\n      let cond = _`${len} >= ${min}`\n      if (max !== undefined) cond = _`${cond} && ${len} <= ${max}`\n      cxt.pass(cond)\n      return\n    }\n\n    it.items = true\n    const valid = gen.name(\"valid\")\n    if (max === undefined && min === 1) {\n      validateItems(valid, () => gen.if(valid, () => gen.break()))\n    } else if (min === 0) {\n      gen.let(valid, true)\n      if (max !== undefined) gen.if(_`${data}.length > 0`, validateItemsWithCount)\n    } else {\n      gen.let(valid, false)\n      validateItemsWithCount()\n    }\n    cxt.result(valid, () => cxt.reset())\n\n    function validateItemsWithCount(): void {\n      const schValid = gen.name(\"_valid\")\n      const count = gen.let(\"count\", 0)\n      validateItems(schValid, () => gen.if(schValid, () => checkLimits(count)))\n    }\n\n    function validateItems(_valid: Name, block: () => void): void {\n      gen.forRange(\"i\", 0, len, (i) => {\n        cxt.subschema(\n          {\n            keyword: \"contains\",\n            dataProp: i,\n            dataPropType: Type.Num,\n            compositeRule: true,\n          },\n          _valid\n        )\n        block()\n      })\n    }\n\n    function checkLimits(count: Name): void {\n      gen.code(_`${count}++`)\n      if (max === undefined) {\n        gen.if(_`${count} >= ${min}`, () => gen.assign(valid, true).break())\n      } else {\n        gen.if(_`${count} > ${max}`, () => gen.assign(valid, false).break())\n        if (min === 1) gen.assign(valid, true)\n        else gen.if(_`${count} >= ${min}`, () => gen.assign(valid, true))\n      }\n    }\n  },\n}\n\nexport default def\n","import type {\n  CodeKeywordDefinition,\n  ErrorObject,\n  KeywordErrorDefinition,\n  SchemaMap,\n  AnySchema,\n} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_, str} from \"../../compile/codegen\"\nimport {alwaysValidSchema} from \"../../compile/util\"\nimport {checkReportMissingProp, checkMissingProp, reportMissingProp, propertyInData} from \"../code\"\n\nexport type PropertyDependencies = {[K in string]?: string[]}\n\nexport interface DependenciesErrorParams {\n  property: string\n  missingProperty: string\n  depsCount: number\n  deps: string // TODO change to string[]\n}\n\ntype SchemaDependencies = SchemaMap\n\nexport type DependenciesError = ErrorObject<\n  \"dependencies\",\n  DependenciesErrorParams,\n  {[K in string]?: string[] | AnySchema}\n>\n\nexport const error: KeywordErrorDefinition = {\n  message: ({params: {property, depsCount, deps}}) => {\n    const property_ies = depsCount === 1 ? \"property\" : \"properties\"\n    return str`must have ${property_ies} ${deps} when property ${property} is present`\n  },\n  params: ({params: {property, depsCount, deps, missingProperty}}) =>\n    _`{property: ${property},\n    missingProperty: ${missingProperty},\n    depsCount: ${depsCount},\n    deps: ${deps}}`, // TODO change to reference\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"dependencies\",\n  type: \"object\",\n  schemaType: \"object\",\n  error,\n  code(cxt: KeywordCxt) {\n    const [propDeps, schDeps] = splitDependencies(cxt)\n    validatePropertyDeps(cxt, propDeps)\n    validateSchemaDeps(cxt, schDeps)\n  },\n}\n\nfunction splitDependencies({schema}: KeywordCxt): [PropertyDependencies, SchemaDependencies] {\n  const propertyDeps: PropertyDependencies = {}\n  const schemaDeps: SchemaDependencies = {}\n  for (const key in schema) {\n    if (key === \"__proto__\") continue\n    const deps = Array.isArray(schema[key]) ? propertyDeps : schemaDeps\n    deps[key] = schema[key]\n  }\n  return [propertyDeps, schemaDeps]\n}\n\nexport function validatePropertyDeps(\n  cxt: KeywordCxt,\n  propertyDeps: {[K in string]?: string[]} = cxt.schema\n): void {\n  const {gen, data, it} = cxt\n  if (Object.keys(propertyDeps).length === 0) return\n  const missing = gen.let(\"missing\")\n  for (const prop in propertyDeps) {\n    const deps = propertyDeps[prop] as string[]\n    if (deps.length === 0) continue\n    const hasProperty = propertyInData(gen, data, prop, it.opts.ownProperties)\n    cxt.setParams({\n      property: prop,\n      depsCount: deps.length,\n      deps: deps.join(\", \"),\n    })\n    if (it.allErrors) {\n      gen.if(hasProperty, () => {\n        for (const depProp of deps) {\n          checkReportMissingProp(cxt, depProp)\n        }\n      })\n    } else {\n      gen.if(_`${hasProperty} && (${checkMissingProp(cxt, deps, missing)})`)\n      reportMissingProp(cxt, missing)\n      gen.else()\n    }\n  }\n}\n\nexport function validateSchemaDeps(cxt: KeywordCxt, schemaDeps: SchemaMap = cxt.schema): void {\n  const {gen, data, keyword, it} = cxt\n  const valid = gen.name(\"valid\")\n  for (const prop in schemaDeps) {\n    if (alwaysValidSchema(it, schemaDeps[prop] as AnySchema)) continue\n    gen.if(\n      propertyInData(gen, data, prop, it.opts.ownProperties),\n      () => {\n        const schCxt = cxt.subschema({keyword, schemaProp: prop}, valid)\n        cxt.mergeValidEvaluated(schCxt, valid)\n      },\n      () => gen.var(valid, true) // TODO var\n    )\n    cxt.ok(valid)\n  }\n}\n\nexport default def\n","import type {\n  CodeKeywordDefinition,\n  ErrorObject,\n  KeywordErrorDefinition,\n  AnySchema,\n} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_, not} from \"../../compile/codegen\"\nimport {alwaysValidSchema} from \"../../compile/util\"\n\nexport type PropertyNamesError = ErrorObject<\"propertyNames\", {propertyName: string}, AnySchema>\n\nconst error: KeywordErrorDefinition = {\n  message: \"property name must be valid\",\n  params: ({params}) => _`{propertyName: ${params.propertyName}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"propertyNames\",\n  type: \"object\",\n  schemaType: [\"object\", \"boolean\"],\n  error,\n  code(cxt: KeywordCxt) {\n    const {gen, schema, data, it} = cxt\n    if (alwaysValidSchema(it, schema)) return\n    const valid = gen.name(\"valid\")\n\n    gen.forIn(\"key\", data, (key) => {\n      cxt.setParams({propertyName: key})\n      cxt.subschema(\n        {\n          keyword: \"propertyNames\",\n          data: key,\n          dataTypes: [\"string\"],\n          propertyName: key,\n          compositeRule: true,\n        },\n        valid\n      )\n      gen.if(not(valid), () => {\n        cxt.error(true)\n        if (!it.allErrors) gen.break()\n      })\n    })\n\n    cxt.ok(valid)\n  },\n}\n\nexport default def\n","import type {\n  CodeKeywordDefinition,\n  AddedKeywordDefinition,\n  ErrorObject,\n  KeywordErrorDefinition,\n  AnySchema,\n} from \"../../types\"\nimport {allSchemaProperties, usePattern, isOwnProperty} from \"../code\"\nimport {_, nil, or, not, Code, Name} from \"../../compile/codegen\"\nimport N from \"../../compile/names\"\nimport type {SubschemaArgs} from \"../../compile/validate/subschema\"\nimport {alwaysValidSchema, schemaRefOrVal, Type} from \"../../compile/util\"\n\nexport type AdditionalPropertiesError = ErrorObject<\n  \"additionalProperties\",\n  {additionalProperty: string},\n  AnySchema\n>\n\nconst error: KeywordErrorDefinition = {\n  message: \"must NOT have additional properties\",\n  params: ({params}) => _`{additionalProperty: ${params.additionalProperty}}`,\n}\n\nconst def: CodeKeywordDefinition & AddedKeywordDefinition = {\n  keyword: \"additionalProperties\",\n  type: [\"object\"],\n  schemaType: [\"boolean\", \"object\"],\n  allowUndefined: true,\n  trackErrors: true,\n  error,\n  code(cxt) {\n    const {gen, schema, parentSchema, data, errsCount, it} = cxt\n    /* istanbul ignore if */\n    if (!errsCount) throw new Error(\"ajv implementation error\")\n    const {allErrors, opts} = it\n    it.props = true\n    if (opts.removeAdditional !== \"all\" && alwaysValidSchema(it, schema)) return\n    const props = allSchemaProperties(parentSchema.properties)\n    const patProps = allSchemaProperties(parentSchema.patternProperties)\n    checkAdditionalProperties()\n    cxt.ok(_`${errsCount} === ${N.errors}`)\n\n    function checkAdditionalProperties(): void {\n      gen.forIn(\"key\", data, (key: Name) => {\n        if (!props.length && !patProps.length) additionalPropertyCode(key)\n        else gen.if(isAdditional(key), () => additionalPropertyCode(key))\n      })\n    }\n\n    function isAdditional(key: Name): Code {\n      let definedProp: Code\n      if (props.length > 8) {\n        // TODO maybe an option instead of hard-coded 8?\n        const propsSchema = schemaRefOrVal(it, parentSchema.properties, \"properties\")\n        definedProp = isOwnProperty(gen, propsSchema as Code, key)\n      } else if (props.length) {\n        definedProp = or(...props.map((p) => _`${key} === ${p}`))\n      } else {\n        definedProp = nil\n      }\n      if (patProps.length) {\n        definedProp = or(definedProp, ...patProps.map((p) => _`${usePattern(cxt, p)}.test(${key})`))\n      }\n      return not(definedProp)\n    }\n\n    function deleteAdditional(key: Name): void {\n      gen.code(_`delete ${data}[${key}]`)\n    }\n\n    function additionalPropertyCode(key: Name): void {\n      if (opts.removeAdditional === \"all\" || (opts.removeAdditional && schema === false)) {\n        deleteAdditional(key)\n        return\n      }\n\n      if (schema === false) {\n        cxt.setParams({additionalProperty: key})\n        cxt.error()\n        if (!allErrors) gen.break()\n        return\n      }\n\n      if (typeof schema == \"object\" && !alwaysValidSchema(it, schema)) {\n        const valid = gen.name(\"valid\")\n        if (opts.removeAdditional === \"failing\") {\n          applyAdditionalSchema(key, valid, false)\n          gen.if(not(valid), () => {\n            cxt.reset()\n            deleteAdditional(key)\n          })\n        } else {\n          applyAdditionalSchema(key, valid)\n          if (!allErrors) gen.if(not(valid), () => gen.break())\n        }\n      }\n    }\n\n    function applyAdditionalSchema(key: Name, valid: Name, errors?: false): void {\n      const subschema: SubschemaArgs = {\n        keyword: \"additionalProperties\",\n        dataProp: key,\n        dataPropType: Type.Str,\n      }\n      if (errors === false) {\n        Object.assign(subschema, {\n          compositeRule: true,\n          createErrors: false,\n          allErrors: false,\n        })\n      }\n      cxt.subschema(subschema, valid)\n    }\n  },\n}\n\nexport default def\n","import type {CodeKeywordDefinition} from \"../../types\"\nimport {KeywordCxt} from \"../../compile/validate\"\nimport {propertyInData, allSchemaProperties} from \"../code\"\nimport {alwaysValidSchema, toHash, mergeEvaluated} from \"../../compile/util\"\nimport apDef from \"./additionalProperties\"\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"properties\",\n  type: \"object\",\n  schemaType: \"object\",\n  code(cxt: KeywordCxt) {\n    const {gen, schema, parentSchema, data, it} = cxt\n    if (it.opts.removeAdditional === \"all\" && parentSchema.additionalProperties === undefined) {\n      apDef.code(new KeywordCxt(it, apDef, \"additionalProperties\"))\n    }\n    const allProps = allSchemaProperties(schema)\n    for (const prop of allProps) {\n      it.definedProperties.add(prop)\n    }\n    if (it.opts.unevaluated && allProps.length && it.props !== true) {\n      it.props = mergeEvaluated.props(gen, toHash(allProps), it.props)\n    }\n    const properties = allProps.filter((p) => !alwaysValidSchema(it, schema[p]))\n    if (properties.length === 0) return\n    const valid = gen.name(\"valid\")\n\n    for (const prop of properties) {\n      if (hasDefault(prop)) {\n        applyPropertySchema(prop)\n      } else {\n        gen.if(propertyInData(gen, data, prop, it.opts.ownProperties))\n        applyPropertySchema(prop)\n        if (!it.allErrors) gen.else().var(valid, true)\n        gen.endIf()\n      }\n      cxt.it.definedProperties.add(prop)\n      cxt.ok(valid)\n    }\n\n    function hasDefault(prop: string): boolean | undefined {\n      return it.opts.useDefaults && !it.compositeRule && schema[prop].default !== undefined\n    }\n\n    function applyPropertySchema(prop: string): void {\n      cxt.subschema(\n        {\n          keyword: \"properties\",\n          schemaProp: prop,\n          dataProp: prop,\n        },\n        valid\n      )\n    }\n  },\n}\n\nexport default def\n","import type {CodeKeywordDefinition} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {allSchemaProperties, usePattern} from \"../code\"\nimport {_, not, Name} from \"../../compile/codegen\"\nimport {alwaysValidSchema, checkStrictMode} from \"../../compile/util\"\nimport {evaluatedPropsToName, Type} from \"../../compile/util\"\nimport {AnySchema} from \"../../types\"\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"patternProperties\",\n  type: \"object\",\n  schemaType: \"object\",\n  code(cxt: KeywordCxt) {\n    const {gen, schema, data, parentSchema, it} = cxt\n    const {opts} = it\n    const patterns = allSchemaProperties(schema)\n    const alwaysValidPatterns = patterns.filter((p) =>\n      alwaysValidSchema(it, schema[p] as AnySchema)\n    )\n\n    if (\n      patterns.length === 0 ||\n      (alwaysValidPatterns.length === patterns.length &&\n        (!it.opts.unevaluated || it.props === true))\n    ) {\n      return\n    }\n\n    const checkProperties =\n      opts.strictSchema && !opts.allowMatchingProperties && parentSchema.properties\n    const valid = gen.name(\"valid\")\n    if (it.props !== true && !(it.props instanceof Name)) {\n      it.props = evaluatedPropsToName(gen, it.props)\n    }\n    const {props} = it\n    validatePatternProperties()\n\n    function validatePatternProperties(): void {\n      for (const pat of patterns) {\n        if (checkProperties) checkMatchingProperties(pat)\n        if (it.allErrors) {\n          validateProperties(pat)\n        } else {\n          gen.var(valid, true) // TODO var\n          validateProperties(pat)\n          gen.if(valid)\n        }\n      }\n    }\n\n    function checkMatchingProperties(pat: string): void {\n      for (const prop in checkProperties) {\n        if (new RegExp(pat).test(prop)) {\n          checkStrictMode(\n            it,\n            `property ${prop} matches pattern ${pat} (use allowMatchingProperties)`\n          )\n        }\n      }\n    }\n\n    function validateProperties(pat: string): void {\n      gen.forIn(\"key\", data, (key) => {\n        gen.if(_`${usePattern(cxt, pat)}.test(${key})`, () => {\n          const alwaysValid = alwaysValidPatterns.includes(pat)\n          if (!alwaysValid) {\n            cxt.subschema(\n              {\n                keyword: \"patternProperties\",\n                schemaProp: pat,\n                dataProp: key,\n                dataPropType: Type.Str,\n              },\n              valid\n            )\n          }\n\n          if (it.opts.unevaluated && props !== true) {\n            gen.assign(_`${props}[${key}]`, true)\n          } else if (!alwaysValid && !it.allErrors) {\n            // can short-circuit if `unevaluatedProperties` is not supported (opts.next === false)\n            // or if all properties were evaluated (props === true)\n            gen.if(not(valid), () => gen.break())\n          }\n        })\n      })\n    }\n  },\n}\n\nexport default def\n","import type {CodeKeywordDefinition, ErrorNoParams, AnySchema} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {alwaysValidSchema} from \"../../compile/util\"\n\nexport type NotKeywordError = ErrorNoParams<\"not\", AnySchema>\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"not\",\n  schemaType: [\"object\", \"boolean\"],\n  trackErrors: true,\n  code(cxt: KeywordCxt) {\n    const {gen, schema, it} = cxt\n    if (alwaysValidSchema(it, schema)) {\n      cxt.fail()\n      return\n    }\n\n    const valid = gen.name(\"valid\")\n    cxt.subschema(\n      {\n        keyword: \"not\",\n        compositeRule: true,\n        createErrors: false,\n        allErrors: false,\n      },\n      valid\n    )\n\n    cxt.failResult(\n      valid,\n      () => cxt.reset(),\n      () => cxt.error()\n    )\n  },\n  error: {message: \"must NOT be valid\"},\n}\n\nexport default def\n","import type {CodeKeywordDefinition, ErrorNoParams, AnySchema} from \"../../types\"\nimport {validateUnion} from \"../code\"\n\nexport type AnyOfError = ErrorNoParams<\"anyOf\", AnySchema[]>\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"anyOf\",\n  schemaType: \"array\",\n  trackErrors: true,\n  code: validateUnion,\n  error: {message: \"must match a schema in anyOf\"},\n}\n\nexport default def\n","import type {\n  CodeKeywordDefinition,\n  ErrorObject,\n  KeywordErrorDefinition,\n  AnySchema,\n} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_, Name} from \"../../compile/codegen\"\nimport {alwaysValidSchema} from \"../../compile/util\"\nimport {SchemaCxt} from \"../../compile\"\n\nexport type OneOfError = ErrorObject<\n  \"oneOf\",\n  {passingSchemas: [number, number] | null},\n  AnySchema[]\n>\n\nconst error: KeywordErrorDefinition = {\n  message: \"must match exactly one schema in oneOf\",\n  params: ({params}) => _`{passingSchemas: ${params.passing}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"oneOf\",\n  schemaType: \"array\",\n  trackErrors: true,\n  error,\n  code(cxt: KeywordCxt) {\n    const {gen, schema, parentSchema, it} = cxt\n    /* istanbul ignore if */\n    if (!Array.isArray(schema)) throw new Error(\"ajv implementation error\")\n    if (it.opts.discriminator && parentSchema.discriminator) return\n    const schArr: AnySchema[] = schema\n    const valid = gen.let(\"valid\", false)\n    const passing = gen.let(\"passing\", null)\n    const schValid = gen.name(\"_valid\")\n    cxt.setParams({passing})\n    // TODO possibly fail straight away (with warning or exception) if there are two empty always valid schemas\n\n    gen.block(validateOneOf)\n\n    cxt.result(\n      valid,\n      () => cxt.reset(),\n      () => cxt.error(true)\n    )\n\n    function validateOneOf(): void {\n      schArr.forEach((sch: AnySchema, i: number) => {\n        let schCxt: SchemaCxt | undefined\n        if (alwaysValidSchema(it, sch)) {\n          gen.var(schValid, true)\n        } else {\n          schCxt = cxt.subschema(\n            {\n              keyword: \"oneOf\",\n              schemaProp: i,\n              compositeRule: true,\n            },\n            schValid\n          )\n        }\n\n        if (i > 0) {\n          gen\n            .if(_`${schValid} && ${valid}`)\n            .assign(valid, false)\n            .assign(passing, _`[${passing}, ${i}]`)\n            .else()\n        }\n\n        gen.if(schValid, () => {\n          gen.assign(valid, true)\n          gen.assign(passing, i)\n          if (schCxt) cxt.mergeEvaluated(schCxt, Name)\n        })\n      })\n    }\n  },\n}\n\nexport default def\n","import type {CodeKeywordDefinition, AnySchema} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {alwaysValidSchema} from \"../../compile/util\"\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"allOf\",\n  schemaType: \"array\",\n  code(cxt: KeywordCxt) {\n    const {gen, schema, it} = cxt\n    /* istanbul ignore if */\n    if (!Array.isArray(schema)) throw new Error(\"ajv implementation error\")\n    const valid = gen.name(\"valid\")\n    schema.forEach((sch: AnySchema, i: number) => {\n      if (alwaysValidSchema(it, sch)) return\n      const schCxt = cxt.subschema({keyword: \"allOf\", schemaProp: i}, valid)\n      cxt.ok(valid)\n      cxt.mergeEvaluated(schCxt)\n    })\n  },\n}\n\nexport default def\n","import type {\n  CodeKeywordDefinition,\n  ErrorObject,\n  KeywordErrorDefinition,\n  AnySchema,\n} from \"../../types\"\nimport type {SchemaObjCxt} from \"../../compile\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_, str, not, Name} from \"../../compile/codegen\"\nimport {alwaysValidSchema, checkStrictMode} from \"../../compile/util\"\n\nexport type IfKeywordError = ErrorObject<\"if\", {failingKeyword: string}, AnySchema>\n\nconst error: KeywordErrorDefinition = {\n  message: ({params}) => str`must match \"${params.ifClause}\" schema`,\n  params: ({params}) => _`{failingKeyword: ${params.ifClause}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"if\",\n  schemaType: [\"object\", \"boolean\"],\n  trackErrors: true,\n  error,\n  code(cxt: KeywordCxt) {\n    const {gen, parentSchema, it} = cxt\n    if (parentSchema.then === undefined && parentSchema.else === undefined) {\n      checkStrictMode(it, '\"if\" without \"then\" and \"else\" is ignored')\n    }\n    const hasThen = hasSchema(it, \"then\")\n    const hasElse = hasSchema(it, \"else\")\n    if (!hasThen && !hasElse) return\n\n    const valid = gen.let(\"valid\", true)\n    const schValid = gen.name(\"_valid\")\n    validateIf()\n    cxt.reset()\n\n    if (hasThen && hasElse) {\n      const ifClause = gen.let(\"ifClause\")\n      cxt.setParams({ifClause})\n      gen.if(schValid, validateClause(\"then\", ifClause), validateClause(\"else\", ifClause))\n    } else if (hasThen) {\n      gen.if(schValid, validateClause(\"then\"))\n    } else {\n      gen.if(not(schValid), validateClause(\"else\"))\n    }\n\n    cxt.pass(valid, () => cxt.error(true))\n\n    function validateIf(): void {\n      const schCxt = cxt.subschema(\n        {\n          keyword: \"if\",\n          compositeRule: true,\n          createErrors: false,\n          allErrors: false,\n        },\n        schValid\n      )\n      cxt.mergeEvaluated(schCxt)\n    }\n\n    function validateClause(keyword: string, ifClause?: Name): () => void {\n      return () => {\n        const schCxt = cxt.subschema({keyword}, schValid)\n        gen.assign(valid, schValid)\n        cxt.mergeValidEvaluated(schCxt, valid)\n        if (ifClause) gen.assign(ifClause, _`${keyword}`)\n        else cxt.setParams({ifClause: keyword})\n      }\n    }\n  },\n}\n\nfunction hasSchema(it: SchemaObjCxt, keyword: string): boolean {\n  const schema = it.schema[keyword]\n  return schema !== undefined && !alwaysValidSchema(it, schema)\n}\n\nexport default def\n","import type {CodeKeywordDefinition} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {checkStrictMode} from \"../../compile/util\"\n\nconst def: CodeKeywordDefinition = {\n  keyword: [\"then\", \"else\"],\n  schemaType: [\"object\", \"boolean\"],\n  code({keyword, parentSchema, it}: KeywordCxt) {\n    if (parentSchema.if === undefined) checkStrictMode(it, `\"${keyword}\" without \"if\" is ignored`)\n  },\n}\n\nexport default def\n","import type {ErrorNoParams, Vocabulary} from \"../../types\"\nimport additionalItems, {AdditionalItemsError} from \"./additionalItems\"\nimport prefixItems from \"./prefixItems\"\nimport items from \"./items\"\nimport items2020, {ItemsError} from \"./items2020\"\nimport contains, {ContainsError} from \"./contains\"\nimport dependencies, {DependenciesError} from \"./dependencies\"\nimport propertyNames, {PropertyNamesError} from \"./propertyNames\"\nimport additionalProperties, {AdditionalPropertiesError} from \"./additionalProperties\"\nimport properties from \"./properties\"\nimport patternProperties from \"./patternProperties\"\nimport notKeyword, {NotKeywordError} from \"./not\"\nimport anyOf, {AnyOfError} from \"./anyOf\"\nimport oneOf, {OneOfError} from \"./oneOf\"\nimport allOf from \"./allOf\"\nimport ifKeyword, {IfKeywordError} from \"./if\"\nimport thenElse from \"./thenElse\"\n\nexport default function getApplicator(draft2020 = false): Vocabulary {\n  const applicator = [\n    // any\n    notKeyword,\n    anyOf,\n    oneOf,\n    allOf,\n    ifKeyword,\n    thenElse,\n    // object\n    propertyNames,\n    additionalProperties,\n    dependencies,\n    properties,\n    patternProperties,\n  ]\n  // array\n  if (draft2020) applicator.push(prefixItems, items2020)\n  else applicator.push(additionalItems, items)\n  applicator.push(contains)\n  return applicator\n}\n\nexport type ApplicatorKeywordError =\n  | ErrorNoParams<\"false schema\">\n  | AdditionalItemsError\n  | ItemsError\n  | ContainsError\n  | AdditionalPropertiesError\n  | DependenciesError\n  | IfKeywordError\n  | AnyOfError\n  | OneOfError\n  | NotKeywordError\n  | PropertyNamesError\n","import type {\n  AddedFormat,\n  FormatValidator,\n  AsyncFormatValidator,\n  CodeKeywordDefinition,\n  KeywordErrorDefinition,\n  ErrorObject,\n} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_, str, nil, or, Code, getProperty, regexpCode} from \"../../compile/codegen\"\n\ntype FormatValidate =\n  | FormatValidator<string>\n  | FormatValidator<number>\n  | AsyncFormatValidator<string>\n  | AsyncFormatValidator<number>\n  | RegExp\n  | string\n  | true\n\nexport type FormatError = ErrorObject<\"format\", {format: string}, string | {$data: string}>\n\nconst error: KeywordErrorDefinition = {\n  message: ({schemaCode}) => str`must match format \"${schemaCode}\"`,\n  params: ({schemaCode}) => _`{format: ${schemaCode}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"format\",\n  type: [\"number\", \"string\"],\n  schemaType: \"string\",\n  $data: true,\n  error,\n  code(cxt: KeywordCxt, ruleType?: string) {\n    const {gen, data, $data, schema, schemaCode, it} = cxt\n    const {opts, errSchemaPath, schemaEnv, self} = it\n    if (!opts.validateFormats) return\n\n    if ($data) validate$DataFormat()\n    else validateFormat()\n\n    function validate$DataFormat(): void {\n      const fmts = gen.scopeValue(\"formats\", {\n        ref: self.formats,\n        code: opts.code.formats,\n      })\n      const fDef = gen.const(\"fDef\", _`${fmts}[${schemaCode}]`)\n      const fType = gen.let(\"fType\")\n      const format = gen.let(\"format\")\n      // TODO simplify\n      gen.if(\n        _`typeof ${fDef} == \"object\" && !(${fDef} instanceof RegExp)`,\n        () => gen.assign(fType, _`${fDef}.type || \"string\"`).assign(format, _`${fDef}.validate`),\n        () => gen.assign(fType, _`\"string\"`).assign(format, fDef)\n      )\n      cxt.fail$data(or(unknownFmt(), invalidFmt()))\n\n      function unknownFmt(): Code {\n        if (opts.strictSchema === false) return nil\n        return _`${schemaCode} && !${format}`\n      }\n\n      function invalidFmt(): Code {\n        const callFormat = schemaEnv.$async\n          ? _`(${fDef}.async ? await ${format}(${data}) : ${format}(${data}))`\n          : _`${format}(${data})`\n        const validData = _`(typeof ${format} == \"function\" ? ${callFormat} : ${format}.test(${data}))`\n        return _`${format} && ${format} !== true && ${fType} === ${ruleType} && !${validData}`\n      }\n    }\n\n    function validateFormat(): void {\n      const formatDef: AddedFormat | undefined = self.formats[schema]\n      if (!formatDef) {\n        unknownFormat()\n        return\n      }\n      if (formatDef === true) return\n      const [fmtType, format, fmtRef] = getFormat(formatDef)\n      if (fmtType === ruleType) cxt.pass(validCondition())\n\n      function unknownFormat(): void {\n        if (opts.strictSchema === false) {\n          self.logger.warn(unknownMsg())\n          return\n        }\n        throw new Error(unknownMsg())\n\n        function unknownMsg(): string {\n          return `unknown format \"${schema as string}\" ignored in schema at path \"${errSchemaPath}\"`\n        }\n      }\n\n      function getFormat(fmtDef: AddedFormat): [string, FormatValidate, Code] {\n        const code =\n          fmtDef instanceof RegExp\n            ? regexpCode(fmtDef)\n            : opts.code.formats\n            ? _`${opts.code.formats}${getProperty(schema)}`\n            : undefined\n        const fmt = gen.scopeValue(\"formats\", {key: schema, ref: fmtDef, code})\n        if (typeof fmtDef == \"object\" && !(fmtDef instanceof RegExp)) {\n          return [fmtDef.type || \"string\", fmtDef.validate, _`${fmt}.validate`]\n        }\n\n        return [\"string\", fmtDef, fmt]\n      }\n\n      function validCondition(): Code {\n        if (typeof formatDef == \"object\" && !(formatDef instanceof RegExp) && formatDef.async) {\n          if (!schemaEnv.$async) throw new Error(\"async format in sync schema\")\n          return _`await ${fmtRef}(${data})`\n        }\n        return typeof format == \"function\" ? _`${fmtRef}(${data})` : _`${fmtRef}.test(${data})`\n      }\n    }\n  },\n}\n\nexport default def\n","import type {Vocabulary} from \"../../types\"\nimport formatKeyword from \"./format\"\n\nconst format: Vocabulary = [formatKeyword]\n\nexport default format\n","import type {Vocabulary} from \"../types\"\n\nexport const metadataVocabulary: Vocabulary = [\n  \"title\",\n  \"description\",\n  \"default\",\n  \"deprecated\",\n  \"readOnly\",\n  \"writeOnly\",\n  \"examples\",\n]\n\nexport const contentVocabulary: Vocabulary = [\n  \"contentMediaType\",\n  \"contentEncoding\",\n  \"contentSchema\",\n]\n","import type {Vocabulary} from \"../types\"\nimport coreVocabulary from \"./core\"\nimport validationVocabulary from \"./validation\"\nimport getApplicatorVocabulary from \"./applicator\"\nimport formatVocabulary from \"./format\"\nimport {metadataVocabulary, contentVocabulary} from \"./metadata\"\n\nconst draft7Vocabularies: Vocabulary[] = [\n  coreVocabulary,\n  validationVocabulary,\n  getApplicatorVocabulary(),\n  formatVocabulary,\n  metadataVocabulary,\n  contentVocabulary,\n]\n\nexport default draft7Vocabularies\n","import type {ErrorObject} from \"../../types\"\n\nexport enum DiscrError {\n  Tag = \"tag\",\n  Mapping = \"mapping\",\n}\n\nexport type DiscrErrorObj<E extends DiscrError> = ErrorObject<\n  \"discriminator\",\n  {error: E; tag: string; tagValue: unknown},\n  string\n>\n","import type {CodeKeywordDefinition, AnySchemaObject, KeywordErrorDefinition} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_, getProperty, Name} from \"../../compile/codegen\"\nimport {DiscrError, DiscrErrorObj} from \"../discriminator/types\"\nimport {resolveRef, SchemaEnv} from \"../../compile\"\nimport MissingRefError from \"../../compile/ref_error\"\nimport {schemaHasRulesButRef} from \"../../compile/util\"\n\nexport type DiscriminatorError = DiscrErrorObj<DiscrError.Tag> | DiscrErrorObj<DiscrError.Mapping>\n\nconst error: KeywordErrorDefinition = {\n  message: ({params: {discrError, tagName}}) =>\n    discrError === DiscrError.Tag\n      ? `tag \"${tagName}\" must be string`\n      : `value of tag \"${tagName}\" must be in oneOf`,\n  params: ({params: {discrError, tag, tagName}}) =>\n    _`{error: ${discrError}, tag: ${tagName}, tagValue: ${tag}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"discriminator\",\n  type: \"object\",\n  schemaType: \"object\",\n  error,\n  code(cxt: KeywordCxt) {\n    const {gen, data, schema, parentSchema, it} = cxt\n    const {oneOf} = parentSchema\n    if (!it.opts.discriminator) {\n      throw new Error(\"discriminator: requires discriminator option\")\n    }\n    const tagName = schema.propertyName\n    if (typeof tagName != \"string\") throw new Error(\"discriminator: requires propertyName\")\n    if (schema.mapping) throw new Error(\"discriminator: mapping is not supported\")\n    if (!oneOf) throw new Error(\"discriminator: requires oneOf keyword\")\n    const valid = gen.let(\"valid\", false)\n    const tag = gen.const(\"tag\", _`${data}${getProperty(tagName)}`)\n    gen.if(\n      _`typeof ${tag} == \"string\"`,\n      () => validateMapping(),\n      () => cxt.error(false, {discrError: DiscrError.Tag, tag, tagName})\n    )\n    cxt.ok(valid)\n\n    function validateMapping(): void {\n      const mapping = getMapping()\n      gen.if(false)\n      for (const tagValue in mapping) {\n        gen.elseIf(_`${tag} === ${tagValue}`)\n        gen.assign(valid, applyTagSchema(mapping[tagValue]))\n      }\n      gen.else()\n      cxt.error(false, {discrError: DiscrError.Mapping, tag, tagName})\n      gen.endIf()\n    }\n\n    function applyTagSchema(schemaProp?: number): Name {\n      const _valid = gen.name(\"valid\")\n      const schCxt = cxt.subschema({keyword: \"oneOf\", schemaProp}, _valid)\n      cxt.mergeEvaluated(schCxt, Name)\n      return _valid\n    }\n\n    function getMapping(): {[T in string]?: number} {\n      const oneOfMapping: {[T in string]?: number} = {}\n      const topRequired = hasRequired(parentSchema)\n      let tagRequired = true\n      for (let i = 0; i < oneOf.length; i++) {\n        let sch = oneOf[i]\n        if (sch?.$ref && !schemaHasRulesButRef(sch, it.self.RULES)) {\n          const ref = sch.$ref\n          sch = resolveRef.call(it.self, it.schemaEnv.root, it.baseId, ref)\n          if (sch instanceof SchemaEnv) sch = sch.schema\n          if (sch === undefined) throw new MissingRefError(it.opts.uriResolver, it.baseId, ref)\n        }\n        const propSch = sch?.properties?.[tagName]\n        if (typeof propSch != \"object\") {\n          throw new Error(\n            `discriminator: oneOf subschemas (or referenced schemas) must have \"properties/${tagName}\"`\n          )\n        }\n        tagRequired = tagRequired && (topRequired || hasRequired(sch))\n        addMappings(propSch, i)\n      }\n      if (!tagRequired) throw new Error(`discriminator: \"${tagName}\" must be required`)\n      return oneOfMapping\n\n      function hasRequired({required}: AnySchemaObject): boolean {\n        return Array.isArray(required) && required.includes(tagName)\n      }\n\n      function addMappings(sch: AnySchemaObject, i: number): void {\n        if (sch.const) {\n          addMapping(sch.const, i)\n        } else if (sch.enum) {\n          for (const tagValue of sch.enum) {\n            addMapping(tagValue, i)\n          }\n        } else {\n          throw new Error(`discriminator: \"properties/${tagName}\" must have \"const\" or \"enum\"`)\n        }\n      }\n\n      function addMapping(tagValue: unknown, i: number): void {\n        if (typeof tagValue != \"string\" || tagValue in oneOfMapping) {\n          throw new Error(`discriminator: \"${tagName}\" values must be unique strings`)\n        }\n        oneOfMapping[tagValue] = i\n      }\n    }\n  },\n}\n\nexport default def\n","{\n  \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n  \"$id\": \"http://json-schema.org/draft-07/schema#\",\n  \"title\": \"Core schema meta-schema\",\n  \"definitions\": {\n    \"schemaArray\": {\n      \"type\": \"array\",\n      \"minItems\": 1,\n      \"items\": {\"$ref\": \"#\"}\n    },\n    \"nonNegativeInteger\": {\n      \"type\": \"integer\",\n      \"minimum\": 0\n    },\n    \"nonNegativeIntegerDefault0\": {\n      \"allOf\": [{\"$ref\": \"#/definitions/nonNegativeInteger\"}, {\"default\": 0}]\n    },\n    \"simpleTypes\": {\n      \"enum\": [\"array\", \"boolean\", \"integer\", \"null\", \"number\", \"object\", \"string\"]\n    },\n    \"stringArray\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"string\"},\n      \"uniqueItems\": true,\n      \"default\": []\n    }\n  },\n  \"type\": [\"object\", \"boolean\"],\n  \"properties\": {\n    \"$id\": {\n      \"type\": \"string\",\n      \"format\": \"uri-reference\"\n    },\n    \"$schema\": {\n      \"type\": \"string\",\n      \"format\": \"uri\"\n    },\n    \"$ref\": {\n      \"type\": \"string\",\n      \"format\": \"uri-reference\"\n    },\n    \"$comment\": {\n      \"type\": \"string\"\n    },\n    \"title\": {\n      \"type\": \"string\"\n    },\n    \"description\": {\n      \"type\": \"string\"\n    },\n    \"default\": true,\n    \"readOnly\": {\n      \"type\": \"boolean\",\n      \"default\": false\n    },\n    \"examples\": {\n      \"type\": \"array\",\n      \"items\": true\n    },\n    \"multipleOf\": {\n      \"type\": \"number\",\n      \"exclusiveMinimum\": 0\n    },\n    \"maximum\": {\n      \"type\": \"number\"\n    },\n    \"exclusiveMaximum\": {\n      \"type\": \"number\"\n    },\n    \"minimum\": {\n      \"type\": \"number\"\n    },\n    \"exclusiveMinimum\": {\n      \"type\": \"number\"\n    },\n    \"maxLength\": {\"$ref\": \"#/definitions/nonNegativeInteger\"},\n    \"minLength\": {\"$ref\": \"#/definitions/nonNegativeIntegerDefault0\"},\n    \"pattern\": {\n      \"type\": \"string\",\n      \"format\": \"regex\"\n    },\n    \"additionalItems\": {\"$ref\": \"#\"},\n    \"items\": {\n      \"anyOf\": [{\"$ref\": \"#\"}, {\"$ref\": \"#/definitions/schemaArray\"}],\n      \"default\": true\n    },\n    \"maxItems\": {\"$ref\": \"#/definitions/nonNegativeInteger\"},\n    \"minItems\": {\"$ref\": \"#/definitions/nonNegativeIntegerDefault0\"},\n    \"uniqueItems\": {\n      \"type\": \"boolean\",\n      \"default\": false\n    },\n    \"contains\": {\"$ref\": \"#\"},\n    \"maxProperties\": {\"$ref\": \"#/definitions/nonNegativeInteger\"},\n    \"minProperties\": {\"$ref\": \"#/definitions/nonNegativeIntegerDefault0\"},\n    \"required\": {\"$ref\": \"#/definitions/stringArray\"},\n    \"additionalProperties\": {\"$ref\": \"#\"},\n    \"definitions\": {\n      \"type\": \"object\",\n      \"additionalProperties\": {\"$ref\": \"#\"},\n      \"default\": {}\n    },\n    \"properties\": {\n      \"type\": \"object\",\n      \"additionalProperties\": {\"$ref\": \"#\"},\n      \"default\": {}\n    },\n    \"patternProperties\": {\n      \"type\": \"object\",\n      \"additionalProperties\": {\"$ref\": \"#\"},\n      \"propertyNames\": {\"format\": \"regex\"},\n      \"default\": {}\n    },\n    \"dependencies\": {\n      \"type\": \"object\",\n      \"additionalProperties\": {\n        \"anyOf\": [{\"$ref\": \"#\"}, {\"$ref\": \"#/definitions/stringArray\"}]\n      }\n    },\n    \"propertyNames\": {\"$ref\": \"#\"},\n    \"const\": true,\n    \"enum\": {\n      \"type\": \"array\",\n      \"items\": true,\n      \"minItems\": 1,\n      \"uniqueItems\": true\n    },\n    \"type\": {\n      \"anyOf\": [\n        {\"$ref\": \"#/definitions/simpleTypes\"},\n        {\n          \"type\": \"array\",\n          \"items\": {\"$ref\": \"#/definitions/simpleTypes\"},\n          \"minItems\": 1,\n          \"uniqueItems\": true\n        }\n      ]\n    },\n    \"format\": {\"type\": \"string\"},\n    \"contentMediaType\": {\"type\": \"string\"},\n    \"contentEncoding\": {\"type\": \"string\"},\n    \"if\": {\"$ref\": \"#\"},\n    \"then\": {\"$ref\": \"#\"},\n    \"else\": {\"$ref\": \"#\"},\n    \"allOf\": {\"$ref\": \"#/definitions/schemaArray\"},\n    \"anyOf\": {\"$ref\": \"#/definitions/schemaArray\"},\n    \"oneOf\": {\"$ref\": \"#/definitions/schemaArray\"},\n    \"not\": {\"$ref\": \"#\"}\n  },\n  \"default\": true\n}\n","import type {AnySchemaObject} from \"./types\"\nimport AjvCore from \"./core\"\nimport draft7Vocabularies from \"./vocabularies/draft7\"\nimport discriminator from \"./vocabularies/discriminator\"\nimport * as draft7MetaSchema from \"./refs/json-schema-draft-07.json\"\n\nconst META_SUPPORT_DATA = [\"/properties\"]\n\nconst META_SCHEMA_ID = \"http://json-schema.org/draft-07/schema\"\n\nexport class Ajv extends AjvCore {\n  _addVocabularies(): void {\n    super._addVocabularies()\n    draft7Vocabularies.forEach((v) => this.addVocabulary(v))\n    if (this.opts.discriminator) this.addKeyword(discriminator)\n  }\n\n  _addDefaultMetaSchema(): void {\n    super._addDefaultMetaSchema()\n    if (!this.opts.meta) return\n    const metaSchema = this.opts.$data\n      ? this.$dataMetaSchema(draft7MetaSchema, META_SUPPORT_DATA)\n      : draft7MetaSchema\n    this.addMetaSchema(metaSchema, META_SCHEMA_ID, false)\n    this.refs[\"http://json-schema.org/schema\"] = META_SCHEMA_ID\n  }\n\n  defaultMeta(): string | AnySchemaObject | undefined {\n    return (this.opts.defaultMeta =\n      super.defaultMeta() || (this.getSchema(META_SCHEMA_ID) ? META_SCHEMA_ID : undefined))\n  }\n}\n\nmodule.exports = exports = Ajv\nmodule.exports.Ajv = Ajv\nObject.defineProperty(exports, \"__esModule\", {value: true})\n\nexport default Ajv\n\nexport {\n  Format,\n  FormatDefinition,\n  AsyncFormatDefinition,\n  KeywordDefinition,\n  KeywordErrorDefinition,\n  CodeKeywordDefinition,\n  MacroKeywordDefinition,\n  FuncKeywordDefinition,\n  Vocabulary,\n  Schema,\n  SchemaObject,\n  AnySchemaObject,\n  AsyncSchema,\n  AnySchema,\n  ValidateFunction,\n  AsyncValidateFunction,\n  SchemaValidateFunction,\n  ErrorObject,\n  ErrorNoParams,\n} from \"./types\"\n\nexport {Plugin, Options, CodeOptions, InstanceOptions, Logger, ErrorsTextOptions} from \"./core\"\nexport {SchemaCxt, SchemaObjCxt} from \"./compile\"\nexport {KeywordCxt} from \"./compile/validate\"\nexport {DefinedError} from \"./vocabularies/errors\"\nexport {JSONType} from \"./compile/rules\"\nexport {JSONSchemaType} from \"./types/json-schema\"\nexport {_, str, stringify, nil, Name, Code, CodeGen, CodeGenOptions} from \"./compile/codegen\"\nexport {default as ValidationError} from \"./runtime/validation_error\"\nexport {default as MissingRefError} from \"./compile/ref_error\"\n","{\n  \"name\": \"@internal/chromadb-core\",\n  \"version\": \"2.4.6\",\n  \"private\": true,\n  \"description\": \"Core functionality for ChromaDB JavaScript client\",\n  \"license\": \"Apache-2.0\",\n  \"type\": \"module\",\n  \"main\": \"dist/cjs/chromadb-core.cjs\",\n  \"types\": \"dist/chromadb-core.d.ts\",\n  \"module\": \"dist/chromadb-core.legacy-esm.js\",\n  \"exports\": {\n    \".\": {\n      \"import\": {\n        \"types\": \"./dist/chromadb-core.d.ts\",\n        \"default\": \"./dist/chromadb-core.mjs\"\n      },\n      \"require\": {\n        \"types\": \"./dist/cjs/chromadb-core.d.cts\",\n        \"default\": \"./dist/cjs/chromadb-core.cjs\"\n      }\n    }\n  },\n  \"files\": [\n    \"src\",\n    \"dist\"\n  ],\n  \"scripts\": {\n    \"test\": \"jest --runInBand\",\n    \"test:functional\": \"jest --runInBand --testPathIgnorePatterns=test/auth.*.test.ts\",\n    \"test:update\": \"jest --runInBand --updateSnapshot\",\n    \"prebuild\": \"rimraf dist\",\n    \"build\": \"NODE_OPTIONS=--enable-source-maps tsup\",\n    \"watch\": \"NODE_OPTIONS=--enable-source-maps tsup --watch\"\n  },\n  \"dependencies\": {\n    \"ajv\": \"^8.12.0\",\n    \"cliui\": \"^8.0.1\",\n    \"isomorphic-fetch\": \"^3.0.0\"\n  },\n  \"devDependencies\": {\n    \"@jest/globals\": \"^29.7.0\",\n    \"@jest/types\": \"^29.6.3\",\n    \"@types/jest\": \"^29.5.0\",\n    \"@types/node\": \"^20.8.10\",\n    \"bcrypt\": \"^5.1.1\",\n    \"jest\": \"^29.5.0\",\n    \"prettier\": \"2.8.7\",\n    \"rimraf\": \"^5.0.0\",\n    \"ts-jest\": \"^29.1.0\",\n    \"ts-node\": \"^10.9.1\",\n    \"tsup\": \"^7.2.0\",\n    \"typescript\": \"^5.0.4\"\n  }\n}\n","import \"isomorphic-fetch\";\n/* eslint-disable */\n// tslint:disable\n/**\n * chroma-frontend\n *\n *\n * OpenAPI spec version: 1.0.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator+.\n * https://github.com/karlvr/openapi-generator-plus\n * Do not edit the class manually.\n */\n\nexport const defaultFetch = fetch;\nimport { Configuration } from \"./configuration\";\n\nexport const BASE_PATH = \"\";\n\n/**\n *\n * @export\n */\nexport const COLLECTION_FORMATS = {\n  csv: \",\",\n  ssv: \" \",\n  tsv: \"\\t\",\n  pipes: \"|\",\n};\n\n/**\n *\n * @export\n * @type FetchAPI\n */\nexport type FetchAPI = typeof defaultFetch;\n\n/**\n *\n * @export\n * @interface FetchArgs\n */\nexport interface FetchArgs {\n  url: string;\n  options: RequestInit;\n}\n\n/**\n *\n * @export\n * @class BaseAPI\n */\nexport class BaseAPI {\n  protected configuration?: Configuration;\n\n  constructor(\n    configuration?: Configuration,\n    protected basePath: string = BASE_PATH,\n    protected fetch: FetchAPI = defaultFetch,\n  ) {\n    if (configuration) {\n      this.configuration = configuration;\n      this.basePath = configuration.basePath || this.basePath;\n    }\n  }\n}\n\n/**\n *\n * @export\n * @class RequiredError\n * @extends {Error}\n */\nexport class RequiredError extends Error {\n  constructor(public field: string, msg?: string) {\n    super(msg);\n    Object.setPrototypeOf(this, RequiredError.prototype);\n    this.name = \"RequiredError\";\n  }\n}\n","/* eslint-disable */\n// tslint:disable\n/**\n * chroma-frontend\n *\n *\n * OpenAPI spec version: 1.0.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator+.\n * https://github.com/karlvr/openapi-generator-plus\n * Do not edit the class manually.\n */\n\nimport { Configuration } from \"./configuration\";\nimport {\n  BASE_PATH,\n  COLLECTION_FORMATS,\n  FetchAPI,\n  FetchArgs,\n  BaseAPI,\n  RequiredError,\n  defaultFetch,\n} from \"./runtime\";\nimport { Api } from \"./models\";\n\nexport type FactoryFunction<T> = (\n  configuration?: Configuration,\n  basePath?: string,\n  fetch?: FetchAPI,\n) => T;\n\n/**\n * ApiApi - fetch parameter creator\n * @export\n */\nexport const ApiApiFetchParamCreator = function (\n  configuration?: Configuration,\n) {\n  return {\n    /**\n     * @summary Adds records to a collection.\n     * @param {string} tenant\n     * @param {string} database\n     * @param {string} collectionId\n     * @param {Api.AddCollectionRecordsPayload} request\n     * @param {RequestInit} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    collectionAdd(\n      tenant: string,\n      database: string,\n      collectionId: string,\n      request: Api.AddCollectionRecordsPayload,\n      options: RequestInit = {},\n    ): FetchArgs {\n      // verify required parameter 'tenant' is not null or undefined\n      if (tenant === null || tenant === undefined) {\n        throw new RequiredError(\n          \"tenant\",\n          \"Required parameter tenant was null or undefined when calling collectionAdd.\",\n        );\n      }\n      // verify required parameter 'database' is not null or undefined\n      if (database === null || database === undefined) {\n        throw new RequiredError(\n          \"database\",\n          \"Required parameter database was null or undefined when calling collectionAdd.\",\n        );\n      }\n      // verify required parameter 'collectionId' is not null or undefined\n      if (collectionId === null || collectionId === undefined) {\n        throw new RequiredError(\n          \"collectionId\",\n          \"Required parameter collectionId was null or undefined when calling collectionAdd.\",\n        );\n      }\n      // verify required parameter 'request' is not null or undefined\n      if (request === null || request === undefined) {\n        throw new RequiredError(\n          \"request\",\n          \"Required parameter request was null or undefined when calling collectionAdd.\",\n        );\n      }\n      let localVarPath =\n        `/api/v2/tenants/{tenant}/databases/{database}/collections/{collection_id}/add`\n          .replace(\"{tenant}\", encodeURIComponent(String(tenant)))\n          .replace(\"{database}\", encodeURIComponent(String(database)))\n          .replace(\"{collection_id}\", encodeURIComponent(String(collectionId)));\n      const localVarPathQueryStart = localVarPath.indexOf(\"?\");\n      const localVarRequestOptions: RequestInit = Object.assign(\n        { method: \"POST\" },\n        options,\n      );\n      const localVarHeaderParameter: Headers = options.headers\n        ? new Headers(options.headers)\n        : new Headers();\n      const localVarQueryParameter = new URLSearchParams(\n        localVarPathQueryStart !== -1\n          ? localVarPath.substring(localVarPathQueryStart + 1)\n          : \"\",\n      );\n      if (localVarPathQueryStart !== -1) {\n        localVarPath = localVarPath.substring(0, localVarPathQueryStart);\n      }\n\n      localVarHeaderParameter.set(\"Content-Type\", \"application/json\");\n\n      localVarRequestOptions.headers = localVarHeaderParameter;\n\n      if (request !== undefined) {\n        localVarRequestOptions.body = JSON.stringify(request || {});\n      }\n\n      const localVarQueryParameterString = localVarQueryParameter.toString();\n      if (localVarQueryParameterString) {\n        localVarPath += \"?\" + localVarQueryParameterString;\n      }\n      return {\n        url: localVarPath,\n        options: localVarRequestOptions,\n      };\n    },\n    /**\n     * @summary Retrieves the number of records in a collection.\n     * @param {string} tenant <p>Tenant ID for the collection</p>\n     * @param {string} database <p>Database containing this collection</p>\n     * @param {string} collectionId <p>Collection ID whose records are counted</p>\n     * @param {RequestInit} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    collectionCount(\n      tenant: string,\n      database: string,\n      collectionId: string,\n      options: RequestInit = {},\n    ): FetchArgs {\n      // verify required parameter 'tenant' is not null or undefined\n      if (tenant === null || tenant === undefined) {\n        throw new RequiredError(\n          \"tenant\",\n          \"Required parameter tenant was null or undefined when calling collectionCount.\",\n        );\n      }\n      // verify required parameter 'database' is not null or undefined\n      if (database === null || database === undefined) {\n        throw new RequiredError(\n          \"database\",\n          \"Required parameter database was null or undefined when calling collectionCount.\",\n        );\n      }\n      // verify required parameter 'collectionId' is not null or undefined\n      if (collectionId === null || collectionId === undefined) {\n        throw new RequiredError(\n          \"collectionId\",\n          \"Required parameter collectionId was null or undefined when calling collectionCount.\",\n        );\n      }\n      let localVarPath =\n        `/api/v2/tenants/{tenant}/databases/{database}/collections/{collection_id}/count`\n          .replace(\"{tenant}\", encodeURIComponent(String(tenant)))\n          .replace(\"{database}\", encodeURIComponent(String(database)))\n          .replace(\"{collection_id}\", encodeURIComponent(String(collectionId)));\n      const localVarPathQueryStart = localVarPath.indexOf(\"?\");\n      const localVarRequestOptions: RequestInit = Object.assign(\n        { method: \"GET\" },\n        options,\n      );\n      const localVarHeaderParameter: Headers = options.headers\n        ? new Headers(options.headers)\n        : new Headers();\n      const localVarQueryParameter = new URLSearchParams(\n        localVarPathQueryStart !== -1\n          ? localVarPath.substring(localVarPathQueryStart + 1)\n          : \"\",\n      );\n      if (localVarPathQueryStart !== -1) {\n        localVarPath = localVarPath.substring(0, localVarPathQueryStart);\n      }\n\n      localVarRequestOptions.headers = localVarHeaderParameter;\n\n      const localVarQueryParameterString = localVarQueryParameter.toString();\n      if (localVarQueryParameterString) {\n        localVarPath += \"?\" + localVarQueryParameterString;\n      }\n      return {\n        url: localVarPath,\n        options: localVarRequestOptions,\n      };\n    },\n    /**\n     * @summary Deletes records in a collection. Can filter by IDs or metadata.\n     * @param {string} tenant <p>Tenant ID</p>\n     * @param {string} database <p>Database name</p>\n     * @param {string} collectionId <p>Collection ID</p>\n     * @param {Api.DeleteCollectionRecordsPayload} request\n     * @param {RequestInit} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    collectionDelete(\n      tenant: string,\n      database: string,\n      collectionId: string,\n      request: Api.DeleteCollectionRecordsPayload,\n      options: RequestInit = {},\n    ): FetchArgs {\n      // verify required parameter 'tenant' is not null or undefined\n      if (tenant === null || tenant === undefined) {\n        throw new RequiredError(\n          \"tenant\",\n          \"Required parameter tenant was null or undefined when calling collectionDelete.\",\n        );\n      }\n      // verify required parameter 'database' is not null or undefined\n      if (database === null || database === undefined) {\n        throw new RequiredError(\n          \"database\",\n          \"Required parameter database was null or undefined when calling collectionDelete.\",\n        );\n      }\n      // verify required parameter 'collectionId' is not null or undefined\n      if (collectionId === null || collectionId === undefined) {\n        throw new RequiredError(\n          \"collectionId\",\n          \"Required parameter collectionId was null or undefined when calling collectionDelete.\",\n        );\n      }\n      // verify required parameter 'request' is not null or undefined\n      if (request === null || request === undefined) {\n        throw new RequiredError(\n          \"request\",\n          \"Required parameter request was null or undefined when calling collectionDelete.\",\n        );\n      }\n      let localVarPath =\n        `/api/v2/tenants/{tenant}/databases/{database}/collections/{collection_id}/delete`\n          .replace(\"{tenant}\", encodeURIComponent(String(tenant)))\n          .replace(\"{database}\", encodeURIComponent(String(database)))\n          .replace(\"{collection_id}\", encodeURIComponent(String(collectionId)));\n      const localVarPathQueryStart = localVarPath.indexOf(\"?\");\n      const localVarRequestOptions: RequestInit = Object.assign(\n        { method: \"POST\" },\n        options,\n      );\n      const localVarHeaderParameter: Headers = options.headers\n        ? new Headers(options.headers)\n        : new Headers();\n      const localVarQueryParameter = new URLSearchParams(\n        localVarPathQueryStart !== -1\n          ? localVarPath.substring(localVarPathQueryStart + 1)\n          : \"\",\n      );\n      if (localVarPathQueryStart !== -1) {\n        localVarPath = localVarPath.substring(0, localVarPathQueryStart);\n      }\n\n      localVarHeaderParameter.set(\"Content-Type\", \"application/json\");\n\n      localVarRequestOptions.headers = localVarHeaderParameter;\n\n      if (request !== undefined) {\n        localVarRequestOptions.body = JSON.stringify(request || {});\n      }\n\n      const localVarQueryParameterString = localVarQueryParameter.toString();\n      if (localVarQueryParameterString) {\n        localVarPath += \"?\" + localVarQueryParameterString;\n      }\n      return {\n        url: localVarPath,\n        options: localVarRequestOptions,\n      };\n    },\n    /**\n     * @summary Retrieves records from a collection by ID or metadata filter.\n     * @param {string} tenant <p>Tenant ID</p>\n     * @param {string} database <p>Database name for the collection</p>\n     * @param {string} collectionId <p>Collection ID to fetch records from</p>\n     * @param {Api.GetRequestPayload} request\n     * @param {RequestInit} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    collectionGet(\n      tenant: string,\n      database: string,\n      collectionId: string,\n      request: Api.GetRequestPayload,\n      options: RequestInit = {},\n    ): FetchArgs {\n      // verify required parameter 'tenant' is not null or undefined\n      if (tenant === null || tenant === undefined) {\n        throw new RequiredError(\n          \"tenant\",\n          \"Required parameter tenant was null or undefined when calling collectionGet.\",\n        );\n      }\n      // verify required parameter 'database' is not null or undefined\n      if (database === null || database === undefined) {\n        throw new RequiredError(\n          \"database\",\n          \"Required parameter database was null or undefined when calling collectionGet.\",\n        );\n      }\n      // verify required parameter 'collectionId' is not null or undefined\n      if (collectionId === null || collectionId === undefined) {\n        throw new RequiredError(\n          \"collectionId\",\n          \"Required parameter collectionId was null or undefined when calling collectionGet.\",\n        );\n      }\n      // verify required parameter 'request' is not null or undefined\n      if (request === null || request === undefined) {\n        throw new RequiredError(\n          \"request\",\n          \"Required parameter request was null or undefined when calling collectionGet.\",\n        );\n      }\n      let localVarPath =\n        `/api/v2/tenants/{tenant}/databases/{database}/collections/{collection_id}/get`\n          .replace(\"{tenant}\", encodeURIComponent(String(tenant)))\n          .replace(\"{database}\", encodeURIComponent(String(database)))\n          .replace(\"{collection_id}\", encodeURIComponent(String(collectionId)));\n      const localVarPathQueryStart = localVarPath.indexOf(\"?\");\n      const localVarRequestOptions: RequestInit = Object.assign(\n        { method: \"POST\" },\n        options,\n      );\n      const localVarHeaderParameter: Headers = options.headers\n        ? new Headers(options.headers)\n        : new Headers();\n      const localVarQueryParameter = new URLSearchParams(\n        localVarPathQueryStart !== -1\n          ? localVarPath.substring(localVarPathQueryStart + 1)\n          : \"\",\n      );\n      if (localVarPathQueryStart !== -1) {\n        localVarPath = localVarPath.substring(0, localVarPathQueryStart);\n      }\n\n      localVarHeaderParameter.set(\"Content-Type\", \"application/json\");\n\n      localVarRequestOptions.headers = localVarHeaderParameter;\n\n      if (request !== undefined) {\n        localVarRequestOptions.body = JSON.stringify(request || {});\n      }\n\n      const localVarQueryParameterString = localVarQueryParameter.toString();\n      if (localVarQueryParameterString) {\n        localVarPath += \"?\" + localVarQueryParameterString;\n      }\n      return {\n        url: localVarPath,\n        options: localVarRequestOptions,\n      };\n    },\n    /**\n     * @summary Query a collection in a variety of ways, including vector search, metadata filtering, and full-text search\n     * @param {string} tenant <p>Tenant ID</p>\n     * @param {string} database <p>Database name containing the collection</p>\n     * @param {string} collectionId <p>Collection ID to query</p>\n     * @param {number} [limit] <p>Limit for pagination</p>\n     * @param {number} [offset] <p>Offset for pagination</p>\n     * @param {Api.QueryRequestPayload} request\n     * @param {RequestInit} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    collectionQuery(\n      tenant: string,\n      database: string,\n      collectionId: string,\n      limit: number | undefined,\n      offset: number | undefined,\n      request: Api.QueryRequestPayload,\n      options: RequestInit = {},\n    ): FetchArgs {\n      // verify required parameter 'tenant' is not null or undefined\n      if (tenant === null || tenant === undefined) {\n        throw new RequiredError(\n          \"tenant\",\n          \"Required parameter tenant was null or undefined when calling collectionQuery.\",\n        );\n      }\n      // verify required parameter 'database' is not null or undefined\n      if (database === null || database === undefined) {\n        throw new RequiredError(\n          \"database\",\n          \"Required parameter database was null or undefined when calling collectionQuery.\",\n        );\n      }\n      // verify required parameter 'collectionId' is not null or undefined\n      if (collectionId === null || collectionId === undefined) {\n        throw new RequiredError(\n          \"collectionId\",\n          \"Required parameter collectionId was null or undefined when calling collectionQuery.\",\n        );\n      }\n      // verify required parameter 'request' is not null or undefined\n      if (request === null || request === undefined) {\n        throw new RequiredError(\n          \"request\",\n          \"Required parameter request was null or undefined when calling collectionQuery.\",\n        );\n      }\n      let localVarPath =\n        `/api/v2/tenants/{tenant}/databases/{database}/collections/{collection_id}/query`\n          .replace(\"{tenant}\", encodeURIComponent(String(tenant)))\n          .replace(\"{database}\", encodeURIComponent(String(database)))\n          .replace(\"{collection_id}\", encodeURIComponent(String(collectionId)));\n      const localVarPathQueryStart = localVarPath.indexOf(\"?\");\n      const localVarRequestOptions: RequestInit = Object.assign(\n        { method: \"POST\" },\n        options,\n      );\n      const localVarHeaderParameter: Headers = options.headers\n        ? new Headers(options.headers)\n        : new Headers();\n      const localVarQueryParameter = new URLSearchParams(\n        localVarPathQueryStart !== -1\n          ? localVarPath.substring(localVarPathQueryStart + 1)\n          : \"\",\n      );\n      if (localVarPathQueryStart !== -1) {\n        localVarPath = localVarPath.substring(0, localVarPathQueryStart);\n      }\n\n      if (limit !== undefined) {\n        localVarQueryParameter.append(\"limit\", String(limit));\n      }\n\n      if (offset !== undefined) {\n        localVarQueryParameter.append(\"offset\", String(offset));\n      }\n\n      localVarHeaderParameter.set(\"Content-Type\", \"application/json\");\n\n      localVarRequestOptions.headers = localVarHeaderParameter;\n\n      if (request !== undefined) {\n        localVarRequestOptions.body = JSON.stringify(request || {});\n      }\n\n      const localVarQueryParameterString = localVarQueryParameter.toString();\n      if (localVarQueryParameterString) {\n        localVarPath += \"?\" + localVarQueryParameterString;\n      }\n      return {\n        url: localVarPath,\n        options: localVarRequestOptions,\n      };\n    },\n    /**\n     * @summary Updates records in a collection by ID.\n     * @param {string} tenant\n     * @param {string} database\n     * @param {string} collectionId\n     * @param {Api.UpdateCollectionRecordsPayload} request\n     * @param {RequestInit} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    collectionUpdate(\n      tenant: string,\n      database: string,\n      collectionId: string,\n      request: Api.UpdateCollectionRecordsPayload,\n      options: RequestInit = {},\n    ): FetchArgs {\n      // verify required parameter 'tenant' is not null or undefined\n      if (tenant === null || tenant === undefined) {\n        throw new RequiredError(\n          \"tenant\",\n          \"Required parameter tenant was null or undefined when calling collectionUpdate.\",\n        );\n      }\n      // verify required parameter 'database' is not null or undefined\n      if (database === null || database === undefined) {\n        throw new RequiredError(\n          \"database\",\n          \"Required parameter database was null or undefined when calling collectionUpdate.\",\n        );\n      }\n      // verify required parameter 'collectionId' is not null or undefined\n      if (collectionId === null || collectionId === undefined) {\n        throw new RequiredError(\n          \"collectionId\",\n          \"Required parameter collectionId was null or undefined when calling collectionUpdate.\",\n        );\n      }\n      // verify required parameter 'request' is not null or undefined\n      if (request === null || request === undefined) {\n        throw new RequiredError(\n          \"request\",\n          \"Required parameter request was null or undefined when calling collectionUpdate.\",\n        );\n      }\n      let localVarPath =\n        `/api/v2/tenants/{tenant}/databases/{database}/collections/{collection_id}/update`\n          .replace(\"{tenant}\", encodeURIComponent(String(tenant)))\n          .replace(\"{database}\", encodeURIComponent(String(database)))\n          .replace(\"{collection_id}\", encodeURIComponent(String(collectionId)));\n      const localVarPathQueryStart = localVarPath.indexOf(\"?\");\n      const localVarRequestOptions: RequestInit = Object.assign(\n        { method: \"POST\" },\n        options,\n      );\n      const localVarHeaderParameter: Headers = options.headers\n        ? new Headers(options.headers)\n        : new Headers();\n      const localVarQueryParameter = new URLSearchParams(\n        localVarPathQueryStart !== -1\n          ? localVarPath.substring(localVarPathQueryStart + 1)\n          : \"\",\n      );\n      if (localVarPathQueryStart !== -1) {\n        localVarPath = localVarPath.substring(0, localVarPathQueryStart);\n      }\n\n      localVarHeaderParameter.set(\"Content-Type\", \"application/json\");\n\n      localVarRequestOptions.headers = localVarHeaderParameter;\n\n      if (request !== undefined) {\n        localVarRequestOptions.body = JSON.stringify(request || {});\n      }\n\n      const localVarQueryParameterString = localVarQueryParameter.toString();\n      if (localVarQueryParameterString) {\n        localVarPath += \"?\" + localVarQueryParameterString;\n      }\n      return {\n        url: localVarPath,\n        options: localVarRequestOptions,\n      };\n    },\n    /**\n     * @summary Upserts records in a collection (create if not exists, otherwise update).\n     * @param {string} tenant <p>Tenant ID</p>\n     * @param {string} database <p>Database name</p>\n     * @param {string} collectionId <p>Collection ID</p>\n     * @param {Api.UpsertCollectionRecordsPayload} request\n     * @param {RequestInit} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    collectionUpsert(\n      tenant: string,\n      database: string,\n      collectionId: string,\n      request: Api.UpsertCollectionRecordsPayload,\n      options: RequestInit = {},\n    ): FetchArgs {\n      // verify required parameter 'tenant' is not null or undefined\n      if (tenant === null || tenant === undefined) {\n        throw new RequiredError(\n          \"tenant\",\n          \"Required parameter tenant was null or undefined when calling collectionUpsert.\",\n        );\n      }\n      // verify required parameter 'database' is not null or undefined\n      if (database === null || database === undefined) {\n        throw new RequiredError(\n          \"database\",\n          \"Required parameter database was null or undefined when calling collectionUpsert.\",\n        );\n      }\n      // verify required parameter 'collectionId' is not null or undefined\n      if (collectionId === null || collectionId === undefined) {\n        throw new RequiredError(\n          \"collectionId\",\n          \"Required parameter collectionId was null or undefined when calling collectionUpsert.\",\n        );\n      }\n      // verify required parameter 'request' is not null or undefined\n      if (request === null || request === undefined) {\n        throw new RequiredError(\n          \"request\",\n          \"Required parameter request was null or undefined when calling collectionUpsert.\",\n        );\n      }\n      let localVarPath =\n        `/api/v2/tenants/{tenant}/databases/{database}/collections/{collection_id}/upsert`\n          .replace(\"{tenant}\", encodeURIComponent(String(tenant)))\n          .replace(\"{database}\", encodeURIComponent(String(database)))\n          .replace(\"{collection_id}\", encodeURIComponent(String(collectionId)));\n      const localVarPathQueryStart = localVarPath.indexOf(\"?\");\n      const localVarRequestOptions: RequestInit = Object.assign(\n        { method: \"POST\" },\n        options,\n      );\n      const localVarHeaderParameter: Headers = options.headers\n        ? new Headers(options.headers)\n        : new Headers();\n      const localVarQueryParameter = new URLSearchParams(\n        localVarPathQueryStart !== -1\n          ? localVarPath.substring(localVarPathQueryStart + 1)\n          : \"\",\n      );\n      if (localVarPathQueryStart !== -1) {\n        localVarPath = localVarPath.substring(0, localVarPathQueryStart);\n      }\n\n      localVarHeaderParameter.set(\"Content-Type\", \"application/json\");\n\n      localVarRequestOptions.headers = localVarHeaderParameter;\n\n      if (request !== undefined) {\n        localVarRequestOptions.body = JSON.stringify(request || {});\n      }\n\n      const localVarQueryParameterString = localVarQueryParameter.toString();\n      if (localVarQueryParameterString) {\n        localVarPath += \"?\" + localVarQueryParameterString;\n      }\n      return {\n        url: localVarPath,\n        options: localVarRequestOptions,\n      };\n    },\n    /**\n     * @summary Retrieves the total number of collections in a given database.\n     * @param {string} tenant <p>Tenant ID</p>\n     * @param {string} database <p>Database name to count collections from</p>\n     * @param {RequestInit} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    countCollections(\n      tenant: string,\n      database: string,\n      options: RequestInit = {},\n    ): FetchArgs {\n      // verify required parameter 'tenant' is not null or undefined\n      if (tenant === null || tenant === undefined) {\n        throw new RequiredError(\n          \"tenant\",\n          \"Required parameter tenant was null or undefined when calling countCollections.\",\n        );\n      }\n      // verify required parameter 'database' is not null or undefined\n      if (database === null || database === undefined) {\n        throw new RequiredError(\n          \"database\",\n          \"Required parameter database was null or undefined when calling countCollections.\",\n        );\n      }\n      let localVarPath =\n        `/api/v2/tenants/{tenant}/databases/{database}/collections_count`\n          .replace(\"{tenant}\", encodeURIComponent(String(tenant)))\n          .replace(\"{database}\", encodeURIComponent(String(database)));\n      const localVarPathQueryStart = localVarPath.indexOf(\"?\");\n      const localVarRequestOptions: RequestInit = Object.assign(\n        { method: \"GET\" },\n        options,\n      );\n      const localVarHeaderParameter: Headers = options.headers\n        ? new Headers(options.headers)\n        : new Headers();\n      const localVarQueryParameter = new URLSearchParams(\n        localVarPathQueryStart !== -1\n          ? localVarPath.substring(localVarPathQueryStart + 1)\n          : \"\",\n      );\n      if (localVarPathQueryStart !== -1) {\n        localVarPath = localVarPath.substring(0, localVarPathQueryStart);\n      }\n\n      localVarRequestOptions.headers = localVarHeaderParameter;\n\n      const localVarQueryParameterString = localVarQueryParameter.toString();\n      if (localVarQueryParameterString) {\n        localVarPath += \"?\" + localVarQueryParameterString;\n      }\n      return {\n        url: localVarPath,\n        options: localVarRequestOptions,\n      };\n    },\n    /**\n     * @summary Creates a new collection under the specified database.\n     * @param {string} tenant <p>Tenant ID</p>\n     * @param {string} database <p>Database name containing the new collection</p>\n     * @param {Api.CreateCollectionPayload} request\n     * @param {RequestInit} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    createCollection(\n      tenant: string,\n      database: string,\n      request: Api.CreateCollectionPayload,\n      options: RequestInit = {},\n    ): FetchArgs {\n      // verify required parameter 'tenant' is not null or undefined\n      if (tenant === null || tenant === undefined) {\n        throw new RequiredError(\n          \"tenant\",\n          \"Required parameter tenant was null or undefined when calling createCollection.\",\n        );\n      }\n      // verify required parameter 'database' is not null or undefined\n      if (database === null || database === undefined) {\n        throw new RequiredError(\n          \"database\",\n          \"Required parameter database was null or undefined when calling createCollection.\",\n        );\n      }\n      // verify required parameter 'request' is not null or undefined\n      if (request === null || request === undefined) {\n        throw new RequiredError(\n          \"request\",\n          \"Required parameter request was null or undefined when calling createCollection.\",\n        );\n      }\n      let localVarPath =\n        `/api/v2/tenants/{tenant}/databases/{database}/collections`\n          .replace(\"{tenant}\", encodeURIComponent(String(tenant)))\n          .replace(\"{database}\", encodeURIComponent(String(database)));\n      const localVarPathQueryStart = localVarPath.indexOf(\"?\");\n      const localVarRequestOptions: RequestInit = Object.assign(\n        { method: \"POST\" },\n        options,\n      );\n      const localVarHeaderParameter: Headers = options.headers\n        ? new Headers(options.headers)\n        : new Headers();\n      const localVarQueryParameter = new URLSearchParams(\n        localVarPathQueryStart !== -1\n          ? localVarPath.substring(localVarPathQueryStart + 1)\n          : \"\",\n      );\n      if (localVarPathQueryStart !== -1) {\n        localVarPath = localVarPath.substring(0, localVarPathQueryStart);\n      }\n\n      localVarHeaderParameter.set(\"Content-Type\", \"application/json\");\n\n      localVarRequestOptions.headers = localVarHeaderParameter;\n\n      if (request !== undefined) {\n        localVarRequestOptions.body = JSON.stringify(request || {});\n      }\n\n      const localVarQueryParameterString = localVarQueryParameter.toString();\n      if (localVarQueryParameterString) {\n        localVarPath += \"?\" + localVarQueryParameterString;\n      }\n      return {\n        url: localVarPath,\n        options: localVarRequestOptions,\n      };\n    },\n    /**\n     * @summary Creates a new database for a given tenant.\n     * @param {string} tenant <p>Tenant ID to associate with the new database</p>\n     * @param {Api.CreateDatabasePayload} request\n     * @param {RequestInit} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    createDatabase(\n      tenant: string,\n      request: Api.CreateDatabasePayload,\n      options: RequestInit = {},\n    ): FetchArgs {\n      // verify required parameter 'tenant' is not null or undefined\n      if (tenant === null || tenant === undefined) {\n        throw new RequiredError(\n          \"tenant\",\n          \"Required parameter tenant was null or undefined when calling createDatabase.\",\n        );\n      }\n      // verify required parameter 'request' is not null or undefined\n      if (request === null || request === undefined) {\n        throw new RequiredError(\n          \"request\",\n          \"Required parameter request was null or undefined when calling createDatabase.\",\n        );\n      }\n      let localVarPath = `/api/v2/tenants/{tenant}/databases`.replace(\n        \"{tenant}\",\n        encodeURIComponent(String(tenant)),\n      );\n      const localVarPathQueryStart = localVarPath.indexOf(\"?\");\n      const localVarRequestOptions: RequestInit = Object.assign(\n        { method: \"POST\" },\n        options,\n      );\n      const localVarHeaderParameter: Headers = options.headers\n        ? new Headers(options.headers)\n        : new Headers();\n      const localVarQueryParameter = new URLSearchParams(\n        localVarPathQueryStart !== -1\n          ? localVarPath.substring(localVarPathQueryStart + 1)\n          : \"\",\n      );\n      if (localVarPathQueryStart !== -1) {\n        localVarPath = localVarPath.substring(0, localVarPathQueryStart);\n      }\n\n      localVarHeaderParameter.set(\"Content-Type\", \"application/json\");\n\n      localVarRequestOptions.headers = localVarHeaderParameter;\n\n      if (request !== undefined) {\n        localVarRequestOptions.body = JSON.stringify(request || {});\n      }\n\n      const localVarQueryParameterString = localVarQueryParameter.toString();\n      if (localVarQueryParameterString) {\n        localVarPath += \"?\" + localVarQueryParameterString;\n      }\n      return {\n        url: localVarPath,\n        options: localVarRequestOptions,\n      };\n    },\n    /**\n     * @summary Creates a new tenant.\n     * @param {Api.CreateTenantPayload} request\n     * @param {RequestInit} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    createTenant(\n      request: Api.CreateTenantPayload,\n      options: RequestInit = {},\n    ): FetchArgs {\n      // verify required parameter 'request' is not null or undefined\n      if (request === null || request === undefined) {\n        throw new RequiredError(\n          \"request\",\n          \"Required parameter request was null or undefined when calling createTenant.\",\n        );\n      }\n      let localVarPath = `/api/v2/tenants`;\n      const localVarPathQueryStart = localVarPath.indexOf(\"?\");\n      const localVarRequestOptions: RequestInit = Object.assign(\n        { method: \"POST\" },\n        options,\n      );\n      const localVarHeaderParameter: Headers = options.headers\n        ? new Headers(options.headers)\n        : new Headers();\n      const localVarQueryParameter = new URLSearchParams(\n        localVarPathQueryStart !== -1\n          ? localVarPath.substring(localVarPathQueryStart + 1)\n          : \"\",\n      );\n      if (localVarPathQueryStart !== -1) {\n        localVarPath = localVarPath.substring(0, localVarPathQueryStart);\n      }\n\n      localVarHeaderParameter.set(\"Content-Type\", \"application/json\");\n\n      localVarRequestOptions.headers = localVarHeaderParameter;\n\n      if (request !== undefined) {\n        localVarRequestOptions.body = JSON.stringify(request || {});\n      }\n\n      const localVarQueryParameterString = localVarQueryParameter.toString();\n      if (localVarQueryParameterString) {\n        localVarPath += \"?\" + localVarQueryParameterString;\n      }\n      return {\n        url: localVarPath,\n        options: localVarRequestOptions,\n      };\n    },\n    /**\n     * @summary Deletes a collection in a given database.\n     * @param {string} tenant <p>Tenant ID</p>\n     * @param {string} database <p>Database name</p>\n     * @param {string} collectionId <p>UUID of the collection to delete</p>\n     * @param {RequestInit} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    deleteCollection(\n      tenant: string,\n      database: string,\n      collectionId: string,\n      options: RequestInit = {},\n    ): FetchArgs {\n      // verify required parameter 'tenant' is not null or undefined\n      if (tenant === null || tenant === undefined) {\n        throw new RequiredError(\n          \"tenant\",\n          \"Required parameter tenant was null or undefined when calling deleteCollection.\",\n        );\n      }\n      // verify required parameter 'database' is not null or undefined\n      if (database === null || database === undefined) {\n        throw new RequiredError(\n          \"database\",\n          \"Required parameter database was null or undefined when calling deleteCollection.\",\n        );\n      }\n      // verify required parameter 'collectionId' is not null or undefined\n      if (collectionId === null || collectionId === undefined) {\n        throw new RequiredError(\n          \"collectionId\",\n          \"Required parameter collectionId was null or undefined when calling deleteCollection.\",\n        );\n      }\n      let localVarPath =\n        `/api/v2/tenants/{tenant}/databases/{database}/collections/{collection_id}`\n          .replace(\"{tenant}\", encodeURIComponent(String(tenant)))\n          .replace(\"{database}\", encodeURIComponent(String(database)))\n          .replace(\"{collection_id}\", encodeURIComponent(String(collectionId)));\n      const localVarPathQueryStart = localVarPath.indexOf(\"?\");\n      const localVarRequestOptions: RequestInit = Object.assign(\n        { method: \"DELETE\" },\n        options,\n      );\n      const localVarHeaderParameter: Headers = options.headers\n        ? new Headers(options.headers)\n        : new Headers();\n      const localVarQueryParameter = new URLSearchParams(\n        localVarPathQueryStart !== -1\n          ? localVarPath.substring(localVarPathQueryStart + 1)\n          : \"\",\n      );\n      if (localVarPathQueryStart !== -1) {\n        localVarPath = localVarPath.substring(0, localVarPathQueryStart);\n      }\n\n      localVarRequestOptions.headers = localVarHeaderParameter;\n\n      const localVarQueryParameterString = localVarQueryParameter.toString();\n      if (localVarQueryParameterString) {\n        localVarPath += \"?\" + localVarQueryParameterString;\n      }\n      return {\n        url: localVarPath,\n        options: localVarRequestOptions,\n      };\n    },\n    /**\n     * @summary Deletes a specific database.\n     * @param {string} tenant <p>Tenant ID</p>\n     * @param {string} database <p>Name of the database to delete</p>\n     * @param {RequestInit} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    deleteDatabase(\n      tenant: string,\n      database: string,\n      options: RequestInit = {},\n    ): FetchArgs {\n      // verify required parameter 'tenant' is not null or undefined\n      if (tenant === null || tenant === undefined) {\n        throw new RequiredError(\n          \"tenant\",\n          \"Required parameter tenant was null or undefined when calling deleteDatabase.\",\n        );\n      }\n      // verify required parameter 'database' is not null or undefined\n      if (database === null || database === undefined) {\n        throw new RequiredError(\n          \"database\",\n          \"Required parameter database was null or undefined when calling deleteDatabase.\",\n        );\n      }\n      let localVarPath = `/api/v2/tenants/{tenant}/databases/{database}`\n        .replace(\"{tenant}\", encodeURIComponent(String(tenant)))\n        .replace(\"{database}\", encodeURIComponent(String(database)));\n      const localVarPathQueryStart = localVarPath.indexOf(\"?\");\n      const localVarRequestOptions: RequestInit = Object.assign(\n        { method: \"DELETE\" },\n        options,\n      );\n      const localVarHeaderParameter: Headers = options.headers\n        ? new Headers(options.headers)\n        : new Headers();\n      const localVarQueryParameter = new URLSearchParams(\n        localVarPathQueryStart !== -1\n          ? localVarPath.substring(localVarPathQueryStart + 1)\n          : \"\",\n      );\n      if (localVarPathQueryStart !== -1) {\n        localVarPath = localVarPath.substring(0, localVarPathQueryStart);\n      }\n\n      localVarRequestOptions.headers = localVarHeaderParameter;\n\n      const localVarQueryParameterString = localVarQueryParameter.toString();\n      if (localVarQueryParameterString) {\n        localVarPath += \"?\" + localVarQueryParameterString;\n      }\n      return {\n        url: localVarPath,\n        options: localVarRequestOptions,\n      };\n    },\n    /**\n     * @summary Forks an existing collection.\n     * @param {string} tenant <p>Tenant ID</p>\n     * @param {string} database <p>Database name</p>\n     * @param {string} collectionId <p>UUID of the collection to update</p>\n     * @param {Api.ForkCollectionPayload} request\n     * @param {RequestInit} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    forkCollection(\n      tenant: string,\n      database: string,\n      collectionId: string,\n      request: Api.ForkCollectionPayload,\n      options: RequestInit = {},\n    ): FetchArgs {\n      // verify required parameter 'tenant' is not null or undefined\n      if (tenant === null || tenant === undefined) {\n        throw new RequiredError(\n          \"tenant\",\n          \"Required parameter tenant was null or undefined when calling forkCollection.\",\n        );\n      }\n      // verify required parameter 'database' is not null or undefined\n      if (database === null || database === undefined) {\n        throw new RequiredError(\n          \"database\",\n          \"Required parameter database was null or undefined when calling forkCollection.\",\n        );\n      }\n      // verify required parameter 'collectionId' is not null or undefined\n      if (collectionId === null || collectionId === undefined) {\n        throw new RequiredError(\n          \"collectionId\",\n          \"Required parameter collectionId was null or undefined when calling forkCollection.\",\n        );\n      }\n      // verify required parameter 'request' is not null or undefined\n      if (request === null || request === undefined) {\n        throw new RequiredError(\n          \"request\",\n          \"Required parameter request was null or undefined when calling forkCollection.\",\n        );\n      }\n      let localVarPath =\n        `/api/v2/tenants/{tenant}/databases/{database}/collections/{collection_id}/fork`\n          .replace(\"{tenant}\", encodeURIComponent(String(tenant)))\n          .replace(\"{database}\", encodeURIComponent(String(database)))\n          .replace(\"{collection_id}\", encodeURIComponent(String(collectionId)));\n      const localVarPathQueryStart = localVarPath.indexOf(\"?\");\n      const localVarRequestOptions: RequestInit = Object.assign(\n        { method: \"POST\" },\n        options,\n      );\n      const localVarHeaderParameter: Headers = options.headers\n        ? new Headers(options.headers)\n        : new Headers();\n      const localVarQueryParameter = new URLSearchParams(\n        localVarPathQueryStart !== -1\n          ? localVarPath.substring(localVarPathQueryStart + 1)\n          : \"\",\n      );\n      if (localVarPathQueryStart !== -1) {\n        localVarPath = localVarPath.substring(0, localVarPathQueryStart);\n      }\n\n      localVarHeaderParameter.set(\"Content-Type\", \"application/json\");\n\n      localVarRequestOptions.headers = localVarHeaderParameter;\n\n      if (request !== undefined) {\n        localVarRequestOptions.body = JSON.stringify(request || {});\n      }\n\n      const localVarQueryParameterString = localVarQueryParameter.toString();\n      if (localVarQueryParameterString) {\n        localVarPath += \"?\" + localVarQueryParameterString;\n      }\n      return {\n        url: localVarPath,\n        options: localVarRequestOptions,\n      };\n    },\n    /**\n     * @summary Retrieves a collection by ID or name.\n     * @param {string} tenant <p>Tenant ID</p>\n     * @param {string} database <p>Database name</p>\n     * @param {string} collectionId <p>UUID of the collection</p>\n     * @param {RequestInit} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getCollection(\n      tenant: string,\n      database: string,\n      collectionId: string,\n      options: RequestInit = {},\n    ): FetchArgs {\n      // verify required parameter 'tenant' is not null or undefined\n      if (tenant === null || tenant === undefined) {\n        throw new RequiredError(\n          \"tenant\",\n          \"Required parameter tenant was null or undefined when calling getCollection.\",\n        );\n      }\n      // verify required parameter 'database' is not null or undefined\n      if (database === null || database === undefined) {\n        throw new RequiredError(\n          \"database\",\n          \"Required parameter database was null or undefined when calling getCollection.\",\n        );\n      }\n      // verify required parameter 'collectionId' is not null or undefined\n      if (collectionId === null || collectionId === undefined) {\n        throw new RequiredError(\n          \"collectionId\",\n          \"Required parameter collectionId was null or undefined when calling getCollection.\",\n        );\n      }\n      let localVarPath =\n        `/api/v2/tenants/{tenant}/databases/{database}/collections/{collection_id}`\n          .replace(\"{tenant}\", encodeURIComponent(String(tenant)))\n          .replace(\"{database}\", encodeURIComponent(String(database)))\n          .replace(\"{collection_id}\", encodeURIComponent(String(collectionId)));\n      const localVarPathQueryStart = localVarPath.indexOf(\"?\");\n      const localVarRequestOptions: RequestInit = Object.assign(\n        { method: \"GET\" },\n        options,\n      );\n      const localVarHeaderParameter: Headers = options.headers\n        ? new Headers(options.headers)\n        : new Headers();\n      const localVarQueryParameter = new URLSearchParams(\n        localVarPathQueryStart !== -1\n          ? localVarPath.substring(localVarPathQueryStart + 1)\n          : \"\",\n      );\n      if (localVarPathQueryStart !== -1) {\n        localVarPath = localVarPath.substring(0, localVarPathQueryStart);\n      }\n\n      localVarRequestOptions.headers = localVarHeaderParameter;\n\n      const localVarQueryParameterString = localVarQueryParameter.toString();\n      if (localVarQueryParameterString) {\n        localVarPath += \"?\" + localVarQueryParameterString;\n      }\n      return {\n        url: localVarPath,\n        options: localVarRequestOptions,\n      };\n    },\n    /**\n     * @summary Retrieves a specific database by name.\n     * @param {string} tenant <p>Tenant ID</p>\n     * @param {string} database <p>Name of the database to retrieve</p>\n     * @param {RequestInit} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getDatabase(\n      tenant: string,\n      database: string,\n      options: RequestInit = {},\n    ): FetchArgs {\n      // verify required parameter 'tenant' is not null or undefined\n      if (tenant === null || tenant === undefined) {\n        throw new RequiredError(\n          \"tenant\",\n          \"Required parameter tenant was null or undefined when calling getDatabase.\",\n        );\n      }\n      // verify required parameter 'database' is not null or undefined\n      if (database === null || database === undefined) {\n        throw new RequiredError(\n          \"database\",\n          \"Required parameter database was null or undefined when calling getDatabase.\",\n        );\n      }\n      let localVarPath = `/api/v2/tenants/{tenant}/databases/{database}`\n        .replace(\"{tenant}\", encodeURIComponent(String(tenant)))\n        .replace(\"{database}\", encodeURIComponent(String(database)));\n      const localVarPathQueryStart = localVarPath.indexOf(\"?\");\n      const localVarRequestOptions: RequestInit = Object.assign(\n        { method: \"GET\" },\n        options,\n      );\n      const localVarHeaderParameter: Headers = options.headers\n        ? new Headers(options.headers)\n        : new Headers();\n      const localVarQueryParameter = new URLSearchParams(\n        localVarPathQueryStart !== -1\n          ? localVarPath.substring(localVarPathQueryStart + 1)\n          : \"\",\n      );\n      if (localVarPathQueryStart !== -1) {\n        localVarPath = localVarPath.substring(0, localVarPathQueryStart);\n      }\n\n      localVarRequestOptions.headers = localVarHeaderParameter;\n\n      const localVarQueryParameterString = localVarQueryParameter.toString();\n      if (localVarQueryParameterString) {\n        localVarPath += \"?\" + localVarQueryParameterString;\n      }\n      return {\n        url: localVarPath,\n        options: localVarRequestOptions,\n      };\n    },\n    /**\n     * @summary Returns an existing tenant by name.\n     * @param {string} tenantName <p>Tenant name or ID to retrieve</p>\n     * @param {RequestInit} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getTenant(tenantName: string, options: RequestInit = {}): FetchArgs {\n      // verify required parameter 'tenantName' is not null or undefined\n      if (tenantName === null || tenantName === undefined) {\n        throw new RequiredError(\n          \"tenantName\",\n          \"Required parameter tenantName was null or undefined when calling getTenant.\",\n        );\n      }\n      let localVarPath = `/api/v2/tenants/{tenant_name}`.replace(\n        \"{tenant_name}\",\n        encodeURIComponent(String(tenantName)),\n      );\n      const localVarPathQueryStart = localVarPath.indexOf(\"?\");\n      const localVarRequestOptions: RequestInit = Object.assign(\n        { method: \"GET\" },\n        options,\n      );\n      const localVarHeaderParameter: Headers = options.headers\n        ? new Headers(options.headers)\n        : new Headers();\n      const localVarQueryParameter = new URLSearchParams(\n        localVarPathQueryStart !== -1\n          ? localVarPath.substring(localVarPathQueryStart + 1)\n          : \"\",\n      );\n      if (localVarPathQueryStart !== -1) {\n        localVarPath = localVarPath.substring(0, localVarPathQueryStart);\n      }\n\n      localVarRequestOptions.headers = localVarHeaderParameter;\n\n      const localVarQueryParameterString = localVarQueryParameter.toString();\n      if (localVarQueryParameterString) {\n        localVarPath += \"?\" + localVarQueryParameterString;\n      }\n      return {\n        url: localVarPath,\n        options: localVarRequestOptions,\n      };\n    },\n    /**\n     * @summary Retrieves the current user's identity, tenant, and databases.\n     * @param {RequestInit} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getUserIdentity(options: RequestInit = {}): FetchArgs {\n      let localVarPath = `/api/v2/auth/identity`;\n      const localVarPathQueryStart = localVarPath.indexOf(\"?\");\n      const localVarRequestOptions: RequestInit = Object.assign(\n        { method: \"GET\" },\n        options,\n      );\n      const localVarHeaderParameter: Headers = options.headers\n        ? new Headers(options.headers)\n        : new Headers();\n      const localVarQueryParameter = new URLSearchParams(\n        localVarPathQueryStart !== -1\n          ? localVarPath.substring(localVarPathQueryStart + 1)\n          : \"\",\n      );\n      if (localVarPathQueryStart !== -1) {\n        localVarPath = localVarPath.substring(0, localVarPathQueryStart);\n      }\n\n      localVarRequestOptions.headers = localVarHeaderParameter;\n\n      const localVarQueryParameterString = localVarQueryParameter.toString();\n      if (localVarQueryParameterString) {\n        localVarPath += \"?\" + localVarQueryParameterString;\n      }\n      return {\n        url: localVarPath,\n        options: localVarRequestOptions,\n      };\n    },\n    /**\n     * @summary Health check endpoint that returns 200 if the server and executor are ready\n     * @param {RequestInit} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    healthcheck(options: RequestInit = {}): FetchArgs {\n      let localVarPath = `/api/v2/healthcheck`;\n      const localVarPathQueryStart = localVarPath.indexOf(\"?\");\n      const localVarRequestOptions: RequestInit = Object.assign(\n        { method: \"GET\" },\n        options,\n      );\n      const localVarHeaderParameter: Headers = options.headers\n        ? new Headers(options.headers)\n        : new Headers();\n      const localVarQueryParameter = new URLSearchParams(\n        localVarPathQueryStart !== -1\n          ? localVarPath.substring(localVarPathQueryStart + 1)\n          : \"\",\n      );\n      if (localVarPathQueryStart !== -1) {\n        localVarPath = localVarPath.substring(0, localVarPathQueryStart);\n      }\n\n      localVarRequestOptions.headers = localVarHeaderParameter;\n\n      const localVarQueryParameterString = localVarQueryParameter.toString();\n      if (localVarQueryParameterString) {\n        localVarPath += \"?\" + localVarQueryParameterString;\n      }\n      return {\n        url: localVarPath,\n        options: localVarRequestOptions,\n      };\n    },\n    /**\n     * @summary Heartbeat endpoint that returns a nanosecond timestamp of the current time.\n     * @param {RequestInit} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    heartbeat(options: RequestInit = {}): FetchArgs {\n      let localVarPath = `/api/v2/heartbeat`;\n      const localVarPathQueryStart = localVarPath.indexOf(\"?\");\n      const localVarRequestOptions: RequestInit = Object.assign(\n        { method: \"GET\" },\n        options,\n      );\n      const localVarHeaderParameter: Headers = options.headers\n        ? new Headers(options.headers)\n        : new Headers();\n      const localVarQueryParameter = new URLSearchParams(\n        localVarPathQueryStart !== -1\n          ? localVarPath.substring(localVarPathQueryStart + 1)\n          : \"\",\n      );\n      if (localVarPathQueryStart !== -1) {\n        localVarPath = localVarPath.substring(0, localVarPathQueryStart);\n      }\n\n      localVarRequestOptions.headers = localVarHeaderParameter;\n\n      const localVarQueryParameterString = localVarQueryParameter.toString();\n      if (localVarQueryParameterString) {\n        localVarPath += \"?\" + localVarQueryParameterString;\n      }\n      return {\n        url: localVarPath,\n        options: localVarRequestOptions,\n      };\n    },\n    /**\n     * @summary Lists all collections in the specified database.\n     * @param {string} tenant <p>Tenant ID</p>\n     * @param {string} database <p>Database name to list collections from</p>\n     * @param {number} [limit] <p>Limit for pagination</p>\n     * @param {number} [offset] <p>Offset for pagination</p>\n     * @param {RequestInit} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    listCollections(\n      tenant: string,\n      database: string,\n      limit: number | undefined,\n      offset: number | undefined,\n      options: RequestInit = {},\n    ): FetchArgs {\n      // verify required parameter 'tenant' is not null or undefined\n      if (tenant === null || tenant === undefined) {\n        throw new RequiredError(\n          \"tenant\",\n          \"Required parameter tenant was null or undefined when calling listCollections.\",\n        );\n      }\n      // verify required parameter 'database' is not null or undefined\n      if (database === null || database === undefined) {\n        throw new RequiredError(\n          \"database\",\n          \"Required parameter database was null or undefined when calling listCollections.\",\n        );\n      }\n      let localVarPath =\n        `/api/v2/tenants/{tenant}/databases/{database}/collections`\n          .replace(\"{tenant}\", encodeURIComponent(String(tenant)))\n          .replace(\"{database}\", encodeURIComponent(String(database)));\n      const localVarPathQueryStart = localVarPath.indexOf(\"?\");\n      const localVarRequestOptions: RequestInit = Object.assign(\n        { method: \"GET\" },\n        options,\n      );\n      const localVarHeaderParameter: Headers = options.headers\n        ? new Headers(options.headers)\n        : new Headers();\n      const localVarQueryParameter = new URLSearchParams(\n        localVarPathQueryStart !== -1\n          ? localVarPath.substring(localVarPathQueryStart + 1)\n          : \"\",\n      );\n      if (localVarPathQueryStart !== -1) {\n        localVarPath = localVarPath.substring(0, localVarPathQueryStart);\n      }\n\n      if (limit !== undefined) {\n        localVarQueryParameter.append(\"limit\", String(limit));\n      }\n\n      if (offset !== undefined) {\n        localVarQueryParameter.append(\"offset\", String(offset));\n      }\n\n      localVarRequestOptions.headers = localVarHeaderParameter;\n\n      const localVarQueryParameterString = localVarQueryParameter.toString();\n      if (localVarQueryParameterString) {\n        localVarPath += \"?\" + localVarQueryParameterString;\n      }\n      return {\n        url: localVarPath,\n        options: localVarRequestOptions,\n      };\n    },\n    /**\n     * @summary Lists all databases for a given tenant.\n     * @param {string} tenant <p>Tenant ID to list databases for</p>\n     * @param {number} [limit] <p>Limit for pagination</p>\n     * @param {number} [offset] <p>Offset for pagination</p>\n     * @param {RequestInit} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    listDatabases(\n      tenant: string,\n      limit: number | undefined,\n      offset: number | undefined,\n      options: RequestInit = {},\n    ): FetchArgs {\n      // verify required parameter 'tenant' is not null or undefined\n      if (tenant === null || tenant === undefined) {\n        throw new RequiredError(\n          \"tenant\",\n          \"Required parameter tenant was null or undefined when calling listDatabases.\",\n        );\n      }\n      let localVarPath = `/api/v2/tenants/{tenant}/databases`.replace(\n        \"{tenant}\",\n        encodeURIComponent(String(tenant)),\n      );\n      const localVarPathQueryStart = localVarPath.indexOf(\"?\");\n      const localVarRequestOptions: RequestInit = Object.assign(\n        { method: \"GET\" },\n        options,\n      );\n      const localVarHeaderParameter: Headers = options.headers\n        ? new Headers(options.headers)\n        : new Headers();\n      const localVarQueryParameter = new URLSearchParams(\n        localVarPathQueryStart !== -1\n          ? localVarPath.substring(localVarPathQueryStart + 1)\n          : \"\",\n      );\n      if (localVarPathQueryStart !== -1) {\n        localVarPath = localVarPath.substring(0, localVarPathQueryStart);\n      }\n\n      if (limit !== undefined) {\n        localVarQueryParameter.append(\"limit\", String(limit));\n      }\n\n      if (offset !== undefined) {\n        localVarQueryParameter.append(\"offset\", String(offset));\n      }\n\n      localVarRequestOptions.headers = localVarHeaderParameter;\n\n      const localVarQueryParameterString = localVarQueryParameter.toString();\n      if (localVarQueryParameterString) {\n        localVarPath += \"?\" + localVarQueryParameterString;\n      }\n      return {\n        url: localVarPath,\n        options: localVarRequestOptions,\n      };\n    },\n    /**\n     * @summary Pre-flight checks endpoint reporting basic readiness info.\n     * @param {RequestInit} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    preFlightChecks(options: RequestInit = {}): FetchArgs {\n      let localVarPath = `/api/v2/pre-flight-checks`;\n      const localVarPathQueryStart = localVarPath.indexOf(\"?\");\n      const localVarRequestOptions: RequestInit = Object.assign(\n        { method: \"GET\" },\n        options,\n      );\n      const localVarHeaderParameter: Headers = options.headers\n        ? new Headers(options.headers)\n        : new Headers();\n      const localVarQueryParameter = new URLSearchParams(\n        localVarPathQueryStart !== -1\n          ? localVarPath.substring(localVarPathQueryStart + 1)\n          : \"\",\n      );\n      if (localVarPathQueryStart !== -1) {\n        localVarPath = localVarPath.substring(0, localVarPathQueryStart);\n      }\n\n      localVarRequestOptions.headers = localVarHeaderParameter;\n\n      const localVarQueryParameterString = localVarQueryParameter.toString();\n      if (localVarQueryParameterString) {\n        localVarPath += \"?\" + localVarQueryParameterString;\n      }\n      return {\n        url: localVarPath,\n        options: localVarRequestOptions,\n      };\n    },\n    /**\n     * @summary Reset endpoint allowing authorized users to reset the database.\n     * @param {RequestInit} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    reset(options: RequestInit = {}): FetchArgs {\n      let localVarPath = `/api/v2/reset`;\n      const localVarPathQueryStart = localVarPath.indexOf(\"?\");\n      const localVarRequestOptions: RequestInit = Object.assign(\n        { method: \"POST\" },\n        options,\n      );\n      const localVarHeaderParameter: Headers = options.headers\n        ? new Headers(options.headers)\n        : new Headers();\n      const localVarQueryParameter = new URLSearchParams(\n        localVarPathQueryStart !== -1\n          ? localVarPath.substring(localVarPathQueryStart + 1)\n          : \"\",\n      );\n      if (localVarPathQueryStart !== -1) {\n        localVarPath = localVarPath.substring(0, localVarPathQueryStart);\n      }\n\n      localVarRequestOptions.headers = localVarHeaderParameter;\n\n      const localVarQueryParameterString = localVarQueryParameter.toString();\n      if (localVarQueryParameterString) {\n        localVarPath += \"?\" + localVarQueryParameterString;\n      }\n      return {\n        url: localVarPath,\n        options: localVarRequestOptions,\n      };\n    },\n    /**\n     * @summary Updates an existing collection's name or metadata.\n     * @param {string} tenant <p>Tenant ID</p>\n     * @param {string} database <p>Database name</p>\n     * @param {string} collectionId <p>UUID of the collection to update</p>\n     * @param {Api.UpdateCollectionPayload} request\n     * @param {RequestInit} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    updateCollection(\n      tenant: string,\n      database: string,\n      collectionId: string,\n      request: Api.UpdateCollectionPayload,\n      options: RequestInit = {},\n    ): FetchArgs {\n      // verify required parameter 'tenant' is not null or undefined\n      if (tenant === null || tenant === undefined) {\n        throw new RequiredError(\n          \"tenant\",\n          \"Required parameter tenant was null or undefined when calling updateCollection.\",\n        );\n      }\n      // verify required parameter 'database' is not null or undefined\n      if (database === null || database === undefined) {\n        throw new RequiredError(\n          \"database\",\n          \"Required parameter database was null or undefined when calling updateCollection.\",\n        );\n      }\n      // verify required parameter 'collectionId' is not null or undefined\n      if (collectionId === null || collectionId === undefined) {\n        throw new RequiredError(\n          \"collectionId\",\n          \"Required parameter collectionId was null or undefined when calling updateCollection.\",\n        );\n      }\n      // verify required parameter 'request' is not null or undefined\n      if (request === null || request === undefined) {\n        throw new RequiredError(\n          \"request\",\n          \"Required parameter request was null or undefined when calling updateCollection.\",\n        );\n      }\n      let localVarPath =\n        `/api/v2/tenants/{tenant}/databases/{database}/collections/{collection_id}`\n          .replace(\"{tenant}\", encodeURIComponent(String(tenant)))\n          .replace(\"{database}\", encodeURIComponent(String(database)))\n          .replace(\"{collection_id}\", encodeURIComponent(String(collectionId)));\n      const localVarPathQueryStart = localVarPath.indexOf(\"?\");\n      const localVarRequestOptions: RequestInit = Object.assign(\n        { method: \"PUT\" },\n        options,\n      );\n      const localVarHeaderParameter: Headers = options.headers\n        ? new Headers(options.headers)\n        : new Headers();\n      const localVarQueryParameter = new URLSearchParams(\n        localVarPathQueryStart !== -1\n          ? localVarPath.substring(localVarPathQueryStart + 1)\n          : \"\",\n      );\n      if (localVarPathQueryStart !== -1) {\n        localVarPath = localVarPath.substring(0, localVarPathQueryStart);\n      }\n\n      localVarHeaderParameter.set(\"Content-Type\", \"application/json\");\n\n      localVarRequestOptions.headers = localVarHeaderParameter;\n\n      if (request !== undefined) {\n        localVarRequestOptions.body = JSON.stringify(request || {});\n      }\n\n      const localVarQueryParameterString = localVarQueryParameter.toString();\n      if (localVarQueryParameterString) {\n        localVarPath += \"?\" + localVarQueryParameterString;\n      }\n      return {\n        url: localVarPath,\n        options: localVarRequestOptions,\n      };\n    },\n    /**\n     * @summary Returns the version of the server.\n     * @param {RequestInit} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    version(options: RequestInit = {}): FetchArgs {\n      let localVarPath = `/api/v2/version`;\n      const localVarPathQueryStart = localVarPath.indexOf(\"?\");\n      const localVarRequestOptions: RequestInit = Object.assign(\n        { method: \"GET\" },\n        options,\n      );\n      const localVarHeaderParameter: Headers = options.headers\n        ? new Headers(options.headers)\n        : new Headers();\n      const localVarQueryParameter = new URLSearchParams(\n        localVarPathQueryStart !== -1\n          ? localVarPath.substring(localVarPathQueryStart + 1)\n          : \"\",\n      );\n      if (localVarPathQueryStart !== -1) {\n        localVarPath = localVarPath.substring(0, localVarPathQueryStart);\n      }\n\n      localVarRequestOptions.headers = localVarHeaderParameter;\n\n      const localVarQueryParameterString = localVarQueryParameter.toString();\n      if (localVarQueryParameterString) {\n        localVarPath += \"?\" + localVarQueryParameterString;\n      }\n      return {\n        url: localVarPath,\n        options: localVarRequestOptions,\n      };\n    },\n  };\n};\n\n/**\n * ApiApi - functional programming interface\n * @export\n */\nexport const ApiApiFp = function (configuration?: Configuration) {\n  return {\n    /**\n     * @summary Adds records to a collection.\n     * @param {string} tenant\n     * @param {string} database\n     * @param {string} collectionId\n     * @param {Api.AddCollectionRecordsPayload} request\n     * @param {RequestInit} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    collectionAdd(\n      tenant: string,\n      database: string,\n      collectionId: string,\n      request: Api.AddCollectionRecordsPayload,\n      options?: RequestInit,\n    ): (\n      fetch?: FetchAPI,\n      basePath?: string,\n    ) => Promise<Api.AddCollectionRecordsResponse> {\n      const localVarFetchArgs = ApiApiFetchParamCreator(\n        configuration,\n      ).collectionAdd(tenant, database, collectionId, request, options);\n      return (fetch: FetchAPI = defaultFetch, basePath: string = BASE_PATH) => {\n        return fetch(\n          basePath + localVarFetchArgs.url,\n          localVarFetchArgs.options,\n        ).then((response) => {\n          const contentType = response.headers.get(\"Content-Type\");\n          const mimeType = contentType\n            ? contentType.replace(/;.*/, \"\")\n            : undefined;\n\n          if (response.status === 201) {\n            if (mimeType === \"application/json\") {\n              return response.json() as any;\n            }\n            throw response;\n          }\n          if (response.status === 400) {\n            return response;\n          }\n          throw response;\n        });\n      };\n    },\n    /**\n     * @summary Retrieves the number of records in a collection.\n     * @param {string} tenant <p>Tenant ID for the collection</p>\n     * @param {string} database <p>Database containing this collection</p>\n     * @param {string} collectionId <p>Collection ID whose records are counted</p>\n     * @param {RequestInit} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    collectionCount(\n      tenant: string,\n      database: string,\n      collectionId: string,\n      options?: RequestInit,\n    ): (fetch?: FetchAPI, basePath?: string) => Promise<number> {\n      const localVarFetchArgs = ApiApiFetchParamCreator(\n        configuration,\n      ).collectionCount(tenant, database, collectionId, options);\n      return (fetch: FetchAPI = defaultFetch, basePath: string = BASE_PATH) => {\n        return fetch(\n          basePath + localVarFetchArgs.url,\n          localVarFetchArgs.options,\n        ).then((response) => {\n          const contentType = response.headers.get(\"Content-Type\");\n          const mimeType = contentType\n            ? contentType.replace(/;.*/, \"\")\n            : undefined;\n\n          if (response.status === 200) {\n            if (mimeType === \"application/json\") {\n              return response.json() as any;\n            }\n            throw response;\n          }\n          if (response.status === 401) {\n            if (mimeType === \"application/json\") {\n              throw response;\n            }\n            throw response;\n          }\n          if (response.status === 404) {\n            if (mimeType === \"application/json\") {\n              throw response;\n            }\n            throw response;\n          }\n          if (response.status === 500) {\n            if (mimeType === \"application/json\") {\n              throw response;\n            }\n            throw response;\n          }\n          throw response;\n        });\n      };\n    },\n    /**\n     * @summary Deletes records in a collection. Can filter by IDs or metadata.\n     * @param {string} tenant <p>Tenant ID</p>\n     * @param {string} database <p>Database name</p>\n     * @param {string} collectionId <p>Collection ID</p>\n     * @param {Api.DeleteCollectionRecordsPayload} request\n     * @param {RequestInit} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    collectionDelete(\n      tenant: string,\n      database: string,\n      collectionId: string,\n      request: Api.DeleteCollectionRecordsPayload,\n      options?: RequestInit,\n    ): (\n      fetch?: FetchAPI,\n      basePath?: string,\n    ) => Promise<Api.DeleteCollectionRecordsResponse> {\n      const localVarFetchArgs = ApiApiFetchParamCreator(\n        configuration,\n      ).collectionDelete(tenant, database, collectionId, request, options);\n      return (fetch: FetchAPI = defaultFetch, basePath: string = BASE_PATH) => {\n        return fetch(\n          basePath + localVarFetchArgs.url,\n          localVarFetchArgs.options,\n        ).then((response) => {\n          const contentType = response.headers.get(\"Content-Type\");\n          const mimeType = contentType\n            ? contentType.replace(/;.*/, \"\")\n            : undefined;\n\n          if (response.status === 200) {\n            if (mimeType === \"application/json\") {\n              return response.json() as any;\n            }\n            throw response;\n          }\n          if (response.status === 401) {\n            if (mimeType === \"application/json\") {\n              throw response;\n            }\n            throw response;\n          }\n          if (response.status === 404) {\n            if (mimeType === \"application/json\") {\n              throw response;\n            }\n            throw response;\n          }\n          if (response.status === 500) {\n            if (mimeType === \"application/json\") {\n              throw response;\n            }\n            throw response;\n          }\n          throw response;\n        });\n      };\n    },\n    /**\n     * @summary Retrieves records from a collection by ID or metadata filter.\n     * @param {string} tenant <p>Tenant ID</p>\n     * @param {string} database <p>Database name for the collection</p>\n     * @param {string} collectionId <p>Collection ID to fetch records from</p>\n     * @param {Api.GetRequestPayload} request\n     * @param {RequestInit} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    collectionGet(\n      tenant: string,\n      database: string,\n      collectionId: string,\n      request: Api.GetRequestPayload,\n      options?: RequestInit,\n    ): (fetch?: FetchAPI, basePath?: string) => Promise<Api.GetResponse> {\n      const localVarFetchArgs = ApiApiFetchParamCreator(\n        configuration,\n      ).collectionGet(tenant, database, collectionId, request, options);\n      return (fetch: FetchAPI = defaultFetch, basePath: string = BASE_PATH) => {\n        return fetch(\n          basePath + localVarFetchArgs.url,\n          localVarFetchArgs.options,\n        ).then((response) => {\n          const contentType = response.headers.get(\"Content-Type\");\n          const mimeType = contentType\n            ? contentType.replace(/;.*/, \"\")\n            : undefined;\n\n          if (response.status === 200) {\n            if (mimeType === \"application/json\") {\n              return response.json() as any;\n            }\n            throw response;\n          }\n          if (response.status === 401) {\n            if (mimeType === \"application/json\") {\n              throw response;\n            }\n            throw response;\n          }\n          if (response.status === 404) {\n            if (mimeType === \"application/json\") {\n              throw response;\n            }\n            throw response;\n          }\n          if (response.status === 500) {\n            if (mimeType === \"application/json\") {\n              throw response;\n            }\n            throw response;\n          }\n          throw response;\n        });\n      };\n    },\n    /**\n     * @summary Query a collection in a variety of ways, including vector search, metadata filtering, and full-text search\n     * @param {string} tenant <p>Tenant ID</p>\n     * @param {string} database <p>Database name containing the collection</p>\n     * @param {string} collectionId <p>Collection ID to query</p>\n     * @param {number} [limit] <p>Limit for pagination</p>\n     * @param {number} [offset] <p>Offset for pagination</p>\n     * @param {Api.QueryRequestPayload} request\n     * @param {RequestInit} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    collectionQuery(\n      tenant: string,\n      database: string,\n      collectionId: string,\n      limit: number | undefined,\n      offset: number | undefined,\n      request: Api.QueryRequestPayload,\n      options?: RequestInit,\n    ): (fetch?: FetchAPI, basePath?: string) => Promise<Api.QueryResponse> {\n      const localVarFetchArgs = ApiApiFetchParamCreator(\n        configuration,\n      ).collectionQuery(\n        tenant,\n        database,\n        collectionId,\n        limit,\n        offset,\n        request,\n        options,\n      );\n      return (fetch: FetchAPI = defaultFetch, basePath: string = BASE_PATH) => {\n        return fetch(\n          basePath + localVarFetchArgs.url,\n          localVarFetchArgs.options,\n        ).then((response) => {\n          const contentType = response.headers.get(\"Content-Type\");\n          const mimeType = contentType\n            ? contentType.replace(/;.*/, \"\")\n            : undefined;\n\n          if (response.status === 200) {\n            if (mimeType === \"application/json\") {\n              return response.json() as any;\n            }\n            throw response;\n          }\n          if (response.status === 401) {\n            if (mimeType === \"application/json\") {\n              throw response;\n            }\n            throw response;\n          }\n          if (response.status === 404) {\n            if (mimeType === \"application/json\") {\n              throw response;\n            }\n            throw response;\n          }\n          if (response.status === 500) {\n            if (mimeType === \"application/json\") {\n              throw response;\n            }\n            throw response;\n          }\n          throw response;\n        });\n      };\n    },\n    /**\n     * @summary Updates records in a collection by ID.\n     * @param {string} tenant\n     * @param {string} database\n     * @param {string} collectionId\n     * @param {Api.UpdateCollectionRecordsPayload} request\n     * @param {RequestInit} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    collectionUpdate(\n      tenant: string,\n      database: string,\n      collectionId: string,\n      request: Api.UpdateCollectionRecordsPayload,\n      options?: RequestInit,\n    ): (\n      fetch?: FetchAPI,\n      basePath?: string,\n    ) => Promise<Api.UpdateCollectionRecordsResponse> {\n      const localVarFetchArgs = ApiApiFetchParamCreator(\n        configuration,\n      ).collectionUpdate(tenant, database, collectionId, request, options);\n      return (fetch: FetchAPI = defaultFetch, basePath: string = BASE_PATH) => {\n        return fetch(\n          basePath + localVarFetchArgs.url,\n          localVarFetchArgs.options,\n        ).then((response) => {\n          const contentType = response.headers.get(\"Content-Type\");\n          const mimeType = contentType\n            ? contentType.replace(/;.*/, \"\")\n            : undefined;\n\n          if (response.status === 200) {\n            if (mimeType === \"application/json\") {\n              return response.json() as any;\n            }\n            throw response;\n          }\n          if (response.status === 404) {\n            return response;\n          }\n          throw response;\n        });\n      };\n    },\n    /**\n     * @summary Upserts records in a collection (create if not exists, otherwise update).\n     * @param {string} tenant <p>Tenant ID</p>\n     * @param {string} database <p>Database name</p>\n     * @param {string} collectionId <p>Collection ID</p>\n     * @param {Api.UpsertCollectionRecordsPayload} request\n     * @param {RequestInit} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    collectionUpsert(\n      tenant: string,\n      database: string,\n      collectionId: string,\n      request: Api.UpsertCollectionRecordsPayload,\n      options?: RequestInit,\n    ): (\n      fetch?: FetchAPI,\n      basePath?: string,\n    ) => Promise<Api.UpsertCollectionRecordsResponse> {\n      const localVarFetchArgs = ApiApiFetchParamCreator(\n        configuration,\n      ).collectionUpsert(tenant, database, collectionId, request, options);\n      return (fetch: FetchAPI = defaultFetch, basePath: string = BASE_PATH) => {\n        return fetch(\n          basePath + localVarFetchArgs.url,\n          localVarFetchArgs.options,\n        ).then((response) => {\n          const contentType = response.headers.get(\"Content-Type\");\n          const mimeType = contentType\n            ? contentType.replace(/;.*/, \"\")\n            : undefined;\n\n          if (response.status === 200) {\n            if (mimeType === \"application/json\") {\n              return response.json() as any;\n            }\n            throw response;\n          }\n          if (response.status === 401) {\n            if (mimeType === \"application/json\") {\n              throw response;\n            }\n            throw response;\n          }\n          if (response.status === 404) {\n            if (mimeType === \"application/json\") {\n              throw response;\n            }\n            throw response;\n          }\n          if (response.status === 500) {\n            if (mimeType === \"application/json\") {\n              throw response;\n            }\n            throw response;\n          }\n          throw response;\n        });\n      };\n    },\n    /**\n     * @summary Retrieves the total number of collections in a given database.\n     * @param {string} tenant <p>Tenant ID</p>\n     * @param {string} database <p>Database name to count collections from</p>\n     * @param {RequestInit} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    countCollections(\n      tenant: string,\n      database: string,\n      options?: RequestInit,\n    ): (fetch?: FetchAPI, basePath?: string) => Promise<number> {\n      const localVarFetchArgs = ApiApiFetchParamCreator(\n        configuration,\n      ).countCollections(tenant, database, options);\n      return (fetch: FetchAPI = defaultFetch, basePath: string = BASE_PATH) => {\n        return fetch(\n          basePath + localVarFetchArgs.url,\n          localVarFetchArgs.options,\n        ).then((response) => {\n          const contentType = response.headers.get(\"Content-Type\");\n          const mimeType = contentType\n            ? contentType.replace(/;.*/, \"\")\n            : undefined;\n\n          if (response.status === 200) {\n            if (mimeType === \"application/json\") {\n              return response.json() as any;\n            }\n            throw response;\n          }\n          if (response.status === 401) {\n            if (mimeType === \"application/json\") {\n              throw response;\n            }\n            throw response;\n          }\n          if (response.status === 500) {\n            if (mimeType === \"application/json\") {\n              throw response;\n            }\n            throw response;\n          }\n          throw response;\n        });\n      };\n    },\n    /**\n     * @summary Creates a new collection under the specified database.\n     * @param {string} tenant <p>Tenant ID</p>\n     * @param {string} database <p>Database name containing the new collection</p>\n     * @param {Api.CreateCollectionPayload} request\n     * @param {RequestInit} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    createCollection(\n      tenant: string,\n      database: string,\n      request: Api.CreateCollectionPayload,\n      options?: RequestInit,\n    ): (fetch?: FetchAPI, basePath?: string) => Promise<Api.Collection> {\n      const localVarFetchArgs = ApiApiFetchParamCreator(\n        configuration,\n      ).createCollection(tenant, database, request, options);\n      return (fetch: FetchAPI = defaultFetch, basePath: string = BASE_PATH) => {\n        return fetch(\n          basePath + localVarFetchArgs.url,\n          localVarFetchArgs.options,\n        ).then((response) => {\n          const contentType = response.headers.get(\"Content-Type\");\n          const mimeType = contentType\n            ? contentType.replace(/;.*/, \"\")\n            : undefined;\n\n          if (response.status === 200) {\n            if (mimeType === \"application/json\") {\n              return response.json() as any;\n            }\n            throw response;\n          }\n          if (response.status === 401) {\n            if (mimeType === \"application/json\") {\n              throw response;\n            }\n            throw response;\n          }\n          if (response.status === 500) {\n            if (mimeType === \"application/json\") {\n              throw response;\n            }\n            throw response;\n          }\n          throw response;\n        });\n      };\n    },\n    /**\n     * @summary Creates a new database for a given tenant.\n     * @param {string} tenant <p>Tenant ID to associate with the new database</p>\n     * @param {Api.CreateDatabasePayload} request\n     * @param {RequestInit} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    createDatabase(\n      tenant: string,\n      request: Api.CreateDatabasePayload,\n      options?: RequestInit,\n    ): (\n      fetch?: FetchAPI,\n      basePath?: string,\n    ) => Promise<Api.CreateDatabaseResponse> {\n      const localVarFetchArgs = ApiApiFetchParamCreator(\n        configuration,\n      ).createDatabase(tenant, request, options);\n      return (fetch: FetchAPI = defaultFetch, basePath: string = BASE_PATH) => {\n        return fetch(\n          basePath + localVarFetchArgs.url,\n          localVarFetchArgs.options,\n        ).then((response) => {\n          const contentType = response.headers.get(\"Content-Type\");\n          const mimeType = contentType\n            ? contentType.replace(/;.*/, \"\")\n            : undefined;\n\n          if (response.status === 200) {\n            if (mimeType === \"application/json\") {\n              return response.json() as any;\n            }\n            throw response;\n          }\n          if (response.status === 401) {\n            if (mimeType === \"application/json\") {\n              throw response;\n            }\n            throw response;\n          }\n          if (response.status === 500) {\n            if (mimeType === \"application/json\") {\n              throw response;\n            }\n            throw response;\n          }\n          throw response;\n        });\n      };\n    },\n    /**\n     * @summary Creates a new tenant.\n     * @param {Api.CreateTenantPayload} request\n     * @param {RequestInit} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    createTenant(\n      request: Api.CreateTenantPayload,\n      options?: RequestInit,\n    ): (\n      fetch?: FetchAPI,\n      basePath?: string,\n    ) => Promise<Api.CreateTenantResponse> {\n      const localVarFetchArgs = ApiApiFetchParamCreator(\n        configuration,\n      ).createTenant(request, options);\n      return (fetch: FetchAPI = defaultFetch, basePath: string = BASE_PATH) => {\n        return fetch(\n          basePath + localVarFetchArgs.url,\n          localVarFetchArgs.options,\n        ).then((response) => {\n          const contentType = response.headers.get(\"Content-Type\");\n          const mimeType = contentType\n            ? contentType.replace(/;.*/, \"\")\n            : undefined;\n\n          if (response.status === 200) {\n            if (mimeType === \"application/json\") {\n              return response.json() as any;\n            }\n            throw response;\n          }\n          if (response.status === 401) {\n            if (mimeType === \"application/json\") {\n              throw response;\n            }\n            throw response;\n          }\n          if (response.status === 500) {\n            if (mimeType === \"application/json\") {\n              throw response;\n            }\n            throw response;\n          }\n          throw response;\n        });\n      };\n    },\n    /**\n     * @summary Deletes a collection in a given database.\n     * @param {string} tenant <p>Tenant ID</p>\n     * @param {string} database <p>Database name</p>\n     * @param {string} collectionId <p>UUID of the collection to delete</p>\n     * @param {RequestInit} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    deleteCollection(\n      tenant: string,\n      database: string,\n      collectionId: string,\n      options?: RequestInit,\n    ): (\n      fetch?: FetchAPI,\n      basePath?: string,\n    ) => Promise<Api.UpdateCollectionResponse> {\n      const localVarFetchArgs = ApiApiFetchParamCreator(\n        configuration,\n      ).deleteCollection(tenant, database, collectionId, options);\n      return (fetch: FetchAPI = defaultFetch, basePath: string = BASE_PATH) => {\n        return fetch(\n          basePath + localVarFetchArgs.url,\n          localVarFetchArgs.options,\n        ).then((response) => {\n          const contentType = response.headers.get(\"Content-Type\");\n          const mimeType = contentType\n            ? contentType.replace(/;.*/, \"\")\n            : undefined;\n\n          if (response.status === 200) {\n            if (mimeType === \"application/json\") {\n              return response.json() as any;\n            }\n            throw response;\n          }\n          if (response.status === 401) {\n            if (mimeType === \"application/json\") {\n              throw response;\n            }\n            throw response;\n          }\n          if (response.status === 404) {\n            if (mimeType === \"application/json\") {\n              throw response;\n            }\n            throw response;\n          }\n          if (response.status === 500) {\n            if (mimeType === \"application/json\") {\n              throw response;\n            }\n            throw response;\n          }\n          throw response;\n        });\n      };\n    },\n    /**\n     * @summary Deletes a specific database.\n     * @param {string} tenant <p>Tenant ID</p>\n     * @param {string} database <p>Name of the database to delete</p>\n     * @param {RequestInit} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    deleteDatabase(\n      tenant: string,\n      database: string,\n      options?: RequestInit,\n    ): (\n      fetch?: FetchAPI,\n      basePath?: string,\n    ) => Promise<Api.DeleteDatabaseResponse> {\n      const localVarFetchArgs = ApiApiFetchParamCreator(\n        configuration,\n      ).deleteDatabase(tenant, database, options);\n      return (fetch: FetchAPI = defaultFetch, basePath: string = BASE_PATH) => {\n        return fetch(\n          basePath + localVarFetchArgs.url,\n          localVarFetchArgs.options,\n        ).then((response) => {\n          const contentType = response.headers.get(\"Content-Type\");\n          const mimeType = contentType\n            ? contentType.replace(/;.*/, \"\")\n            : undefined;\n\n          if (response.status === 200) {\n            if (mimeType === \"application/json\") {\n              return response.json() as any;\n            }\n            throw response;\n          }\n          if (response.status === 401) {\n            if (mimeType === \"application/json\") {\n              throw response;\n            }\n            throw response;\n          }\n          if (response.status === 404) {\n            if (mimeType === \"application/json\") {\n              throw response;\n            }\n            throw response;\n          }\n          if (response.status === 500) {\n            if (mimeType === \"application/json\") {\n              throw response;\n            }\n            throw response;\n          }\n          throw response;\n        });\n      };\n    },\n    /**\n     * @summary Forks an existing collection.\n     * @param {string} tenant <p>Tenant ID</p>\n     * @param {string} database <p>Database name</p>\n     * @param {string} collectionId <p>UUID of the collection to update</p>\n     * @param {Api.ForkCollectionPayload} request\n     * @param {RequestInit} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    forkCollection(\n      tenant: string,\n      database: string,\n      collectionId: string,\n      request: Api.ForkCollectionPayload,\n      options?: RequestInit,\n    ): (fetch?: FetchAPI, basePath?: string) => Promise<Api.Collection> {\n      const localVarFetchArgs = ApiApiFetchParamCreator(\n        configuration,\n      ).forkCollection(tenant, database, collectionId, request, options);\n      return (fetch: FetchAPI = defaultFetch, basePath: string = BASE_PATH) => {\n        return fetch(\n          basePath + localVarFetchArgs.url,\n          localVarFetchArgs.options,\n        ).then((response) => {\n          const contentType = response.headers.get(\"Content-Type\");\n          const mimeType = contentType\n            ? contentType.replace(/;.*/, \"\")\n            : undefined;\n\n          if (response.status === 200) {\n            if (mimeType === \"application/json\") {\n              return response.json() as any;\n            }\n            throw response;\n          }\n          if (response.status === 401) {\n            if (mimeType === \"application/json\") {\n              throw response;\n            }\n            throw response;\n          }\n          if (response.status === 404) {\n            if (mimeType === \"application/json\") {\n              throw response;\n            }\n            throw response;\n          }\n          if (response.status === 500) {\n            if (mimeType === \"application/json\") {\n              throw response;\n            }\n            throw response;\n          }\n          throw response;\n        });\n      };\n    },\n    /**\n     * @summary Retrieves a collection by ID or name.\n     * @param {string} tenant <p>Tenant ID</p>\n     * @param {string} database <p>Database name</p>\n     * @param {string} collectionId <p>UUID of the collection</p>\n     * @param {RequestInit} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getCollection(\n      tenant: string,\n      database: string,\n      collectionId: string,\n      options?: RequestInit,\n    ): (fetch?: FetchAPI, basePath?: string) => Promise<Api.Collection> {\n      const localVarFetchArgs = ApiApiFetchParamCreator(\n        configuration,\n      ).getCollection(tenant, database, collectionId, options);\n      return (fetch: FetchAPI = defaultFetch, basePath: string = BASE_PATH) => {\n        return fetch(\n          basePath + localVarFetchArgs.url,\n          localVarFetchArgs.options,\n        ).then((response) => {\n          const contentType = response.headers.get(\"Content-Type\");\n          const mimeType = contentType\n            ? contentType.replace(/;.*/, \"\")\n            : undefined;\n\n          if (response.status === 200) {\n            if (mimeType === \"application/json\") {\n              return response.json() as any;\n            }\n            throw response;\n          }\n          if (response.status === 401) {\n            if (mimeType === \"application/json\") {\n              throw response;\n            }\n            throw response;\n          }\n          if (response.status === 404) {\n            if (mimeType === \"application/json\") {\n              throw response;\n            }\n            throw response;\n          }\n          if (response.status === 500) {\n            if (mimeType === \"application/json\") {\n              throw response;\n            }\n            throw response;\n          }\n          throw response;\n        });\n      };\n    },\n    /**\n     * @summary Retrieves a specific database by name.\n     * @param {string} tenant <p>Tenant ID</p>\n     * @param {string} database <p>Name of the database to retrieve</p>\n     * @param {RequestInit} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getDatabase(\n      tenant: string,\n      database: string,\n      options?: RequestInit,\n    ): (fetch?: FetchAPI, basePath?: string) => Promise<Api.Database> {\n      const localVarFetchArgs = ApiApiFetchParamCreator(\n        configuration,\n      ).getDatabase(tenant, database, options);\n      return (fetch: FetchAPI = defaultFetch, basePath: string = BASE_PATH) => {\n        return fetch(\n          basePath + localVarFetchArgs.url,\n          localVarFetchArgs.options,\n        ).then((response) => {\n          const contentType = response.headers.get(\"Content-Type\");\n          const mimeType = contentType\n            ? contentType.replace(/;.*/, \"\")\n            : undefined;\n\n          if (response.status === 200) {\n            if (mimeType === \"application/json\") {\n              return response.json() as any;\n            }\n            throw response;\n          }\n          if (response.status === 401) {\n            if (mimeType === \"application/json\") {\n              throw response;\n            }\n            throw response;\n          }\n          if (response.status === 404) {\n            if (mimeType === \"application/json\") {\n              throw response;\n            }\n            throw response;\n          }\n          if (response.status === 500) {\n            if (mimeType === \"application/json\") {\n              throw response;\n            }\n            throw response;\n          }\n          throw response;\n        });\n      };\n    },\n    /**\n     * @summary Returns an existing tenant by name.\n     * @param {string} tenantName <p>Tenant name or ID to retrieve</p>\n     * @param {RequestInit} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getTenant(\n      tenantName: string,\n      options?: RequestInit,\n    ): (fetch?: FetchAPI, basePath?: string) => Promise<Api.GetTenantResponse> {\n      const localVarFetchArgs = ApiApiFetchParamCreator(\n        configuration,\n      ).getTenant(tenantName, options);\n      return (fetch: FetchAPI = defaultFetch, basePath: string = BASE_PATH) => {\n        return fetch(\n          basePath + localVarFetchArgs.url,\n          localVarFetchArgs.options,\n        ).then((response) => {\n          const contentType = response.headers.get(\"Content-Type\");\n          const mimeType = contentType\n            ? contentType.replace(/;.*/, \"\")\n            : undefined;\n\n          if (response.status === 200) {\n            if (mimeType === \"application/json\") {\n              return response.json() as any;\n            }\n            throw response;\n          }\n          if (response.status === 401) {\n            if (mimeType === \"application/json\") {\n              throw response;\n            }\n            throw response;\n          }\n          if (response.status === 404) {\n            if (mimeType === \"application/json\") {\n              throw response;\n            }\n            throw response;\n          }\n          if (response.status === 500) {\n            if (mimeType === \"application/json\") {\n              throw response;\n            }\n            throw response;\n          }\n          throw response;\n        });\n      };\n    },\n    /**\n     * @summary Retrieves the current user's identity, tenant, and databases.\n     * @param {RequestInit} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getUserIdentity(\n      options?: RequestInit,\n    ): (\n      fetch?: FetchAPI,\n      basePath?: string,\n    ) => Promise<Api.GetUserIdentityResponse> {\n      const localVarFetchArgs =\n        ApiApiFetchParamCreator(configuration).getUserIdentity(options);\n      return (fetch: FetchAPI = defaultFetch, basePath: string = BASE_PATH) => {\n        return fetch(\n          basePath + localVarFetchArgs.url,\n          localVarFetchArgs.options,\n        ).then((response) => {\n          const contentType = response.headers.get(\"Content-Type\");\n          const mimeType = contentType\n            ? contentType.replace(/;.*/, \"\")\n            : undefined;\n\n          if (response.status === 200) {\n            if (mimeType === \"application/json\") {\n              return response.json() as any;\n            }\n            throw response;\n          }\n          if (response.status === 500) {\n            if (mimeType === \"application/json\") {\n              throw response;\n            }\n            throw response;\n          }\n          throw response;\n        });\n      };\n    },\n    /**\n     * @summary Health check endpoint that returns 200 if the server and executor are ready\n     * @param {RequestInit} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    healthcheck(\n      options?: RequestInit,\n    ): (fetch?: FetchAPI, basePath?: string) => Promise<string> {\n      const localVarFetchArgs =\n        ApiApiFetchParamCreator(configuration).healthcheck(options);\n      return (fetch: FetchAPI = defaultFetch, basePath: string = BASE_PATH) => {\n        return fetch(\n          basePath + localVarFetchArgs.url,\n          localVarFetchArgs.options,\n        ).then((response) => {\n          const contentType = response.headers.get(\"Content-Type\");\n          const mimeType = contentType\n            ? contentType.replace(/;.*/, \"\")\n            : undefined;\n\n          if (response.status === 200) {\n            if (mimeType === \"application/json\") {\n              return response.json() as any;\n            }\n            throw response;\n          }\n          if (response.status === 503) {\n            if (mimeType === \"application/json\") {\n              throw response;\n            }\n            throw response;\n          }\n          throw response;\n        });\n      };\n    },\n    /**\n     * @summary Heartbeat endpoint that returns a nanosecond timestamp of the current time.\n     * @param {RequestInit} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    heartbeat(\n      options?: RequestInit,\n    ): (fetch?: FetchAPI, basePath?: string) => Promise<Api.HeartbeatResponse> {\n      const localVarFetchArgs =\n        ApiApiFetchParamCreator(configuration).heartbeat(options);\n      return (fetch: FetchAPI = defaultFetch, basePath: string = BASE_PATH) => {\n        return fetch(\n          basePath + localVarFetchArgs.url,\n          localVarFetchArgs.options,\n        ).then((response) => {\n          const contentType = response.headers.get(\"Content-Type\");\n          const mimeType = contentType\n            ? contentType.replace(/;.*/, \"\")\n            : undefined;\n\n          if (response.status === 200) {\n            if (mimeType === \"application/json\") {\n              return response.json() as any;\n            }\n            throw response;\n          }\n          if (response.status === 500) {\n            if (mimeType === \"application/json\") {\n              throw response;\n            }\n            throw response;\n          }\n          throw response;\n        });\n      };\n    },\n    /**\n     * @summary Lists all collections in the specified database.\n     * @param {string} tenant <p>Tenant ID</p>\n     * @param {string} database <p>Database name to list collections from</p>\n     * @param {number} [limit] <p>Limit for pagination</p>\n     * @param {number} [offset] <p>Offset for pagination</p>\n     * @param {RequestInit} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    listCollections(\n      tenant: string,\n      database: string,\n      limit: number | undefined,\n      offset: number | undefined,\n      options?: RequestInit,\n    ): (fetch?: FetchAPI, basePath?: string) => Promise<Api.Vec2[]> {\n      const localVarFetchArgs = ApiApiFetchParamCreator(\n        configuration,\n      ).listCollections(tenant, database, limit, offset, options);\n      return (fetch: FetchAPI = defaultFetch, basePath: string = BASE_PATH) => {\n        return fetch(\n          basePath + localVarFetchArgs.url,\n          localVarFetchArgs.options,\n        ).then((response) => {\n          const contentType = response.headers.get(\"Content-Type\");\n          const mimeType = contentType\n            ? contentType.replace(/;.*/, \"\")\n            : undefined;\n\n          if (response.status === 200) {\n            if (mimeType === \"application/json\") {\n              return response.json() as any;\n            }\n            throw response;\n          }\n          if (response.status === 401) {\n            if (mimeType === \"application/json\") {\n              throw response;\n            }\n            throw response;\n          }\n          if (response.status === 500) {\n            if (mimeType === \"application/json\") {\n              throw response;\n            }\n            throw response;\n          }\n          throw response;\n        });\n      };\n    },\n    /**\n     * @summary Lists all databases for a given tenant.\n     * @param {string} tenant <p>Tenant ID to list databases for</p>\n     * @param {number} [limit] <p>Limit for pagination</p>\n     * @param {number} [offset] <p>Offset for pagination</p>\n     * @param {RequestInit} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    listDatabases(\n      tenant: string,\n      limit: number | undefined,\n      offset: number | undefined,\n      options?: RequestInit,\n    ): (fetch?: FetchAPI, basePath?: string) => Promise<Api.Vec2[]> {\n      const localVarFetchArgs = ApiApiFetchParamCreator(\n        configuration,\n      ).listDatabases(tenant, limit, offset, options);\n      return (fetch: FetchAPI = defaultFetch, basePath: string = BASE_PATH) => {\n        return fetch(\n          basePath + localVarFetchArgs.url,\n          localVarFetchArgs.options,\n        ).then((response) => {\n          const contentType = response.headers.get(\"Content-Type\");\n          const mimeType = contentType\n            ? contentType.replace(/;.*/, \"\")\n            : undefined;\n\n          if (response.status === 200) {\n            if (mimeType === \"application/json\") {\n              return response.json() as any;\n            }\n            throw response;\n          }\n          if (response.status === 401) {\n            if (mimeType === \"application/json\") {\n              throw response;\n            }\n            throw response;\n          }\n          if (response.status === 500) {\n            if (mimeType === \"application/json\") {\n              throw response;\n            }\n            throw response;\n          }\n          throw response;\n        });\n      };\n    },\n    /**\n     * @summary Pre-flight checks endpoint reporting basic readiness info.\n     * @param {RequestInit} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    preFlightChecks(\n      options?: RequestInit,\n    ): (fetch?: FetchAPI, basePath?: string) => Promise<Api.ChecklistResponse> {\n      const localVarFetchArgs =\n        ApiApiFetchParamCreator(configuration).preFlightChecks(options);\n      return (fetch: FetchAPI = defaultFetch, basePath: string = BASE_PATH) => {\n        return fetch(\n          basePath + localVarFetchArgs.url,\n          localVarFetchArgs.options,\n        ).then((response) => {\n          const contentType = response.headers.get(\"Content-Type\");\n          const mimeType = contentType\n            ? contentType.replace(/;.*/, \"\")\n            : undefined;\n\n          if (response.status === 200) {\n            if (mimeType === \"application/json\") {\n              return response.json() as any;\n            }\n            throw response;\n          }\n          if (response.status === 500) {\n            if (mimeType === \"application/json\") {\n              throw response;\n            }\n            throw response;\n          }\n          throw response;\n        });\n      };\n    },\n    /**\n     * @summary Reset endpoint allowing authorized users to reset the database.\n     * @param {RequestInit} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    reset(\n      options?: RequestInit,\n    ): (fetch?: FetchAPI, basePath?: string) => Promise<boolean> {\n      const localVarFetchArgs =\n        ApiApiFetchParamCreator(configuration).reset(options);\n      return (fetch: FetchAPI = defaultFetch, basePath: string = BASE_PATH) => {\n        return fetch(\n          basePath + localVarFetchArgs.url,\n          localVarFetchArgs.options,\n        ).then((response) => {\n          const contentType = response.headers.get(\"Content-Type\");\n          const mimeType = contentType\n            ? contentType.replace(/;.*/, \"\")\n            : undefined;\n\n          if (response.status === 200) {\n            if (mimeType === \"application/json\") {\n              return response.json() as any;\n            }\n            throw response;\n          }\n          if (response.status === 401) {\n            if (mimeType === \"application/json\") {\n              throw response;\n            }\n            throw response;\n          }\n          if (response.status === 500) {\n            if (mimeType === \"application/json\") {\n              throw response;\n            }\n            throw response;\n          }\n          throw response;\n        });\n      };\n    },\n    /**\n     * @summary Updates an existing collection's name or metadata.\n     * @param {string} tenant <p>Tenant ID</p>\n     * @param {string} database <p>Database name</p>\n     * @param {string} collectionId <p>UUID of the collection to update</p>\n     * @param {Api.UpdateCollectionPayload} request\n     * @param {RequestInit} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    updateCollection(\n      tenant: string,\n      database: string,\n      collectionId: string,\n      request: Api.UpdateCollectionPayload,\n      options?: RequestInit,\n    ): (\n      fetch?: FetchAPI,\n      basePath?: string,\n    ) => Promise<Api.UpdateCollectionResponse> {\n      const localVarFetchArgs = ApiApiFetchParamCreator(\n        configuration,\n      ).updateCollection(tenant, database, collectionId, request, options);\n      return (fetch: FetchAPI = defaultFetch, basePath: string = BASE_PATH) => {\n        return fetch(\n          basePath + localVarFetchArgs.url,\n          localVarFetchArgs.options,\n        ).then((response) => {\n          const contentType = response.headers.get(\"Content-Type\");\n          const mimeType = contentType\n            ? contentType.replace(/;.*/, \"\")\n            : undefined;\n\n          if (response.status === 200) {\n            if (mimeType === \"application/json\") {\n              return response.json() as any;\n            }\n            throw response;\n          }\n          if (response.status === 401) {\n            if (mimeType === \"application/json\") {\n              throw response;\n            }\n            throw response;\n          }\n          if (response.status === 404) {\n            if (mimeType === \"application/json\") {\n              throw response;\n            }\n            throw response;\n          }\n          if (response.status === 500) {\n            if (mimeType === \"application/json\") {\n              throw response;\n            }\n            throw response;\n          }\n          throw response;\n        });\n      };\n    },\n    /**\n     * @summary Returns the version of the server.\n     * @param {RequestInit} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    version(\n      options?: RequestInit,\n    ): (fetch?: FetchAPI, basePath?: string) => Promise<string> {\n      const localVarFetchArgs =\n        ApiApiFetchParamCreator(configuration).version(options);\n      return (fetch: FetchAPI = defaultFetch, basePath: string = BASE_PATH) => {\n        return fetch(\n          basePath + localVarFetchArgs.url,\n          localVarFetchArgs.options,\n        ).then((response) => {\n          const contentType = response.headers.get(\"Content-Type\");\n          const mimeType = contentType\n            ? contentType.replace(/;.*/, \"\")\n            : undefined;\n\n          if (response.status === 200) {\n            if (mimeType === \"application/json\") {\n              return response.json() as any;\n            }\n            throw response;\n          }\n          throw response;\n        });\n      };\n    },\n  };\n};\n\n/**\n * ApiApi - factory interface\n * @export\n */\nexport const ApiApiFactory: FactoryFunction<ApiApi> = function (\n  configuration?: Configuration,\n  basePath?: string,\n  fetch?: FetchAPI,\n) {\n  return new ApiApi(configuration, basePath, fetch);\n};\n\n/**\n * ApiApi - object-oriented interface\n * @export\n * @class ApiApi\n * @extends {BaseAPI}\n */\nexport class ApiApi extends BaseAPI {\n  /**\n   * @summary Adds records to a collection.\n   * @param {string} tenant\n   * @param {string} database\n   * @param {string} collectionId\n   * @param {Api.AddCollectionRecordsPayload} request\n   * @param {RequestInit} [options] Override http request option.\n   * @throws {RequiredError}\n   */\n  public collectionAdd(\n    tenant: string,\n    database: string,\n    collectionId: string,\n    request: Api.AddCollectionRecordsPayload,\n    options?: RequestInit,\n  ) {\n    return ApiApiFp(this.configuration).collectionAdd(\n      tenant,\n      database,\n      collectionId,\n      request,\n      options,\n    )(this.fetch, this.basePath);\n  }\n\n  /**\n   * @summary Retrieves the number of records in a collection.\n   * @param {string} tenant <p>Tenant ID for the collection</p>\n   * @param {string} database <p>Database containing this collection</p>\n   * @param {string} collectionId <p>Collection ID whose records are counted</p>\n   * @param {RequestInit} [options] Override http request option.\n   * @throws {RequiredError}\n   */\n  public collectionCount(\n    tenant: string,\n    database: string,\n    collectionId: string,\n    options?: RequestInit,\n  ) {\n    return ApiApiFp(this.configuration).collectionCount(\n      tenant,\n      database,\n      collectionId,\n      options,\n    )(this.fetch, this.basePath);\n  }\n\n  /**\n   * @summary Deletes records in a collection. Can filter by IDs or metadata.\n   * @param {string} tenant <p>Tenant ID</p>\n   * @param {string} database <p>Database name</p>\n   * @param {string} collectionId <p>Collection ID</p>\n   * @param {Api.DeleteCollectionRecordsPayload} request\n   * @param {RequestInit} [options] Override http request option.\n   * @throws {RequiredError}\n   */\n  public collectionDelete(\n    tenant: string,\n    database: string,\n    collectionId: string,\n    request: Api.DeleteCollectionRecordsPayload,\n    options?: RequestInit,\n  ) {\n    return ApiApiFp(this.configuration).collectionDelete(\n      tenant,\n      database,\n      collectionId,\n      request,\n      options,\n    )(this.fetch, this.basePath);\n  }\n\n  /**\n   * @summary Retrieves records from a collection by ID or metadata filter.\n   * @param {string} tenant <p>Tenant ID</p>\n   * @param {string} database <p>Database name for the collection</p>\n   * @param {string} collectionId <p>Collection ID to fetch records from</p>\n   * @param {Api.GetRequestPayload} request\n   * @param {RequestInit} [options] Override http request option.\n   * @throws {RequiredError}\n   */\n  public collectionGet(\n    tenant: string,\n    database: string,\n    collectionId: string,\n    request: Api.GetRequestPayload,\n    options?: RequestInit,\n  ) {\n    return ApiApiFp(this.configuration).collectionGet(\n      tenant,\n      database,\n      collectionId,\n      request,\n      options,\n    )(this.fetch, this.basePath);\n  }\n\n  /**\n   * @summary Query a collection in a variety of ways, including vector search, metadata filtering, and full-text search\n   * @param {string} tenant <p>Tenant ID</p>\n   * @param {string} database <p>Database name containing the collection</p>\n   * @param {string} collectionId <p>Collection ID to query</p>\n   * @param {number} [limit] <p>Limit for pagination</p>\n   * @param {number} [offset] <p>Offset for pagination</p>\n   * @param {Api.QueryRequestPayload} request\n   * @param {RequestInit} [options] Override http request option.\n   * @throws {RequiredError}\n   */\n  public collectionQuery(\n    tenant: string,\n    database: string,\n    collectionId: string,\n    limit: number | undefined,\n    offset: number | undefined,\n    request: Api.QueryRequestPayload,\n    options?: RequestInit,\n  ) {\n    return ApiApiFp(this.configuration).collectionQuery(\n      tenant,\n      database,\n      collectionId,\n      limit,\n      offset,\n      request,\n      options,\n    )(this.fetch, this.basePath);\n  }\n\n  /**\n   * @summary Updates records in a collection by ID.\n   * @param {string} tenant\n   * @param {string} database\n   * @param {string} collectionId\n   * @param {Api.UpdateCollectionRecordsPayload} request\n   * @param {RequestInit} [options] Override http request option.\n   * @throws {RequiredError}\n   */\n  public collectionUpdate(\n    tenant: string,\n    database: string,\n    collectionId: string,\n    request: Api.UpdateCollectionRecordsPayload,\n    options?: RequestInit,\n  ) {\n    return ApiApiFp(this.configuration).collectionUpdate(\n      tenant,\n      database,\n      collectionId,\n      request,\n      options,\n    )(this.fetch, this.basePath);\n  }\n\n  /**\n   * @summary Upserts records in a collection (create if not exists, otherwise update).\n   * @param {string} tenant <p>Tenant ID</p>\n   * @param {string} database <p>Database name</p>\n   * @param {string} collectionId <p>Collection ID</p>\n   * @param {Api.UpsertCollectionRecordsPayload} request\n   * @param {RequestInit} [options] Override http request option.\n   * @throws {RequiredError}\n   */\n  public collectionUpsert(\n    tenant: string,\n    database: string,\n    collectionId: string,\n    request: Api.UpsertCollectionRecordsPayload,\n    options?: RequestInit,\n  ) {\n    return ApiApiFp(this.configuration).collectionUpsert(\n      tenant,\n      database,\n      collectionId,\n      request,\n      options,\n    )(this.fetch, this.basePath);\n  }\n\n  /**\n   * @summary Retrieves the total number of collections in a given database.\n   * @param {string} tenant <p>Tenant ID</p>\n   * @param {string} database <p>Database name to count collections from</p>\n   * @param {RequestInit} [options] Override http request option.\n   * @throws {RequiredError}\n   */\n  public countCollections(\n    tenant: string,\n    database: string,\n    options?: RequestInit,\n  ) {\n    return ApiApiFp(this.configuration).countCollections(\n      tenant,\n      database,\n      options,\n    )(this.fetch, this.basePath);\n  }\n\n  /**\n   * @summary Creates a new collection under the specified database.\n   * @param {string} tenant <p>Tenant ID</p>\n   * @param {string} database <p>Database name containing the new collection</p>\n   * @param {Api.CreateCollectionPayload} request\n   * @param {RequestInit} [options] Override http request option.\n   * @throws {RequiredError}\n   */\n  public createCollection(\n    tenant: string,\n    database: string,\n    request: Api.CreateCollectionPayload,\n    options?: RequestInit,\n  ) {\n    return ApiApiFp(this.configuration).createCollection(\n      tenant,\n      database,\n      request,\n      options,\n    )(this.fetch, this.basePath);\n  }\n\n  /**\n   * @summary Creates a new database for a given tenant.\n   * @param {string} tenant <p>Tenant ID to associate with the new database</p>\n   * @param {Api.CreateDatabasePayload} request\n   * @param {RequestInit} [options] Override http request option.\n   * @throws {RequiredError}\n   */\n  public createDatabase(\n    tenant: string,\n    request: Api.CreateDatabasePayload,\n    options?: RequestInit,\n  ) {\n    return ApiApiFp(this.configuration).createDatabase(\n      tenant,\n      request,\n      options,\n    )(this.fetch, this.basePath);\n  }\n\n  /**\n   * @summary Creates a new tenant.\n   * @param {Api.CreateTenantPayload} request\n   * @param {RequestInit} [options] Override http request option.\n   * @throws {RequiredError}\n   */\n  public createTenant(request: Api.CreateTenantPayload, options?: RequestInit) {\n    return ApiApiFp(this.configuration).createTenant(request, options)(\n      this.fetch,\n      this.basePath,\n    );\n  }\n\n  /**\n   * @summary Deletes a collection in a given database.\n   * @param {string} tenant <p>Tenant ID</p>\n   * @param {string} database <p>Database name</p>\n   * @param {string} collectionId <p>UUID of the collection to delete</p>\n   * @param {RequestInit} [options] Override http request option.\n   * @throws {RequiredError}\n   */\n  public deleteCollection(\n    tenant: string,\n    database: string,\n    collectionId: string,\n    options?: RequestInit,\n  ) {\n    return ApiApiFp(this.configuration).deleteCollection(\n      tenant,\n      database,\n      collectionId,\n      options,\n    )(this.fetch, this.basePath);\n  }\n\n  /**\n   * @summary Deletes a specific database.\n   * @param {string} tenant <p>Tenant ID</p>\n   * @param {string} database <p>Name of the database to delete</p>\n   * @param {RequestInit} [options] Override http request option.\n   * @throws {RequiredError}\n   */\n  public deleteDatabase(\n    tenant: string,\n    database: string,\n    options?: RequestInit,\n  ) {\n    return ApiApiFp(this.configuration).deleteDatabase(\n      tenant,\n      database,\n      options,\n    )(this.fetch, this.basePath);\n  }\n\n  /**\n   * @summary Forks an existing collection.\n   * @param {string} tenant <p>Tenant ID</p>\n   * @param {string} database <p>Database name</p>\n   * @param {string} collectionId <p>UUID of the collection to update</p>\n   * @param {Api.ForkCollectionPayload} request\n   * @param {RequestInit} [options] Override http request option.\n   * @throws {RequiredError}\n   */\n  public forkCollection(\n    tenant: string,\n    database: string,\n    collectionId: string,\n    request: Api.ForkCollectionPayload,\n    options?: RequestInit,\n  ) {\n    return ApiApiFp(this.configuration).forkCollection(\n      tenant,\n      database,\n      collectionId,\n      request,\n      options,\n    )(this.fetch, this.basePath);\n  }\n\n  /**\n   * @summary Retrieves a collection by ID or name.\n   * @param {string} tenant <p>Tenant ID</p>\n   * @param {string} database <p>Database name</p>\n   * @param {string} collectionId <p>UUID of the collection</p>\n   * @param {RequestInit} [options] Override http request option.\n   * @throws {RequiredError}\n   */\n  public getCollection(\n    tenant: string,\n    database: string,\n    collectionId: string,\n    options?: RequestInit,\n  ) {\n    return ApiApiFp(this.configuration).getCollection(\n      tenant,\n      database,\n      collectionId,\n      options,\n    )(this.fetch, this.basePath);\n  }\n\n  /**\n   * @summary Retrieves a specific database by name.\n   * @param {string} tenant <p>Tenant ID</p>\n   * @param {string} database <p>Name of the database to retrieve</p>\n   * @param {RequestInit} [options] Override http request option.\n   * @throws {RequiredError}\n   */\n  public getDatabase(tenant: string, database: string, options?: RequestInit) {\n    return ApiApiFp(this.configuration).getDatabase(\n      tenant,\n      database,\n      options,\n    )(this.fetch, this.basePath);\n  }\n\n  /**\n   * @summary Returns an existing tenant by name.\n   * @param {string} tenantName <p>Tenant name or ID to retrieve</p>\n   * @param {RequestInit} [options] Override http request option.\n   * @throws {RequiredError}\n   */\n  public getTenant(tenantName: string, options?: RequestInit) {\n    return ApiApiFp(this.configuration).getTenant(tenantName, options)(\n      this.fetch,\n      this.basePath,\n    );\n  }\n\n  /**\n   * @summary Retrieves the current user's identity, tenant, and databases.\n   * @param {RequestInit} [options] Override http request option.\n   * @throws {RequiredError}\n   */\n  public getUserIdentity(options?: RequestInit) {\n    return ApiApiFp(this.configuration).getUserIdentity(options)(\n      this.fetch,\n      this.basePath,\n    );\n  }\n\n  /**\n   * @summary Health check endpoint that returns 200 if the server and executor are ready\n   * @param {RequestInit} [options] Override http request option.\n   * @throws {RequiredError}\n   */\n  public healthcheck(options?: RequestInit) {\n    return ApiApiFp(this.configuration).healthcheck(options)(\n      this.fetch,\n      this.basePath,\n    );\n  }\n\n  /**\n   * @summary Heartbeat endpoint that returns a nanosecond timestamp of the current time.\n   * @param {RequestInit} [options] Override http request option.\n   * @throws {RequiredError}\n   */\n  public heartbeat(options?: RequestInit) {\n    return ApiApiFp(this.configuration).heartbeat(options)(\n      this.fetch,\n      this.basePath,\n    );\n  }\n\n  /**\n   * @summary Lists all collections in the specified database.\n   * @param {string} tenant <p>Tenant ID</p>\n   * @param {string} database <p>Database name to list collections from</p>\n   * @param {number} [limit] <p>Limit for pagination</p>\n   * @param {number} [offset] <p>Offset for pagination</p>\n   * @param {RequestInit} [options] Override http request option.\n   * @throws {RequiredError}\n   */\n  public listCollections(\n    tenant: string,\n    database: string,\n    limit: number | undefined,\n    offset: number | undefined,\n    options?: RequestInit,\n  ) {\n    return ApiApiFp(this.configuration).listCollections(\n      tenant,\n      database,\n      limit,\n      offset,\n      options,\n    )(this.fetch, this.basePath);\n  }\n\n  /**\n   * @summary Lists all databases for a given tenant.\n   * @param {string} tenant <p>Tenant ID to list databases for</p>\n   * @param {number} [limit] <p>Limit for pagination</p>\n   * @param {number} [offset] <p>Offset for pagination</p>\n   * @param {RequestInit} [options] Override http request option.\n   * @throws {RequiredError}\n   */\n  public listDatabases(\n    tenant: string,\n    limit: number | undefined,\n    offset: number | undefined,\n    options?: RequestInit,\n  ) {\n    return ApiApiFp(this.configuration).listDatabases(\n      tenant,\n      limit,\n      offset,\n      options,\n    )(this.fetch, this.basePath);\n  }\n\n  /**\n   * @summary Pre-flight checks endpoint reporting basic readiness info.\n   * @param {RequestInit} [options] Override http request option.\n   * @throws {RequiredError}\n   */\n  public preFlightChecks(options?: RequestInit) {\n    return ApiApiFp(this.configuration).preFlightChecks(options)(\n      this.fetch,\n      this.basePath,\n    );\n  }\n\n  /**\n   * @summary Reset endpoint allowing authorized users to reset the database.\n   * @param {RequestInit} [options] Override http request option.\n   * @throws {RequiredError}\n   */\n  public reset(options?: RequestInit) {\n    return ApiApiFp(this.configuration).reset(options)(\n      this.fetch,\n      this.basePath,\n    );\n  }\n\n  /**\n   * @summary Updates an existing collection's name or metadata.\n   * @param {string} tenant <p>Tenant ID</p>\n   * @param {string} database <p>Database name</p>\n   * @param {string} collectionId <p>UUID of the collection to update</p>\n   * @param {Api.UpdateCollectionPayload} request\n   * @param {RequestInit} [options] Override http request option.\n   * @throws {RequiredError}\n   */\n  public updateCollection(\n    tenant: string,\n    database: string,\n    collectionId: string,\n    request: Api.UpdateCollectionPayload,\n    options?: RequestInit,\n  ) {\n    return ApiApiFp(this.configuration).updateCollection(\n      tenant,\n      database,\n      collectionId,\n      request,\n      options,\n    )(this.fetch, this.basePath);\n  }\n\n  /**\n   * @summary Returns the version of the server.\n   * @param {RequestInit} [options] Override http request option.\n   * @throws {RequiredError}\n   */\n  public version(options?: RequestInit) {\n    return ApiApiFp(this.configuration).version(options)(\n      this.fetch,\n      this.basePath,\n    );\n  }\n}\n\n/**\n * We sometimes represent dates as strings (in models) and as Dates (in parameters) so this\n * function converts them both to a string.\n */\nfunction dateToString(value: Date | string | undefined): string | undefined {\n  if (value instanceof Date) {\n    return value.toISOString();\n  } else if (typeof value === \"string\") {\n    return value;\n  } else {\n    return undefined;\n  }\n}\n","/* eslint-disable */\n// tslint:disable\n/**\n * chroma-frontend\n *\n *\n * OpenAPI spec version: 1.0.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator+.\n * https://github.com/karlvr/openapi-generator-plus\n * Do not edit the class manually.\n */\n\nexport namespace Api {\n  export interface AddCollectionRecordsPayload {\n    documents?: (string | null)[] | null;\n    embeddings?: number[][] | null;\n    ids: string[];\n    metadatas?:\n      | ({ [name: string]: boolean | number | number | string } | null)[]\n      | null;\n    uris?: (string | null)[] | null;\n  }\n\n  export interface AddCollectionRecordsResponse {}\n\n  export interface ChecklistResponse {\n    /**\n     * @type {number}\n     * @memberof ChecklistResponse\n     * minimum: 0\n     */\n    max_batch_size: number;\n  }\n\n  export interface Collection {\n    configuration_json: Api.CollectionConfiguration;\n    database: string;\n    /**\n     * @type {number | null}\n     * @memberof Collection\n     */\n    dimension?: number | null;\n    /**\n     * @description <p>CollectionUuid is a wrapper around Uuid to provide a type for the collection id.</p>\n     * @type {string}\n     * @memberof Collection\n     */\n    id: string;\n    /**\n     * @type {number}\n     * @memberof Collection\n     */\n    log_position: number;\n    metadata?: { [name: string]: boolean | number | number | string } | null;\n    name: string;\n    tenant: string;\n    /**\n     * @type {number}\n     * @memberof Collection\n     */\n    version: number;\n  }\n\n  export interface CollectionConfiguration {\n    embedding_function?: Api.EmbeddingFunctionConfiguration | null;\n    hnsw?: Api.HnswConfiguration | null;\n    spann?: Api.SpannConfiguration | null;\n  }\n\n  export interface CreateCollectionPayload {\n    configuration?: Api.CollectionConfiguration | null;\n    get_or_create?: boolean;\n    metadata?: { [name: string]: boolean | number | number | string } | null;\n    name: string;\n  }\n\n  export interface CreateDatabasePayload {\n    name: string;\n  }\n\n  export interface CreateDatabaseResponse {}\n\n  export interface CreateTenantPayload {\n    name: string;\n  }\n\n  export interface CreateTenantResponse {}\n\n  export interface Database {\n    id: string;\n    name: string;\n    tenant: string;\n  }\n\n  export interface DeleteCollectionRecordsPayload extends Api.RawWhereFields {\n    ids?: string[] | null;\n  }\n\n  export interface DeleteCollectionRecordsResponse {}\n\n  export interface DeleteDatabaseResponse {}\n\n  export type EmbeddingFunctionConfiguration =\n    | Api.EmbeddingFunctionConfiguration.ObjectValue\n    | Api.EmbeddingFunctionConfiguration.AllofValue;\n\n  /**\n   * @export\n   * @namespace EmbeddingFunctionConfiguration\n   */\n  export namespace EmbeddingFunctionConfiguration {\n    export interface ObjectValue {\n      type: Api.EmbeddingFunctionConfiguration.ObjectValue.TypeEnum;\n    }\n\n    /**\n     * @export\n     * @namespace ObjectValue\n     */\n    export namespace ObjectValue {\n      export enum TypeEnum {\n        Legacy = \"legacy\",\n      }\n    }\n\n    export interface AllofValue extends Api.EmbeddingFunctionNewConfiguration {\n      type: Api.EmbeddingFunctionConfiguration.AllofValue.TypeEnum;\n    }\n\n    /**\n     * @export\n     * @namespace AllofValue\n     */\n    export namespace AllofValue {\n      export enum TypeEnum {\n        Known = \"known\",\n      }\n    }\n  }\n\n  export interface EmbeddingFunctionNewConfiguration {\n    config: unknown;\n    name: string;\n  }\n\n  export interface ErrorResponse {\n    error: string;\n    message: string;\n  }\n\n  export interface ForkCollectionPayload {\n    new_name: string;\n  }\n\n  export interface GetRequestPayload extends Api.RawWhereFields {\n    ids?: string[] | null;\n    include?: Api.Include[];\n    /**\n     * @type {number | null}\n     * @memberof GetRequestPayload\n     * minimum: 0\n     */\n    limit?: number | null;\n    /**\n     * @type {number | null}\n     * @memberof GetRequestPayload\n     * minimum: 0\n     */\n    offset?: number | null;\n  }\n\n  export interface GetResponse {\n    documents?: (string | null)[] | null;\n    embeddings?: number[][] | null;\n    ids: string[];\n    include: Api.Include[];\n    metadatas?:\n      | ({ [name: string]: boolean | number | number | string } | null)[]\n      | null;\n    uris?: (string | null)[] | null;\n  }\n\n  export interface GetTenantResponse {\n    name: string;\n  }\n\n  export interface GetUserIdentityResponse {\n    databases: string[];\n    tenant: string;\n    user_id: string;\n  }\n\n  export interface HeartbeatResponse {\n    /**\n     * @type {number}\n     * @memberof HeartbeatResponse\n     * minimum: 0\n     */\n    \"nanosecond heartbeat\": number;\n  }\n\n  export interface HnswConfiguration {\n    /**\n     * @type {number | null}\n     * @memberof HnswConfiguration\n     * minimum: 0\n     */\n    ef_construction?: number | null;\n    /**\n     * @type {number | null}\n     * @memberof HnswConfiguration\n     * minimum: 0\n     */\n    ef_search?: number | null;\n    /**\n     * @type {number | null}\n     * @memberof HnswConfiguration\n     * minimum: 0\n     */\n    max_neighbors?: number | null;\n    /**\n     * @type {number | null}\n     * @memberof HnswConfiguration\n     */\n    resize_factor?: number | null;\n    space?: Api.HnswSpace;\n    /**\n     * @type {number | null}\n     * @memberof HnswConfiguration\n     * minimum: 0\n     */\n    sync_threshold?: number | null;\n  }\n\n  export enum HnswSpace {\n    L2 = \"l2\",\n    Cosine = \"cosine\",\n    Ip = \"ip\",\n  }\n\n  export enum Include {\n    Distances = \"distances\",\n    Documents = \"documents\",\n    Embeddings = \"embeddings\",\n    Metadatas = \"metadatas\",\n    Uris = \"uris\",\n  }\n\n  export interface QueryRequestPayload extends Api.RawWhereFields {\n    ids?: string[] | null;\n    include?: Api.Include[];\n    /**\n     * @type {number | null}\n     * @memberof QueryRequestPayload\n     * minimum: 0\n     */\n    n_results?: number | null;\n    query_embeddings: number[][];\n  }\n\n  export interface QueryResponse {\n    distances?: (number | null)[][] | null;\n    documents?: (string | null)[][] | null;\n    embeddings?: (number[] | null)[][] | null;\n    ids: string[][];\n    include: Api.Include[];\n    metadatas?:\n      | ({ [name: string]: boolean | number | number | string } | null)[][]\n      | null;\n    uris?: (string | null)[][] | null;\n  }\n\n  export interface RawWhereFields {\n    where?: unknown;\n    where_document?: unknown;\n  }\n\n  export interface SpannConfiguration {\n    /**\n     * @type {number | null}\n     * @memberof SpannConfiguration\n     * minimum: 0\n     */\n    ef_construction?: number | null;\n    /**\n     * @type {number | null}\n     * @memberof SpannConfiguration\n     * minimum: 0\n     */\n    ef_search?: number | null;\n    /**\n     * @type {number | null}\n     * @memberof SpannConfiguration\n     * minimum: 0\n     */\n    max_neighbors?: number | null;\n    /**\n     * @type {number | null}\n     * @memberof SpannConfiguration\n     * minimum: 0\n     */\n    merge_threshold?: number | null;\n    /**\n     * @type {number | null}\n     * @memberof SpannConfiguration\n     * minimum: 0\n     */\n    reassign_neighbor_count?: number | null;\n    /**\n     * @type {number | null}\n     * @memberof SpannConfiguration\n     * minimum: 0\n     */\n    search_nprobe?: number | null;\n    space?: Api.HnswSpace;\n    /**\n     * @type {number | null}\n     * @memberof SpannConfiguration\n     * minimum: 0\n     */\n    split_threshold?: number | null;\n    /**\n     * @type {number | null}\n     * @memberof SpannConfiguration\n     * minimum: 0\n     */\n    write_nprobe?: number | null;\n  }\n\n  export interface UpdateCollectionConfiguration {\n    embedding_function?: Api.EmbeddingFunctionConfiguration | null;\n    hnsw?: Api.UpdateHnswConfiguration | null;\n    spann?: Api.SpannConfiguration | null;\n  }\n\n  export interface UpdateCollectionPayload {\n    new_configuration?: Api.UpdateCollectionConfiguration | null;\n    new_metadata?: {\n      [name: string]: boolean | number | number | string;\n    } | null;\n    new_name?: string | null;\n  }\n\n  export interface UpdateCollectionRecordsPayload {\n    documents?: (string | null)[] | null;\n    embeddings?: (number[] | null)[] | null;\n    ids: string[];\n    metadatas?:\n      | ({ [name: string]: boolean | number | number | string } | null)[]\n      | null;\n    uris?: (string | null)[] | null;\n  }\n\n  export interface UpdateCollectionRecordsResponse {}\n\n  export interface UpdateCollectionResponse {}\n\n  export interface UpdateHnswConfiguration {\n    /**\n     * @type {number | null}\n     * @memberof UpdateHnswConfiguration\n     * minimum: 0\n     */\n    batch_size?: number | null;\n    /**\n     * @type {number | null}\n     * @memberof UpdateHnswConfiguration\n     * minimum: 0\n     */\n    ef_search?: number | null;\n    /**\n     * @type {number | null}\n     * @memberof UpdateHnswConfiguration\n     * minimum: 0\n     */\n    max_neighbors?: number | null;\n    /**\n     * @type {number | null}\n     * @memberof UpdateHnswConfiguration\n     * minimum: 0\n     */\n    num_threads?: number | null;\n    /**\n     * @type {number | null}\n     * @memberof UpdateHnswConfiguration\n     */\n    resize_factor?: number | null;\n    /**\n     * @type {number | null}\n     * @memberof UpdateHnswConfiguration\n     * minimum: 0\n     */\n    sync_threshold?: number | null;\n  }\n\n  export interface UpsertCollectionRecordsPayload {\n    documents?: (string | null)[] | null;\n    embeddings?: number[][] | null;\n    ids: string[];\n    metadatas?:\n      | ({ [name: string]: boolean | number | number | string } | null)[]\n      | null;\n    uris?: (string | null)[] | null;\n  }\n\n  export interface UpsertCollectionRecordsResponse {}\n\n  export interface Vec2 {\n    configuration_json: Api.CollectionConfiguration;\n    database: string;\n    /**\n     * @type {number | null}\n     * @memberof Vec2\n     */\n    dimension?: number | null;\n    /**\n     * @description <p>CollectionUuid is a wrapper around Uuid to provide a type for the collection id.</p>\n     * @type {string}\n     * @memberof Vec2\n     */\n    id: string;\n    /**\n     * @type {number}\n     * @memberof Vec2\n     */\n    log_position: number;\n    metadata?: { [name: string]: boolean | number | number | string } | null;\n    name: string;\n    tenant: string;\n    /**\n     * @type {number}\n     * @memberof Vec2\n     */\n    version: number;\n  }\n}\n","/* eslint-disable */\n// tslint:disable\n/**\n * chroma-frontend\n *\n *\n * OpenAPI spec version: 1.0.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator+.\n * https://github.com/karlvr/openapi-generator-plus\n * Do not edit the class manually.\n */\n\nexport interface ConfigurationParameters {\n  apiKey?: string | ((name: string) => string | null);\n  username?: string;\n  password?: string;\n  authorization?: string | ((name: string, scopes?: string[]) => string | null);\n  basePath?: string;\n}\n\nexport class Configuration {\n  /**\n   * parameter for apiKey security\n   * @param name security name\n   * @memberof Configuration\n   */\n  apiKey?: string | ((name: string) => string | null);\n  /**\n   * parameter for basic security\n   *\n   * @type {string}\n   * @memberof Configuration\n   */\n  username?: string;\n  /**\n   * parameter for basic security\n   *\n   * @type {string}\n   * @memberof Configuration\n   */\n  password?: string;\n  /**\n   * parameter for oauth2, openIdConnect or http security\n   * @param name security name\n   * @param scopes oauth2 scopes\n   * @memberof Configuration\n   */\n  authorization?: string | ((name: string, scopes?: string[]) => string | null);\n  /**\n   * override base path\n   *\n   * @type {string}\n   * @memberof Configuration\n   */\n  basePath?: string;\n\n  constructor(param: ConfigurationParameters = {}) {\n    this.apiKey = param.apiKey;\n    this.username = param.username;\n    this.password = param.password;\n    this.authorization = param.authorization;\n    this.basePath = param.basePath;\n  }\n}\n","/**\n * This is a generic Chroma error.\n */\nexport class ChromaError extends Error {\n  constructor(name: string, message: string, public readonly cause?: unknown) {\n    super(message);\n    this.name = name;\n  }\n}\n\n/**\n * Indicates that there was a problem with the connection to the Chroma server (e.g. the server is down or the client is not connected to the internet)\n */\nexport class ChromaConnectionError extends Error {\n  name = \"ChromaConnectionError\";\n  constructor(message: string, public readonly cause?: unknown) {\n    super(message);\n  }\n}\n\n/** Indicates that the server encountered an error while handling the request. */\nexport class ChromaServerError extends Error {\n  name = \"ChromaServerError\";\n  constructor(message: string, public readonly cause?: unknown) {\n    super(message);\n  }\n}\n\n/** Indicate that there was an issue with the request that the client made. */\nexport class ChromaClientError extends Error {\n  name = \"ChromaClientError\";\n  constructor(message: string, public readonly cause?: unknown) {\n    super(message);\n  }\n}\n\n/** The request lacked valid authentication. */\nexport class ChromaUnauthorizedError extends Error {\n  name = \"ChromaAuthError\";\n  constructor(message: string, public readonly cause?: unknown) {\n    super(message);\n  }\n}\n\n/** The user does not have permission to access the requested resource. */\nexport class ChromaForbiddenError extends Error {\n  name = \"ChromaForbiddenError\";\n  constructor(message: string, public readonly cause?: unknown) {\n    super(message);\n  }\n}\n\nexport class ChromaNotFoundError extends Error {\n  name = \"ChromaNotFoundError\";\n  constructor(message: string, public readonly cause?: unknown) {\n    super(message);\n  }\n}\n\nexport class ChromaValueError extends Error {\n  name = \"ChromaValueError\";\n  constructor(message: string, public readonly cause?: unknown) {\n    super(message);\n  }\n}\n\nexport class InvalidCollectionError extends Error {\n  name = \"InvalidCollectionError\";\n  constructor(message: string, public readonly cause?: unknown) {\n    super(message);\n  }\n}\n\nexport class InvalidArgumentError extends Error {\n  name = \"InvalidArgumentError\";\n  constructor(message: string, public readonly cause?: unknown) {\n    super(message);\n  }\n}\n\nexport class ChromaUniqueError extends Error {\n  name = \"ChromaUniqueError\";\n  constructor(message: string, public readonly cause?: unknown) {\n    super(message);\n  }\n}\n\nexport class ChromaQuotaExceededError extends Error {\n  name = \"ChromaQuotaExceededError\";\n  constructor(message: string, public readonly cause?: unknown) {\n    super(message);\n  }\n}\n\nexport function createErrorByType(type: string, message: string) {\n  switch (type) {\n    case \"InvalidCollection\":\n      return new InvalidCollectionError(message);\n    case \"InvalidArgumentError\":\n      return new InvalidArgumentError(message);\n    default:\n      return undefined;\n  }\n}\n","import {\n  IEmbeddingFunction,\n  EmbeddingFunctionSpace,\n} from \"./embeddings/IEmbeddingFunction\";\nimport { DefaultEmbeddingFunction } from \"./embeddings/DefaultEmbeddingFunction\";\nimport { Api } from \"./generated\";\nexport type HnswSpace = EmbeddingFunctionSpace;\n\n// --- Common Interfaces ---\n\nexport class InvalidConfigurationError extends Error {\n  constructor(message: string) {\n    super(message);\n    this.name = \"InvalidConfigurationError\";\n  }\n}\n\n// --- HNSW Configuration ---\n\nexport interface HNSWConfiguration {\n  space?: HnswSpace;\n  ef_construction?: number;\n  max_neighbors?: number;\n  ef_search?: number;\n  num_threads?: number;\n  batch_size?: number;\n  sync_threshold?: number;\n  resize_factor?: number;\n}\n\nexport interface CreateHNSWConfiguration extends HNSWConfiguration {}\n\nexport interface UpdateHNSWConfiguration {\n  ef_search?: number;\n  num_threads?: number;\n  batch_size?: number;\n  sync_threshold?: number;\n  resize_factor?: number;\n}\n\n// --- SPANN Configuration ---\n\nexport interface SpannConfiguration {\n  space?: EmbeddingFunctionSpace; // Re-using HnswSpace which is EmbeddingFunctionSpace\n  search_nprobe?: number;\n  write_nprobe?: number;\n  ef_construction?: number;\n  max_neighbors?: number;\n  ef_search?: number;\n  reassign_neighbor_count?: number;\n  split_threshold?: number;\n  merge_threshold?: number;\n}\n\nexport interface CreateSpannConfiguration extends SpannConfiguration {}\n\nexport interface UpdateSpannConfiguration {\n  search_nprobe?: number;\n  ef_search?: number;\n}\n\n// --- Collection Configuration ---\n\nexport interface CollectionConfiguration {\n  hnsw?: HNSWConfiguration | null;\n  spann?: SpannConfiguration | null;\n  embedding_function?: IEmbeddingFunction | null;\n}\n\nexport interface CreateCollectionConfiguration {\n  hnsw?: CreateHNSWConfiguration | null;\n  spann?: CreateSpannConfiguration | null;\n  embedding_function?: IEmbeddingFunction | null;\n}\n\nexport interface UpdateCollectionConfiguration {\n  hnsw?: UpdateHNSWConfiguration | null;\n  spann?: UpdateSpannConfiguration | null;\n  embedding_function?: IEmbeddingFunction | null;\n}\n\n// --- Known Embedding Functions Registry ---\n// Known embedding functions registry (replace with actual implementation if needed)\nconst knownEmbeddingFunctions: Record<\n  string,\n  { build_from_config: (config: any) => IEmbeddingFunction }\n> = {};\n\n// --- JSON Conversion Helpers ---\n\nfunction serializeEmbeddingFunction(\n  ef: IEmbeddingFunction | null | undefined,\n): Record<string, any> | null {\n  let efConfig: Record<string, any> | null = null;\n  if (ef === null || ef === undefined) {\n    efConfig = { type: \"legacy\" };\n  } else {\n    try {\n      if (ef.getConfig && ef.name) {\n        if (ef.validateConfig) {\n          ef.validateConfig(ef.getConfig());\n        }\n        efConfig = {\n          name: ef.name,\n          type: \"known\",\n          config: ef.getConfig(),\n        };\n      } else {\n        console.warn(\n          \"Could not serialize embedding function - missing getConfig or name method.\",\n        );\n        efConfig = { type: \"legacy\" }; // Fallback\n      }\n    } catch (e) {\n      console.warn(\n        \"Error processing embedding function for serialization, falling back to legacy:\",\n        e,\n        \"DeprecationWarning\",\n      );\n      efConfig = { type: \"legacy\" };\n    }\n  }\n  return efConfig;\n}\n\nfunction deserializeEmbeddingFunction(\n  efConfig: Record<string, any> | null | undefined,\n): IEmbeddingFunction | null | undefined {\n  if (!efConfig) return undefined; // Or null? Python seems to map missing to None/null EF.\n\n  if (efConfig.type === \"legacy\") {\n    console.warn(\n      \"Legacy embedding function config detected during load.\",\n      \"DeprecationWarning\",\n    );\n    return null; // Treat legacy as null/default\n  } else if (\n    efConfig.type === \"known\" &&\n    knownEmbeddingFunctions[efConfig.name]\n  ) {\n    const efBuilder = knownEmbeddingFunctions[efConfig.name];\n    try {\n      return efBuilder.build_from_config(efConfig.config);\n    } catch (e) {\n      console.error(\"Error building embedding function from config:\", e);\n      return null; // Fallback if build fails\n    }\n  } else {\n    console.warn(\n      `Unknown embedding function type or name: ${efConfig.type}, ${efConfig.name}`,\n    );\n    return null;\n  }\n}\n\n// TODO: make warnings prettier and add link to migration docs\nexport function loadCollectionConfigurationFromJson(\n  jsonMap: Record<string, any>,\n): CollectionConfiguration {\n  if (jsonMap.hnsw && jsonMap.spann) {\n    throw new InvalidConfigurationError(\n      \"Cannot specify both 'hnsw' and 'spann' configurations.\",\n    );\n  }\n  let hnswConfig: HNSWConfiguration | null | undefined = jsonMap.hnsw; // Assume structure matches HNSWConfiguration\n  let spannConfig: SpannConfiguration | null | undefined = jsonMap.spann; // Assume structure matches SpannConfiguration\n  let embeddingFunction: IEmbeddingFunction | null | undefined =\n    deserializeEmbeddingFunction(jsonMap.embedding_function);\n\n  return {\n    hnsw: hnswConfig,\n    spann: spannConfig,\n    embedding_function: embeddingFunction,\n  };\n}\n\nexport function loadCollectionConfigurationFromJsonStr(\n  jsonStr: string,\n): CollectionConfiguration {\n  try {\n    const jsonMap = JSON.parse(jsonStr);\n    return loadCollectionConfigurationFromJson(jsonMap);\n  } catch (e: any) {\n    if (e instanceof InvalidConfigurationError) throw e;\n    console.error(\"Error parsing JSON string for collection configuration:\", e);\n    throw new Error(\"Invalid JSON string for collection configuration\");\n  }\n}\n\nexport function collectionConfigurationToJson(\n  config: CollectionConfiguration,\n): Record<string, any> {\n  if (config.hnsw && config.spann) {\n    throw new InvalidConfigurationError(\n      \"Cannot specify both 'hnsw' and 'spann' configurations.\",\n    );\n  }\n  let hnswConfig = config.hnsw;\n  let spannConfig = config.spann;\n  let ef = config.embedding_function;\n  let efConfig = serializeEmbeddingFunction(ef);\n\n  // Basic validation/casting attempt (already done in create/update, but maybe check types?)\n  if (hnswConfig && typeof hnswConfig !== \"object\") {\n    throw new Error(\"Invalid HNSW config provided\");\n  }\n  if (spannConfig && typeof spannConfig !== \"object\") {\n    throw new Error(\"Invalid SPANN config provided\");\n  }\n\n  // Note: Validation (like validateCreateHnswConfig) is tied to creation/update actions\n  // not necessarily to retrieving/displaying the existing config.\n\n  return {\n    hnsw: hnswConfig,\n    spann: spannConfig,\n    embedding_function: efConfig,\n  };\n}\n\nexport function collectionConfigurationToJsonStr(\n  config: CollectionConfiguration,\n): string {\n  try {\n    const jsonObj = collectionConfigurationToJson(config);\n    return JSON.stringify(jsonObj);\n  } catch (e: any) {\n    if (e instanceof InvalidConfigurationError) throw e;\n    console.error(\"Error serializing collection configuration to JSON:\", e);\n    throw new Error(\"Could not serialize collection configuration\");\n  }\n}\n\n// --- Create Configuration Helpers ---\n\nexport function loadApiCollectionConfigurationFromCreateCollectionConfiguration(\n  config: CreateCollectionConfiguration,\n): Api.CollectionConfiguration {\n  // Cast needed because the generated Api type might not be perfectly aligned\n  // with our internal Create* types, but the structure should match after JSON conversion.\n  return createCollectionConfigurationToJson(\n    config,\n  ) as Api.CollectionConfiguration;\n}\n\n// TODO: make warnings prettier and add link to migration docs\nexport function createCollectionConfigurationToJson(\n  config: CreateCollectionConfiguration,\n): Record<string, any> {\n  if (config.hnsw && config.spann) {\n    throw new InvalidConfigurationError(\n      \"Cannot specify both 'hnsw' and 'spann' configurations during creation.\",\n    );\n  }\n  let hnswConfig = config.hnsw;\n  let spannConfig = config.spann;\n  let ef = config.embedding_function;\n  let efConfig = serializeEmbeddingFunction(ef);\n\n  // Basic validation/casting attempt\n  if (hnswConfig && typeof hnswConfig !== \"object\") {\n    throw new Error(\n      \"Invalid HNSW config provided in CreateCollectionConfiguration\",\n    );\n  }\n  if (spannConfig && typeof spannConfig !== \"object\") {\n    throw new Error(\n      \"Invalid SPANN config provided in CreateCollectionConfiguration\",\n    );\n  }\n\n  return {\n    hnsw: hnswConfig,\n    spann: spannConfig,\n    embedding_function: efConfig,\n  };\n}\n\n// --- Update Configuration Helpers ---\n\nexport function jsonToUpdateHnswConfiguration(\n  jsonMap: Record<string, any>,\n): UpdateHNSWConfiguration {\n  const config: UpdateHNSWConfiguration = {};\n  if (\"ef_search\" in jsonMap) config.ef_search = jsonMap.ef_search;\n  if (\"num_threads\" in jsonMap) config.num_threads = jsonMap.num_threads;\n  if (\"batch_size\" in jsonMap) config.batch_size = jsonMap.batch_size;\n  if (\"sync_threshold\" in jsonMap)\n    config.sync_threshold = jsonMap.sync_threshold;\n  if (\"resize_factor\" in jsonMap) config.resize_factor = jsonMap.resize_factor;\n  return config;\n}\n\nexport function jsonToUpdateSpannConfiguration(\n  jsonMap: Record<string, any>,\n): UpdateSpannConfiguration {\n  const config: UpdateSpannConfiguration = {};\n  if (\"search_nprobe\" in jsonMap) config.search_nprobe = jsonMap.search_nprobe;\n  if (\"ef_search\" in jsonMap) config.ef_search = jsonMap.ef_search;\n  return config;\n}\n\nexport function updateCollectionConfigurationToJson(\n  config: UpdateCollectionConfiguration,\n): Record<string, any> {\n  if (config.hnsw && config.spann) {\n    throw new InvalidConfigurationError(\n      \"Cannot specify both 'hnsw' and 'spann' configurations during update.\",\n    );\n  }\n  let hnswConfig = config.hnsw;\n  let spannConfig = config.spann;\n  let ef = config.embedding_function;\n  let efConfig: Record<string, any> | null | undefined = undefined; // Initialize as undefined\n\n  // Validate HNSW config if present\n  if (hnswConfig) {\n    if (typeof hnswConfig !== \"object\") {\n      throw new Error(\n        \"Invalid HNSW config provided in UpdateCollectionConfiguration\",\n      );\n    }\n  }\n\n  // Validate SPANN config if present\n  if (spannConfig) {\n    if (typeof spannConfig !== \"object\") {\n      throw new Error(\n        \"Invalid SPANN config provided in UpdateCollectionConfiguration\",\n      );\n    }\n  }\n\n  // Handle embedding function serialization only if explicitly provided (ef !== undefined)\n  if (ef !== undefined) {\n    efConfig = serializeEmbeddingFunction(ef);\n  }\n\n  // Construct the result object, only including defined fields\n  const result: Record<string, any> = {};\n  if (hnswConfig !== undefined) result.hnsw = hnswConfig;\n  if (spannConfig !== undefined) result.spann = spannConfig;\n  if (efConfig !== undefined) result.embedding_function = efConfig;\n\n  // Check if the result is empty, which means no valid update fields were provided\n  if (Object.keys(result).length === 0) {\n    throw new InvalidConfigurationError(\n      \"No valid configuration fields provided for update.\",\n    );\n  }\n\n  return result;\n}\n\nexport function loadApiUpdateCollectionConfigurationFromUpdateCollectionConfiguration(\n  config: UpdateCollectionConfiguration,\n): Api.UpdateCollectionConfiguration {\n  return updateCollectionConfigurationToJson(\n    config,\n  ) as Api.UpdateCollectionConfiguration;\n}\n","import { ChromaClient } from \"./ChromaClient\";\nimport { IEmbeddingFunction } from \"./embeddings/IEmbeddingFunction\";\nimport {\n  CollectionMetadata,\n  AddRecordsParams,\n  UpsertRecordsParams,\n  BaseGetParams,\n  GetResponse,\n  UpdateRecordsParams,\n  QueryRecordsParams,\n  MultiQueryResponse,\n  PeekParams,\n  MultiGetResponse,\n  DeleteParams,\n  Embeddings,\n  CollectionParams,\n  IncludeEnum,\n  Metadata,\n  ForkCollectionParams,\n} from \"./types\";\nimport { prepareRecordRequest, toArray, toArrayOfArrays } from \"./utils\";\nimport { Api as GeneratedApi, Api } from \"./generated\";\nimport {\n  UpdateCollectionConfiguration,\n  loadApiUpdateCollectionConfigurationFromUpdateCollectionConfiguration,\n} from \"./CollectionConfiguration\";\n\nexport class Collection {\n  public name: string;\n  public id: string;\n  public metadata: CollectionMetadata | undefined;\n  /**\n   * @ignore\n   */\n  private client: ChromaClient;\n  /**\n   * @ignore\n   */\n  public embeddingFunction: IEmbeddingFunction;\n\n  public configuration: Api.CollectionConfiguration | undefined;\n\n  /**\n   * @ignore\n   */\n  constructor(\n    name: string,\n    id: string,\n    client: ChromaClient,\n    embeddingFunction: IEmbeddingFunction,\n    metadata?: CollectionMetadata,\n    configuration?: Api.CollectionConfiguration,\n  ) {\n    this.name = name;\n    this.id = id;\n    this.metadata = metadata;\n    this.client = client;\n    this.embeddingFunction = embeddingFunction;\n    this.configuration = configuration;\n  }\n\n  /**\n   * Add items to the collection\n   * @param {Object} params - The parameters for the query.\n   * @param {ID | IDs} [params.ids] - IDs of the items to add.\n   * @param {Embedding | Embeddings} [params.embeddings] - Optional embeddings of the items to add.\n   * @param {Metadata | Metadatas} [params.metadatas] - Optional metadata of the items to add.\n   * @param {Document | Documents} [params.documents] - Optional documents of the items to add.\n   * @returns {Promise<AddResponse>} - The response from the API. True if successful.\n   *\n   * @example\n   * ```typescript\n   * const response = await collection.add({\n   *   ids: [\"id1\", \"id2\"],\n   *   embeddings: [[1, 2, 3], [4, 5, 6]],\n   *   metadatas: [{ \"key\": \"value\" }, { \"key\": \"value\" }],\n   *   documents: [\"document1\", \"document2\"]\n   * });\n   * ```\n   */\n  async add(params: AddRecordsParams): Promise<void> {\n    await this.client.init();\n\n    await this.client.api.collectionAdd(\n      this.client.tenant,\n      this.client.database,\n      this.id,\n      // TODO: For some reason the auto generated code requires metadata to be defined here.\n      (await prepareRecordRequest(\n        params,\n        this.embeddingFunction,\n      )) as GeneratedApi.AddCollectionRecordsPayload,\n      this.client.api.options,\n    );\n  }\n\n  /**\n   * Upsert items to the collection\n   * @param {Object} params - The parameters for the query.\n   * @param {ID | IDs} [params.ids] - IDs of the items to add.\n   * @param {Embedding | Embeddings} [params.embeddings] - Optional embeddings of the items to add.\n   * @param {Metadata | Metadatas} [params.metadatas] - Optional metadata of the items to add.\n   * @param {Document | Documents} [params.documents] - Optional documents of the items to add.\n   * @returns {Promise<void>}\n   *\n   * @example\n   * ```typescript\n   * const response = await collection.upsert({\n   *   ids: [\"id1\", \"id2\"],\n   *   embeddings: [[1, 2, 3], [4, 5, 6]],\n   *   metadatas: [{ \"key\": \"value\" }, { \"key\": \"value\" }],\n   *   documents: [\"document1\", \"document2\"],\n   * });\n   * ```\n   */\n  async upsert(params: UpsertRecordsParams): Promise<void> {\n    await this.client.init();\n\n    await this.client.api.collectionUpsert(\n      this.client.tenant,\n      this.client.database,\n      this.id,\n      // TODO: For some reason the auto generated code requires metadata to be defined here.\n      (await prepareRecordRequest(\n        params,\n        this.embeddingFunction,\n      )) as GeneratedApi.UpsertCollectionRecordsPayload,\n      this.client.api.options,\n    );\n  }\n\n  /**\n   * Count the number of items in the collection\n   * @returns {Promise<number>} - The number of items in the collection.\n   *\n   * @example\n   * ```typescript\n   * const count = await collection.count();\n   * ```\n   */\n  async count(): Promise<number> {\n    await this.client.init();\n    return (await this.client.api.collectionCount(\n      this.client.tenant,\n      this.client.database,\n      this.id,\n      this.client.api.options,\n    )) as number;\n  }\n\n  /**\n   * Get items from the collection\n   * @param {Object} params - The parameters for the query.\n   * @param {ID | IDs} [params.ids] - Optional IDs of the items to get.\n   * @param {Where} [params.where] - Optional where clause to filter items by.\n   * @param {PositiveInteger} [params.limit] - Optional limit on the number of items to get.\n   * @param {PositiveInteger} [params.offset] - Optional offset on the items to get.\n   * @param {IncludeEnum[]} [params.include] - Optional list of items to include in the response.\n   * @param {WhereDocument} [params.whereDocument] - Optional where clause to filter items by.\n   * @returns {Promise<GetResponse>} - The response from the server.\n   *\n   * @example\n   * ```typescript\n   * const response = await collection.get({\n   *   ids: [\"id1\", \"id2\"],\n   *   where: { \"key\": \"value\" },\n   *   limit: 10,\n   *   offset: 0,\n   *   include: [\"embeddings\", \"metadatas\", \"documents\"],\n   *   whereDocument: { \"$contains\": \"value\" },\n   * });\n   * ```\n   */\n  async get({\n    ids,\n    where,\n    limit,\n    offset,\n    include,\n    whereDocument,\n  }: BaseGetParams = {}): Promise<GetResponse> {\n    await this.client.init();\n\n    const idsArray = ids ? toArray(ids) : undefined;\n\n    const resp = await this.client.api.collectionGet(\n      this.client.tenant,\n      this.client.database,\n      this.id,\n      {\n        ids: idsArray,\n        where,\n        limit,\n        offset,\n        include: include as GeneratedApi.Include[] | undefined,\n        where_document: whereDocument,\n      },\n      this.client.api.options,\n    );\n\n    const finalResp: GetResponse = {\n      ...resp,\n      metadatas: resp.metadatas as (Metadata | null)[],\n      documents: resp.documents as (string | null)[],\n      embeddings: resp.embeddings as Embeddings | null,\n      included: resp.include as unknown as IncludeEnum[],\n    };\n\n    return finalResp;\n  }\n\n  /**\n   * Update items in the collection\n   * @param {Object} params - The parameters for the query.\n   * @param {ID | IDs} [params.ids] - IDs of the items to add.\n   * @param {Embedding | Embeddings} [params.embeddings] - Optional embeddings of the items to add.\n   * @param {Metadata | Metadatas} [params.metadatas] - Optional metadata of the items to add.\n   * @param {Document | Documents} [params.documents] - Optional documents of the items to add.\n   * @returns {Promise<void>}\n   *\n   * @example\n   * ```typescript\n   * const response = await collection.update({\n   *   ids: [\"id1\", \"id2\"],\n   *   embeddings: [[1, 2, 3], [4, 5, 6]],\n   *   metadatas: [{ \"key\": \"value\" }, { \"key\": \"value\" }],\n   *   documents: [\"document1\", \"document2\"],\n   * });\n   * ```\n   */\n  async update(params: UpdateRecordsParams): Promise<void> {\n    await this.client.init();\n\n    await this.client.api.collectionUpdate(\n      this.client.tenant,\n      this.client.database,\n      this.id,\n      await prepareRecordRequest(params, this.embeddingFunction, true),\n      this.client.api.options,\n    );\n  }\n\n  /**\n   * Performs a query on the collection using the specified parameters.\n   *\n   * @param {Object} params - The parameters for the query.\n   * @param {Embedding | Embeddings} [params.queryEmbeddings] - Optional query embeddings to use for the search.\n   * @param {PositiveInteger} [params.nResults] - Optional number of results to return (default is 10).\n   * @param {Where} [params.where] - Optional query condition to filter results based on metadata values.\n   * @param {string | string[]} [params.queryTexts] - Optional query text(s) to search for in the collection.\n   * @param {WhereDocument} [params.whereDocument] - Optional query condition to filter results based on document content.\n   * @param {IncludeEnum[]} [params.include] - Optional array of fields to include in the result, such as \"metadata\" and \"document\".\n   * @param {IDs} [params.ids] - Optional IDs to filter on before querying.\n   *\n   * @returns {Promise<QueryResponse>} A promise that resolves to the query results.\n   * @throws {Error} If there is an issue executing the query.\n   * @example\n   * // Query the collection using embeddings\n   * const results = await collection.query({\n   *   queryEmbeddings: [[0.1, 0.2, ...], ...],\n   *   nResults: 10,\n   *   where: {\"name\": {\"$eq\": \"John Doe\"}},\n   *   include: [\"metadata\", \"document\"]\n   * });\n   * @example\n   * ```js\n   * // Query the collection using query text\n   * const results = await collection.query({\n   *   queryTexts: \"some text\",\n   *   nResults: 10,\n   *   where: {\"name\": {\"$eq\": \"John Doe\"}},\n   *   include: [\"metadata\", \"document\"]\n   * });\n   * ```\n   *\n   */\n  async query({\n    nResults = 10,\n    where,\n    whereDocument,\n    include,\n    queryTexts,\n    queryEmbeddings,\n    ids,\n  }: QueryRecordsParams): Promise<MultiQueryResponse> {\n    await this.client.init();\n\n    let embeddings: number[][] = [];\n\n    // If queryEmbeddings is provided, use it\n    if (queryEmbeddings) {\n      embeddings = toArrayOfArrays(queryEmbeddings);\n    }\n    // If queryTexts is provided, use it to generate queryEmbeddings\n    else if (queryTexts) {\n      embeddings = await this.embeddingFunction.generate(toArray(queryTexts));\n    }\n\n    if (embeddings.length === 0) {\n      throw new TypeError(\n        \"You must provide either queryEmbeddings or queryTexts\",\n      );\n    }\n\n    let filter_ids: string[] | null = null;\n    if (ids) {\n      filter_ids = toArray(ids);\n    }\n\n    const resp = await this.client.api.collectionQuery(\n      this.client.tenant,\n      this.client.database,\n      this.id,\n      nResults,\n      undefined,\n      {\n        query_embeddings: embeddings,\n        ids: filter_ids,\n        n_results: nResults,\n        where,\n        where_document: whereDocument,\n        include: include as GeneratedApi.Include[] | undefined,\n      },\n      this.client.api.options,\n    );\n\n    const finalResp: MultiQueryResponse = {\n      ...resp,\n      metadatas: resp.metadatas as (Metadata | null)[][],\n      documents: resp.documents as (string | null)[][],\n      embeddings: resp.embeddings as Embeddings[] | null,\n      distances: resp.distances as number[][] | null,\n      included: resp.include as unknown as IncludeEnum[],\n    };\n\n    return finalResp;\n  }\n\n  /**\n   * Modify the collection name or metadata\n   * @param {Object} params - The parameters for the query.\n   * @param {string} [params.name] - Optional new name for the collection.\n   * @param {CollectionMetadata} [params.metadata] - Optional new metadata for the collection.\n   * @returns {Promise<void>} - The response from the API.\n   *\n   * @example\n   * ```typescript\n   * const response = await client.updateCollection({\n   *   name: \"new name\",\n   *   metadata: { \"key\": \"value\" },\n   * });\n   * ```\n   */\n  async modify({\n    name,\n    metadata,\n    configuration,\n  }: {\n    name?: string;\n    metadata?: CollectionMetadata;\n    configuration?: UpdateCollectionConfiguration;\n  }): Promise<CollectionParams> {\n    await this.client.init();\n    let updateCollectionConfiguration:\n      | Api.UpdateCollectionConfiguration\n      | undefined = undefined;\n    if (configuration) {\n      updateCollectionConfiguration =\n        loadApiUpdateCollectionConfigurationFromUpdateCollectionConfiguration(\n          configuration,\n        );\n    }\n    const resp = (await this.client.api.updateCollection(\n      this.client.tenant,\n      this.client.database,\n      this.id,\n      {\n        new_name: name,\n        new_metadata: metadata,\n        new_configuration: updateCollectionConfiguration,\n      },\n      this.client.api.options,\n    )) as CollectionParams;\n\n    if (name) {\n      this.name = name;\n    }\n\n    if (metadata) {\n      this.metadata = metadata;\n    }\n\n    return resp;\n  }\n\n  /**\n   * Peek inside the collection\n   * @param {Object} params - The parameters for the query.\n   * @param {PositiveInteger} [params.limit] - Optional number of results to return (default is 10).\n   * @returns {Promise<GetResponse>} A promise that resolves to the query results.\n   * @throws {Error} If there is an issue executing the query.\n   *\n   * @example\n   * ```typescript\n   * const results = await collection.peek({\n   *   limit: 10\n   * });\n   * ```\n   */\n  async peek({ limit = 10 }: PeekParams = {}): Promise<MultiGetResponse> {\n    await this.client.init();\n    return (await this.client.api.collectionGet(\n      this.client.tenant,\n      this.client.database,\n      this.id,\n      {\n        limit,\n      },\n      this.client.api.options,\n    )) as unknown as MultiGetResponse;\n  }\n\n  /**\n   * Deletes items from the collection.\n   * @param {Object} params - The parameters for deleting items from the collection.\n   * @param {ID | IDs} [params.ids] - Optional ID or array of IDs of items to delete.\n   * @param {Where} [params.where] - Optional query condition to filter items to delete based on metadata values.\n   * @param {WhereDocument} [params.whereDocument] - Optional query condition to filter items to delete based on document content.\n   * @returns {Promise<string[]>} A promise that resolves to the IDs of the deleted items.\n   * @throws {Error} If there is an issue deleting items from the collection.\n   *\n   * @example\n   * ```typescript\n   * const results = await collection.delete({\n   *   ids: \"some_id\",\n   *   where: {\"name\": {\"$eq\": \"John Doe\"}},\n   *   whereDocument: {\"$contains\":\"search_string\"}\n   * });\n   * ```\n   */\n  async delete({\n    ids,\n    where,\n    whereDocument,\n  }: DeleteParams = {}): Promise<void> {\n    await this.client.init();\n\n    const idsArray = ids ? toArray(ids) : undefined;\n\n    await this.client.api.collectionDelete(\n      this.client.tenant,\n      this.client.database,\n      this.id,\n      {\n        ids: idsArray,\n        where: where,\n        where_document: whereDocument,\n      },\n      this.client.api.options,\n    );\n  }\n\n  /**\n   * Forks the collection into a new collection with a new name and configuration.\n   *\n   * @param {Object} params - The parameters for forking the collection.\n   * @param {string} params.newName - The name for the new forked collection.\n   *\n   * @returns {Promise<Collection>} A promise that resolves to the new forked Collection object.\n   * @throws {Error} If there is an issue forking the collection.\n   *\n   * @example\n   * ```typescript\n   * const newCollection = await collection.fork({\n   *   newName: \"my_forked_collection\",\n   * });\n   * ```\n   */\n  async fork({ newName }: ForkCollectionParams): Promise<Collection> {\n    await this.client.init();\n\n    const resp = await this.client.api.forkCollection(\n      this.client.tenant,\n      this.client.database,\n      this.id,\n      {\n        new_name: newName,\n      },\n      this.client.api.options,\n    );\n\n    // The API returns an Api.Collection, we wrap it in our Collection class\n    const newCollection = new Collection(\n      resp.name,\n      resp.id,\n      this.client,\n      this.embeddingFunction,\n      resp.metadata as CollectionMetadata | undefined,\n    );\n\n    return newCollection;\n  }\n}\n","import { AdminClient } from \"./AdminClient\";\nimport { ChromaClient } from \"./ChromaClient\";\nimport { ChromaConnectionError } from \"./Errors\";\nimport { IEmbeddingFunction } from \"./embeddings/IEmbeddingFunction\";\nimport {\n  AddRecordsParams,\n  BaseRecordOperationParams,\n  CollectionParams,\n  Metadata,\n  MultiRecordOperationParams,\n  UpdateRecordsParams,\n} from \"./types\";\nimport { Collection } from \"./Collection\";\n\n// a function to convert a non-Array object to an Array\nexport function toArray<T>(obj: T | T[]): Array<T> {\n  if (Array.isArray(obj)) {\n    return obj;\n  } else {\n    return [obj] as T[];\n  }\n}\n\n// a function to convert an array to array of arrays\nexport function toArrayOfArrays<T>(\n  obj: Array<Array<T>> | Array<T>,\n): Array<Array<T>> {\n  if (obj.length === 0) {\n    return [];\n  }\n\n  if (Array.isArray(obj[0])) {\n    return obj as Array<Array<T>>;\n  }\n\n  if (obj[0] && typeof (obj[0] as any)[Symbol.iterator] === \"function\") {\n    return (obj as unknown as Array<Iterable<T>>).map((el) => Array.from(el));\n  }\n\n  return [obj] as Array<Array<T>>;\n}\n\n/**\n * Dynamically imports a specified module, providing a workaround for browser environments.\n * This function is necessary because we dynamically import optional dependencies\n * which can cause issues with bundlers that detect the import and throw an error\n * on build time when the dependency is not installed.\n * Using this workaround, the dynamic import is only evaluated on runtime\n * where we work with try-catch when importing optional dependencies.\n *\n * @param {string} moduleName - Specifies the module to import.\n * @returns {Promise<any>} Returns a Promise that resolves to the imported module.\n */\nexport async function importOptionalModule(moduleName: string) {\n  return Function(`return import(\"${moduleName}\")`)();\n}\n\nexport async function validateTenantDatabase(\n  adminClient: AdminClient,\n  tenant: string,\n  database: string,\n): Promise<void> {\n  try {\n    await adminClient.getTenant({ name: tenant });\n  } catch (error) {\n    if (error instanceof ChromaConnectionError) {\n      throw error;\n    }\n    throw new Error(\n      `Could not connect to tenant ${tenant}. Are you sure it exists? Underlying error:\n${error}`,\n    );\n  }\n\n  try {\n    await adminClient.getDatabase({ name: database, tenantName: tenant });\n  } catch (error) {\n    if (error instanceof ChromaConnectionError) {\n      throw error;\n    }\n    throw new Error(\n      `Could not connect to database ${database} for tenant ${tenant}. Are you sure it exists? Underlying error:\n${error}`,\n    );\n  }\n}\n\nexport function isBrowser() {\n  return (\n    typeof window !== \"undefined\" && typeof window.document !== \"undefined\"\n  );\n}\n\nfunction arrayifyParams(\n  params: BaseRecordOperationParams,\n): MultiRecordOperationParams {\n  return {\n    ids: toArray(params.ids),\n    embeddings: params.embeddings\n      ? toArrayOfArrays(params.embeddings)\n      : undefined,\n    metadatas: params.metadatas\n      ? toArray<Metadata>(params.metadatas)\n      : undefined,\n    documents: params.documents ? toArray(params.documents) : undefined,\n  };\n}\n\nexport async function prepareRecordRequest(\n  reqParams: AddRecordsParams | UpdateRecordsParams,\n  embeddingFunction: IEmbeddingFunction,\n  update?: true,\n): Promise<MultiRecordOperationParams> {\n  const { ids, embeddings, metadatas, documents } = arrayifyParams(reqParams);\n\n  if (!embeddings && !documents && !update) {\n    throw new Error(\"embeddings and documents cannot both be undefined\");\n  }\n\n  const embeddingsArray = embeddings\n    ? embeddings\n    : documents\n    ? await embeddingFunction.generate(documents)\n    : undefined;\n\n  if (!embeddingsArray && !update) {\n    throw new Error(\"Failed to generate embeddings for your request.\");\n  }\n\n  for (let i = 0; i < ids.length; i += 1) {\n    if (typeof ids[i] !== \"string\") {\n      throw new Error(\n        `Expected ids to be strings, found ${typeof ids[i]} at index ${i}`,\n      );\n    }\n  }\n\n  if (\n    (embeddingsArray !== undefined && ids.length !== embeddingsArray.length) ||\n    (metadatas !== undefined && ids.length !== metadatas.length) ||\n    (documents !== undefined && ids.length !== documents.length)\n  ) {\n    throw new Error(\n      \"ids, embeddings, metadatas, and documents must all be the same length\",\n    );\n  }\n\n  const uniqueIds = new Set(ids);\n  if (uniqueIds.size !== ids.length) {\n    const duplicateIds = ids.filter(\n      (item, index) => ids.indexOf(item) !== index,\n    );\n    throw new Error(\n      `ID's must be unique, found duplicates for: ${duplicateIds}`,\n    );\n  }\n\n  if (\n    embeddingsArray &&\n    embeddingsArray.some((embedding) => embedding.length === 0)\n  ) {\n    throw new Error(\"got empty embedding at pos\");\n  }\n\n  return {\n    ids,\n    metadatas,\n    documents,\n    embeddings: embeddingsArray,\n  };\n}\n\nexport function wrapCollection(\n  api: ChromaClient,\n  collection: CollectionParams,\n): Collection {\n  return new Collection(\n    collection.name,\n    collection.id,\n    api,\n    collection.embeddingFunction,\n    collection.metadata,\n    collection.configuration,\n  );\n}\n","export type AuthHeaders = { [header: string]: string };\ntype TokenHeaderType = \"AUTHORIZATION\" | \"X_CHROMA_TOKEN\";\n\nexport type AuthOptions = {\n  provider: ClientAuthProvider | string | undefined;\n  credentials?: any | undefined;\n\n  // Only relevant for token auth\n  tokenHeaderType?: TokenHeaderType | undefined;\n};\n\nexport const tokenHeaderTypeToHeaderKey = (\n  headerType: TokenHeaderType,\n): string => {\n  if (headerType === \"AUTHORIZATION\") {\n    return \"Authorization\";\n  } else {\n    return \"X-Chroma-Token\";\n  }\n};\n\nconst base64Encode = (str: string): string => {\n  return Buffer.from(str).toString(\"base64\");\n};\n\nexport interface ClientAuthProvider {\n  /**\n   * Abstract method for authenticating a client.\n   */\n  authenticate(): AuthHeaders;\n}\n\nexport class BasicAuthClientProvider implements ClientAuthProvider {\n  private readonly credentials: AuthHeaders;\n\n  /**\n   * Creates a new BasicAuthClientProvider.\n   * @param textCredentials - The credentials for the authentication provider. Must be of the form \"username:password\". If not supplied, the environment variable CHROMA_CLIENT_AUTH_CREDENTIALS will be used.\n   * @throws {Error} If neither credentials provider or text credentials are supplied.\n   */\n  constructor(textCredentials: string | undefined) {\n    const creds = textCredentials ?? process.env.CHROMA_CLIENT_AUTH_CREDENTIALS;\n    if (creds === undefined) {\n      throw new Error(\n        \"Credentials must be supplied via environment variable (CHROMA_CLIENT_AUTH_CREDENTIALS) or passed in as configuration.\",\n      );\n    }\n    this.credentials = {\n      Authorization: \"Basic \" + base64Encode(creds),\n    };\n  }\n\n  authenticate(): AuthHeaders {\n    return this.credentials;\n  }\n}\n\nexport class TokenAuthClientProvider implements ClientAuthProvider {\n  private readonly credentials: AuthHeaders;\n\n  constructor(\n    textCredentials: any,\n    headerType: TokenHeaderType = \"AUTHORIZATION\",\n  ) {\n    const creds = textCredentials ?? process.env.CHROMA_CLIENT_AUTH_CREDENTIALS;\n    if (creds === undefined) {\n      throw new Error(\n        \"Credentials must be supplied via environment variable (CHROMA_CLIENT_AUTH_CREDENTIALS) or passed in as configuration.\",\n      );\n    }\n\n    const headerKey: string = tokenHeaderTypeToHeaderKey(headerType);\n    const headerVal =\n      headerType === \"AUTHORIZATION\" ? `Bearer ${creds}` : creds;\n    this.credentials = {};\n    this.credentials[headerKey] = headerVal;\n  }\n\n  authenticate(): AuthHeaders {\n    return this.credentials;\n  }\n}\n\nexport const authOptionsToAuthProvider = (\n  auth: AuthOptions,\n): ClientAuthProvider => {\n  if (auth.provider === undefined) {\n    throw new Error(\"Auth provider not specified\");\n  }\n  if (auth.credentials === undefined) {\n    throw new Error(\"Auth credentials not specified\");\n  }\n  switch (auth.provider) {\n    case \"basic\":\n      return new BasicAuthClientProvider(auth.credentials);\n    case \"token\":\n      return new TokenAuthClientProvider(\n        auth.credentials,\n        auth.tokenHeaderType,\n      );\n      break;\n    default:\n      throw new Error(\"Invalid auth provider\");\n  }\n};\n","import {\n  ChromaUnauthorizedError,\n  ChromaClientError,\n  ChromaConnectionError,\n  ChromaForbiddenError,\n  ChromaNotFoundError,\n  ChromaServerError,\n  ChromaValueError,\n  ChromaError,\n  createErrorByType,\n  ChromaUniqueError,\n  ChromaQuotaExceededError,\n} from \"./Errors\";\nimport { FetchAPI } from \"./generated\";\n\nfunction isOfflineError(error: any): boolean {\n  return Boolean(\n    (error?.name === \"TypeError\" || error?.name === \"FetchError\") &&\n      (error.message?.includes(\"fetch failed\") ||\n        error.message?.includes(\"Failed to fetch\") ||\n        error.message?.includes(\"ENOTFOUND\")),\n  );\n}\n\nfunction parseServerError(error: string | undefined): Error {\n  const regex = /(\\w+)\\('(.+)'\\)/;\n  const match = error?.match(regex);\n  if (match) {\n    const [, name, message] = match;\n    switch (name) {\n      case \"ValueError\":\n        return new ChromaValueError(message);\n      default:\n        return new ChromaError(name, message);\n    }\n  }\n  return new ChromaServerError(\n    \"The server encountered an error while handling the request.\",\n  );\n}\n\n/** This utility allows a single entrypoint for custom error handling logic\n *  that works across all ChromaClient methods.\n *\n *  It is intended to be passed to the ApiApi constructor.\n */\nexport const chromaFetch: FetchAPI = async (\n  input: RequestInfo | URL,\n  init?: RequestInit,\n): Promise<Response> => {\n  try {\n    const resp = await fetch(input, init);\n\n    const clonedResp = resp.clone();\n    const respBody = await clonedResp.json();\n    if (!clonedResp.ok) {\n      const error = createErrorByType(respBody?.error, respBody?.message);\n      if (error) {\n        throw error;\n      }\n      switch (resp.status) {\n        case 400:\n          throw new ChromaClientError(\n            `Bad request to ${input} with status: ${resp.statusText}`,\n          );\n        case 401:\n          throw new ChromaUnauthorizedError(`Unauthorized`);\n        case 403:\n          throw new ChromaForbiddenError(\n            `You do not have permission to access the requested resource.`,\n          );\n        case 404:\n          throw new ChromaNotFoundError(\n            `The requested resource could not be found: ${input}`,\n          );\n        case 409:\n          throw new ChromaUniqueError(\"The resource already exists\");\n        case 422:\n          if (\n            respBody?.message &&\n            respBody?.message.startsWith(\"Quota exceeded\")\n          ) {\n            throw new ChromaQuotaExceededError(respBody?.message);\n          }\n          break;\n        case 500:\n          throw parseServerError(respBody?.error);\n        case 502:\n        case 503:\n        case 504:\n          throw new ChromaConnectionError(\n            `Unable to connect to the chromadb server. Please try again later.`,\n          );\n      }\n\n      throw new Error(\n        `Failed to fetch ${input} with status ${resp.status}: ${resp.statusText}`,\n      );\n    }\n\n    if (respBody?.error) {\n      throw parseServerError(respBody.error);\n    }\n\n    return resp;\n  } catch (error) {\n    if (isOfflineError(error)) {\n      throw new ChromaConnectionError(\n        \"Failed to connect to chromadb. Make sure your server is running and try again. If you are running from a browser, make sure that your chromadb instance is configured to allow requests from the current origin using the CHROMA_SERVER_CORS_ALLOW_ORIGINS environment variable.\",\n        error,\n      );\n    }\n    throw error;\n  }\n};\n","import { Configuration, ApiApi as DefaultApi } from \"./generated\";\nimport { validateTenantDatabase } from \"./utils\";\nimport { ConfigOptions } from \"./types\";\nimport {\n  AuthOptions,\n  authOptionsToAuthProvider,\n  ClientAuthProvider,\n} from \"./auth\";\nimport { chromaFetch } from \"./ChromaFetch\";\n\nconst DEFAULT_TENANT = \"default_tenant\";\nconst DEFAULT_DATABASE = \"default_database\";\n\n// interface for tenant\ninterface Tenant {\n  name: string;\n}\n\ninterface Database {\n  id: string;\n  tenant: string;\n  name: string;\n}\n\nexport class AdminClient {\n  /**\n   * @ignore\n   */\n  private api: DefaultApi & ConfigOptions;\n  private authProvider: ClientAuthProvider | undefined;\n  public tenant: string = DEFAULT_TENANT;\n  public database: string = DEFAULT_DATABASE;\n\n  /**\n   * Creates a new AdminClient instance.\n   * @param {Object} params - The parameters for creating a new client\n   * @param {string} [params.path] - The base path for the Chroma API.\n   * @returns {AdminClient} A new AdminClient instance.\n   *\n   * @example\n   * ```typescript\n   * const client = new AdminClient({\n   *   path: \"http://localhost:8000\"\n   * });\n   * ```\n   */\n  constructor({\n    path,\n    fetchOptions,\n    auth,\n    tenant = DEFAULT_TENANT,\n    database = DEFAULT_DATABASE,\n  }: {\n    path?: string;\n    fetchOptions?: RequestInit;\n    auth?: AuthOptions;\n    tenant?: string;\n    database?: string;\n  } = {}) {\n    if (path === undefined) path = \"http://localhost:8000\";\n    this.tenant = tenant;\n    this.database = database;\n    this.authProvider = undefined;\n\n    const apiConfig: Configuration = new Configuration({\n      basePath: path,\n    });\n\n    this.api = new DefaultApi(apiConfig, undefined, chromaFetch);\n    this.api.options = fetchOptions ?? {};\n\n    if (auth !== undefined) {\n      this.authProvider = authOptionsToAuthProvider(auth);\n      this.api.options.headers = {\n        ...this.api.options.headers,\n        ...this.authProvider.authenticate(),\n      };\n    }\n  }\n\n  /**\n   * Sets the tenant and database for the client.\n   *\n   * @param {Object} params - The parameters for setting tenant and database.\n   * @param {string} params.tenant - The name of the tenant.\n   * @param {string} params.database - The name of the database.\n   *\n   * @returns {Promise<void>} A promise that returns nothing\n   * @throws {Error} Any issues\n   *\n   * @example\n   * ```typescript\n   * await adminClient.setTenant({\n   *   tenant: \"my_tenant\",\n   *   database: \"my_database\",\n   * });\n   * ```\n   */\n  public async setTenant({\n    tenant = DEFAULT_TENANT,\n    database = DEFAULT_DATABASE,\n  }: {\n    tenant: string;\n    database?: string;\n  }): Promise<void> {\n    await validateTenantDatabase(this, tenant, database);\n    this.tenant = tenant;\n    this.database = database;\n  }\n\n  /**\n   * Sets the database for the client.\n   *\n   * @param {Object} params - The parameters for setting the database.\n   * @param {string} params.database - The name of the database.\n   *\n   * @returns {Promise<void>} A promise that returns nothing\n   * @throws {Error} Any issues\n   *\n   * @example\n   * ```typescript\n   * await adminClient.setDatabase({\n   *   database: \"my_database\",\n   * });\n   * ```\n   */\n  public async setDatabase({\n    database = DEFAULT_DATABASE,\n  }: {\n    database?: string;\n  }): Promise<void> {\n    await validateTenantDatabase(this, this.tenant, database);\n    this.database = database;\n  }\n\n  /**\n   * Creates a new tenant with the specified properties.\n   *\n   * @param {Object} params - The parameters for creating a new tenant.\n   * @param {string} params.name - The name of the tenant.\n   *\n   * @returns {Promise<Tenant>} A promise that resolves to the created tenant.\n   * @throws {Error} If there is an issue creating the tenant.\n   *\n   * @example\n   * ```typescript\n   * await adminClient.createTenant({\n   *   name: \"my_tenant\",\n   * });\n   * ```\n   */\n  public async createTenant({ name }: { name: string }): Promise<Tenant> {\n    await this.api.createTenant({ name }, this.api.options);\n\n    return { name };\n  }\n\n  /**\n   * Gets a tenant with the specified properties.\n   *\n   * @param {Object} params - The parameters for getting a tenant.\n   * @param {string} params.name - The name of the tenant.\n   *\n   * @returns {Promise<Tenant>} A promise that resolves to the tenant.\n   * @throws {Error} If there is an issue getting the tenant.\n   *\n   * @example\n   * ```typescript\n   * await adminClient.getTenant({\n   *   name: \"my_tenant\",\n   * });\n   * ```\n   */\n  public async getTenant({ name }: { name: string }): Promise<Tenant> {\n    const getTenant = (await this.api.getTenant(\n      name,\n      this.api.options,\n    )) as Tenant;\n\n    return { name: getTenant.name };\n  }\n\n  /**\n   * Creates a new database with the specified properties.\n   *\n   * @param {Object} params - The parameters for creating a new database.\n   * @param {string} params.name - The name of the database.\n   * @param {string} params.tenantName - The name of the tenant.\n   *\n   * @returns {Promise<Database>} A promise that resolves to the created database.\n   * @throws {Error} If there is an issue creating the database.\n   *\n   * @example\n   * ```typescript\n   * await adminClient.createDatabase({\n   *   name: \"my_database\",\n   *   tenantName: \"my_tenant\",\n   * });\n   * ```\n   */\n  public async createDatabase({\n    name,\n    tenantName,\n  }: {\n    name: string;\n    tenantName: string;\n  }): Promise<{ name: string }> {\n    await this.api.createDatabase(tenantName, { name }, this.api.options);\n\n    return { name };\n  }\n\n  /**\n   * Gets a database with the specified properties.\n   *\n   * @param {Object} params - The parameters for getting a database.\n   * @param {string} params.name - The name of the database.\n   * @param {string} params.tenantName - The name of the tenant.\n   *\n   * @returns {Promise<Database>} A promise that resolves to the database.\n   * @throws {Error} If there is an issue getting the database.\n   *\n   * @example\n   * ```typescript\n   * await adminClient.getDatabase({\n   *   name: \"my_database\",\n   *   tenantName: \"my_tenant\",\n   * });\n   * ```\n   */\n  public async getDatabase({\n    name,\n    tenantName,\n  }: {\n    name: string;\n    tenantName: string;\n  }): Promise<Database> {\n    const result = (await this.api.getDatabase(\n      tenantName,\n      name,\n      this.api.options,\n    )) as Database;\n\n    return result;\n  }\n\n  /**\n   * Deletes a database.\n   *\n   * @param {Object} params - The parameters for deleting a database.\n   * @param {string} params.name - The name of the database.\n   * @param {string} params.tenantName - The name of the tenant.\n   *\n   * @returns {Promise<void>} A promise that returns nothing.\n   * @throws {Error} If there is an issue deleting the database.\n   */\n  public async deleteDatabase({\n    name,\n    tenantName,\n  }: {\n    name: string;\n    tenantName: string;\n  }): Promise<void> {\n    await this.api.deleteDatabase(tenantName, name, this.api.options);\n    return;\n  }\n\n  /**\n   * Lists database for a specific tenant.\n   *\n   * @param {Object} params - The parameters for listing databases.\n   * @param {number} [params.limit] - The maximum number of databases to return.\n   * @param {number} [params.offset] - The number of databases to skip.\n   *\n   * @returns {Promise<Database[]>} A promise that resolves to a list of databases.\n   * @throws {Error} If there is an issue listing the databases.\n   */\n  public async listDatabases({\n    limit,\n    offset,\n    tenantName,\n  }: {\n    limit?: number;\n    offset?: number;\n    tenantName: string;\n  }): Promise<Database[]> {\n    const response = await this.api.listDatabases(\n      tenantName,\n      limit,\n      offset,\n      this.api.options,\n    );\n\n    return response as Database[];\n  }\n}\n","{\n  \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n  \"title\": \"Amazon Bedrock Embedding Function Schema\",\n  \"description\": \"Schema for the Amazon Bedrock embedding function configuration\",\n  \"version\": \"1.0.0\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"session_args\": {\n      \"type\": \"object\",\n      \"description\": \"The arguments to pass to the boto3 session\"\n    },\n    \"model_name\": {\n      \"type\": \"string\",\n      \"description\": \"The name of the model to use for embeddings\"\n    },\n    \"kwargs\": {\n      \"type\": \"object\",\n      \"description\": \"Additional arguments to pass to the Amazon Bedrock client\"\n    }\n  },\n  \"required\": [\n    \"session_args\",\n    \"model_name\",\n    \"kwargs\"\n  ],\n  \"additionalProperties\": false\n}\n","{\n    \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n    \"title\": \"Embedding Function Base Schema\",\n    \"description\": \"Base schema for all embedding functions in Chroma\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"version\": {\n            \"type\": \"string\",\n            \"description\": \"Schema version for the embedding function\"\n        },\n        \"name\": {\n            \"type\": \"string\",\n            \"description\": \"Name of the embedding function\"\n        },\n        \"config\": {\n            \"type\": \"object\",\n            \"description\": \"Configuration parameters for the embedding function\"\n        }\n    },\n    \"required\": [\n        \"version\",\n        \"name\",\n        \"config\"\n    ],\n    \"additionalProperties\": false\n}\n","{\n  \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n  \"title\": \"Langchain Embedding Function Schema\",\n  \"description\": \"Schema for the langchain embedding function configuration\",\n  \"version\": \"1.0.0\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"embedding_function\": {\n      \"type\": \"string\",\n      \"description\": \"Parameter embedding_function for the langchain embedding function\"\n    }\n  },\n  \"required\": [\n    \"embedding_function\"\n  ],\n  \"additionalProperties\": false\n}\n","{\n    \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n    \"title\": \"Cohere Embedding Function Schema\",\n    \"description\": \"Schema for the Cohere embedding function configuration\",\n    \"version\": \"1.0.0\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"model_name\": {\n            \"type\": \"string\",\n            \"description\": \"The name of the model to use for text embeddings\"\n        },\n        \"api_key_env_var\": {\n            \"type\": \"string\",\n            \"description\": \"Environment variable name that contains your API key for the Cohere API\"\n        }\n    },\n    \"required\": [\n        \"api_key_env_var\",\n        \"model_name\"\n    ],\n    \"additionalProperties\": false\n}\n","{\n  \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n  \"title\": \"Default Embedding Function Schema\",\n  \"description\": \"Schema for the default embedding function configuration\",\n  \"version\": \"1.0.0\",\n  \"type\": \"object\",\n  \"properties\": {},\n  \"required\": [],\n  \"additionalProperties\": false\n}\n","{\n  \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n  \"title\": \"Google Generative AI Embedding Function Schema\",\n  \"description\": \"Schema for the Google Generative AI embedding function configuration\",\n  \"version\": \"1.0.0\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"model_name\": {\n      \"type\": \"string\",\n      \"description\": \"The name of the model to use for text embeddings\"\n    },\n    \"task_type\": {\n      \"type\": \"string\",\n      \"description\": \"The task type for the embeddings (e.g., RETRIEVAL_DOCUMENT)\"\n    },\n    \"api_key_env_var\": {\n      \"type\": \"string\",\n      \"description\": \"Environment variable name that contains your API key for the Google Generative AI API\"\n    }\n  },\n  \"required\": [\n    \"api_key_env_var\",\n    \"model_name\",\n    \"task_type\"\n  ],\n  \"additionalProperties\": false\n}\n","{\n  \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n  \"title\": \"Google PaLM Embedding Function Schema\",\n  \"description\": \"Schema for the Google PaLM embedding function configuration\",\n  \"version\": \"1.0.0\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"model_name\": {\n      \"type\": \"string\",\n      \"description\": \"The name of the model to use for text embeddings\"\n    },\n    \"api_key_env_var\": {\n      \"type\": \"string\",\n      \"description\": \"Environment variable name that contains your API key for the Google PaLM API\"\n    }\n  },\n  \"required\": [\n    \"api_key_env_var\",\n    \"model_name\"\n  ],\n  \"additionalProperties\": false\n}\n","{\n  \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n  \"title\": \"Google Vertex Embedding Function Schema\",\n  \"description\": \"Schema for the Google Vertex embedding function configuration\",\n  \"version\": \"1.0.0\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"model_name\": {\n      \"type\": \"string\",\n      \"description\": \"The name of the model to use for text embeddings\"\n    },\n    \"project_id\": {\n      \"type\": \"string\",\n      \"description\": \"The Google Cloud project ID\"\n    },\n    \"region\": {\n      \"type\": \"string\",\n      \"description\": \"The Google Cloud region\"\n    },\n    \"api_key_env_var\": {\n      \"type\": \"string\",\n      \"description\": \"Environment variable name that contains your API key for the Google Vertex API\"\n    }\n  },\n  \"required\": [\n    \"api_key_env_var\",\n    \"model_name\",\n    \"project_id\",\n    \"region\"\n  ],\n  \"additionalProperties\": false\n}\n","{\n    \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n    \"title\": \"HuggingFace Embedding Function Schema\",\n    \"description\": \"Schema for the HuggingFace embedding function configuration\",\n    \"version\": \"1.0.0\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"model_name\": {\n            \"type\": \"string\",\n            \"description\": \"The name of the model to use for text embeddings\"\n        },\n        \"api_key_env_var\": {\n            \"type\": \"string\",\n            \"description\": \"Environment variable name that contains your API key for the HuggingFace API\"\n        }\n    },\n    \"required\": [\n        \"api_key_env_var\",\n        \"model_name\"\n    ],\n    \"additionalProperties\": false\n}\n","{\n    \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n    \"title\": \"HuggingFace Embedding Server Schema\",\n    \"description\": \"Schema for the HuggingFace embedding server configuration\",\n    \"version\": \"1.0.0\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"url\": {\n            \"type\": \"string\",\n            \"description\": \"The URL of the HuggingFace Embedding Server\"\n        },\n        \"api_key_env_var\": {\n            \"type\": \"string\",\n            \"description\": \"The environment variable name that contains your API key for the HuggingFace API\"\n        }\n    },\n    \"required\": [\n        \"url\"\n    ],\n    \"additionalProperties\": false\n}\n","{\n  \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n  \"title\": \"Instructor Embedding Function Schema\",\n  \"description\": \"Schema for the instructor embedding function configuration\",\n  \"version\": \"1.0.0\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"model_name\": {\n      \"type\": \"string\",\n      \"description\": \"Parameter model_name for the instructor embedding function\"\n    },\n    \"device\": {\n      \"type\": \"string\",\n      \"description\": \"Parameter device for the instructor embedding function\"\n    },\n    \"instruction\": {\n      \"type\": \"string\",\n      \"description\": \"Parameter instruction for the instructor embedding function\"\n    }\n  },\n  \"required\": [\n    \"model_name\",\n    \"device\"\n  ],\n  \"additionalProperties\": false\n}\n","{\n  \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n  \"title\": \"Jina Embedding Function Schema\",\n  \"description\": \"Schema for the jina embedding function configuration\",\n  \"version\": \"1.0.0\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"model_name\": {\n      \"type\": \"string\",\n      \"description\": \"Parameter model_name for the jina embedding function\"\n    },\n    \"api_key_env_var\": {\n      \"type\": \"string\",\n      \"description\": \"Parameter api_key_env_var for the jina embedding function\"\n    },\n    \"task\": {\n      \"type\": \"string\",\n      \"description\": \"Parameter task for the jina embedding function\"\n    },\n    \"late_chunking\": {\n      \"type\": \"boolean\",\n      \"description\": \"Parameter late_chunking for the jina embedding function\"\n    },\n    \"truncate\": {\n      \"type\": \"boolean\",\n      \"description\": \"Parameter truncate for the jina embedding function\"\n    },\n    \"dimensions\": {\n      \"type\": \"integer\",\n      \"description\": \"Parameter dimensions for the jina embedding function\"\n    },\n    \"embedding_type\": {\n      \"type\": \"string\",\n      \"description\": \"Parameter embedding_type for the jina embedding function\"\n    },\n    \"normalized\": {\n      \"type\": \"boolean\",\n      \"description\": \"Parameter normalized for the jina embedding function\"\n    }\n  },\n  \"required\": [\n    \"api_key_env_var\",\n    \"model_name\"\n  ],\n  \"additionalProperties\": false\n}\n","{\n  \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n  \"title\": \"Ollama Embedding Function Schema\",\n  \"description\": \"Schema for the Ollama embedding function configuration\",\n  \"version\": \"1.0.0\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"url\": {\n      \"type\": \"string\",\n      \"description\": \"The URL of the Ollama server\"\n    },\n    \"model_name\": {\n      \"type\": \"string\",\n      \"description\": \"The name of the model to use for embeddings\"\n    },\n    \"timeout\": {\n      \"type\": \"integer\",\n      \"description\": \"Timeout in seconds for the API request\"\n    }\n  },\n  \"required\": [\n    \"url\",\n    \"model_name\"\n  ],\n  \"additionalProperties\": false\n}\n","{\n  \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n  \"title\": \"Onnx_mini_lm_l6_v2 Embedding Function Schema\",\n  \"description\": \"Schema for the onnx_mini_lm_l6_v2 embedding function configuration\",\n  \"version\": \"1.0.0\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"preferred_providers\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"string\"\n      },\n      \"description\": \"Parameter preferred_providers for the onnx_mini_lm_l6_v2 embedding function\"\n    }\n  },\n  \"required\": [],\n  \"additionalProperties\": false\n}\n","{\n  \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n  \"title\": \"Open_clip Embedding Function Schema\",\n  \"description\": \"Schema for the open_clip embedding function configuration\",\n  \"version\": \"1.0.0\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"model_name\": {\n      \"type\": \"string\",\n      \"description\": \"Parameter model_name for the open_clip embedding function\"\n    },\n    \"checkpoint\": {\n      \"type\": \"string\",\n      \"description\": \"Parameter checkpoint for the open_clip embedding function\"\n    },\n    \"device\": {\n      \"type\": \"string\",\n      \"description\": \"Parameter device for the open_clip embedding function\"\n    }\n  },\n  \"required\": [\n    \"model_name\",\n    \"checkpoint\",\n    \"device\"\n  ],\n  \"additionalProperties\": false\n}\n","{\n    \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n    \"title\": \"OpenAI Embedding Function Schema\",\n    \"description\": \"Schema for the OpenAI embedding function configuration\",\n    \"version\": \"1.0.0\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"model_name\": {\n            \"type\": \"string\",\n            \"description\": \"The name of the model to use for text embeddings\"\n        },\n        \"organization_id\": {\n            \"type\": [\n                \"string\",\n                \"null\"\n            ],\n            \"description\": \"The OpenAI organization ID if applicable\"\n        },\n        \"api_base\": {\n            \"type\": [\n                \"string\",\n                \"null\"\n            ],\n            \"description\": \"The base path for the API\"\n        },\n        \"api_type\": {\n            \"type\": [\n                \"string\",\n                \"null\"\n            ],\n            \"description\": \"The type of the API deployment\"\n        },\n        \"api_version\": {\n            \"type\": [\n                \"string\",\n                \"null\"\n            ],\n            \"description\": \"The api version for the API\"\n        },\n        \"deployment_id\": {\n            \"type\": [\n                \"string\",\n                \"null\"\n            ],\n            \"description\": \"Deployment ID for Azure OpenAI\"\n        },\n        \"default_headers\": {\n            \"type\": [\n                \"object\",\n                \"null\"\n            ],\n            \"description\": \"A mapping of default headers to be sent with each API request\"\n        },\n        \"dimensions\": {\n            \"type\": [\n                \"integer\",\n                \"null\"\n            ],\n            \"description\": \"The number of dimensions for the embeddings\"\n        },\n        \"api_key_env_var\": {\n            \"type\": \"string\",\n            \"description\": \"Environment variable name that contains your API key for the OpenAI API\"\n        }\n    },\n    \"required\": [\n        \"api_key_env_var\",\n        \"model_name\"\n    ],\n    \"additionalProperties\": false\n}\n","{\n  \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n  \"title\": \"Roboflow Embedding Function Schema\",\n  \"description\": \"Schema for the roboflow embedding function configuration\",\n  \"version\": \"1.0.0\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"api_url\": {\n      \"type\": \"string\",\n      \"description\": \"Parameter api_url for the roboflow embedding function\"\n    },\n    \"api_key_env_var\": {\n      \"type\": \"string\",\n      \"description\": \"Parameter api_key_env_var for the roboflow embedding function\"\n    }\n  },\n  \"required\": [\n    \"api_key_env_var\",\n    \"api_url\"\n  ],\n  \"additionalProperties\": false\n}\n","{\n    \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n    \"title\": \"SentenceTransformer Embedding Function Schema\",\n    \"description\": \"Schema for the SentenceTransformer embedding function configuration\",\n    \"version\": \"1.0.0\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"model_name\": {\n            \"type\": \"string\",\n            \"description\": \"Identifier of the SentenceTransformer model\"\n        },\n        \"device\": {\n            \"type\": \"string\",\n            \"description\": \"Device used for computation\"\n        },\n        \"normalize_embeddings\": {\n            \"type\": \"boolean\",\n            \"description\": \"Whether to normalize returned vectors\"\n        },\n        \"kwargs\": {\n            \"type\": \"object\",\n            \"description\": \"Additional arguments to pass to the SentenceTransformer model\",\n            \"additionalProperties\": {\n                \"type\": [\n                    \"string\",\n                    \"integer\",\n                    \"number\",\n                    \"boolean\",\n                    \"array\",\n                    \"object\"\n                ]\n            }\n        }\n    },\n    \"required\": [\n        \"model_name\",\n        \"device\",\n        \"normalize_embeddings\"\n    ],\n    \"additionalProperties\": false\n}\n","{\n  \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n  \"title\": \"Text2vec Embedding Function Schema\",\n  \"description\": \"Schema for the text2vec embedding function configuration\",\n  \"version\": \"1.0.0\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"model_name\": {\n      \"type\": \"string\",\n      \"description\": \"Parameter model_name for the text2vec embedding function\"\n    }\n  },\n  \"required\": [\n    \"model_name\"\n  ],\n  \"additionalProperties\": false\n}\n","{\n    \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n    \"title\": \"Transformers Embedding Function Schema\",\n    \"description\": \"Schema for the Transformers embedding function configuration\",\n    \"version\": \"1.0.0\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"model\": {\n            \"type\": \"string\",\n            \"description\": \"Identifier of the SentenceTransformer model\"\n        },\n        \"revision\": {\n            \"type\": \"string\",\n            \"description\": \"Specific model version to use (can be a branch, tag name, or commit id)\"\n        },\n        \"quantized\": {\n            \"type\": \"boolean\",\n            \"description\": \"Whether to load the 8-bit quantized version of the model\"\n        }\n    },\n    \"required\": [\n        \"model\",\n        \"revision\",\n        \"quantized\"\n    ],\n    \"additionalProperties\": false\n}\n","{\n  \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n  \"title\": \"Voyageai Embedding Function Schema\",\n  \"description\": \"Schema for the voyageai embedding function configuration\",\n  \"version\": \"1.0.0\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"model_name\": {\n      \"type\": \"string\",\n      \"description\": \"Parameter model_name for the voyageai embedding function\"\n    },\n    \"api_key_env_var\": {\n      \"type\": \"string\",\n      \"description\": \"Parameter api_key_env_var for the voyageai embedding function\"\n    }\n  },\n  \"required\": [\n    \"api_key_env_var\",\n    \"model_name\"\n  ],\n  \"additionalProperties\": false\n}\n","{\n    \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n    \"title\": \"Cloudflare Workers AI Embedding Function Schema\",\n    \"description\": \"Schema for the Cloudflare Workers AI embedding function configuration\",\n    \"version\": \"1.0.0\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"model_name\": {\n            \"type\": \"string\",\n            \"description\": \"The name of the model to use for text embeddings\"\n        },\n        \"account_id\": {\n            \"type\": \"string\",\n            \"description\": \"The account ID for the Cloudflare Workers AI API\"\n        },\n        \"api_key_env_var\": {\n            \"type\": \"string\",\n            \"description\": \"The environment variable name that contains your API key for the Cloudflare Workers AI API\"\n        },\n        \"gateway_id\": {\n            \"type\": \"string\",\n            \"description\": \"The ID of the Cloudflare AI Gateway to use for a more customized solution\"\n        }\n    },\n    \"required\": [\n        \"api_key_env_var\",\n        \"model_name\",\n        \"account_id\"\n    ],\n    \"additionalProperties\": false\n}\n","{\n    \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n    \"title\": \"Together AI Embedding Function Schema\",\n    \"description\": \"Schema for the Together AI embedding function configuration\",\n    \"version\": \"1.0.0\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"model_name\": {\n            \"type\": \"string\",\n            \"description\": \"The name of the model to use for text embeddings\"\n        },\n        \"api_key_env_var\": {\n            \"type\": \"string\",\n            \"description\": \"The environment variable name that contains your API key for the Together AI API\"\n        }\n    },\n    \"required\": [\n        \"api_key_env_var\",\n        \"model_name\"\n    ],\n    \"additionalProperties\": false\n}\n","// Import schemas directly\nimport amazonBedrockSchema from \"../../../../../../schemas/embedding_functions/amazon_bedrock.json\";\nimport baseSchema from \"../../../../../../schemas/embedding_functions/base_schema.json\";\nimport chromaLangchainSchema from \"../../../../../../schemas/embedding_functions/chroma_langchain.json\";\nimport cohereSchema from \"../../../../../../schemas/embedding_functions/cohere.json\";\nimport defaultSchema from \"../../../../../../schemas/embedding_functions/default.json\";\nimport googleGenerativeAiSchema from \"../../../../../../schemas/embedding_functions/google_generative_ai.json\";\nimport googlePalmSchema from \"../../../../../../schemas/embedding_functions/google_palm.json\";\nimport googleVertexSchema from \"../../../../../../schemas/embedding_functions/google_vertex.json\";\nimport huggingfaceSchema from \"../../../../../../schemas/embedding_functions/huggingface.json\";\nimport huggingfaceServerSchema from \"../../../../../../schemas/embedding_functions/huggingface_server.json\";\nimport instructorSchema from \"../../../../../../schemas/embedding_functions/instructor.json\";\nimport jinaSchema from \"../../../../../../schemas/embedding_functions/jina.json\";\nimport ollamaSchema from \"../../../../../../schemas/embedding_functions/ollama.json\";\nimport onnxMiniLmL6V2Schema from \"../../../../../../schemas/embedding_functions/onnx_mini_lm_l6_v2.json\";\nimport openClipSchema from \"../../../../../../schemas/embedding_functions/open_clip.json\";\nimport openaiSchema from \"../../../../../../schemas/embedding_functions/openai.json\";\nimport roboflowSchema from \"../../../../../../schemas/embedding_functions/roboflow.json\";\nimport sentenceTransformerSchema from \"../../../../../../schemas/embedding_functions/sentence_transformer.json\";\nimport text2vecSchema from \"../../../../../../schemas/embedding_functions/text2vec.json\";\nimport transformersSchema from \"../../../../../../schemas/embedding_functions/transformers.json\";\nimport voyageaiSchema from \"../../../../../../schemas/embedding_functions/voyageai.json\";\nimport cloudflareWorkersAiSchema from \"../../../../../../schemas/embedding_functions/cloudflare_workers_ai.json\";\nimport togetherAiSchema from \"../../../../../../schemas/embedding_functions/together_ai.json\";\nimport Ajv from \"ajv\";\n\n// Define a common interface for all schemas\ninterface Schema {\n  $schema: string;\n  title?: string;\n  description?: string;\n  version?: string;\n  type: string;\n  properties: Record<string, any>;\n  required?: string[];\n  additionalProperties?: boolean;\n  [key: string]: any; // Allow for other properties\n}\n\nconst ajv = new Ajv({\n  strict: false, // Allow unknown keywords\n  allErrors: true,\n});\n\n// Map of schema names to schema objects\nconst schemaMap = {\n  amazon_bedrock: amazonBedrockSchema as Schema,\n  base_schema: baseSchema as Schema,\n  chroma_langchain: chromaLangchainSchema as Schema,\n  cohere: cohereSchema as Schema,\n  default: defaultSchema as Schema,\n  google_generative_ai: googleGenerativeAiSchema as Schema,\n  google_palm: googlePalmSchema as Schema,\n  google_vertex: googleVertexSchema as Schema,\n  huggingface: huggingfaceSchema as Schema,\n  huggingface_server: huggingfaceServerSchema as Schema,\n  instructor: instructorSchema as Schema,\n  jina: jinaSchema as Schema,\n  ollama: ollamaSchema as Schema,\n  onnx_mini_lm_l6_v2: onnxMiniLmL6V2Schema as Schema,\n  open_clip: openClipSchema as Schema,\n  openai: openaiSchema as Schema,\n  roboflow: roboflowSchema as Schema,\n  sentence_transformer: sentenceTransformerSchema as Schema,\n  text2vec: text2vecSchema as Schema,\n  transformers: transformersSchema as Schema,\n  voyageai: voyageaiSchema as Schema,\n  cloudflare_workers_ai: cloudflareWorkersAiSchema as Schema,\n  together_ai: togetherAiSchema as Schema,\n};\n\n/**\n * Load a JSON schema.\n *\n * @param schemaName Name of the schema file (without .json extension)\n * @returns The loaded schema as an object\n * @throws Error if the schema is not available\n */\nexport function loadSchema(schemaName: keyof typeof schemaMap): Schema {\n  if (!schemaMap[schemaName]) {\n    throw new Error(`Schema '${schemaName}' not found`);\n  }\n\n  return schemaMap[schemaName];\n}\n\n/**\n * Validate a configuration against a schema.\n *\n * @param config Configuration to validate\n * @param schemaName Name of the schema file (without .json extension)\n * @throws Error if the configuration does not match the schema\n */\nexport function validateConfigSchema(\n  config: Record<string, any>,\n  schemaName: keyof typeof schemaMap,\n): void {\n  const schema = loadSchema(schemaName);\n\n  const validate = ajv.compile(schema);\n  const valid = validate(config);\n\n  if (!valid) {\n    const errors = validate.errors || [];\n    const errorPaths = errors\n      .map((e) => `${e.instancePath || \"/\"}: ${e.message}`)\n      .join(\", \");\n    throw new Error(\n      `Config validation failed for schema '${schemaName}': ${errorPaths}`,\n    );\n  }\n}\n\n/**\n * Get the version of a schema.\n *\n * @param schemaName Name of the schema file (without .json extension)\n * @returns The schema version as a string\n * @throws Error if the schema file does not exist or is not valid JSON\n */\nexport function getSchemaVersion(schemaName: keyof typeof schemaMap): string {\n  const schema = loadSchema(schemaName);\n  return schema.version || \"1.0.0\";\n}\n\n/**\n * Get a list of all available schemas.\n *\n * @returns A list of schema names (without .json extension)\n */\nexport function getAvailableSchemas(): (keyof typeof schemaMap)[] {\n  return Object.keys(schemaMap).filter(\n    (name) => name !== \"base_schema\",\n  ) as (keyof typeof schemaMap)[];\n}\n\n/**\n * Get information about all available schemas.\n *\n * @returns A dictionary mapping schema names to information about the schema\n */\nexport function getSchemaInfo(): Record<\n  string,\n  { version: string; title: string; description: string }\n> {\n  const schemaInfo: Record<\n    string,\n    { version: string; title: string; description: string }\n  > = {};\n\n  for (const schemaName of getAvailableSchemas()) {\n    try {\n      const schema = schemaMap[schemaName];\n      schemaInfo[schemaName] = {\n        version: schema.version || \"1.0.0\",\n        title: schema.title || \"\",\n        description: schema.description || \"\",\n      };\n    } catch (error) {\n      console.error(`Failed to load schema '${schemaName}':`, error);\n    }\n  }\n\n  return schemaInfo;\n}\n","import { validateConfigSchema } from \"../schemas/schemaUtils\";\nimport { isBrowser } from \"../utils\";\nimport { IEmbeddingFunction } from \"./IEmbeddingFunction\";\n\n// Dynamically import module\nlet TransformersApi: Promise<any>;\n\ninterface StoredConfig {\n  model: string;\n  revision: string;\n  quantized: boolean;\n}\n\nexport class DefaultEmbeddingFunction implements IEmbeddingFunction {\n  name = \"default\";\n\n  private pipelinePromise?: Promise<any> | null;\n  private transformersApi: any;\n  private model: string;\n  private revision: string;\n  private quantized: boolean;\n  private progress_callback: Function | null;\n\n  /**\n   * DefaultEmbeddingFunction constructor.\n   * @param options The configuration options.\n   * @param options.model The model to use to calculate embeddings. Defaults to 'Xenova/all-MiniLM-L6-v2', which is an ONNX port of `sentence-transformers/all-MiniLM-L6-v2`.\n   * @param options.revision The specific model version to use (can be a branch, tag name, or commit id). Defaults to 'main'.\n   * @param options.quantized Whether to load the 8-bit quantized version of the model. Defaults to `false`.\n   * @param options.progress_callback If specified, this function will be called during model construction, to provide the user with progress updates.\n   */\n  constructor({\n    model = \"Xenova/all-MiniLM-L6-v2\",\n    revision = \"main\",\n    quantized = false,\n    progress_callback = null,\n  }: {\n    model?: string;\n    revision?: string;\n    quantized?: boolean;\n    progress_callback?: Function | null;\n  } = {}) {\n    this.model = model;\n    this.revision = revision;\n    this.quantized = quantized;\n    this.progress_callback = progress_callback;\n  }\n\n  public async generate(texts: string[]): Promise<number[][]> {\n    await this.loadClient();\n\n    // Store a promise that resolves to the pipeline\n    this.pipelinePromise = new Promise(async (resolve, reject) => {\n      try {\n        const pipeline = this.transformersApi;\n\n        const quantized = this.quantized;\n        const revision = this.revision;\n        const progress_callback = this.progress_callback;\n\n        resolve(\n          await pipeline(\"feature-extraction\", this.model, {\n            quantized,\n            revision,\n            progress_callback,\n          }),\n        );\n      } catch (e) {\n        reject(e);\n      }\n    });\n\n    let pipe = await this.pipelinePromise;\n    let output = await pipe(texts, { pooling: \"mean\", normalize: true });\n    return output.tolist();\n  }\n\n  getConfig(): StoredConfig {\n    return {\n      model: this.model,\n      revision: this.revision,\n      quantized: this.quantized,\n    };\n  }\n\n  buildFromConfig(config: StoredConfig): DefaultEmbeddingFunction {\n    return new DefaultEmbeddingFunction({\n      model: config.model,\n      revision: config.revision,\n      quantized: config.quantized,\n    });\n  }\n\n  validateConfigUpdate(oldConfig: StoredConfig, newConfig: StoredConfig): void {\n    if (oldConfig.model !== newConfig.model) {\n      throw new Error(\n        \"DefaultEmbeddingFunction model cannot be changed after initialization.\",\n      );\n    }\n  }\n\n  validateConfig(config: StoredConfig): void {\n    validateConfigSchema(config, \"transformers\");\n  }\n\n  private async loadClient() {\n    if (this.transformersApi) return;\n    try {\n      // eslint-disable-next-line global-require,import/no-extraneous-dependencies\n      let { pipeline } = await DefaultEmbeddingFunction.import();\n      TransformersApi = pipeline;\n    } catch (_a) {\n      // @ts-ignore\n      if (_a.code === \"MODULE_NOT_FOUND\") {\n        throw new Error(\n          \"Please install the chromadb-default-embed package to use the DefaultEmbeddingFunction, `npm install chromadb-default-embed`\",\n        );\n      }\n      throw _a; // Re-throw other errors\n    }\n    this.transformersApi = TransformersApi;\n  }\n\n  /** @ignore */\n  static async import(): Promise<{\n    // @ts-ignore\n    pipeline: typeof import(\"chromadb-default-embed\");\n  }> {\n    try {\n      // @ts-ignore\n      const { pipeline } = await import(\"chromadb-default-embed\");\n      return { pipeline };\n    } catch (e) {\n      throw new Error(\n        \"Please install chromadb-default-embed as a dependency with, e.g. `npm install chromadb-default-embed`\",\n      );\n    }\n  }\n}\n","import { version } from \"../package.json\";\nimport { AdminClient } from \"./AdminClient\";\nimport { authOptionsToAuthProvider, ClientAuthProvider } from \"./auth\";\nimport { chromaFetch } from \"./ChromaFetch\";\nimport { Collection } from \"./Collection\";\nimport { DefaultEmbeddingFunction } from \"./embeddings/DefaultEmbeddingFunction\";\nimport { Configuration, ApiApi as DefaultApi, Api } from \"./generated\";\nimport type {\n  ChromaClientParams,\n  CollectionMetadata,\n  CollectionParams,\n  ConfigOptions,\n  CreateCollectionParams,\n  DeleteCollectionParams,\n  GetCollectionParams,\n  GetOrCreateCollectionParams,\n  ListCollectionsParams,\n  UserIdentity,\n} from \"./types\";\nimport { validateTenantDatabase, wrapCollection } from \"./utils\";\nimport { loadApiCollectionConfigurationFromCreateCollectionConfiguration } from \"./CollectionConfiguration\";\nimport { warn } from \"console\";\nconst DEFAULT_TENANT = \"default_tenant\";\nconst DEFAULT_DATABASE = \"default_database\";\n\nexport class ChromaClient {\n  /**\n   * @ignore\n   */\n  public api: DefaultApi & ConfigOptions;\n  /**\n   * @ignore\n   */\n  public tenant: string;\n  /**\n   * @ignore\n   */\n  public database: string;\n  /**\n   * @ignore\n   */\n  private _adminClient: AdminClient;\n  /**\n   * @ignore\n   */\n  private authProvider: ClientAuthProvider | undefined;\n  /**\n   * @ignore\n   */\n  private _initPromise: Promise<void> | undefined;\n\n  /**\n   * Creates a new ChromaClient instance.\n   * @param {Object} params - The parameters for creating a new client\n   * @param {string} [params.path] - The base path for the Chroma API.\n   * @returns {ChromaClient} A new ChromaClient instance.\n   *\n   * @example\n   * ```typescript\n   * const client = new ChromaClient({\n   *   path: \"http://localhost:8000\"\n   * });\n   * ```\n   */\n  constructor({\n    path = \"http://localhost:8000\",\n    fetchOptions,\n    auth,\n    tenant = DEFAULT_TENANT,\n    database = DEFAULT_DATABASE,\n  }: ChromaClientParams = {}) {\n    this.tenant = tenant;\n    this.database = database;\n    this.authProvider = undefined;\n\n    const apiConfig: Configuration = new Configuration({\n      basePath: path,\n    });\n\n    this.api = new DefaultApi(apiConfig, undefined, chromaFetch);\n    this.api.options = fetchOptions ?? {};\n\n    this.api.options.headers = {\n      ...this.api.options.headers,\n      \"user-agent\": `Chroma Javascript Client v${version} (https://github.com/chroma-core/chroma)`,\n    };\n\n    if (auth !== undefined) {\n      this.authProvider = authOptionsToAuthProvider(auth);\n      this.api.options.headers = {\n        ...this.api.options.headers,\n        ...this.authProvider.authenticate(),\n      };\n    }\n\n    this._adminClient = new AdminClient({\n      path,\n      fetchOptions,\n      auth,\n      tenant,\n      database,\n    });\n  }\n\n  /** @ignore */\n  async init(): Promise<void> {\n    if (!this._initPromise) {\n      if (this.authProvider !== undefined) {\n        await this.getUserIdentity();\n      }\n\n      this._initPromise = validateTenantDatabase(\n        this._adminClient,\n        this.tenant,\n        this.database,\n      );\n    }\n\n    return this._initPromise;\n  }\n\n  /**\n   * Tries to set the tenant and database for the client.\n   *\n   * @returns {Promise<void>} A promise that resolves when the tenant/database is resolved.\n   * @throws {Error} If there is an issue resolving the tenant and database.\n   *\n   */\n  async getUserIdentity(): Promise<void> {\n    const user_identity = (await this.api.getUserIdentity(\n      this.api.options,\n    )) as UserIdentity;\n    const user_tenant = user_identity.tenant;\n    const user_databases = user_identity.databases;\n\n    if (\n      user_tenant !== null &&\n      user_tenant !== undefined &&\n      user_tenant !== \"*\" &&\n      this.tenant == DEFAULT_TENANT\n    ) {\n      this.tenant = user_tenant;\n    }\n\n    if (\n      user_databases !== null &&\n      user_databases !== undefined &&\n      user_databases.length == 1 &&\n      user_databases[0] !== \"*\" &&\n      this.database == DEFAULT_DATABASE\n    ) {\n      this.database = user_databases[0];\n    }\n  }\n\n  /**\n   * Resets the state of the object by making an API call to the reset endpoint.\n   *\n   * @returns {Promise<boolean>} A promise that resolves when the reset operation is complete.\n   * @throws {ChromaConnectionError} If the client is unable to connect to the server.\n   * @throws {ChromaServerError} If the server experienced an error while the state.\n   *\n   * @example\n   * ```typescript\n   * await client.reset();\n   * ```\n   */\n  async reset(): Promise<boolean> {\n    await this.init();\n    return await this.api.reset(this.api.options);\n  }\n\n  /**\n   * Returns the version of the Chroma API.\n   * @returns {Promise<string>} A promise that resolves to the version of the Chroma API.\n   * @throws {ChromaConnectionError} If the client is unable to connect to the server.\n   *\n   * @example\n   * ```typescript\n   * const version = await client.version();\n   * ```\n   */\n  async version(): Promise<string> {\n    return await this.api.version(this.api.options);\n  }\n\n  /**\n   * Returns a heartbeat from the Chroma API.\n   * @returns {Promise<number>} A promise that resolves to the heartbeat from the Chroma API.\n   * @throws {ChromaConnectionError} If the client is unable to connect to the server.\n   *\n   * @example\n   * ```typescript\n   * const heartbeat = await client.heartbeat();\n   * ```\n   */\n  async heartbeat(): Promise<number> {\n    const response = await this.api.heartbeat(this.api.options);\n    return response[\"nanosecond heartbeat\"];\n  }\n\n  /**\n   * Creates a new collection with the specified properties.\n   *\n   * @param {Object} params - The parameters for creating a new collection.\n   * @param {string} params.name - The name of the collection.\n   * @param {CollectionMetadata} [params.metadata] - Optional metadata associated with the collection.\n   * @param {IEmbeddingFunction} [params.embeddingFunction] - Optional custom embedding function for the collection.\n   *\n   * @returns {Promise<Collection>} A promise that resolves to the created collection.\n   * @throws {ChromaConnectionError} If the client is unable to connect to the server.\n   * @throws {ChromaServerError} If there is an issue creating the collection.\n   *\n   * @example\n   * ```typescript\n   * const collection = await client.createCollection({\n   *   name: \"my_collection\",\n   *   metadata: {\n   *     \"description\": \"My first collection\"\n   *   }\n   * });\n   * ```\n   */\n  async createCollection({\n    name,\n    metadata,\n    embeddingFunction = new DefaultEmbeddingFunction(),\n    configuration,\n  }: CreateCollectionParams): Promise<Collection> {\n    await this.init();\n    if (!configuration) {\n      configuration = {};\n    }\n    if (embeddingFunction && !configuration.embedding_function) {\n      configuration.embedding_function = embeddingFunction;\n    }\n    let collectionConfiguration: Api.CollectionConfiguration | undefined =\n      undefined;\n    if (configuration) {\n      collectionConfiguration =\n        loadApiCollectionConfigurationFromCreateCollectionConfiguration(\n          configuration,\n        );\n    }\n    const newCollection = await this.api.createCollection(\n      this.tenant,\n      this.database,\n      {\n        name,\n        configuration: collectionConfiguration,\n        metadata: metadata,\n      },\n      this.api.options,\n    );\n\n    let config: Api.CollectionConfiguration = {};\n    try {\n      config = newCollection.configuration_json;\n    } catch {\n      warn(\n        \"Server does not respond with configuration_json. Please update server\",\n      );\n    }\n\n    return wrapCollection(this, {\n      name: newCollection.name,\n      id: newCollection.id,\n      metadata: newCollection.metadata as CollectionMetadata | undefined,\n      embeddingFunction,\n      configuration: config,\n    });\n  }\n\n  /**\n   * Gets or creates a collection with the specified properties.\n   *\n   * @param {Object} params - The parameters for creating a new collection.\n   * @param {string} params.name - The name of the collection.\n   * @param {CollectionMetadata} [params.metadata] - Optional metadata associated with the collection.\n   * @param {IEmbeddingFunction} [params.embeddingFunction] - Optional custom embedding function for the collection.\n   *\n   * @returns {Promise<Collection>} A promise that resolves to the got or created collection.\n   * @throws {Error} If there is an issue getting or creating the collection.\n   *\n   * @example\n   * ```typescript\n   * const collection = await client.getOrCreateCollection({\n   *   name: \"my_collection\",\n   *   metadata: {\n   *     \"description\": \"My first collection\"\n   *   }\n   * });\n   * ```\n   */\n  async getOrCreateCollection({\n    name,\n    metadata,\n    embeddingFunction = new DefaultEmbeddingFunction(),\n    configuration,\n  }: GetOrCreateCollectionParams): Promise<Collection> {\n    await this.init();\n    if (!configuration) {\n      configuration = {};\n    }\n    if (embeddingFunction && !configuration.embedding_function) {\n      configuration.embedding_function = embeddingFunction;\n    }\n    let collectionConfiguration: Api.CollectionConfiguration | undefined =\n      undefined;\n    if (configuration) {\n      collectionConfiguration =\n        loadApiCollectionConfigurationFromCreateCollectionConfiguration(\n          configuration,\n        );\n    }\n\n    const newCollection = await this.api.createCollection(\n      this.tenant,\n      this.database,\n      {\n        name,\n        configuration: collectionConfiguration,\n        metadata: metadata,\n        get_or_create: true,\n      },\n      this.api.options,\n    );\n\n    let config: Api.CollectionConfiguration = {};\n    try {\n      config = newCollection.configuration_json;\n    } catch {\n      warn(\n        \"Server does not respond with configuration_json. Please update server\",\n      );\n    }\n\n    return wrapCollection(this, {\n      name: newCollection.name,\n      id: newCollection.id,\n      metadata: newCollection.metadata as CollectionMetadata | undefined,\n      embeddingFunction,\n      configuration: config,\n    });\n  }\n\n  /**\n   * Get all collection names.\n   *\n   * @returns {Promise<string[]>} A promise that resolves to a list of collection names.\n   * @param {PositiveInteger} [params.limit] - Optional limit on the number of items to get.\n   * @param {PositiveInteger} [params.offset] - Optional offset on the items to get.\n   * @throws {Error} If there is an issue listing the collections.\n   *\n   * @example\n   * ```typescript\n   * const collections = await client.listCollections({\n   *     limit: 10,\n   *     offset: 0,\n   * });\n   * ```\n   */\n  async listCollections({ limit, offset }: ListCollectionsParams = {}): Promise<\n    string[]\n  > {\n    await this.init();\n\n    const response = (await this.api.listCollections(\n      this.tenant,\n      this.database,\n      limit,\n      offset,\n      this.api.options,\n    )) as { name: string; tenant: string; database: string }[];\n\n    return response.map((collection) => collection.name);\n  }\n\n  /**\n   * List collection names, IDs, and metadata.\n   *\n   * @param {PositiveInteger} [params.limit] - Optional limit on the number of items to get.\n   * @param {PositiveInteger} [params.offset] - Optional offset on the items to get.\n   * @throws {Error} If there is an issue listing the collections.\n   * @returns {Promise<{ name: string, id: string, metadata?: CollectionMetadata }[]>} A promise that resolves to a list of collection names, IDs, and metadata.\n   *\n   * @example\n   * ```typescript\n   * const collections = await client.listCollectionsAndMetadata({\n   *    limit: 10,\n   *    offset: 0,\n   * });\n   */\n  async listCollectionsAndMetadata({\n    limit,\n    offset,\n  }: ListCollectionsParams = {}): Promise<\n    {\n      name: string;\n      id: string;\n      metadata?: CollectionMetadata;\n    }[]\n  > {\n    await this.init();\n    const results = (await this.api.listCollections(\n      this.tenant,\n      this.database,\n      limit,\n      offset,\n      this.api.options,\n    )) as { name: string; id: string; metadata?: CollectionMetadata }[];\n\n    return results ?? [];\n  }\n\n  /**\n   * Counts all collections.\n   *\n   * @returns {Promise<number>} A promise that resolves to the number of collections.\n   * @throws {Error} If there is an issue counting the collections.\n   *\n   * @example\n   * ```typescript\n   * const collections = await client.countCollections();\n   * ```\n   */\n  async countCollections(): Promise<number> {\n    await this.init();\n    const response = (await this.api.countCollections(\n      this.tenant,\n      this.database,\n      this.api.options,\n    )) as number;\n\n    return response;\n  }\n\n  /**\n   * Gets a collection with the specified name.\n   * @param {Object} params - The parameters for getting a collection.\n   * @param {string} params.name - The name of the collection.\n   * @param {IEmbeddingFunction} [params.embeddingFunction] - Optional custom embedding function for the collection.\n   * @returns {Promise<Collection>} A promise that resolves to the collection.\n   * @throws {Error} If there is an issue getting the collection.\n   *\n   * @example\n   * ```typescript\n   * const collection = await client.getCollection({\n   *   name: \"my_collection\"\n   * });\n   * ```\n   */\n  async getCollection({\n    name,\n    embeddingFunction,\n  }: GetCollectionParams): Promise<Collection> {\n    await this.init();\n    const response = await this.api.getCollection(\n      this.tenant,\n      this.database,\n      name,\n      this.api.options,\n    );\n\n    let config: Api.CollectionConfiguration = {};\n    try {\n      config = response.configuration_json;\n    } catch {\n      warn(\n        \"Server does not respond with configuration_json. Please update server\",\n      );\n    }\n\n    return wrapCollection(this, {\n      id: response.id,\n      name: response.name,\n      metadata: response.metadata as CollectionMetadata | undefined,\n      embeddingFunction:\n        embeddingFunction !== undefined\n          ? embeddingFunction\n          : new DefaultEmbeddingFunction(),\n      configuration: config,\n    });\n  }\n\n  /**\n   * Deletes a collection with the specified name.\n   * @param {Object} params - The parameters for deleting a collection.\n   * @param {string} params.name - The name of the collection.\n   * @returns {Promise<void>} A promise that resolves when the collection is deleted.\n   * @throws {Error} If there is an issue deleting the collection.\n   *\n   * @example\n   * ```typescript\n   * await client.deleteCollection({\n   *  name: \"my_collection\"\n   * });\n   * ```\n   */\n  async deleteCollection({ name }: DeleteCollectionParams): Promise<void> {\n    await this.init();\n\n    await this.api.deleteCollection(\n      this.tenant,\n      this.database,\n      name,\n      this.api.options,\n    );\n  }\n}\n","// create a cloudclient class that takes in an api key and an optional database\n// this should wrap ChromaClient and specify the auth scheme correctly\n\nimport { ChromaClient } from \"./ChromaClient\";\nimport { AuthOptions } from \"./auth\";\n\ninterface CloudClientParams {\n  apiKey?: string;\n  database?: string;\n  tenant?: string;\n  cloudHost?: string;\n  cloudPort?: string;\n}\n\nclass CloudClient extends ChromaClient {\n  constructor({\n    apiKey,\n    database,\n    tenant,\n    cloudHost,\n    cloudPort,\n  }: CloudClientParams) {\n    // If no API key is provided, try to load it from the environment variable\n    if (!apiKey) {\n      apiKey = process.env.CHROMA_API_KEY;\n    }\n    if (!apiKey) {\n      throw new Error(\"No API key provided\");\n    }\n\n    cloudHost = cloudHost || \"https://api.trychroma.com\";\n    cloudPort = cloudPort || \"8000\";\n\n    const path = `${cloudHost}:${cloudPort}`;\n\n    const auth: AuthOptions = {\n      provider: \"token\",\n      credentials: apiKey,\n      tokenHeaderType: \"X_CHROMA_TOKEN\",\n    };\n\n    return new ChromaClient({\n      path: path,\n      auth: auth,\n      database,\n      tenant,\n    });\n\n    super();\n  }\n}\n\nexport { CloudClient };\n","import type {\n  EmbeddingFunctionSpace,\n  IEmbeddingFunction,\n} from \"./IEmbeddingFunction\";\nimport { validateConfigSchema } from \"../schemas/schemaUtils\";\ninterface CohereAIAPI {\n  createEmbedding: (params: {\n    model: string;\n    input: string[];\n    isImage?: boolean;\n  }) => Promise<number[][]>;\n}\n\nclass CohereAISDK56 implements CohereAIAPI {\n  private cohereClient: any;\n  private apiKey: string;\n\n  constructor(configuration: { apiKey: string }) {\n    this.apiKey = configuration.apiKey;\n  }\n\n  private async loadClient() {\n    if (this.cohereClient) return;\n    //@ts-ignore\n    const { default: cohere } = await import(\"cohere-ai\");\n    // @ts-ignore\n    cohere.init(this.apiKey);\n    this.cohereClient = cohere;\n  }\n\n  public async createEmbedding(params: {\n    model: string;\n    input: string[];\n  }): Promise<number[][]> {\n    await this.loadClient();\n    return await this.cohereClient\n      .embed({\n        texts: params.input,\n        model: params.model,\n      })\n      .then((response: any) => {\n        return response.body.embeddings;\n      });\n  }\n}\n\nclass CohereAISDK7 implements CohereAIAPI {\n  private cohereClient: any;\n  private apiKey: string;\n\n  constructor(configuration: { apiKey: string }) {\n    this.apiKey = configuration.apiKey;\n  }\n\n  private async loadClient() {\n    if (this.cohereClient) return;\n    //@ts-ignore\n    const cohere = await import(\"cohere-ai\").then((cohere) => {\n      return cohere;\n    });\n    // @ts-ignore\n    this.cohereClient = new cohere.CohereClient({\n      token: this.apiKey,\n    });\n  }\n\n  public async createEmbedding(params: {\n    model: string;\n    input: string[];\n    isImage?: boolean;\n  }): Promise<number[][]> {\n    await this.loadClient();\n    if (params.isImage) {\n      return await this.cohereClient\n        .embed({ images: params.input, model: params.model })\n        .then((response: any) => {\n          return response.embeddings;\n        });\n    } else {\n      return await this.cohereClient\n        .embed({ texts: params.input, model: params.model })\n        .then((response: any) => {\n          return response.embeddings;\n        });\n    }\n  }\n}\n\ninterface StoredConfig {\n  model_name: string;\n  api_key_env_var: string;\n}\n\nexport class CohereEmbeddingFunction implements IEmbeddingFunction {\n  name = \"cohere\";\n\n  private cohereAiApi?: CohereAIAPI;\n  private model: string;\n  private isImage: boolean;\n  private apiKey: string;\n  private apiKeyEnvVar: string;\n\n  constructor({\n    cohere_api_key,\n    model = \"large\",\n    cohere_api_key_env_var = \"CHROMA_COHERE_API_KEY\",\n    /**\n     * If true, the input texts passed to `generate` are expected to be\n     * base64 encoded PNG data URIs.\n     */\n    isImage = false,\n  }: {\n    cohere_api_key?: string;\n    model?: string;\n    cohere_api_key_env_var: string;\n    /**\n     * If true, the input texts passed to `generate` are expected to be\n     * base64 encoded PNG data URIs.\n     */\n    isImage?: boolean;\n  }) {\n    this.model = model;\n    this.isImage = isImage;\n\n    const apiKey = cohere_api_key ?? process.env[cohere_api_key_env_var];\n    if (!apiKey) {\n      throw new Error(\n        `Cohere API key is required. Please provide it in the constructor or set the environment variable ${cohere_api_key_env_var}.`,\n      );\n    }\n\n    this.apiKey = apiKey;\n    this.apiKeyEnvVar = cohere_api_key_env_var;\n  }\n\n  private async initCohereClient() {\n    if (this.cohereAiApi) return;\n    try {\n      // @ts-ignore\n      this.cohereAiApi = await import(\"cohere-ai\").then((cohere) => {\n        // @ts-ignore\n        if (cohere.CohereClient) {\n          return new CohereAISDK7({ apiKey: this.apiKey });\n        } else {\n          return new CohereAISDK56({ apiKey: this.apiKey });\n        }\n      });\n    } catch (e) {\n      // @ts-ignore\n      if (e.code === \"MODULE_NOT_FOUND\") {\n        throw new Error(\n          \"Please install the cohere-ai package to use the CohereEmbeddingFunction, `npm install -S cohere-ai`\",\n        );\n      }\n      throw e;\n    }\n  }\n\n  public async generate(texts: string[]): Promise<number[][]> {\n    await this.initCohereClient();\n    // @ts-ignore\n    return await this.cohereAiApi.createEmbedding({\n      model: this.model,\n      input: texts,\n      isImage: this.isImage,\n    });\n  }\n\n  buildFromConfig(config: StoredConfig): CohereEmbeddingFunction {\n    return new CohereEmbeddingFunction({\n      model: config.model_name,\n      cohere_api_key_env_var: config.api_key_env_var,\n    });\n  }\n\n  getConfig(): StoredConfig {\n    return {\n      model_name: this.model,\n      api_key_env_var: this.apiKeyEnvVar,\n    };\n  }\n\n  validateConfigUpdate(oldConfig: StoredConfig, newConfig: StoredConfig): void {\n    if (oldConfig.model_name !== newConfig.model_name) {\n      throw new Error(\n        \"CohereEmbeddingFunction model_name cannot be changed after initialization.\",\n      );\n    }\n  }\n\n  validateConfig(config: StoredConfig): void {\n    validateConfigSchema(config, \"cohere\");\n  }\n\n  supportedSpaces(): EmbeddingFunctionSpace[] {\n    if (this.model === \"embed-english-v3.0\") {\n      return [\"cosine\", \"l2\", \"ip\"];\n    }\n\n    if (this.model === \"embed-english-light-v3.0\") {\n      return [\"cosine\", \"ip\", \"l2\"];\n    }\n\n    if (this.model === \"embed-english-v2.0\") {\n      return [\"cosine\"];\n    }\n\n    if (this.model === \"embed-english-light-v2.0\") {\n      return [\"cosine\"];\n    }\n\n    if (this.model === \"embed-multilingual-v3.0\") {\n      return [\"cosine\", \"l2\", \"ip\"];\n    }\n\n    if (this.model === \"embed-multilingual-light-v3.0\") {\n      return [\"cosine\", \"l2\", \"ip\"];\n    }\n\n    if (this.model === \"embed-multilingual-v2.0\") {\n      return [\"ip\"];\n    }\n\n    return [\"cosine\", \"l2\", \"ip\"];\n  }\n\n  defaultSpace(): EmbeddingFunctionSpace {\n    if (this.model == \"embed-multilingual-v2.0\") {\n      return \"ip\";\n    }\n\n    return \"cosine\";\n  }\n}\n","import {\n  EmbeddingFunctionSpace,\n  IEmbeddingFunction,\n} from \"./IEmbeddingFunction\";\nimport { validateConfigSchema } from \"../schemas/schemaUtils\";\ninterface StoredConfig {\n  api_key_env_var: string;\n  model_name: string;\n  task_type: string;\n}\n\nlet googleGenAiApi: any;\n\nexport class GoogleGenerativeAiEmbeddingFunction implements IEmbeddingFunction {\n  name = \"google_generative_ai\";\n\n  private api_key: string;\n  private api_key_env_var: string;\n  private model: string;\n  private googleGenAiApi?: any;\n  private taskType: string;\n\n  constructor({\n    googleApiKey,\n    model = \"embedding-001\",\n    taskType = \"RETRIEVAL_DOCUMENT\",\n    apiKeyEnvVar = \"GOOGLE_API_KEY\",\n  }: {\n    googleApiKey?: string;\n    model?: string;\n    taskType?: string;\n    apiKeyEnvVar: string;\n  }) {\n    const apiKey = googleApiKey ?? process.env[apiKeyEnvVar];\n    if (!apiKey) {\n      throw new Error(\n        `Google API key is required. Please provide it in the constructor or set the environment variable ${apiKeyEnvVar}.`,\n      );\n    }\n\n    this.api_key = apiKey;\n    this.api_key_env_var = apiKeyEnvVar;\n    this.model = model;\n    this.taskType = taskType;\n  }\n\n  private async loadClient() {\n    if (this.googleGenAiApi) return;\n    try {\n      // eslint-disable-next-line global-require,import/no-extraneous-dependencies\n      const { googleGenAi } =\n        await GoogleGenerativeAiEmbeddingFunction.import();\n      googleGenAiApi = googleGenAi;\n      // googleGenAiApi.init(this.api_key);\n      googleGenAiApi = new googleGenAiApi(this.api_key);\n    } catch (_a) {\n      // @ts-ignore\n      if (_a.code === \"MODULE_NOT_FOUND\") {\n        throw new Error(\n          \"Please install the @google/generative-ai package to use the GoogleGenerativeAiEmbeddingFunction, `npm install @google/generative-ai`\",\n        );\n      }\n      throw _a; // Re-throw other errors\n    }\n    this.googleGenAiApi = googleGenAiApi;\n  }\n\n  public async generate(texts: string[]) {\n    await this.loadClient();\n    const model = this.googleGenAiApi.getGenerativeModel({ model: this.model });\n    const response = await model.batchEmbedContents({\n      requests: texts.map((t) => ({\n        content: { parts: [{ text: t }] },\n        taskType: this.taskType,\n      })),\n    });\n    const embeddings = response.embeddings.map((e: any) => e.values);\n\n    return embeddings;\n  }\n\n  /** @ignore */\n  static async import(): Promise<{\n    // @ts-ignore\n    googleGenAi: typeof import(\"@google/generative-ai\");\n  }> {\n    try {\n      // @ts-ignore\n      const { GoogleGenerativeAI } = await import(\"@google/generative-ai\");\n      const googleGenAi = GoogleGenerativeAI;\n      // @ts-ignore\n      return { googleGenAi };\n    } catch (e) {\n      throw new Error(\n        \"Please install @google/generative-ai as a dependency with, e.g. `npm install @google/generative-ai`\",\n      );\n    }\n  }\n\n  buildFromConfig(config: StoredConfig): GoogleGenerativeAiEmbeddingFunction {\n    return new GoogleGenerativeAiEmbeddingFunction({\n      model: config.model_name,\n      apiKeyEnvVar: config.api_key_env_var,\n      taskType: config.task_type,\n    });\n  }\n\n  getConfig(): StoredConfig {\n    return {\n      api_key_env_var: this.api_key_env_var,\n      model_name: this.model,\n      task_type: this.taskType,\n    };\n  }\n\n  validateConfigUpdate(\n    oldConfig: Record<string, any>,\n    newConfig: Record<string, any>,\n  ): void {\n    if (oldConfig.model_name !== newConfig.model_name) {\n      throw new Error(\"The model name cannot be changed after initialization.\");\n    }\n\n    if (oldConfig.taskType !== newConfig.taskType) {\n      throw new Error(\"The task type cannot be changed after initialization.\");\n    }\n  }\n\n  validateConfig(config: Record<string, any>): void {\n    validateConfigSchema(config, \"google_generative_ai\");\n  }\n}\n","import { validateConfigSchema } from \"../schemas/schemaUtils\";\nimport { IEmbeddingFunction } from \"./IEmbeddingFunction\";\n\ntype StoredConfig = {\n  url: string;\n  api_key_env_var?: string;\n};\n\nexport class HuggingFaceEmbeddingServerFunction implements IEmbeddingFunction {\n  name = \"huggingface_server\";\n\n  private url: string;\n  private api_key_env_var?: string;\n  private headers?: { [key: string]: string };\n  constructor({\n    api_key,\n    url,\n    api_key_env_var,\n  }: {\n    url: string;\n    api_key?: string;\n    api_key_env_var?: string;\n  }) {\n    // we used to construct the client here, but we need to async import the types\n    // for the openai npm package, and the constructor can not be async\n    let apiKey: string | undefined;\n    this.api_key_env_var = api_key_env_var;\n    if (this.api_key_env_var) {\n      apiKey = api_key || process.env[this.api_key_env_var];\n    } else {\n      apiKey = api_key;\n    }\n    this.url = url;\n    if (apiKey) {\n      this.headers = {\n        Authorization: `Bearer ${apiKey}`,\n      };\n    }\n  }\n\n  public async generate(texts: string[]) {\n    const response = await fetch(this.url, {\n      method: \"POST\",\n      headers: this.headers,\n      body: JSON.stringify({ inputs: texts }),\n    });\n\n    if (!response.ok) {\n      throw new Error(`Failed to generate embeddings: ${response.statusText}`);\n    }\n\n    const data = await response.json();\n    return data;\n  }\n\n  buildFromConfig(config: StoredConfig): HuggingFaceEmbeddingServerFunction {\n    return new HuggingFaceEmbeddingServerFunction({\n      url: config.url,\n      api_key_env_var: config.api_key_env_var,\n    });\n  }\n\n  getConfig(): StoredConfig {\n    return {\n      url: this.url,\n      api_key_env_var: this.api_key_env_var,\n    };\n  }\n\n  validateConfigUpdate(\n    oldConfig: Record<string, any>,\n    newConfig: Record<string, any>,\n  ): void {\n    if (oldConfig.url !== newConfig.url) {\n      throw new Error(\"Changing the URL is not allowed.\");\n    }\n  }\n\n  validateConfig(config: Record<string, any>): void {\n    validateConfigSchema(config, \"huggingface_server\");\n  }\n}\n","import { IEmbeddingFunction } from \"./IEmbeddingFunction\";\nimport { validateConfigSchema } from \"../schemas/schemaUtils\";\ntype StoredConfig = {\n  api_key_env_var: string;\n  model_name: string;\n  task?: string;\n  late_chunking?: boolean;\n  truncate?: boolean;\n  dimensions?: number;\n  embedding_type?: string;\n  normalized?: boolean;\n};\n\ninterface JinaRequestBody {\n  input: string[];\n  model: string;\n  task?: string;\n  late_chunking?: boolean;\n  truncate?: boolean;\n  dimensions?: number;\n  embedding_type?: string;\n  normalized?: boolean;\n}\n\nexport class JinaEmbeddingFunction implements IEmbeddingFunction {\n  name = \"jina\";\n\n  private api_key_env_var: string;\n  private model_name: string;\n  private api_url: string;\n  private headers: { [key: string]: string };\n  private task: string | undefined;\n  private late_chunking: boolean | undefined;\n  private truncate: boolean | undefined;\n  private dimensions: number | undefined;\n  private embedding_type: string | undefined;\n  private normalized: boolean | undefined;\n\n  constructor({\n    jinaai_api_key,\n    model_name = \"jina-embeddings-v2-base-en\",\n    api_key_env_var = \"JINAAI_API_KEY\",\n    task,\n    late_chunking,\n    truncate,\n    dimensions,\n    embedding_type,\n    normalized,\n  }: {\n    jinaai_api_key?: string;\n    model_name?: string;\n    api_key_env_var: string;\n    task?: string;\n    late_chunking?: boolean;\n    truncate?: boolean;\n    dimensions?: number;\n    embedding_type?: string;\n    normalized?: boolean;\n  }) {\n    const apiKey = jinaai_api_key ?? process.env[api_key_env_var];\n    if (!apiKey) {\n      throw new Error(\n        `Jina AI API key is required. Please provide it in the constructor or set the environment variable ${api_key_env_var}.`,\n      );\n    }\n\n    this.model_name = model_name;\n    this.api_key_env_var = api_key_env_var;\n    this.task = task;\n    this.late_chunking = late_chunking;\n    this.truncate = truncate;\n    this.dimensions = dimensions;\n    this.embedding_type = embedding_type;\n    this.normalized = normalized;\n\n    this.api_url = \"https://api.jina.ai/v1/embeddings\";\n    this.headers = {\n      Authorization: `Bearer ${jinaai_api_key}`,\n      \"Accept-Encoding\": \"identity\",\n      \"Content-Type\": \"application/json\",\n    };\n  }\n\n  public async generate(texts: string[]) {\n    let json_body: JinaRequestBody = {\n      input: texts,\n      model: this.model_name,\n    };\n\n    if (this.task) {\n      json_body.task = this.task;\n    }\n\n    if (this.late_chunking) {\n      json_body.late_chunking = this.late_chunking;\n    }\n\n    if (this.truncate) {\n      json_body.truncate = this.truncate;\n    }\n\n    if (this.dimensions) {\n      json_body.dimensions = this.dimensions;\n    }\n\n    if (this.embedding_type) {\n      json_body.embedding_type = this.embedding_type;\n    }\n\n    if (this.normalized) {\n      json_body.normalized = this.normalized;\n    }\n\n    try {\n      const response = await fetch(this.api_url, {\n        method: \"POST\",\n        headers: this.headers,\n        body: JSON.stringify(json_body),\n      });\n\n      const data = (await response.json()) as { data: any[]; detail: string };\n      if (!data || !data.data) {\n        throw new Error(data.detail);\n      }\n\n      const embeddings: any[] = data.data;\n      const sortedEmbeddings = embeddings.sort((a, b) => a.index - b.index);\n\n      return sortedEmbeddings.map((result) => result.embedding);\n    } catch (error) {\n      if (error instanceof Error) {\n        throw new Error(`Error calling Jina AI API: ${error.message}`);\n      } else {\n        throw new Error(`Error calling Jina AI API: ${error}`);\n      }\n    }\n  }\n\n  buildFromConfig(config: StoredConfig): JinaEmbeddingFunction {\n    return new JinaEmbeddingFunction({\n      model_name: config.model_name,\n      api_key_env_var: config.api_key_env_var,\n      task: config.task,\n      late_chunking: config.late_chunking,\n      truncate: config.truncate,\n      dimensions: config.dimensions,\n      embedding_type: config.embedding_type,\n      normalized: config.normalized,\n    });\n  }\n\n  getConfig(): StoredConfig {\n    return {\n      api_key_env_var: this.api_key_env_var,\n      model_name: this.model_name,\n      task: this.task,\n      late_chunking: this.late_chunking,\n      truncate: this.truncate,\n      dimensions: this.dimensions,\n      embedding_type: this.embedding_type,\n      normalized: this.normalized,\n    };\n  }\n\n  validateConfig(config: StoredConfig): void {\n    validateConfigSchema(config, \"jina\");\n  }\n}\n","import type { IEmbeddingFunction } from \"./IEmbeddingFunction\";\nimport { validateConfigSchema } from \"../schemas/schemaUtils\";\ntype StoredConfig = {\n  url: string;\n  model_name: string;\n};\n\nexport class OllamaEmbeddingFunction implements IEmbeddingFunction {\n  name = \"ollama\";\n\n  private readonly url: string;\n  private readonly model: string;\n  private ollamaClient?: any;\n\n  constructor({\n    url = \"http://localhost:11434\",\n    model = \"chroma/all-minilm-l6-v2-f32\",\n  }: { url?: string; model?: string } = {}) {\n    // we used to construct the client here, but we need to async import the types\n    // for the openai npm package, and the constructor can not be async\n    if (url && url.endsWith(\"/api/embeddings\")) {\n      this.url = url.slice(0, -\"/api/embeddings\".length);\n    } else {\n      this.url = url;\n    }\n    this.model = model;\n  }\n\n  private async initClient() {\n    if (this.ollamaClient) return;\n    try {\n      // @ts-ignore\n      const { ollama } = await OllamaEmbeddingFunction.import();\n      this.ollamaClient = new ollama.Ollama({ host: this.url });\n    } catch (e) {\n      // @ts-ignore\n      if (e.code === \"MODULE_NOT_FOUND\") {\n        throw new Error(\n          \"Please install the ollama package to use the OllamaEmbeddingFunction, `npm install -S ollama`\",\n        );\n      }\n      throw e;\n    }\n  }\n\n  /** @ignore */\n  static async import(): Promise<{\n    // @ts-ignore\n    ollama: typeof import(\"ollama\");\n  }> {\n    try {\n      // @ts-ignore\n      const { ollama } = await import(\"ollama\").then((m) => ({ ollama: m }));\n      // @ts-ignore\n      return { ollama };\n    } catch (e) {\n      throw new Error(\n        \"Please install Ollama as a dependency with, e.g. `npm install ollama`\",\n      );\n    }\n  }\n\n  public async generate(texts: string[]) {\n    await this.initClient();\n    return await this.ollamaClient!.embed({\n      model: this.model,\n      input: texts,\n    }).then((response: any) => {\n      return response.embeddings;\n    });\n  }\n\n  buildFromConfig(config: StoredConfig): OllamaEmbeddingFunction {\n    return new OllamaEmbeddingFunction({\n      url: config.url,\n      model: config.model_name,\n    });\n  }\n\n  getConfig(): StoredConfig {\n    return {\n      url: this.url,\n      model_name: this.model,\n    };\n  }\n\n  validateConfig(config: StoredConfig): void {\n    validateConfigSchema(config, \"ollama\");\n  }\n}\n","import { IEmbeddingFunction } from \"./IEmbeddingFunction\";\nimport { validateConfigSchema } from \"../schemas/schemaUtils\";\nlet OpenAIApi: any;\nlet openAiVersion = null;\nlet openAiMajorVersion = null;\n\ninterface OpenAIAPI {\n  createEmbedding: (params: {\n    model: string;\n    input: string[];\n    user?: string;\n    dimensions?: number;\n  }) => Promise<number[][]>;\n}\n\nclass OpenAIAPIv3 implements OpenAIAPI {\n  private readonly configuration: any;\n  private openai: any;\n\n  constructor(configuration: { organization: string; apiKey: string }) {\n    this.configuration = new OpenAIApi.Configuration({\n      organization: configuration.organization,\n      apiKey: configuration.apiKey,\n    });\n    this.openai = new OpenAIApi.OpenAIApi(this.configuration);\n  }\n\n  public async createEmbedding(params: {\n    model: string;\n    input: string[];\n    user?: string;\n    dimensions?: number;\n  }): Promise<number[][]> {\n    const embeddings: number[][] = [];\n    const response = await this.openai\n      .createEmbedding({\n        model: params.model,\n        input: params.input,\n      })\n      .catch((error: any) => {\n        throw error;\n      });\n    // @ts-ignore\n    const data = response.data[\"data\"];\n    for (let i = 0; i < data.length; i += 1) {\n      embeddings.push(data[i][\"embedding\"]);\n    }\n    return embeddings;\n  }\n}\n\nclass OpenAIAPIv4 implements OpenAIAPI {\n  private readonly apiKey: any;\n  private openai: any;\n\n  constructor(apiKey: any) {\n    this.apiKey = apiKey;\n    this.openai = new OpenAIApi({\n      apiKey: this.apiKey,\n    });\n  }\n\n  public async createEmbedding(params: {\n    model: string;\n    input: string[];\n    user?: string;\n    dimensions?: number;\n  }): Promise<number[][]> {\n    const embeddings: number[][] = [];\n    const response = await this.openai.embeddings.create(params);\n    const data = response[\"data\"];\n    for (let i = 0; i < data.length; i += 1) {\n      embeddings.push(data[i][\"embedding\"]);\n    }\n    return embeddings;\n  }\n}\n\ntype StoredConfig = {\n  api_key_env_var: string;\n  model_name: string;\n  organization_id: string;\n  dimensions: number;\n};\n\nexport class OpenAIEmbeddingFunction implements IEmbeddingFunction {\n  name = \"openai\";\n\n  private api_key: string;\n  private org_id: string;\n  private model: string;\n  private openaiApi?: OpenAIAPI;\n  private dimensions?: number;\n\n  constructor({\n    openai_api_key,\n    openai_model = \"text-embedding-ada-002\",\n    openai_organization_id,\n    openai_embedding_dimensions,\n    openai_api_key_env_var = \"OPENAI_API_KEY\",\n  }: {\n    openai_api_key?: string;\n    openai_model?: string;\n    openai_organization_id?: string;\n    openai_embedding_dimensions?: number;\n    openai_api_key_env_var?: string;\n  }) {\n    const apiKey = openai_api_key ?? process.env[openai_api_key_env_var];\n    if (!apiKey) {\n      throw new Error(\n        `OpenAI API key is required. Please provide it in the constructor or set the environment variable ${openai_api_key_env_var}.`,\n      );\n    }\n    this.api_key = apiKey;\n\n    this.org_id = openai_organization_id ?? \"\";\n    this.model = openai_model;\n    this.dimensions = openai_embedding_dimensions ?? 1536;\n  }\n\n  private async loadClient() {\n    // cache the client\n    if (this.openaiApi) return;\n\n    try {\n      const { openai, version } = await OpenAIEmbeddingFunction.import();\n      OpenAIApi = openai;\n      let versionVar: string = version;\n      openAiVersion = versionVar.replace(/[^0-9.]/g, \"\");\n      openAiMajorVersion = parseInt(openAiVersion.split(\".\")[0]);\n    } catch (_a) {\n      // @ts-ignore\n      if (_a.code === \"MODULE_NOT_FOUND\") {\n        throw new Error(\n          \"Please install the openai package to use the OpenAIEmbeddingFunction, e.g. `npm install openai`\",\n        );\n      }\n      throw _a; // Re-throw other errors\n    }\n\n    if (openAiMajorVersion > 3) {\n      this.openaiApi = new OpenAIAPIv4(this.api_key);\n    } else {\n      this.openaiApi = new OpenAIAPIv3({\n        organization: this.org_id,\n        apiKey: this.api_key,\n      });\n    }\n  }\n\n  public async generate(texts: string[]): Promise<number[][]> {\n    await this.loadClient();\n\n    return await this.openaiApi!.createEmbedding({\n      model: this.model,\n      input: texts,\n      dimensions: this.dimensions,\n    }).catch((error: any) => {\n      throw error;\n    });\n  }\n\n  /** @ignore */\n  static async import(): Promise<{\n    // @ts-ignore\n    openai: typeof import(\"openai\");\n    version: string;\n  }> {\n    try {\n      // @ts-ignore\n      const { default: openai } = await import(\"openai\");\n      // @ts-ignore\n      const { VERSION } = await import(\"openai/version\");\n      // @ts-ignore\n      return { openai, version: VERSION };\n    } catch (e) {\n      throw new Error(\n        \"Please install the openai package to use the OpenAIEmbeddingFunction, e.g. `npm install openai`\",\n      );\n    }\n  }\n\n  buildFromConfig(config: StoredConfig): OpenAIEmbeddingFunction {\n    return new OpenAIEmbeddingFunction({\n      openai_api_key: config.api_key_env_var,\n      openai_model: config.model_name,\n      openai_organization_id: config.organization_id,\n      openai_embedding_dimensions: config.dimensions,\n    });\n  }\n\n  getConfig(): StoredConfig {\n    return {\n      api_key_env_var: this.api_key,\n      model_name: this.model,\n      organization_id: this.org_id,\n      dimensions: this.dimensions ?? 1536,\n    };\n  }\n\n  validateConfigUpdate(oldConfig: StoredConfig, newConfig: StoredConfig): void {\n    if (oldConfig.model_name !== newConfig.model_name) {\n      throw new Error(\"Cannot change model name.\");\n    }\n  }\n\n  validateConfig(config: StoredConfig): void {\n    validateConfigSchema(config, \"openai\");\n  }\n}\n","import { IEmbeddingFunction } from \"./IEmbeddingFunction\";\nimport { validateConfigSchema } from \"../schemas/schemaUtils\";\n// Dynamically import module\nlet TransformersApi: Promise<any>;\n\ntype StoredConfig = {\n  model: string;\n  revision: string;\n  quantized: boolean;\n};\n\nexport class TransformersEmbeddingFunction implements IEmbeddingFunction {\n  name = \"transformers\";\n\n  private pipelinePromise?: Promise<any> | null;\n  private transformersApi: any;\n  private model: string;\n  private revision: string;\n  private quantized: boolean;\n  private progress_callback: Function | null;\n\n  /**\n   * TransformersEmbeddingFunction constructor.\n   * @param options The configuration options.\n   * @param options.model The model to use to calculate embeddings. Defaults to 'Xenova/all-MiniLM-L6-v2', which is an ONNX port of `sentence-transformers/all-MiniLM-L6-v2`.\n   * @param options.revision The specific model version to use (can be a branch, tag name, or commit id). Defaults to 'main'.\n   * @param options.quantized Whether to load the 8-bit quantized version of the model. Defaults to `false`.\n   * @param options.progress_callback If specified, this function will be called during model construction, to provide the user with progress updates.\n   */\n  constructor({\n    model = \"Xenova/all-MiniLM-L6-v2\",\n    revision = \"main\",\n    quantized = false,\n    progress_callback = null,\n  }: {\n    model?: string;\n    revision?: string;\n    quantized?: boolean;\n    progress_callback?: Function | null;\n  } = {}) {\n    this.model = model;\n    this.revision = revision;\n    this.quantized = quantized;\n    this.progress_callback = progress_callback;\n  }\n\n  public async generate(texts: string[]): Promise<number[][]> {\n    await this.loadClient();\n\n    // Store a promise that resolves to the pipeline\n    this.pipelinePromise = new Promise(async (resolve, reject) => {\n      try {\n        const pipeline = this.transformersApi;\n\n        const quantized = this.quantized;\n        const revision = this.revision;\n        const progress_callback = this.progress_callback;\n\n        resolve(\n          await pipeline(\"feature-extraction\", this.model, {\n            quantized,\n            revision,\n            progress_callback,\n          }),\n        );\n      } catch (e) {\n        reject(e);\n      }\n    });\n\n    let pipe = await this.pipelinePromise;\n    let output = await pipe(texts, { pooling: \"mean\", normalize: true });\n    return output.tolist();\n  }\n\n  private async loadClient() {\n    if (this.transformersApi) return;\n    try {\n      // eslint-disable-next-line global-require,import/no-extraneous-dependencies\n      let { pipeline } = await TransformersEmbeddingFunction.import();\n      TransformersApi = pipeline;\n    } catch (_a) {\n      // @ts-ignore\n      if (_a.code === \"MODULE_NOT_FOUND\") {\n        throw new Error(\n          \"Please install the @xenova/transformers package to use the TransformersEmbeddingFunction, `npm install @xenova/transformers`\",\n        );\n      }\n      throw _a; // Re-throw other errors\n    }\n    this.transformersApi = TransformersApi;\n  }\n\n  /** @ignore */\n  static async import(): Promise<{\n    // @ts-ignore\n    pipeline: typeof import(\"@xenova/transformers\");\n  }> {\n    try {\n      // @ts-ignore\n      const { pipeline } = await import(\"@xenova/transformers\");\n      return { pipeline };\n    } catch (e) {\n      throw new Error(\n        \"Please install @xenova/transformers as a dependency with, e.g. `npm install @xenova/transformers`\",\n      );\n    }\n  }\n\n  buildFromConfig(config: StoredConfig): TransformersEmbeddingFunction {\n    return new TransformersEmbeddingFunction({\n      model: config.model,\n      revision: config.revision,\n      quantized: config.quantized,\n    });\n  }\n\n  getConfig(): StoredConfig {\n    return {\n      model: this.model,\n      revision: this.revision,\n      quantized: this.quantized,\n    };\n  }\n\n  validateConfigUpdate(oldConfig: StoredConfig, newConfig: StoredConfig): void {\n    if (oldConfig.model !== newConfig.model) {\n      throw new Error(\"Cannot change the model of the embedding function.\");\n    }\n    if (oldConfig.revision !== newConfig.revision) {\n      throw new Error(\"Cannot change the revision of the embedding function.\");\n    }\n    if (oldConfig.quantized !== newConfig.quantized) {\n      throw new Error(\n        \"Cannot change the quantization of the embedding function.\",\n      );\n    }\n  }\n\n  validateConfig(config: StoredConfig): void {\n    validateConfigSchema(config, \"transformers\");\n  }\n}\n","import { IEmbeddingFunction } from \"./IEmbeddingFunction\";\nimport { validateConfigSchema } from \"../schemas/schemaUtils\";\nclass VoyageAIAPI {\n  private client: any;\n  private apiKey: string;\n\n  constructor(configuration: { apiKey: string }) {\n    this.apiKey = configuration.apiKey;\n  }\n\n  private async loadClient() {\n    if (this.client) return;\n    //@ts-ignore\n    const voyageai = await import(\"voyageai\").then((voyageai) => {\n      return voyageai;\n    });\n    // @ts-ignore\n    this.client = new voyageai.VoyageAIClient({\n      apiKey: this.apiKey,\n    });\n  }\n\n  public async createEmbedding(params: {\n    model: string;\n    input: string[];\n  }): Promise<number[][]> {\n    await this.loadClient();\n    return await this.client\n      .embed({ input: params.input, model: params.model })\n      .then((response: any) => {\n        return response.data.map(\n          (item: { embedding: number[] }) => item.embedding,\n        );\n      });\n  }\n}\n\ntype StoredConfig = {\n  api_key_env_var: string;\n  model_name: string;\n};\n\nexport class VoyageAIEmbeddingFunction implements IEmbeddingFunction {\n  name = \"voyageai\";\n\n  private voyageAiApi?: VoyageAIAPI;\n  private model: string;\n  private apiKey: string;\n  private apiKeyEnvVar: string;\n  constructor({\n    api_key,\n    model,\n    api_key_env_var = \"VOYAGE_API_KEY\",\n  }: {\n    api_key?: string;\n    model: string;\n    api_key_env_var: string;\n  }) {\n    const apiKey = api_key ?? process.env[api_key_env_var];\n    if (!apiKey) {\n      throw new Error(\n        `VoyageAI API key is required. Please provide it in the constructor or set the environment variable ${api_key_env_var}.`,\n      );\n    }\n    this.apiKey = apiKey;\n    this.model = model;\n    this.apiKeyEnvVar = api_key_env_var;\n  }\n\n  private async initClient() {\n    if (this.voyageAiApi) return;\n    try {\n      // @ts-ignore\n      this.voyageAiApi = await import(\"voyageai\").then((voyageai) => {\n        // @ts-ignore\n        return new VoyageAIAPI({ apiKey: this.apiKey });\n      });\n    } catch (e) {\n      // @ts-ignore\n      if (e.code === \"MODULE_NOT_FOUND\") {\n        throw new Error(\n          \"Please install the voyageai package to use the VoyageAIEmbeddingFunction, `npm install -S voyageai`\",\n        );\n      }\n      throw e;\n    }\n  }\n\n  public async generate(texts: string[]): Promise<number[][]> {\n    await this.initClient();\n    // @ts-ignore\n    return await this.voyageAiApi.createEmbedding({\n      model: this.model,\n      input: texts,\n    });\n  }\n\n  buildFromConfig(config: StoredConfig): VoyageAIEmbeddingFunction {\n    return new VoyageAIEmbeddingFunction({\n      api_key_env_var: config.api_key_env_var,\n      model: config.model_name,\n    });\n  }\n\n  getConfig(): StoredConfig {\n    return {\n      api_key_env_var: this.apiKeyEnvVar,\n      model_name: this.model,\n    };\n  }\n\n  validateConfigUpdate(oldConfig: StoredConfig, newConfig: StoredConfig): void {\n    if (oldConfig.model_name !== newConfig.model_name) {\n      throw new Error(\"Cannot change the model of the embedding function.\");\n    }\n  }\n\n  validateConfig(config: StoredConfig): void {\n    validateConfigSchema(config, \"voyageai\");\n  }\n}\n","import { IEmbeddingFunction } from \"./IEmbeddingFunction\";\nimport { validateConfigSchema } from \"../schemas/schemaUtils\";\n\ntype StoredConfig = {\n  account_id: string;\n  model_name: string;\n  api_key_env_var: string;\n  gateway_id?: string;\n};\n\nconst BASE_URL = \"https://api.cloudflare.com/client/v4/accounts\";\nconst GATEWAY_BASE_URL = \"https://gateway.ai.cloudflare.com/v1\";\n\nexport class CloudflareWorkersAIEmbeddingFunction\n  implements IEmbeddingFunction\n{\n  name = \"cloudflare_workers_ai\";\n\n  private account_id: string;\n  private model_name: string;\n  private api_key_env_var: string;\n  private gateway_id?: string;\n  private api_url: string;\n  private headers: { [key: string]: string };\n\n  constructor({\n    cloudflare_api_key,\n    model_name,\n    account_id,\n    api_key_env_var = \"CHROMA_CLOUDFLARE_API_KEY\",\n    gateway_id = undefined,\n  }: {\n    cloudflare_api_key?: string;\n    model_name: string;\n    account_id: string;\n    api_key_env_var: string;\n    gateway_id?: string;\n  }) {\n    const apiKey = cloudflare_api_key ?? process.env[api_key_env_var];\n    if (!apiKey) {\n      throw new Error(\n        `Cloudflare API key is required. Please provide it in the constructor or set the environment variable ${api_key_env_var}.`,\n      );\n    }\n\n    this.model_name = model_name;\n    this.account_id = account_id;\n    this.api_key_env_var = api_key_env_var;\n    this.gateway_id = gateway_id;\n\n    if (this.gateway_id) {\n      this.api_url = `${GATEWAY_BASE_URL}/${this.account_id}/${this.gateway_id}/workers-ai/${this.model_name}`;\n    } else {\n      this.api_url = `${BASE_URL}/${this.account_id}/ai/run/${this.model_name}`;\n    }\n\n    this.headers = {\n      Authorization: `Bearer ${apiKey}`,\n      \"Accept-Encoding\": \"identity\",\n      \"Content-Type\": \"application/json\",\n    };\n  }\n\n  public async generate(texts: string[]) {\n    try {\n      const payload = {\n        text: texts,\n      };\n\n      const response = await fetch(this.api_url, {\n        method: \"POST\",\n        headers: this.headers,\n        body: JSON.stringify(payload),\n      });\n\n      const resp = await response.json();\n\n      if (!resp.result || !resp.result.data) {\n        throw new Error(resp.detail || \"Unknown error\");\n      }\n\n      return resp.result.data;\n    } catch (error) {\n      if (error instanceof Error) {\n        throw new Error(\n          `Error calling Cloudflare Workers AI API: ${error.message}`,\n        );\n      } else {\n        throw new Error(`Error calling Cloudflare Workers AI API: ${error}`);\n      }\n    }\n  }\n\n  buildFromConfig(config: StoredConfig): CloudflareWorkersAIEmbeddingFunction {\n    return new CloudflareWorkersAIEmbeddingFunction({\n      model_name: config.model_name,\n      account_id: config.account_id,\n      api_key_env_var: config.api_key_env_var,\n      gateway_id: config.gateway_id ?? undefined,\n    });\n  }\n\n  getConfig(): StoredConfig {\n    return {\n      model_name: this.model_name,\n      account_id: this.account_id,\n      api_key_env_var: this.api_key_env_var,\n      gateway_id: this.gateway_id ?? undefined,\n    };\n  }\n\n  validateConfig(config: StoredConfig): void {\n    validateConfigSchema(config, \"cloudflare_workers_ai\");\n  }\n}\n","import { IEmbeddingFunction } from \"./IEmbeddingFunction\";\nimport { validateConfigSchema } from \"../schemas/schemaUtils\";\n\ntype StoredConfig = {\n  model_name: string;\n  api_key_env_var: string;\n};\n\nconst ENDPOINT = \"https://api.together.xyz/v1/embeddings\";\n\nexport class TogetherAIEmbeddingFunction implements IEmbeddingFunction {\n  name = \"together_ai\";\n\n  private model_name: string;\n  private api_key_env_var: string;\n  private headers: { [key: string]: string };\n\n  constructor({\n    together_ai_api_key,\n    model_name,\n    api_key_env_var = \"CHROMA_TOGETHER_AI_API_KEY\",\n  }: {\n    together_ai_api_key?: string;\n    model_name: string;\n    api_key_env_var: string;\n  }) {\n    const apiKey = together_ai_api_key ?? process.env[api_key_env_var];\n    if (!apiKey) {\n      throw new Error(\n        `Together AI API key is required. Please provide it in the constructor or set the environment variable ${api_key_env_var}.`,\n      );\n    }\n\n    this.model_name = model_name;\n    this.api_key_env_var = api_key_env_var;\n\n    this.headers = {\n      Authorization: `Bearer ${apiKey}`,\n      \"Content-Type\": \"application/json\",\n      accept: \"application/json\",\n    };\n  }\n\n  public async generate(texts: string[]): Promise<number[][]> {\n    try {\n      const payload = {\n        model: this.model_name,\n        input: texts,\n      };\n\n      const response = await fetch(ENDPOINT, {\n        method: \"POST\",\n        headers: this.headers,\n        body: JSON.stringify(payload),\n      });\n\n      const resp = await response.json();\n\n      if (!resp.data) {\n        throw new Error(\"Invalid response format from Together AI API\");\n      }\n\n      const embeddings = resp.data.map(\n        (item: { embedding: number[] }) => item.embedding,\n      );\n      return embeddings;\n    } catch (error) {\n      if (error instanceof Error) {\n        throw new Error(`Error calling Together AI API: ${error.message}`);\n      } else {\n        throw new Error(`Error calling Together AI API: ${error}`);\n      }\n    }\n  }\n\n  buildFromConfig(config: StoredConfig): IEmbeddingFunction {\n    return new TogetherAIEmbeddingFunction({\n      model_name: config.model_name,\n      api_key_env_var: config.api_key_env_var,\n    });\n  }\n\n  getConfig(): StoredConfig {\n    return {\n      model_name: this.model_name,\n      api_key_env_var: this.api_key_env_var,\n    };\n  }\n\n  validateConfig(config: StoredConfig): void {\n    validateConfigSchema(config, \"together_ai\");\n  }\n}\n","import { AuthOptions } from \"./auth\";\nimport { CreateCollectionConfiguration } from \"./CollectionConfiguration\";\nimport { IEmbeddingFunction } from \"./embeddings/IEmbeddingFunction\";\nimport { Api } from \"./generated\";\n\nexport enum IncludeEnum {\n  Documents = \"documents\",\n  Embeddings = \"embeddings\",\n  Metadatas = \"metadatas\",\n  Distances = \"distances\",\n  Uris = \"uris\",\n}\n\nexport type Embedding = number[];\nexport type Embeddings = Embedding[];\n\nexport type Metadata = Record<string, string | number | boolean>;\nexport type Metadatas = Metadata[];\n\nexport type Document = string;\nexport type Documents = Document[];\n\nexport type ID = string;\nexport type IDs = ID[];\n\nexport type PositiveInteger = number;\n\ntype LiteralValue = string | number | boolean;\ntype ListLiteralValue = LiteralValue[];\ntype LiteralNumber = number;\ntype LogicalOperator = \"$and\" | \"$or\";\ntype InclusionOperator = \"$in\" | \"$nin\";\ntype WhereOperator = \"$gt\" | \"$gte\" | \"$lt\" | \"$lte\" | \"$ne\" | \"$eq\";\n\ntype OperatorExpression = {\n  [key in WhereOperator | InclusionOperator | LogicalOperator]?:\n    | LiteralValue\n    | ListLiteralValue;\n};\n\ntype BaseWhere = {\n  [key: string]: LiteralValue | OperatorExpression;\n};\n\ntype LogicalWhere = {\n  [key in LogicalOperator]?: Where[];\n};\n\nexport type Where = BaseWhere | LogicalWhere;\n\ntype WhereDocumentOperator = \"$contains\" | \"$not_contains\" | LogicalOperator;\n\nexport type WhereDocument = {\n  [key in WhereDocumentOperator]?:\n    | LiteralValue\n    | LiteralNumber\n    | WhereDocument[];\n};\n\nexport type MultiGetResponse = {\n  ids: IDs;\n  embeddings: Embeddings | null;\n  documents: (Document | null)[];\n  metadatas: (Metadata | null)[];\n  included: IncludeEnum[];\n};\n\nexport type GetResponse = MultiGetResponse;\n\nexport type SingleQueryResponse = {\n  ids: IDs;\n  embeddings: Embeddings | null;\n  documents: (Document | null)[];\n  metadatas: (Metadata | null)[];\n  distances: number[] | null;\n  included: IncludeEnum[];\n};\n\nexport type MultiQueryResponse = {\n  ids: IDs[];\n  embeddings: Embeddings[] | null;\n  documents: (Document | null)[][];\n  metadatas: (Metadata | null)[][];\n  distances: number[][] | null;\n  included: IncludeEnum[];\n};\n\nexport type QueryResponse = SingleQueryResponse | MultiQueryResponse;\n\nexport type AddResponse = {};\n\nexport interface CollectionParams {\n  name: string;\n  id: string;\n  metadata: CollectionMetadata | undefined;\n  embeddingFunction: IEmbeddingFunction;\n  configuration: Api.CollectionConfiguration | undefined;\n}\n\nexport type CollectionMetadata = Record<string, boolean | number | string>;\n\n// RequestInit can be used to set Authorization headers and more\n// see all options here: https://www.jsdocs.io/package/@types/node-fetch#RequestInit\nexport type ConfigOptions = {\n  options?: RequestInit;\n};\n\nexport type BaseGetParams = {\n  ids?: ID | IDs;\n  where?: Where;\n  limit?: PositiveInteger;\n  offset?: PositiveInteger;\n  include?: IncludeEnum[];\n  whereDocument?: WhereDocument;\n};\n\nexport type SingleGetParams = BaseGetParams & {\n  ids: ID;\n};\n\nexport type MultiGetParams = BaseGetParams & {\n  ids?: IDs;\n};\n\nexport type GetParams = SingleGetParams | MultiGetParams;\n\nexport type ListCollectionsParams = {\n  limit?: PositiveInteger;\n  offset?: PositiveInteger;\n};\n\nexport type ChromaClientParams = {\n  path?: string;\n  fetchOptions?: RequestInit;\n  auth?: AuthOptions;\n  tenant?: string;\n  database?: string;\n};\n\nexport type CreateCollectionParams = {\n  name: string;\n  metadata?: CollectionMetadata;\n  embeddingFunction?: IEmbeddingFunction;\n  configuration?: CreateCollectionConfiguration;\n};\n\nexport type GetOrCreateCollectionParams = CreateCollectionParams;\n\nexport type GetCollectionParams = {\n  name: string;\n  embeddingFunction?: IEmbeddingFunction;\n};\n\nexport type DeleteCollectionParams = {\n  name: string;\n};\n\nexport type BaseRecordOperationParams = {\n  ids: ID | IDs;\n  embeddings?: Embedding | Embeddings;\n  metadatas?: Metadata | Metadatas;\n  documents?: Document | Documents;\n};\n\nexport type SingleRecordOperationParams = BaseRecordOperationParams & {\n  ids: ID;\n  embeddings?: Embedding;\n  metadatas?: Metadata;\n  documents?: Document;\n};\n\ntype SingleEmbeddingRecordOperationParams = SingleRecordOperationParams & {\n  embeddings: Embedding;\n};\n\ntype SingleContentRecordOperationParams = SingleRecordOperationParams & {\n  documents: Document;\n};\n\nexport type SingleAddRecordOperationParams =\n  | SingleEmbeddingRecordOperationParams\n  | SingleContentRecordOperationParams;\n\nexport type MultiRecordOperationParams = BaseRecordOperationParams & {\n  ids: IDs;\n  embeddings?: Embeddings;\n  metadatas?: Metadatas;\n  documents?: Documents;\n};\n\ntype MultiEmbeddingRecordOperationParams = MultiRecordOperationParams & {\n  embeddings: Embeddings;\n};\n\ntype MultiContentRecordOperationParams = MultiRecordOperationParams & {\n  documents: Documents;\n};\n\nexport type MultiAddRecordsOperationParams =\n  | MultiEmbeddingRecordOperationParams\n  | MultiContentRecordOperationParams;\n\nexport type AddRecordsParams =\n  | SingleAddRecordOperationParams\n  | MultiAddRecordsOperationParams;\n\nexport type UpsertRecordsParams = AddRecordsParams;\nexport type UpdateRecordsParams =\n  | MultiRecordOperationParams\n  | SingleRecordOperationParams;\n\nexport type ModifyCollectionParams = {\n  name?: string;\n  metadata?: CollectionMetadata;\n};\n\nexport type ForkCollectionParams = {\n  newName: string;\n};\n\nexport type BaseQueryParams = {\n  ids?: ID | IDs;\n  nResults?: PositiveInteger;\n  where?: Where;\n  queryTexts?: string | string[];\n  queryEmbeddings?: Embedding | Embeddings;\n  whereDocument?: WhereDocument; // {\"$contains\":\"search_string\"}\n  include?: IncludeEnum[]; // [\"metadata\", \"document\"]\n};\n\nexport type SingleTextQueryParams = BaseQueryParams & {\n  queryTexts: string;\n  queryEmbeddings?: never;\n};\n\nexport type SingleEmbeddingQueryParams = BaseQueryParams & {\n  queryTexts?: never;\n  queryEmbeddings: Embedding;\n};\n\nexport type MultiTextQueryParams = BaseQueryParams & {\n  queryTexts: string[];\n  queryEmbeddings?: never;\n};\n\nexport type MultiEmbeddingQueryParams = BaseQueryParams & {\n  queryTexts?: never;\n  queryEmbeddings: Embeddings;\n};\n\nexport type QueryRecordsParams =\n  | SingleTextQueryParams\n  | SingleEmbeddingQueryParams\n  | MultiTextQueryParams\n  | MultiEmbeddingQueryParams;\n\nexport type PeekParams = { limit?: PositiveInteger };\n\nexport type DeleteParams = {\n  ids?: ID | IDs;\n  where?: Where;\n  whereDocument?: WhereDocument;\n};\n\nexport type UserIdentity = {\n  tenant: string;\n  databases: string[];\n};\n"],"mappings":"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,IAAG,GAAE,GAAG,GAAE,CAAC,IAAG,GAAE,GAAG,GAAE,CAAC,IAAG,GAAE,GAAG,GAAE,CAAC,IAAG,GAAE,GAAG,GAAE,CAAC,IAAG,GAAE,GAAG,GAAE,CAAC,IAAG,GAAE,GAAG,GAAE,CAAC,IAAG,GAAE,GAAG,GAAE,CAAC,IAAG,GAAE,GAAG,GAAE,CAAC,IAAG,GAAE,GAAG,GAAE,CAAC,IAAG,GAAE,GAAG,GAAE,CAAC,IAAG,GAAE,GAAG,GAAE,CAAC,IAAG,GAAE,GAAG,GAAE,CAAC,IAAG,GAAE,GAAG,GAAE,CAAC,IAAG,GAAE,GAAG,GAAE,CAAC,IAAG,GAAE,GAAG,GAAE,CAAC,IAAG,GAAE,GAAG,GAAE,CAAC,IAAG,GAAE,GAAG,GAAE,CAAC,IAAG,GAAE,GAAG,GAAE,CAAC,IAAG,GAAE,GAAG,GAAE,CAAC,IAAG,GAAE,GAAG,GAAE,CAAC,IAAG,GAAE,GAAG,GAAE,CAAC,IAAG,GAAE,GAAG,GAAE,CAAC,CAAC,IAAG,EAAE,GAAE,CAAC,GAAE,CAAC,CAAC,IAAG,GAAG,GAAE,CAAC,GAAE,CAAC,CAAC,KAAI,GAAG,GAAE,CAAC,GAAE,CAAC,CAAC,KAAI,GAAG,GAAE,CAAC,GAAE,CAAC,KAAI,GAAE,GAAG,GAAE,CAAC,CAAC,KAAI,GAAG,GAAE,CAAC,GAAE,CAAC,KAAI,GAAE,SAAI,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,GAAG,GAAE,CAAC,CAAC,KAAI,GAAG,GAAE,CAAC,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,SAAI,GAAE,CAAC,CAAC,KAAI,GAAG,GAAE,CAAC,GAAE,CAAC,KAAI,GAAE,GAAG,GAAE,CAAC,KAAI,GAAE,GAAG,GAAE,CAAC,KAAI,GAAE,SAAI,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,SAAI,GAAE,CAAC,KAAI,GAAE,GAAG,GAAE,CAAC,KAAI,GAAE,GAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,UAAK,GAAE,CAAC,KAAI,GAAE,UAAK,GAAE,CAAC,KAAI,GAAE,UAAK,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,MAAG,GAAE,CAAC,KAAI,GAAE,MAAG,GAAE,CAAC,KAAI,GAAE,MAAG,GAAE,CAAC,KAAI,GAAE,MAAG,GAAE,CAAC,KAAI,GAAE,MAAG,GAAE,CAAC,KAAI,GAAE,MAAG,GAAE,CAAC,KAAI,GAAE,MAAG,GAAE,CAAC,KAAI,GAAE,MAAG,GAAE,CAAC,KAAI,GAAE,MAAG,GAAE,CAAC,KAAI,GAAE,MAAG,GAAE,CAAC,KAAI,GAAE,MAAG,GAAE,CAAC,KAAI,GAAE,MAAG,GAAE,CAAC,KAAI,GAAE,MAAG,GAAE,CAAC,KAAI,GAAE,MAAG,GAAE,CAAC,KAAI,GAAE,MAAG,GAAE,CAAC,KAAI,GAAE,MAAG,GAAE,CAAC,KAAI,GAAE,MAAG,GAAE,CAAC,KAAI,GAAE,MAAG,GAAE,CAAC,KAAI,GAAE,MAAG,GAAE,CAAC,KAAI,GAAE,MAAG,GAAE,CAAC,KAAI,GAAE,MAAG,GAAE,CAAC,KAAI,GAAE,MAAG,GAAE,CAAC,KAAI,GAAE,MAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,MAAG,GAAE,CAAC,KAAI,GAAE,MAAG,GAAE,CAAC,KAAI,GAAE,MAAG,GAAE,CAAC,KAAI,GAAE,MAAG,GAAE,CAAC,KAAI,GAAE,MAAG,GAAE,CAAC,KAAI,GAAE,MAAG,GAAE,CAAC,KAAI,GAAE,MAAG,GAAE,CAAC,KAAI,GAAE,IAAI,GAAE,CAAC,CAAC,KAAI,GAAG,GAAE,CAAC,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,CAAC,KAAI,GAAG,GAAE,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,SAAI,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,CAAC,KAAI,GAAG,GAAE,GAAE,IAAI,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,CAAC,KAAI,GAAG,GAAE,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,CAAC,KAAI,GAAG,GAAE,GAAE,OAAI,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,SAAI,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,MAAG,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,GAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,CAAC,KAAI,GAAG,GAAE,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,CAAC,KAAI,GAAG,GAAE,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,CAAC,KAAI,GAAG,GAAE,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,CAAC,KAAI,GAAG,GAAE,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,CAAC,KAAI,GAAG,GAAE,CAAC,GAAE,CAAC,CAAC,KAAI,GAAG,GAAE,GAAE,SAAI,GAAE,CAAC,CAAC,KAAI,GAAG,GAAE,GAAE,IAAI,GAAE,CAAC,CAAC,KAAI,GAAG,GAAE,GAAE,IAAI,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,CAAC,KAAI,GAAG,GAAE,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,CAAC,KAAI,GAAG,GAAE,CAAC,GAAE,CAAC,CAAC,KAAI,GAAG,GAAE,GAAE,IAAI,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,CAAC,KAAI,GAAG,GAAE,CAAC,GAAE,CAAC,CAAC,KAAI,GAAG,GAAE,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,CAAC,KAAI,GAAG,GAAE,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,CAAC,KAAI,GAAG,GAAE,CAAC,GAAE,CAAC,CAAC,KAAI,GAAG,GAAE,CAAC,GAAE,CAAC,CAAC,KAAI,GAAG,GAAE,CAAC,GAAE,CAAC,KAAI,GAAE,GAAG,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,GAAE,GAAG,GAAE,CAAC,KAAI,GAAE,GAAG,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,GAAE,GAAG,GAAE,CAAC,KAAI,GAAE,GAAG,GAAE,CAAC,CAAC,KAAI,GAAG,GAAE,CAAC,GAAE,CAAC,CAAC,KAAI,GAAG,GAAE,CAAC,GAAE,CAAC,CAAC,KAAI,GAAG,GAAE,CAAC,GAAE,CAAC,CAAC,KAAI,GAAG,GAAE,CAAC,GAAE,CAAC,KAAI,GAAE,SAAI,GAAE,CAAC,KAAI,GAAE,SAAI,GAAE,CAAC,KAAI,GAAE,SAAI,GAAE,CAAC,KAAI,GAAE,SAAI,GAAE,CAAC,KAAI,GAAE,SAAI,GAAE,CAAC,KAAI,GAAE,SAAI,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,GAAE,GAAG,GAAE,CAAC,KAAI,GAAE,GAAG,GAAE,CAAC,KAAI,GAAE,GAAG,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,CAAC,KAAI,GAAG,GAAE,CAAC,GAAE,CAAC,CAAC,KAAI,GAAG,GAAE,CAAC,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,CAAC,KAAI,GAAG,GAAE,CAAC,GAAE,CAAC,CAAC,KAAI,GAAG,GAAE,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,GAAE,ceAAK,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,GAAE,MAAG,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,CAAC,KAAI,GAAG,GAAE,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,CAAC,KAAI,GAAG,GAAE,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAI,GAAE,QAAG,GAAE,CAAC,KAAI,CAAC,GAAE,CAAC,KAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,ccAAI,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,ccAAI,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,oBAAK,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,oBAAK,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,ccAAI,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,SAAI,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,SAAI,GAAE,CAAC,MAAK,GAAE,SAAI,GAAE,CAAC,MAAK,GAAE,eAAK,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,eAAK,GAAE,CAAC,MAAK,GAAE,eAAK,GAAE,CAAC,MAAK,GAAE,eAAK,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,eAAK,GAAE,CAAC,MAAK,GAAE,eAAK,GAAE,CAAC,MAAK,GAAE,eAAK,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,eAAK,GAAE,CAAC,MAAK,GAAE,eAAK,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,SAAI,GAAE,CAAC,MAAK,GAAE,SAAI,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,GAAE,GAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,GAAE,EAAE,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,GAAE,SAAI,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,oBAAK,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,cAAI,GAAE,CAAC,MAAK,GAAE,oBAAK,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,GAAE,IAAI,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,SAAI,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,GAAE,IAAI,GAAE,CAAC,MAAK,GAAE,IAAI,GAAE,CAAC,MAAK,GAAE,IAAI,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,GAAE,0BAAM,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,GAAE,IAAI,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,GAAE,KAAK,GAAE,CAAC,MAAK,GAAE,KAAK,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,OAAI,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,KAAK,GAAE,CAAC,MAAK,GAAE,KAAK,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,OAAI,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,GAAE,GAAG,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,GAAE,GAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,IAAI,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,GAAE,GAAG,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,GAAE,IAAI,GAAE,CAAC,MAAK,GAAE,KAAK,GAAE,CAAC,MAAK,GAAE,IAAI,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,MAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,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C,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,MAAK,GAAE,QAAG,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,IAAI,GAAE,CAAC,MAAK,GAAE,IAAI,GAAE,CAAC,MAAK,GAAE,IAAI,GAAE,CAAC,MAAK,GAAE,IAAI,GAAE,CAAC,MAAK,GAAE,IAAI,GAAE,CAAC,MAAK,GAAE,IAAI,GAAE,CAAC,MAAK,GAAE,IAAI,GAAE,CAAC,MAAK,GAAE,IAAI,GAAE,CAAC,MAAK,GAAE,IAAI,GAAE,CAAC,MAAK,GAAE,IAAI,GAAE,CAAC,MAAK,GAAE,IAAI,GAAE,CAAC,MAAK,GAAE,KAAK,GAAE,CAAC,MAAK,GAAE,KAAK,GAAE,CAAC,MAAK,GAAE,KAAK,GAAE,CAAC,MAAK,GAAE,KAAK,GAAE,CAAC,MAAK,GAAE,KAAK,GAAE,CAAC,MAAK,GAAE,KAAK,GAAE,CAAC,MAAK,GAAE,KAAK,GAAE,CAAC,MAAK,GAAE,KAAK,GAAE,CAAC,MAAK,GAAE,KAAK,GAAE,CAAC,MAAK,GAAE,MAAM,GAAE,CAAC,MAAK,GAAE,MAAM,GAAE,CAAC,MAAK,GAAE,MAAM,GAAE,CAAC,MAAK,GAAE,MAAM,GAAE,CAAC,MAAK,GAAE,MAAM,GAAE,CAAC,MAAK,GAAE,MAAM,GAAE,CAAC,MAAK,GAAE,MAAM,GAAE,CAAC,MAAK,GAAE,MAAM,GAAE,CAAC,MAAK,GAAE,MAAM,GAAE,CAAC,MAAK,GAAE,MAAM,GAAE,CAAC,MAAK,GAAE,MAAM,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,GAAE,KAAK,GAAE,CAAC,MAAK,GAAE,KAAK,GAAE,CAAC,MAAK,GAAE,KAAK,GAAE,CAAC,MAAK,GAAE,KAAK,GAAE,CAAC,MAAK,GAAE,KAAK,GAAE,CAAC,MAAK,GAAE,KAAK,GAAE,CAAC,MAAK,GAAE,KAAK,GAAE,CAAC,MAAK,GAAE,KAAK,GAAE,CAAC,MAAK,GAAE,KAAK,GAAE,CAAC,MAAK,GAAE,KAAK,GAAE,CAAC,MAAK,GAAE,KAAK,GAAE,CAAC,MAAK,GAAE,KAAK,GAAE,CAAC,MAAK,GAAE,KAAK,GAAE,CAAC,MAAK,GAAE,KAAK,GAAE,CAAC,MAAK,GAAE,KAAK,GAAE,CAAC,MAAK,GAAE,KAAK,GAAE,CAAC,MAAK,GAAE,KAAK,GAAE,CAAC,MAAK,GAAE,KAAK,GAAE,CAAC,MAAK,GAAE,KAAK,GAAE,CAAC,MAAK,GAAE,KAAK,GAAE,CAAC,MAAK,GAAE,KAAK,GAAE,CAAC,MAAK,GAAE,KAAK,GAAE,CAAC,MAAK,GAAE,KAAK,GAAE,CAAC,MAAK,GAAE,KAAK,GAAE,CAAC,MAAK,GAAE,KAAK,GAAE,CAAC,MAAK,GAAE,KAAK,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,MAAK,GAAE,GAAG,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,MAAK,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,IAAI,GAAE,CAAC,GAAE,CAAC,CAAC,MAAK,KAAK,GAAE,CAAC,GAAE,CAAC,OAAM,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,CAAC,GAAE,CAAC,OAAM,CAAC,GAAE,CAAC,OAAM,CAAC,GAAE,CAAC,OAAM,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,CAAC,GAAE,CAAC,OAAM,CAAC,GAAE,CAAC,OAAM,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,CAAC,GAAE,CAAC,OAAM,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,CAAC,GAAE,CAAC,OAAM,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,CAAC,GAAE,CAAC,OAAM,CAAC,GAAE,CAAC,OAAM,CAAC,GAAE,CAAC,OAAM,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,CAAC,GAAE,CAAC,OAAM,GAAE,0BAAM,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,CAAC,GAAE,CAAC,OAAM,GAAE,KAAK,GAAE,CAAC,OAAM,GAAE,IAAI,GAAE,CAAC,OAAM,GAAE,KAAK,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,CAAC,GAAE,CAAC,OAAM,GAAE,ccAAI,GAAE,CAAC,OAAM,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,CAAC,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,CAAC,GAAE,CAAC,OAAM,CAAC,GAAE,CAAC,OAAM,CAAC,GAAE,CAAC,OAAM,CAAC,GAAE,CAAC,OAAM,CAAC,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,CAAC,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,CAAC,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,CAAC,GAAE,CAAC,OAAM,GAAE,UAAK,GAAE,CAAC,OAAM,GAAE,UAAK,GAAE,CAAC,OAAM,GAAE,UAAK,GAAE,CAAC,OAAM,GAAE,UAAK,GAAE,CAAC,OAAM,GAAE,UAAK,GAAE,CAAC,OAAM,GAAE,UAAK,GAAE,CAAC,OAAM,GAAE,UAAK,GAAE,CAAC,OAAM,GAAE,UAAK,GAAE,CAAC,OAAM,GAAE,UAAK,GAAE,CAAC,OAAM,GAAE,UAAK,GAAE,CAAC,OAAM,GAAE,UAAK,GAAE,CAAC,OAAM,GAAE,UAAK,GAAE,CAAC,OAAM,GAAE,UAAK,GAAE,CAAC,OAAM,GAAE,UAAK,GAAE,CAAC,OAAM,GAAE,UAAK,GAAE,CAAC,OAAM,GAAE,UAAK,GAAE,CAAC,OAAM,GAAE,UAAK,GAAE,CAAC,OAAM,GAAE,UAAK,GAAE,CAAC,OAAM,GAAE,UAAK,GAAE,CAAC,OAAM,GAAE,UAAK,GAAE,CAAC,OAAM,GAAE,UAAK,GAAE,CAAC,OAAM,GAAE,UAAK,GAAE,CAAC,OAAM,GAAE,UAAK,GAAE,CAAC,OAAM,GAAE,UAAK,GAAE,CAAC,OAAM,GAAE,UAAK,GAAE,CAAC,OAAM,GAAE,UAAK,GAAE,CAAC,OAAM,GAAE,UAAK,GAAE,CAAC,OAAM,GAAE,UAAK,GAAE,CAAC,OAAM,GAAE,UAAK,GAAE,CAAC,OAAM,GAAE,gBAAM,GAAE,CAAC,OAAM,GAAE,gBAAM,GAAE,CAAC,OAAM,CAAC,GAAE,CAAC,OAAM,GAAE,UAAK,GAAE,CAAC,OAAM,GAAE,UAAK,GAAE,CAAC,OAAM,GAAE,UAAK,GAAE,CAAC,OAAM,GAAE,UAAK,GAAE,CAAC,OAAM,GAAE,UAAK,GAAE,CAAC,OAAM,GAAE,UAAK,GAAE,CAAC,OAAM,GAAE,UAAK,GAAE,CAAC,OAAM,GAAE,UAAK,GAAE,CAAC,OAAM,GAAE,UAAK,GAAE,CAAC,OAAM,GAAE,UAAK,GAAE,CAAC,OAAM,GAAE,UAAK,GAAE,CAAC,OAAM,GAAE,UAAK,GAAE,CAAC,OAAM,GAAE,UAAK,GAAE,CAAC,OAAM,GAAE,UAAK,GAAE,CAAC,OAAM,GAAE,UAAK,GAAE,CAAC,OAAM,GAAE,UAAK,GAAE,CAAC,OAAM,GAAE,UAAK,GAAE,CAAC,OAAM,GAAE,UAAK,GAAE,CAAC,OAAM,GAAE,UAAK,GAAE,CAAC,OAAM,GAAE,UAAK,GAAE,CAAC,OAAM,GAAE,UAAK,GAAE,CAAC,OAAM,GAAE,UAAK,GAAE,CAAC,OAAM,GAAE,UAAK,GAAE,CAAC,OAAM,GAAE,UAAK,GAAE,CAAC,OAAM,GAAE,UAAK,GAAE,CAAC,OAAM,GAAE,UAAK,GAAE,CAAC,OAAM,GAAE,UAAK,GAAE,CAAC,OAAM,GAAE,UAAK,GAAE,CAAC,OAAM,GAAE,UAAK,GAAE,CAAC,OAAM,GAAE,UAAK,GAAE,CAAC,OAAM,GAAE,UAAK,GAAE,CAAC,OAAM,GAAE,UAAK,GAAE,CAAC,OAAM,GAAE,UAAK,GAAE,CAAC,OAAM,GAAE,UAAK,GAAE,CAAC,OAAM,GAAE,UAAK,GAAE,CAAC,OAAM,GAAE,UAAK,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,CAAC,GAAE,CAAC,OAAM,GAAE,KAAK,GAAE,CAAC,OAAM,GAAE,IAAI,GAAE,CAAC,OAAM,GAAE,IAAI,GAAE,CAAC,OAAM,GAAE,IAAI,GAAE,CAAC,OAAM,GAAE,IAAI,GAAE,CAAC,OAAM,GAAE,IAAI,GAAE,CAAC,OAAM,GAAE,IAAI,GAAE,CAAC,OAAM,GAAE,IAAI,GAAE,CAAC,OAAM,GAAE,IAAI,GAAE,CAAC,OAAM,GAAE,IAAI,GAAE,CAAC,OAAM,GAAE,IAAI,GAAE,CAAC,OAAM,GAAE,IAAI,GAAE,CAAC,OAAM,GAAE,IAAI,GAAE,CAAC,OAAM,GAAE,IAAI,GAAE,CAAC,OAAM,GAAE,IAAI,GAAE,CAAC,OAAM,GAAE,IAAI,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,ccAAI,GAAE,CAAC,OAAM,GAAE,0BAAM,GAAE,CAAC,OAAM,GAAE,0BAAM,GAAE,CAAC,OAAM,GAAE,0BAAM,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,0BAAM,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,gCAAO,GAAE,CAAC,OAAM,GAAE,0BAAM,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,0BAAM,GAAE,CAAC,OAAM,GAAE,0BAAM,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,0BAAM,GAAE,CAAC,OAAM,GAAE,0BAAM,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,gCAAO,GAAE,CAAC,OAAM,GAAE,sCAAQ,GAAE,CAAC,OAAM,GAAE,gCAAO,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,gCAAO,GAAE,CAAC,OAAM,GAAE,gCAAO,GAAE,CAAC,OAAM,GAAE,0BAAM,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,0BAAM,GAAE,CAAC,OAAM,GAAE,gCAAO,GAAE,CAAC,OAAM,GAAE,0BAAM,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,gCAAO,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,0BAAM,GAAE,CAAC,OAAM,GAAE,gCAAO,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,gCAAO,GAAE,CAAC,OAAM,GAAE,0BAAM,GAAE,CAAC,OAAM,GAAE,gCAAO,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,gCAAO,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,0BAAM,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,0BAAM,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,gCAAO,GAAE,CAAC,OAAM,GAAE,0BAAM,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,gCAAO,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,0BAAM,GAAE,CAAC,OAAM,GAAE,0BAAM,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,0BAAM,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,0BAAM,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,C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AE,cAAI,GAAE,CAAC,OAAM,CAAC,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,GAAG,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,CAAC,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,CAAC,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,CAAC,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,CAAC,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,CAAC,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,CAAC,GAAE,CAAC,OAAM,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,cAAI,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,cAAI,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,cAAI,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,cAAI,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,cAAI,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,cAAI,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,cAAI,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,cAAI,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,eAAK,GAAE,CAAC,OAAM,GAAE,eAAK,GAAE,CAAC,OAAM,GAAE,eAAK,GAAE,CAAC,OAAM,GAAE,eAAK,GAAE,CAAC,OAAM,GAAE,eAAK,GAAE,CAAC,OAAM,GAAE,eAAK,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,cAAI,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,CAAC,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,oBAAK,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,oBAAK,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,oBAAK,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,oBAAK,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,oBAAK,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,CAAC,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,CAAC,GAAE,CAAC,OAAM,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,CAAC,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,0BAAM,GAAE,CAAC,OAAM,GAAE,0BAAM,GAAE,CAAC,OAAM,GAAE,0BAAM,GAAE,CAAC,OAAM,GAAE,0BAAM,GAAE,CAAC,OAAM,GAAE,0BAAM,GAAE,CAAC,OAAM,GAAE,0BAAM,GAAE,CAAC,OAAM,GAAE,0BAAM,GAAE,CAAC,OAAM,GAAE,oBAAK,GAAE,CAAC,OAAM,GAAE,+FAAoB,GAAE,CAAC,OAAM,GAAE,6CAAU,GAAE,CAAC,OAAM,GAAE,0BAAM,GAAE,CAAC,OAAM,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,CAAC,GAAE,CAAC,OAAM,GAAE,GAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,CAAC,GAAE,CAAC,OAAM,GAAE,GAAG,GAAE,CAAC,OAAM,GAAE,GAAG,GAAE,CAAC,OAAM,GAAE,GAAG,GAAE,CAAC,OAAM,GAAE,GAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,CAAC,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,CAAC,GAAE,CAAC,OAAM,CAAC,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,GAAG,GAAE,CAAC,OAAM,GAAE,GAAG,GAAE,CAAC,OAAM,GAAE,GAAG,GAAE,CAAC,OAAM,GAAE,GAAG,GAAE,CAAC,OAAM,GAAE,GAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,CAAC,GAAE,CAAC,OAAM,GAAE,GAAG,GAAE,CAAC,OAAM,GAAE,GAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,SAAI,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,GAAG,GAAE,CAAC,OAAM,GAAE,GAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,CAAC,GAAE,CAAC,OAAM,CAAC,GAAE,CAAC,OAAM,GAAE,GAAG,GAAE,CAAC,OAAM,GAAE,GAAG,GAAE,CAAC,OAAM,GAAE,GAAG,GAAE,CAAC,OAAM,GAAE,GAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,GAAG,GAAE,CAAC,OAAM,GAAE,GAAG,GAAE,CAAC,OAAM,GAAE,GAAG,GAAE,CAAC,OAAM,GAAE,GAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,OAAM,GAAE,GAAG,GAAE,CAAC,OAAM,GAAE,GAAG,GAAE,CAAC,OAAM,GAAE,GAAG,GAAE,CAAC,OAAM,GAAE,GAAG,GAAE,CAAC,OAAM,GAAE,GAAG,GAAE,CAAC,OAAM,GAAE,GAAG,GAAE,CAAC,OAAM,GAAE,GAAG,GAAE,CAAC,OAAM,GAAE,GAAG,GAAE,CAAC,OAAM,CAAC,GAAE,CAAC,OAAM,GAAE,IAAI,GAAE,CAAC,OAAM,GAAE,GAAG,GAAE,CAAC,OAAM,GAAE,GAAG,GAAE,CAAC,OAAM,GAAE,GAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,CAAC,GAAE,CAAC,OAAM,GAAE,SAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,SAAI,GAAE,CAAC,OAAM,CAAC,GAAE,CAAC,OAAM,GAAE,SAAI,GAAE,CAAC,OAAM,CAAC,GAAE,CAAC,OAAM,GAAE,SAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,SAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,SAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,SAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,SAAI,GAAE,CAAC,OAAM,GAAE,cAAI,GAAE,CAAC,OAAM,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,QAAG,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,cAAI,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,cAAI,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,cAAI,GAAE,CAAC,CAAC,OAAM,KAAK,GAAE,GAAE,coBAAM,GAAE,CAAC,QAAO,GAAE,oBAAM,GAAE,CAAC,QAAO,GAAE,6BAAQ,GAAE,CAAC,QAAO,GAAE,6BAAQ,GAAE,CAAC,QAAO,GAAE,6BAAQ,GAAE,CAAC,QAAO,GAAE,6BAAQ,GAAE,CAAC,QAAO,GAAE,6BAAQ,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,CAAC,GAAE,CAAC,QAAO,GAAE,oBAAM,GAAE,CAAC,QAAO,GAAE,oeAAK,GAAE,CAAC,QAAO,GAAE,GAAG,GAAE,CAAC,QAAO,GAAE,GAAG,GAAE,CAAC,QAAO,GAAE,IAAI,GAAE,CAAC,QAAO,GAAE,IAAI,GAAE,CAAC,QAAO,CAAC,GAAE,CAAC,QAAO,GAAE,GAAG,GAAE,CAAC,QAAO,GAAE,GAAG,GAAE,CAAC,QAAO,GAAE,GAAG,GAAE,CAAC,QAAO,GAAE,GAAG,GAAE,CAAC,QAAO,GAAE,GAAG,GAAE,CAAC,QAAO,GAAE,GAAG,GAAE,CAAC,QAAO,GAAE,GAAG,GAAE,CAAC,QAAO,GAAE,GAAG,GAAE,CAAC,QAAO,GAAE,GAAG,GAAE,CAAC,QAAO,GAAE,GAAG,GAAE,CAAC,QAAO,GAAE,GAAG,GAAE,CAAC,QAAO,GAAE,GAAG,GAAE,CAAC,QAAO,GAAE,GAAG,GAAE,CAAC,QAAO,GAAE,GAAG,GAAE,CAAC,QAAO,GAAE,GAAG,GAAE,CAAC,QAAO,GAAE,GAAG,GAAE,CAAC,QAAO,GAAE,GAAG,GAAE,CAAC,QAAO,GAAE,GAAG,GAAE,CAAC,QAAO,GAAE,GAAG,GAAE,CAAC,QAAO,GAAE,GAAG,GAAE,CAAC,QAAO,GAAE,GAAG,GAAE,CAAC,QAAO,GAAE,GAAG,GAAE,CAAC,QAAO,GAAE,GAAG,GAAE,CAAC,QAAO,GAAE,GAAG,GAAE,CAAC,QAAO,GAAE,GAAG,GAAE,CAAC,QAAO,GAAE,GAAG,GAAE,CAAC,QAAO,GAAE,IAAI,GAAE,CAAC,QAAO,GAAE,IAAI,GAAE,CAAC,QAAO,GAAE,IAAI,GAAE,CAAC,QAAO,GAAE,IAAI,GAAE,CAAC,QAAO,GAAE,KAAK,GAAE,CAAC,QAAO,GAAE,IAAI,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,CAAC,GAAE,CAAC,QAAO,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,CAAC,GAAE,CAAC,QAAO,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,CAAC,GAAE,CAAC,QAAO,GAAE,IAAI,GAAE,CAAC,QAAO,GAAE,IAAI,GAAE,CAAC,QAAO,GAAE,IAAI,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,CAAC,GAAE,CAAC,QAAO,CAAC,GAAE,CAAC,QAAO,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,CAAC,GAAE,CAAC,QAAO,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,CAAC,GAAE,CAAC,QAAO,GAAE,IAAI,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,CAAC,GAAE,CAAC,QAAO,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,CAAC,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,CAAC,GAAE,CAAC,QAAO,GAAE,cAAI,GAAE,CAAC,QAAO,GAAE,cAAI,GAAE,CAAC,QAAO,GAAE,QAAG,GAAE,CAAC,CAAC,QAAO,MAAM,GAAE,CAAC,GAAE,CAAC,QAAO,GAAE,QAAG,GAAE,CAAC,QAAO,GAAE,QAAG,GAAE,CAAC,QAAO,GAAE,QAAG,GAAE,CAAC,QAAO,GAAE,QAAG,GAAE,CAAC,QAAO,GAAE,QAAG,GAAE,CAAC,QAAO,GAAE,QAAG,GAAE,CAAC,QAAO,GAAE,QAAG,GAAE,CAAC,QAAO,GAAE,QAAG,GAAE,CAAC,QAAO,GAAE,QAAG,GAAE,CAAC,QAAO,GAAE,QAAG,GAAE,CAAC,QAAO,GAAE,QAAG,GAAE,CAAC,QAAO,GAAE,QAAG,GAAE,CAAC,QAAO,GAAE,QAAG,GAAE,CAAC,QAAO,GAAE,QAAG,GAAE,CAAC,QAAO,GAAE,QAAG,GAAE,CAAC,QAAO,GAAE,QAAG,GAAE,CAAC,QAAO,GAAE,QAAG,GAAE,CAAC,QAAO,GAAE,QAAG,GAAE,CAAC,QAAO,GAAE,QAAG,GAAE,CAAC,QAAO,GAAE,QAAG,GAAE,CAAC,QAAO,GAAE,QAAG,GAAE,CAAC,QAAO,GAAE,QAAG,GAAE,CAAC,QAAO,GAAE,QAAG,GAAE,CAAC,QAAO,GAAE,QAAG,GAAE,CAAC,QAAO,GAAE,QAAG,GAAE,CAAC,QAAO,GAAE,QAAG,GAAE,CAAC,QAAO,GAAE,QAAG,GAAE,CAAC,QAAO,GAAE,QAAG,GAAE,CAAC,QAAO,GAAE,QAAG,GAAE,CAAC,QAAO,GAAE,QAAG,GAAE,CAAC,QAAO,GAAE,QAAG,GAAE,CAAC,QAAO,GAAE,QAAG,GAAE,CAAC,QAAO,GAAE,QAAG,GAAE,CAAC,QAAO,GAAE,QAAG,GAAE,CAAC,QAAO,GAAE,QAAG,GAAE,CAAC,QAAO,GAAE,QAAG,GAAE,CAAC,QAAO,GAAE,QAAG,GAAE,CAAC,QAAO,GAAE,QAAG,GAAE,CAAC,QAAO,GAAE,QAAG,GAAE,CAAC,QAAO,GAAE,QAAG,GAAE,CAAC,QAAO,GAAE,QAAG,GAAE,CAAC,QAAO,GAAE,QA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","names":["define","punycode","error","toASCII","toUnicode","base","res","Function","URLSearchParams","V","tmp","nextItem","URLSearchParams","base","URL","URL","URLSearchParams","URL","URLSearchParams","Headers","error","map","fetch","abort","abortAndFinalize","whatwgUrl","isDomainOrSubdomain","isSameProtocol","UsedValueState","error","Type","error","validateName","validateName","DataType","schemaMap","errors","_a","validateName","errors","validateName","merge","sets","length","slice","xl","x","join","subexp","str","typeOf","o","undefined","Object","prototype","toString","call","split","pop","shift","toLowerCase","toUpperCase","toArray","obj","Array","setInterval","assign","target","source","key","buildExps","isIRI","ALPHA$$","CR$","DIGIT$$","DQUOTE$$","HEXDIG$$","SP$$","PCT_ENCODED$","SUB_DELIMS$$","RESERVED$$","GEN_DELIMS$$","UCSCHAR$$","SCHEME$","USERINFO$","UNRESERVED$$","DEC_OCTET$","DEC_OCTET_RELAXED$","H16$","LS32$","IPV4ADDRESS$","IPV6ADDRESS1$","IPV6ADDRESS2$","IPV6ADDRESS3$","IPV6ADDRESS4$","IPV6ADDRESS5$","IPV6ADDRESS6$","IPV6ADDRESS7$","IPV6ADDRESS8$","IPV6ADDRESS9$","ZONEID$","IPV6ADDRESS$","IP_LITERAL$","IPV6ADDRZ_RELAXED$","IPVFUTURE$","HOST$","REG_NAME$","PORT$","AUTHORITY$","PCHAR$","SEGMENT$","SEGMENT_NZ$","SEGMENT_NZ_NC$","PATH_ABEMPTY$","PATH_ABSOLUTE$","PATH$","PATH_NOSCHEME$","PATH_ROOTLESS$","PATH_EMPTY$","QUERY$","IPRIVATE$$","FRAGMENT$","HIER_PART$","URI$","RELATIVE_PART$","RELATIVE$","URI_REFERENCE$","ABSOLUTE_URI$","GENERIC_REF$","RELATIVE_REF$","ABSOLUTE_REF$","SAMEDOC_REF$","AUTHORITY_REF$","RegExp","maxInt","base","tMin","tMax","skew","damp","initialBias","initialN","delimiter","regexPunycode","regexNonASCII","regexSeparators","errors","baseMinusTMin","floor","Math","stringFromCharCode","String","fromCharCode","error","type","RangeError","map","array","fn","result","mapDomain","string","parts","replace","labels","encoded","ucs2decode","output","counter","value","charCodeAt","extra","push","ucs2encode","fromCodePoint","basicToDigit","codePoint","digitToBasic","digit","flag","adapt","delta","numPoints","firstTime","k","decode","input","inputLength","i","n","bias","basic","lastIndexOf","j","index","oldi","w","t","baseMinusT","out","splice","encode","currentValue","basicLength","handledCPCount","m","handledCPCountPlusOne","q","qMinusT","toUnicode","test","toASCII","punycode","SCHEMES","pctEncChar","chr","c","e","pctDecChars","newStr","il","parseInt","substr","c2","c3","_normalizeComponentEncoding","components","protocol","decodeUnreserved","decStr","match","UNRESERVED","scheme","PCT_ENCODED","NOT_SCHEME","userinfo","NOT_USERINFO","host","NOT_HOST","path","NOT_PATH","NOT_PATH_NOSCHEME","query","NOT_QUERY","fragment","NOT_FRAGMENT","_stripLeadingZeros","_normalizeIPv4","matches","IPV4ADDRESS","address","_normalizeIPv6","IPV6ADDRESS","zone","reverse","last","first","firstFields","lastFields","isLastFieldIPv4Address","fieldCount","lastFieldsStart","fields","allZeroFields","reduce","acc","field","lastLongest","longestZeroFields","sort","a","b","newHost","newFirst","newLast","URI_PARSE","NO_MATCH_IS_UNDEFINED","parse","uriString","options","iri","IRI_PROTOCOL","URI_PROTOCOL","reference","port","isNaN","indexOf","schemeHandler","unicodeSupport","domainHost","_recomposeAuthority","uriTokens","_","$1","$2","RDS1","RDS2","RDS3","RDS5","removeDotSegments","im","s","Error","serialize","authority","charAt","absolutePath","resolveComponents","relative","skipNormalization","tolerant","resolve","baseURI","relativeURI","schemelessOptions","normalize","uri","equal","uriA","uriB","escapeComponent","ESCAPE","unescapeComponent","handler","secure","http","isSecure","wsComponents","resourceName","ws","O","ATEXT$$","QTEXT$$","VCHAR$$","SOME_DELIMS$$","NOT_LOCAL_PART","NOT_HFNAME","NOT_HFVALUE","mailtoComponents","to","unknownHeaders","headers","hfields","hfield","toAddrs","subject","body","addr","toAddr","atIdx","localPart","domain","name","URN_PARSE","urnComponents","nid","nss","urnScheme","uriComponents","UUID","uuidComponents","uuid","https","wss","mailto","urn","Ajv","loadSchema","errors","validateName","error","error","error","error","error","error","error","error","error","error","error","error","error","error","error","errors","error","error","error","DiscrError","error","Ajv","fetch","fetch","Api","EmbeddingFunctionConfiguration","ObjectValue","TypeEnum","AllofValue","HnswSpace","Include","error","error","Ajv","errors","error","DEFAULT_TENANT","DEFAULT_DATABASE","cohere","error","error","version","TransformersApi","voyageai","error","error","IncludeEnum"]}